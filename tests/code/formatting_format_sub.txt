pub fn test() {
    test_value = {txt="12ðŸ˜ŠðŸ™ƒ45"; "a{txt[2..-1]}b"};
    assert(
        test_value == "aðŸ˜ŠðŸ™ƒ4b",
        "Test failed {test_value} != \"aðŸ˜ŠðŸ™ƒ4b\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    txt:text = "12ðŸ˜ŠðŸ™ƒ45";
    {#3 formatting string
      __work_1:text = "a";
      OpFormatText(__work_1, OpGetTextSub(txt, 2i32, OpMinSingleInt(1i32)), 0i32, -1i32, 32i32);
      OpAppendText(__work_1, "b");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "aðŸ˜ŠðŸ™ƒ4b") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "aðŸ˜ŠðŸ™ƒ4b"");
    __work_2;
  }#4:text);
}#1

byte-code for format_sub:test()
 655[0]: return-address
 655[4]: Text() var=__work_2[4]:text in 1
 656[28]: Text() var=__work_1[28]:text in 1
 657[52]: Text() var=test_value[52]:text in 1
 658[76]: Text() var=txt[76]:text in 2
 659[100]: ConstText(_value="12ðŸ˜ŠðŸ™ƒ45") -> text
 673[116]: AppendText(var[76], v1: text)
 676[100]: ClearText(var[28]) var=__work_1[28]:text in 1
 679[100]: ConstText(_value="a") -> text
 682[116]: AppendText(var[28], v1: text)
 685[100]: VarText(var[76]) -> text var=txt[76]:text in 2
 688[116]: ConstInt(val=2) -> integer
 693[120]: ConstInt(val=1) -> integer
 698[124]: MinSingleInt(v1: integer) -> integer
 699[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 700[116]: ConstInt(val=0) -> integer
 705[120]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
 710[100]: ConstText(_value="b") -> text
 713[116]: AppendText(var[28], v1: text)
 716[100]: VarText(var[28]) -> text var=__work_1[28]:text in 1
 719[116]: FreeText(var[76])
 722[116]: FreeStack(value=16, discard=40) type=text[4]:Base[5]
 726[92]: AppendText(var[52], v1: text)
 729[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 732[92]: ConstText(_value="aðŸ˜ŠðŸ™ƒ4b") -> text
 745[108]: EqText(v1: text, v2: text) -> boolean
 746[77]: GotoFalseWord(jump=752, if_false: boolean)
 749[76]: GotoWord(jump=811)
 752[76]: ClearText(var[4]) var=__work_2[4]:text in 1
 755[76]: ConstText(_value="Test failed ") -> text
 769[92]: AppendText(var[4], v1: text)
 772[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 775[92]: ConstInt(val=0) -> integer
 780[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 785[76]: ConstText(_value=" != "aðŸ˜ŠðŸ™ƒ4b"") -> text
 804[92]: AppendText(var[4], v1: text)
 807[76]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 810[92]: Panic(message: text)
 811[76]: FreeText(var[52])
 814[76]: FreeText(var[28])
 817[76]: FreeText(var[4])
 820[76]: Return(ret=0, value=0, discard=76)

Execute test:
  655:[8] Text()
  656:[32] Text()
  657:[56] Text()
  658:[80] Text()
  659:[104] ConstText(_value="12ðŸ˜ŠðŸ™ƒ45") -> "12ðŸ˜ŠðŸ™ƒ45"[104]
  673:[120] AppendText(var[80], v1="12ðŸ˜ŠðŸ™ƒ45"[104])
  676:[104] ClearText(var[32])
  679:[104] ConstText(_value="a") -> "a"[104]
  682:[120] AppendText(var[32], v1="a"[104])
  685:[104] VarText(var[80]) -> "12ðŸ˜ŠðŸ™ƒ45"[104]
  688:[120] ConstInt(val=2) -> 2[120]
  693:[124] ConstInt(val=1) -> 1[124]
  698:[128] MinSingleInt(v1=1[124]) -> -1[124]
  699:[128] GetTextSub(v1="12ðŸ˜ŠðŸ™ƒ45"[104], from=2[120], till=-1[124]) -> "ðŸ˜ŠðŸ™ƒ4"[104]
  700:[120] ConstInt(val=0) -> 0[120]
  705:[124] FormatText(var[32], val="ðŸ˜ŠðŸ™ƒ4"[104], width=0[120], dir=-1, token=32)
  710:[104] ConstText(_value="b") -> "b"[104]
  713:[120] AppendText(var[32], v1="b"[104])
  716:[104] VarText(var[32]) -> "aðŸ˜ŠðŸ™ƒ4b"[104]
  719:[120] FreeText(var[80])
  722:[120] FreeStack(value=16, discard=40)
  726:[96] AppendText(var[56], v1="aðŸ˜ŠðŸ™ƒ4b"[80])
  729:[80] VarText(var[56]) -> "aðŸ˜ŠðŸ™ƒ4b"[80]
  732:[96] ConstText(_value="aðŸ˜ŠðŸ™ƒ4b") -> "aðŸ˜ŠðŸ™ƒ4b"[96]
  745:[112] EqText(v1="aðŸ˜ŠðŸ™ƒ4b"[80], v2="aðŸ˜ŠðŸ™ƒ4b"[96]) -> true[80]
  746:[81] GotoFalseWord(jump=752, if_false=true[80])
  749:[80] GotoWord(jump=811)
  811:[80] FreeText(var[56])
  814:[80] FreeText(var[32])
  817:[80] FreeText(var[8])
  820:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
