pub fn test() {
    test_value = {"1{true:^7}2"};
    assert(
        test_value == "1 true  2",
        "Test failed {test_value} != \"1 true  2\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "1";
      OpFormatBool(__work_1, true, 7i32, 0i32, 32i32);
      OpAppendText(__work_1, "2");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "1 true  2") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "1 true  2"");
    __work_2;
  }#4:text);
}#1

byte-code for format_boolean:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: Text()
 693[52]: Text()
 694[76]: ClearText(var[28])
 697[76]: ConstText(_value="1") -> text
 700[92]: AppendText(var[28], v1: text)
 703[76]: ConstTrue() -> boolean
 704[77]: ConstInt(val=7) -> integer
 709[81]: FormatBool(var[28], val: boolean, width: integer, dir=0, token=32)
 714[76]: ConstText(_value="2") -> text
 717[92]: AppendText(var[28], v1: text)
 720[76]: VarText(var[28]) -> text
 723[92]: AppendText(var[52], v1: text)
 726[76]: VarText(var[52]) -> text
 729[92]: ConstText(_value="1 true  2") -> text
 740[108]: EqText(v1: text, v2: text) -> boolean
 741[77]: GotoFalseWord(jump=747, if_false: boolean)
 744[76]: GotoWord(jump=804)
 747[76]: ClearText(var[4])
 750[76]: ConstText(_value="Test failed ") -> text
 764[92]: AppendText(var[4], v1: text)
 767[76]: VarText(var[52]) -> text
 770[92]: ConstInt(val=0) -> integer
 775[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 780[76]: ConstText(_value=" != "1 true  2"") -> text
 797[92]: AppendText(var[4], v1: text)
 800[76]: VarText(var[4]) -> text
 803[92]: Panic(message: text)
 804[76]: FreeText(var[52])
 807[76]: FreeText(var[28])
 810[76]: FreeText(var[4])
 813[76]: Return(ret=0, value=0, discard=76)

Execute test:
  691:[8] Text()
  692:[32] Text()
  693:[56] Text()
  694:[80] ClearText(var[32])
  697:[80] ConstText(_value="1") -> "1"[80]
  700:[96] AppendText(var[32], v1="1"[80])
  703:[80] ConstTrue() -> true[80]
  704:[81] ConstInt(val=7) -> 7[81]
  709:[85] FormatBool(var[32], val=true[80], width=7[81], dir=0, token=32)
  714:[80] ConstText(_value="2") -> "2"[80]
  717:[96] AppendText(var[32], v1="2"[80])
  720:[80] VarText(var[32]) -> "1 true  2"[80]
  723:[96] AppendText(var[56], v1="1 true  2"[80])
  726:[80] VarText(var[56]) -> "1 true  2"[80]
  729:[96] ConstText(_value="1 true  2") -> "1 true  2"[96]
  740:[112] EqText(v1="1 true  2"[80], v2="1 true  2"[96]) -> true[80]
  741:[81] GotoFalseWord(jump=747, if_false=true[80])
  744:[80] GotoWord(jump=804)
  804:[80] FreeText(var[56])
  807:[80] FreeText(var[32])
  810:[80] FreeText(var[8])
  813:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
