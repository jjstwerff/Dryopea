Test code:
pub fn test() {
    test_value = {"1{true:^7}2"};
    assert(
        test_value == "1 true  2",
        "Test failed {test_value} != \"1 true  2\""
    );
}

fn test {
  let test_value = {
    {
      let append_8 = "1";
      OpFormatBool(append_8, true, 7i32, 0i32, 32i32);
      OpAppendText(append_8, "2");
      append_8;
    };
  };
  if OpEqText(test_value, "1 true  2") {null} else {OpGenPanic({
    let append_9 = "Test failed ";
    OpFormatText(append_9, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_9, " != "1 true  2"");
    append_9;
  })};
}

byte-code for format_boolean:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: Text()
 670[52]: ConstText(_value="1") -> text
 673[68]: AppendText(var[28], v1: text)
 676[52]: ConstTrue() -> boolean
 677[53]: ConstInt(val=7) -> integer
 682[57]: FormatBool(var[28], val: boolean, width: integer, dir=0, token=32)
 687[52]: ConstText(_value="2") -> text
 690[68]: AppendText(var[28], v1: text)
 693[52]: VarText(var[28]) -> text
 696[68]: GenFreeStack(value=16, discard=24)
 700[44]: AppendText(var[4], v1: text)
 703[28]: VarText(var[4]) -> text
 706[44]: ConstText(_value="1 true  2") -> text
 717[60]: EqText(v1: text, v2: text) -> boolean
 718[29]: GenGotoFalseWord(jump=724, if_false: boolean)
 721[28]: GenGotoWord(jump=783)
 724[28]: Text()
 725[52]: ConstText(_value="Test failed ") -> text
 739[68]: AppendText(var[28], v1: text)
 742[52]: VarText(var[4]) -> text
 745[68]: ConstInt(val=0) -> integer
 750[72]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
 755[52]: ConstText(_value=" != "1 true  2"") -> text
 772[68]: AppendText(var[28], v1: text)
 775[52]: VarText(var[28]) -> text
 778[68]: GenFreeStack(value=16, discard=24)
 782[44]: GenPanic(message: text)
 783[28]: GenReturn(ret=0, value=0, discard=28)

Execute test:
  668:[4] Text()
  669:[28] Text()
  670:[52] ConstText(_value="1") -> "1"[52]
  673:[68] AppendText(var[28], v1="1"[52])
  676:[52] ConstTrue() -> true[52]
  677:[53] ConstInt(val=7) -> 7[53]
  682:[57] FormatBool(var[28], val=true[52], width=7[53], dir=0, token=32)
  687:[52] ConstText(_value="2") -> "2"[52]
  690:[68] AppendText(var[28], v1="2"[52])
  693:[52] VarText(var[28]) -> "1 true  2"[52]
  696:[68] GenFreeStack(value=16, discard=24)
  700:[44] AppendText(var[4], v1="1 true  2"[28])
  703:[28] VarText(var[4]) -> "1 true  2"[28]
  706:[44] ConstText(_value="1 true  2") -> "1 true  2"[44]
  717:[60] EqText(v1="1 true  2"[28], v2="1 true  2"[44]) -> true[28]
  718:[29] GenGotoFalseWord(jump=724, if_false=true[28])
  721:[28] GenGotoWord(jump=783)
  783:[28] GenReturn(ret=4294967295[0], value=0, discard=28)
Finished
