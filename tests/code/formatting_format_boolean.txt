pub fn test() {
    test_value = {"1{true:^7}2"};
    assert(
        test_value == "1 true  2",
        "Test failed {test_value} != \"1 true  2\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "1";
      OpFormatBool(__work_1, true, 7i32, 0i32, 32i32);
      OpAppendText(__work_1, "2");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "1 true  2") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "1 true  2"");
    __work_2;
  }#4:text);
}#1

byte-code for format_boolean:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: Text()
 694[52]: Text()
 695[76]: ClearText(var[28])
 698[76]: ConstText(_value="1") -> text
 701[92]: AppendText(var[28], v1: text)
 704[76]: ConstTrue() -> boolean
 705[77]: ConstInt(val=7) -> integer
 710[81]: FormatBool(var[28], val: boolean, width: integer, dir=0, token=32)
 715[76]: ConstText(_value="2") -> text
 718[92]: AppendText(var[28], v1: text)
 721[76]: VarText(var[28]) -> text
 724[92]: AppendText(var[52], v1: text)
 727[76]: VarText(var[52]) -> text
 730[92]: ConstText(_value="1 true  2") -> text
 741[108]: EqText(v1: text, v2: text) -> boolean
 742[77]: GotoFalseWord(jump=748, if_false: boolean)
 745[76]: GotoWord(jump=805)
 748[76]: ClearText(var[4])
 751[76]: ConstText(_value="Test failed ") -> text
 765[92]: AppendText(var[4], v1: text)
 768[76]: VarText(var[52]) -> text
 771[92]: ConstInt(val=0) -> integer
 776[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 781[76]: ConstText(_value=" != "1 true  2"") -> text
 798[92]: AppendText(var[4], v1: text)
 801[76]: VarText(var[4]) -> text
 804[92]: Panic(message: text)
 805[76]: FreeText(var[52])
 808[76]: FreeText(var[28])
 811[76]: FreeText(var[4])
 814[76]: Return(ret=0, value=0, discard=76)

Execute test:
  692:[8] Text()
  693:[32] Text()
  694:[56] Text()
  695:[80] ClearText(var[32])
  698:[80] ConstText(_value="1") -> "1"[80]
  701:[96] AppendText(var[32], v1="1"[80])
  704:[80] ConstTrue() -> true[80]
  705:[81] ConstInt(val=7) -> 7[81]
  710:[85] FormatBool(var[32], val=true[80], width=7[81], dir=0, token=32)
  715:[80] ConstText(_value="2") -> "2"[80]
  718:[96] AppendText(var[32], v1="2"[80])
  721:[80] VarText(var[32]) -> "1 true  2"[80]
  724:[96] AppendText(var[56], v1="1 true  2"[80])
  727:[80] VarText(var[56]) -> "1 true  2"[80]
  730:[96] ConstText(_value="1 true  2") -> "1 true  2"[96]
  741:[112] EqText(v1="1 true  2"[80], v2="1 true  2"[96]) -> true[80]
  742:[81] GotoFalseWord(jump=748, if_false=true[80])
  745:[80] GotoWord(jump=805)
  805:[80] FreeText(var[56])
  808:[80] FreeText(var[32])
  811:[80] FreeText(var[8])
  814:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
