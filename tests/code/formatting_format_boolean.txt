pub fn test() {
    test_value = {"1{true:^7}2"};
    assert(
        test_value == "1 true  2",
        "Test failed {test_value} != \"1 true  2\""
    );
}
fn test() {#1 block
  let __work_2:text = "";
  let __work_1:text = "";
  let test_value:text = {#2 block
    {#3 formatting string
      OpClearText(__work_1);
      OpAppendText(__work_1, "1");
      OpFormatBool(__work_1, true, 7i32, 0i32, 32i32);
      OpAppendText(__work_1, "2");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "1 true  2") null else OpPanic({#4 formatting string
    OpClearText(__work_2);
    OpAppendText(__work_2, "Test failed ");
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "1 true  2"");
    __work_2;
  }#4:text);
}#1

byte-code for format_boolean:test()
 675[0]: return-address
 675[4]: Text()
 676[28]: Text()
 677[52]: Text()
 678[76]: ClearText(var[28])
 681[76]: ConstText(_value="1") -> text
 684[92]: AppendText(var[28], v1: text)
 687[76]: ConstTrue() -> boolean
 688[77]: ConstInt(val=7) -> integer
 693[81]: FormatBool(var[28], val: boolean, width: integer, dir=0, token=32)
 698[76]: ConstText(_value="2") -> text
 701[92]: AppendText(var[28], v1: text)
 704[76]: VarText(var[28]) -> text
 707[92]: AppendText(var[52], v1: text)
 710[76]: VarText(var[52]) -> text
 713[92]: ConstText(_value="1 true  2") -> text
 724[108]: EqText(v1: text, v2: text) -> boolean
 725[77]: GotoFalseWord(jump=731, if_false: boolean)
 728[76]: GotoWord(jump=788)
 731[76]: ClearText(var[4])
 734[76]: ConstText(_value="Test failed ") -> text
 748[92]: AppendText(var[4], v1: text)
 751[76]: VarText(var[52]) -> text
 754[92]: ConstInt(val=0) -> integer
 759[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 764[76]: ConstText(_value=" != "1 true  2"") -> text
 781[92]: AppendText(var[4], v1: text)
 784[76]: VarText(var[4]) -> text
 787[92]: Panic(message: text)
 788[76]: Return(ret=0, value=0, discard=76)

Execute test:
  675:[8] Text()
  676:[32] Text()
  677:[56] Text()
  678:[80] ClearText(var[32])
  681:[80] ConstText(_value="1") -> "1"[80]
  684:[96] AppendText(var[32], v1="1"[80])
  687:[80] ConstTrue() -> true[80]
  688:[81] ConstInt(val=7) -> 7[81]
  693:[85] FormatBool(var[32], val=true[80], width=7[81], dir=0, token=32)
  698:[80] ConstText(_value="2") -> "2"[80]
  701:[96] AppendText(var[32], v1="2"[80])
  704:[80] VarText(var[32]) -> "1 true  2"[80]
  707:[96] AppendText(var[56], v1="1 true  2"[80])
  710:[80] VarText(var[56]) -> "1 true  2"[80]
  713:[96] ConstText(_value="1 true  2") -> "1 true  2"[96]
  724:[112] EqText(v1="1 true  2"[80], v2="1 true  2"[96]) -> true[80]
  725:[81] GotoFalseWord(jump=731, if_false=true[80])
  728:[80] GotoWord(jump=788)
  788:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
