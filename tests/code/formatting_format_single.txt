pub fn test() {
    test_value = {"a{0.1f + 2 * 1.0f}b"};
    assert(
        test_value == "a2.1b",
        "Test failed {test_value} != \"a2.1b\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "a";
      OpFormatSingle(__work_1, OpAddSingle(0.1f32, OpMulSingle(OpConvSingleFromInt(2i32), 1f32)), 0i32, 0i32);
      OpAppendText(__work_1, "b");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a2.1b") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "a2.1b"");
    __work_2;
  }#4:text);
}#1

byte-code for format_single:test()
 682[0]: return-address
 682[4]: Text()
 683[28]: Text()
 684[52]: Text()
 685[76]: ClearText(var[28])
 688[76]: ConstText(_value="a") -> text
 691[92]: AppendText(var[28], v1: text)
 694[76]: ConstSingle(val=0.1) -> single
 699[80]: ConstInt(val=2) -> integer
 704[84]: ConvSingleFromInt(v1: integer) -> single
 705[84]: ConstSingle(val=1) -> single
 710[88]: MulSingle(v1: single, v2: single) -> single
 711[84]: AddSingle(v1: single, v2: single) -> single
 712[80]: ConstInt(val=0) -> integer
 717[84]: ConstInt(val=0) -> integer
 722[88]: FormatSingle(var[28], val: single, width: integer, precision: integer)
 725[76]: ConstText(_value="b") -> text
 728[92]: AppendText(var[28], v1: text)
 731[76]: VarText(var[28]) -> text
 734[92]: AppendText(var[52], v1: text)
 737[76]: VarText(var[52]) -> text
 740[92]: ConstText(_value="a2.1b") -> text
 747[108]: EqText(v1: text, v2: text) -> boolean
 748[77]: GotoFalseWord(jump=754, if_false: boolean)
 751[76]: GotoWord(jump=807)
 754[76]: ClearText(var[4])
 757[76]: ConstText(_value="Test failed ") -> text
 771[92]: AppendText(var[4], v1: text)
 774[76]: VarText(var[52]) -> text
 777[92]: ConstInt(val=0) -> integer
 782[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 787[76]: ConstText(_value=" != "a2.1b"") -> text
 800[92]: AppendText(var[4], v1: text)
 803[76]: VarText(var[4]) -> text
 806[92]: Panic(message: text)
 807[76]: Return(ret=0, value=0, discard=76)

Execute test:
  682:[8] Text()
  683:[32] Text()
  684:[56] Text()
  685:[80] ClearText(var[32])
  688:[80] ConstText(_value="a") -> "a"[80]
  691:[96] AppendText(var[32], v1="a"[80])
  694:[80] ConstSingle(val=0.1) -> 0.1[80]
  699:[84] ConstInt(val=2) -> 2[84]
  704:[88] ConvSingleFromInt(v1=2[84]) -> 2[84]
  705:[88] ConstSingle(val=1) -> 1[88]
  710:[92] MulSingle(v1=2[84], v2=1[88]) -> 2[84]
  711:[88] AddSingle(v1=0.1[80], v2=2[84]) -> 2.1[80]
  712:[84] ConstInt(val=0) -> 0[84]
  717:[88] ConstInt(val=0) -> 0[88]
  722:[92] FormatSingle(var[32], val=2.1[80], width=0[84], precision=0[88])
  725:[80] ConstText(_value="b") -> "b"[80]
  728:[96] AppendText(var[32], v1="b"[80])
  731:[80] VarText(var[32]) -> "a2.1b"[80]
  734:[96] AppendText(var[56], v1="a2.1b"[80])
  737:[80] VarText(var[56]) -> "a2.1b"[80]
  740:[96] ConstText(_value="a2.1b") -> "a2.1b"[96]
  747:[112] EqText(v1="a2.1b"[80], v2="a2.1b"[96]) -> true[80]
  748:[81] GotoFalseWord(jump=754, if_false=true[80])
  751:[80] GotoWord(jump=807)
  807:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
