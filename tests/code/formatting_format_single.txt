pub fn test() {
    test_value = {"a{0.1f + 2 * 1.0f}b"};
    assert(
        test_value == "a2.1b",
        "Test failed {test_value} != \"a2.1b\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "a";
      OpFormatSingle(__work_1, OpAddSingle(0.1f32, OpMulSingle(OpConvSingleFromInt(2i32), 1f32)), 0i32, 0i32);
      OpAppendText(__work_1, "b");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a2.1b") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "a2.1b"");
    __work_2;
  }#4:text);
}#1

byte-code for format_single:test() [1082]
   0[0]: return-address
   0[4]: Text() var=__work_2[4]:text in 1
   1[28]: Text() var=__work_1[28]:text in 1
   2[52]: Text() var=test_value[52]:text in 1
   3[76]: ClearText(var[28]) var=__work_1[28]:text in 1
   6[76]: ConstText(_value="a") -> text
   9[92]: AppendText(var[28], v1: text)
  12[76]: ConstSingle(val=0.1) -> single
  17[80]: ConstInt(val=2) -> integer
  22[84]: ConvSingleFromInt(v1: integer) -> single
  23[84]: ConstSingle(val=1) -> single
  28[88]: MulSingle(v1: single, v2: single) -> single
  29[84]: AddSingle(v1: single, v2: single) -> single
  30[80]: ConstInt(val=0) -> integer
  35[84]: ConstInt(val=0) -> integer
  40[88]: FormatSingle(var[28], val: single, width: integer, precision: integer)
  43[76]: ConstText(_value="b") -> text
  46[92]: AppendText(var[28], v1: text)
  49[76]: VarText(var[28]) -> text var=__work_1[28]:text in 1
  52[92]: AppendText(var[52], v1: text)
  55[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
  58[92]: ConstText(_value="a2.1b") -> text
  65[108]: EqText(v1: text, v2: text) -> boolean
  66[77]: GotoFalseWord(jump=72, if_false: boolean)
  69[76]: GotoWord(jump=125)
  72[76]: ClearText(var[4]) var=__work_2[4]:text in 1
  75[76]: ConstText(_value="Test failed ") -> text
  89[92]: AppendText(var[4], v1: text)
  92[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
  95[92]: ConstInt(val=0) -> integer
 100[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 105[76]: ConstText(_value=" != "a2.1b"") -> text
 118[92]: AppendText(var[4], v1: text)
 121[76]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 124[92]: Panic(message: text)
 125[76]: FreeText(var[52])
 128[76]: FreeText(var[28])
 131[76]: FreeText(var[4])
 134[76]: Return(ret=0, value=0, discard=76)

