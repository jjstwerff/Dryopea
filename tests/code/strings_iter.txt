pub fn test() {
    test_value = {a=[];
b=[];
for c in "123ðŸ˜ŠðŸ™ƒðŸ˜‹8" {
    a += [c];
    b += [c#index]
};
"{a} indexes:{b}"};
    assert(
        test_value == "[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]",
        "Test failed {test_value} != \"[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]\""
    );
}
Type 12:vector<text>[4]:Vector(5)

Type 13:vector<integer>[4]:Vector(0)

Type 14:main_vector<text>[8]:
    vector:vector<text>[4]

Type 15:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __work_3:text = "";
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    a:vector<text["c"]>#[] = {#3 vector
      _db_3:main_vector<text> = OpDatabase(1i32, 14i32);
      _vec_2:vector<text["c"]>#[] = OpGetField(_db_3, 4i32, 65535i32);
      OpSetInt(_db_3, 4i32, 0i32);
      _vec_2;
    }#3:vector<text["c"]>#[];
    b:vector<integer>#[] = {#4 vector
      _db_6:main_vector<integer> = OpDatabase(1i32, 15i32);
      _vec_5:vector<integer>#[] = OpGetField(_db_6, 4i32, 65535i32);
      OpSetInt(_db_6, 4i32, 0i32);
      _vec_5;
    }#4:vector<integer>#[];
    {#5 for
      c#index:integer = 0i32;
      loop {#6 for loop
        c:text = {#7 for text next
          __work_1:text = OpGetTextSub("123ðŸ˜ŠðŸ™ƒðŸ˜‹8", c#index, -2147483648i32);
          c#index:integer = OpAddInt(c#index, OpLengthText(__work_1));
          __work_1;
        }#7:text;
        if OpNot(OpConvBoolFromText(c)) break(0) else null;
        {#8 block
          {#9 vector
            _elm_7:boolean = OpNewRecord(a, 12i32, 65535i32);
            OpSetText(_elm_7, 0i32, c);
            OpFinishRecord(a, _elm_7, 12i32, 65535i32);
          }#9;
          {#10 vector
            _elm_8:boolean = OpNewRecord(b, 13i32, 65535i32);
            OpSetInt(_elm_8, 0i32, c#index);
            OpFinishRecord(b, _elm_8, 13i32, 65535i32);
          }#10;
        }#8;
      }#6;
    }#5;
    {#11 formatting string
      __work_2:text = "";
      OpFormatDatabase(__work_2, a, 12i32, false);
      OpAppendText(__work_2, " indexes:");
      OpFormatDatabase(__work_2, b, 13i32, false);
      __work_2;
    }#11:text;
  }#2:text;
  if OpEqText(test_value, "["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]") null else OpPanic({#12 formatting string
    __work_3:text = "Test failed ";
    OpFormatText(__work_3, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_3, " != "["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]"");
    __work_3;
  }#12:text);
}#1

byte-code for iter:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: Text()
 694[52]: Text()
 695[76]: Text()
 696[100]: Database(size=1, db_tp=14) -> reference type=main_vector<text>[8]:{vector:vector<text>[4]}[14]
 701[112]: VarRef(var[100]) -> reference type=main_vector<text>[8]:{vector:vector<text>[4]}[14]
 704[124]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 707[124]: VarRef(var[100]) -> reference type=main_vector<text>[8]:{vector:vector<text>[4]}[14]
 710[136]: ConstInt(val=0) -> integer
 715[140]: SetInt(v1: reference, fld=4, val: integer)
 718[124]: VarVector(var[112]) -> vector[] type=text[4]:Base[5]
 721[136]: FreeStack(value=12, discard=36) type=Variable[12]:{name:text[4], value:text[8]}[6]
 725[112]: Database(size=1, db_tp=15) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15]
 730[124]: VarRef(var[112]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15]
 733[136]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 736[136]: VarRef(var[112]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15]
 739[148]: ConstInt(val=0) -> integer
 744[152]: SetInt(v1: reference, fld=4, val: integer)
 747[136]: VarVector(var[124]) -> vector[] type=vector<integer>[4]:Vector(0)[13]
 750[148]: FreeStack(value=12, discard=36) type=Variable[12]:{name:text[4], value:text[8]}[6]
 754[124]: ConstInt(val=0) -> integer
 759[128]: Text()
 760[152]: ClearText(var[52])
 763[152]: ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> text
 781[168]: VarInt(var[124]) -> integer
 784[172]: ConstInt(val=-2147483648) -> integer
 789[176]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 790[168]: AppendText(var[52], v1: text)
 793[152]: VarInt(var[124]) -> integer
 796[156]: VarText(var[52]) -> text
 799[172]: LengthText(v1: text) -> integer
 800[160]: AddInt(v1: integer, v2: integer) -> integer
 801[156]: PutInt(var[124], value: integer)
 804[152]: VarText(var[52]) -> text
 807[168]: AppendText(var[128], v1: text)
 810[152]: VarText(var[128]) -> text
 813[168]: ConvBoolFromText(v1: text) -> boolean
 814[153]: Not(v1: boolean) -> boolean
 815[153]: GotoFalseWord(jump=828, if_false: boolean)
 818[152]: FreeText(var[128])
 821[152]: FreeStack(value=0, discard=24)
 825[128]: GotoWord(jump=902)
 828[152]: VarVector(var[100]) -> vector[] type=text[4]:Base[5]
 831[164]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 836[164]: VarRef(var[152]) -> reference type=boolean[1]:Base[4]
 839[176]: VarText(var[128]) -> text
 842[192]: SetText(v1: reference, fld=0, val: text)
 845[164]: VarVector(var[100]) -> vector[] type=text[4]:Base[5]
 848[176]: VarRef(var[152]) -> reference type=boolean[1]:Base[4]
 851[188]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 856[164]: FreeStack(value=0, discard=12)
 860[152]: VarVector(var[112]) -> vector[] type=vector<integer>[4]:Vector(0)[13]
 863[164]: NewRecord(data: reference, parent_tp=13, fld=65535) -> reference
 868[164]: VarRef(var[152]) -> reference type=boolean[1]:Base[4]
 871[176]: VarInt(var[124]) -> integer
 874[180]: SetInt(v1: reference, fld=0, val: integer)
 877[164]: VarVector(var[112]) -> vector[] type=vector<integer>[4]:Vector(0)[13]
 880[176]: VarRef(var[152]) -> reference type=boolean[1]:Base[4]
 883[188]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=65535)
 888[164]: FreeStack(value=0, discard=12)
 892[152]: FreeText(var[128])
 895[152]: FreeStack(value=0, discard=24)
 899[128]: GotoWord(jump=759)
 902[128]: FreeStack(value=0, discard=4)
 906[124]: ClearText(var[28])
 909[124]: ConstText(_value="") -> text
 911[140]: AppendText(var[28], v1: text)
 914[124]: VarVector(var[100]) -> vector[] type=text[4]:Base[5]
 917[136]: FormatDatabase(var[28], val: reference, db_tp=12, pretty=false)
 923[124]: ConstText(_value=" indexes:") -> text
 934[140]: AppendText(var[28], v1: text)
 937[124]: VarVector(var[112]) -> vector[] type=vector<integer>[4]:Vector(0)[13]
 940[136]: FormatDatabase(var[28], val: reference, db_tp=13, pretty=false)
 946[124]: VarText(var[28]) -> text
 949[140]: FreeStack(value=16, discard=40) type=text[4]:Base[5]
 953[116]: AppendText(var[76], v1: text)
 956[100]: VarText(var[76]) -> text
 959[116]: ConstText(_value="["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]") -> text
1026[132]: EqText(v1: text, v2: text) -> boolean
1027[101]: GotoFalseWord(jump=1033, if_false: boolean)
1030[100]: GotoWord(jump=1146)
1033[100]: ClearText(var[4])
1036[100]: ConstText(_value="Test failed ") -> text
1050[116]: AppendText(var[4], v1: text)
1053[100]: VarText(var[76]) -> text
1056[116]: ConstInt(val=0) -> integer
1061[120]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
1066[100]: ConstText(_value=" != "["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]"") -> text
1139[116]: AppendText(var[4], v1: text)
1142[100]: VarText(var[4]) -> text
1145[116]: Panic(message: text)
1146[100]: FreeText(var[76])
1149[100]: FreeText(var[52])
1152[100]: FreeText(var[28])
1155[100]: FreeText(var[4])
1158[100]: Return(ret=0, value=0, discard=100)

Execute test:
  692:[8] Text()
  693:[32] Text()
  694:[56] Text()
  695:[80] Text()
  696:[104] Database(size=1, db_tp=14) -> ref(1,1,0)={}[104]
  701:[116] VarRef(var[104]) -> ref(1,1,0)={}[116]
  704:[128] GetField(v1=ref(1,1,0)[116], fld=4) -> ref(1,1,4)[116]
  707:[128] VarRef(var[104]) -> ref(1,1,0)={}[128]
  710:[140] ConstInt(val=0) -> 0[140]
  715:[144] SetInt(v1=ref(1,1,0)[128], fld=4, val=0[140])
  718:[128] VarVector(var[116]) -> ref(1,1,4)=""[128]
  721:[140] FreeStack(value=12, discard=36)
  725:[116] Database(size=1, db_tp=15) -> ref(2,1,0)={}[116]
  730:[128] VarRef(var[116]) -> ref(2,1,0)={}[128]
  733:[140] GetField(v1=ref(2,1,0)[128], fld=4) -> ref(2,1,4)[128]
  736:[140] VarRef(var[116]) -> ref(2,1,0)={}[140]
  739:[152] ConstInt(val=0) -> 0[152]
  744:[156] SetInt(v1=ref(2,1,0)[140], fld=4, val=0[152])
  747:[140] VarVector(var[128]) -> ref(2,1,4)=[][140]
  750:[152] FreeStack(value=12, discard=36)
  754:[128] ConstInt(val=0) -> 0[128]
  759:[132] Text()
  760:[156] ClearText(var[56])
  763:[156] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156]
  781:[172] VarInt(var[128]) -> 0[172]
  784:[176] ConstInt(val=-2147483648) -> -2147483648[176]
  789:[180] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156], from=0[172], till=-2147483648[176]) -> "1"[156]
  790:[172] AppendText(var[56], v1="1"[156])
  793:[156] VarInt(var[128]) -> 0[156]
  796:[160] VarText(var[56]) -> "1"[160]
  799:[176] LengthText(v1="1"[160]) -> 1[160]
  800:[164] AddInt(v1=0[156], v2=1[160]) -> 1[156]
  801:[160] PutInt(var[128], value=1[156])
  804:[156] VarText(var[56]) -> "1"[156]
  807:[172] AppendText(var[132], v1="1"[156])
  810:[156] VarText(var[132]) -> "1"[156]
  813:[172] ConvBoolFromText(v1="1"[156]) -> true[156]
  814:[157] Not(v1=true[156]) -> false[156]
  815:[157] GotoFalseWord(jump=828, if_false=false[156])
  828:[156] VarVector(var[104]) -> ref(1,1,4)=""[156]
  831:[168] NewRecord(data=ref(1,1,4)[156], parent_tp=12, fld=65535) -> ref(1,2,8)[156]
  836:[168] VarRef(var[156]) -> ref(1,2,8)=false[168]
  839:[180] VarText(var[132]) -> "1"[180]
  842:[196] SetText(v1=ref(1,2,8)[168], fld=0, val="1"[180])
  845:[168] VarVector(var[104]) -> ref(1,1,4)="	"[168]
  848:[180] VarRef(var[156]) -> ref(1,2,8)=true[180]
  851:[192] FinishRecord(data=ref(1,1,4)[168], rec=ref(1,2,8)[180], parent_tp=12, fld=65535)
  856:[168] FreeStack(value=0, discard=12)
  860:[156] VarVector(var[116]) -> ref(2,1,4)=[][156]
  863:[168] NewRecord(data=ref(2,1,4)[156], parent_tp=13, fld=65535) -> ref(2,2,8)[156]
  868:[168] VarRef(var[156]) -> ref(2,2,8)=false[168]
  871:[180] VarInt(var[128]) -> 1[180]
  874:[184] SetInt(v1=ref(2,2,8)[168], fld=0, val=1[180])
  877:[168] VarVector(var[116]) -> ref(2,1,4)=[1][168]
  880:[180] VarRef(var[156]) -> ref(2,2,8)=true[180]
  883:[192] FinishRecord(data=ref(2,1,4)[168], rec=ref(2,2,8)[180], parent_tp=13, fld=65535)
  888:[168] FreeStack(value=0, discard=12)
  892:[156] FreeText(var[132])
  895:[156] FreeStack(value=0, discard=24)
  899:[132] GotoWord(jump=759)
  759:[132] Text()
  760:[156] ClearText(var[56])
  763:[156] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156]
  781:[172] VarInt(var[128]) -> 1[172]
  784:[176] ConstInt(val=-2147483648) -> -2147483648[176]
  789:[180] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156], from=1[172], till=-2147483648[176]) -> "2"[156]
  790:[172] AppendText(var[56], v1="2"[156])
  793:[156] VarInt(var[128]) -> 1[156]
  796:[160] VarText(var[56]) -> "2"[160]
  799:[176] LengthText(v1="2"[160]) -> 1[160]
  800:[164] AddInt(v1=1[156], v2=1[160]) -> 2[156]
  801:[160] PutInt(var[128], value=2[156])
  804:[156] VarText(var[56]) -> "2"[156]
  807:[172] AppendText(var[132], v1="2"[156])
  810:[156] VarText(var[132]) -> "2"[156]
  813:[172] ConvBoolFromText(v1="2"[156]) -> true[156]
  814:[157] Not(v1=true[156]) -> false[156]
  815:[157] GotoFalseWord(jump=828, if_false=false[156])
  828:[156] VarVector(var[104]) -> ref(1,1,4)="	"[156]
  831:[168] NewRecord(data=ref(1,1,4)[156], parent_tp=12, fld=65535) -> ref(1,2,12)[156]
  836:[168] VarRef(var[156]) -> ref(1,2,12)=false[168]
  839:[180] VarText(var[132]) -> "2"[180]
  842:[196] SetText(v1=ref(1,2,12)[168], fld=0, val="2"[180])
  845:[168] VarVector(var[104]) -> ref(1,1,4)="	 "[168]
  848:[180] VarRef(var[156]) -> ref(1,2,12)=true[180]
  851:[192] FinishRecord(data=ref(1,1,4)[168], rec=ref(1,2,12)[180], parent_tp=12, fld=65535)
  856:[168] FreeStack(value=0, discard=12)
  860:[156] VarVector(var[116]) -> ref(2,1,4)=[1][156]
  863:[168] NewRecord(data=ref(2,1,4)[156], parent_tp=13, fld=65535) -> ref(2,2,12)[156]
  868:[168] VarRef(var[156]) -> ref(2,2,12)=false[168]
  871:[180] VarInt(var[128]) -> 2[180]
  874:[184] SetInt(v1=ref(2,2,12)[168], fld=0, val=2[180])
  877:[168] VarVector(var[116]) -> ref(2,1,4)=[1,2][168]
  880:[180] VarRef(var[156]) -> ref(2,2,12)=true[180]
  883:[192] FinishRecord(data=ref(2,1,4)[168], rec=ref(2,2,12)[180], parent_tp=13, fld=65535)
  888:[168] FreeStack(value=0, discard=12)
  892:[156] FreeText(var[132])
  895:[156] FreeStack(value=0, discard=24)
  899:[132] GotoWord(jump=759)
  759:[132] Text()
  760:[156] ClearText(var[56])
  763:[156] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156]
  781:[172] VarInt(var[128]) -> 2[172]
  784:[176] ConstInt(val=-2147483648) -> -2147483648[176]
  789:[180] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156], from=2[172], till=-2147483648[176]) -> "3"[156]
  790:[172] AppendText(var[56], v1="3"[156])
  793:[156] VarInt(var[128]) -> 2[156]
  796:[160] VarText(var[56]) -> "3"[160]
  799:[176] LengthText(v1="3"[160]) -> 1[160]
  800:[164] AddInt(v1=2[156], v2=1[160]) -> 3[156]
  801:[160] PutInt(var[128], value=3[156])
  804:[156] VarText(var[56]) -> "3"[156]
  807:[172] AppendText(var[132], v1="3"[156])
  810:[156] VarText(var[132]) -> "3"[156]
  813:[172] ConvBoolFromText(v1="3"[156]) -> true[156]
  814:[157] Not(v1=true[156]) -> false[156]
  815:[157] GotoFalseWord(jump=828, if_false=false[156])
  828:[156] VarVector(var[104]) -> ref(1,1,4)="	 "[156]
  831:[168] NewRecord(data=ref(1,1,4)[156], parent_tp=12, fld=65535) -> ref(1,2,16)[156]
  836:[168] VarRef(var[156]) -> ref(1,2,16)=false[168]
  839:[180] VarText(var[132]) -> "3"[180]
  842:[196] SetText(v1=ref(1,2,16)[168], fld=0, val="3"[180])
  845:[168] VarVector(var[104]) -> ref(1,1,4)="	  "[168]
  848:[180] VarRef(var[156]) -> ref(1,2,16)=true[180]
  851:[192] FinishRecord(data=ref(1,1,4)[168], rec=ref(1,2,16)[180], parent_tp=12, fld=65535)
  856:[168] FreeStack(value=0, discard=12)
  860:[156] VarVector(var[116]) -> ref(2,1,4)=[1,2][156]
  863:[168] NewRecord(data=ref(2,1,4)[156], parent_tp=13, fld=65535) -> ref(2,2,16)[156]
  868:[168] VarRef(var[156]) -> ref(2,2,16)=false[168]
  871:[180] VarInt(var[128]) -> 3[180]
  874:[184] SetInt(v1=ref(2,2,16)[168], fld=0, val=3[180])
  877:[168] VarVector(var[116]) -> ref(2,1,4)=[1,2,3][168]
  880:[180] VarRef(var[156]) -> ref(2,2,16)=true[180]
  883:[192] FinishRecord(data=ref(2,1,4)[168], rec=ref(2,2,16)[180], parent_tp=13, fld=65535)
  888:[168] FreeStack(value=0, discard=12)
  892:[156] FreeText(var[132])
  895:[156] FreeStack(value=0, discard=24)
  899:[132] GotoWord(jump=759)
  759:[132] Text()
  760:[156] ClearText(var[56])
  763:[156] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156]
  781:[172] VarInt(var[128]) -> 3[172]
  784:[176] ConstInt(val=-2147483648) -> -2147483648[176]
  789:[180] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156], from=3[172], till=-2147483648[176]) -> "ðŸ˜Š"[156]
  790:[172] AppendText(var[56], v1="ðŸ˜Š"[156])
  793:[156] VarInt(var[128]) -> 3[156]
  796:[160] VarText(var[56]) -> "ðŸ˜Š"[160]
  799:[176] LengthText(v1="ðŸ˜Š"[160]) -> 4[160]
  800:[164] AddInt(v1=3[156], v2=4[160]) -> 7[156]
  801:[160] PutInt(var[128], value=7[156])
  804:[156] VarText(var[56]) -> "ðŸ˜Š"[156]
  807:[172] AppendText(var[132], v1="ðŸ˜Š"[156])
  810:[156] VarText(var[132]) -> "ðŸ˜Š"[156]
  813:[172] ConvBoolFromText(v1="ðŸ˜Š"[156]) -> true[156]
  814:[157] Not(v1=true[156]) -> false[156]
  815:[157] GotoFalseWord(jump=828, if_false=false[156])
  828:[156] VarVector(var[104]) -> ref(1,1,4)="	  "[156]
  831:[168] NewRecord(data=ref(1,1,4)[156], parent_tp=12, fld=65535) -> ref(1,2,20)[156]
  836:[168] VarRef(var[156]) -> ref(1,2,20)=false[168]
  839:[180] VarText(var[132]) -> "ðŸ˜Š"[180]
  842:[196] SetText(v1=ref(1,2,20)[168], fld=0, val="ðŸ˜Š"[180])
  845:[168] VarVector(var[104]) -> ref(1,1,4)="	   "[168]
  848:[180] VarRef(var[156]) -> ref(1,2,20)=true[180]
  851:[192] FinishRecord(data=ref(1,1,4)[168], rec=ref(1,2,20)[180], parent_tp=12, fld=65535)
  856:[168] FreeStack(value=0, discard=12)
  860:[156] VarVector(var[116]) -> ref(2,1,4)=[1,2,3][156]
  863:[168] NewRecord(data=ref(2,1,4)[156], parent_tp=13, fld=65535) -> ref(2,2,20)[156]
  868:[168] VarRef(var[156]) -> ref(2,2,20)=false[168]
  871:[180] VarInt(var[128]) -> 7[180]
  874:[184] SetInt(v1=ref(2,2,20)[168], fld=0, val=7[180])
  877:[168] VarVector(var[116]) -> ref(2,1,4)=[1,2,3,7][168]
  880:[180] VarRef(var[156]) -> ref(2,2,20)=true[180]
  883:[192] FinishRecord(data=ref(2,1,4)[168], rec=ref(2,2,20)[180], parent_tp=13, fld=65535)
  888:[168] FreeStack(value=0, discard=12)
  892:[156] FreeText(var[132])
  895:[156] FreeStack(value=0, discard=24)
  899:[132] GotoWord(jump=759)
  759:[132] Text()
  760:[156] ClearText(var[56])
  763:[156] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156]
  781:[172] VarInt(var[128]) -> 7[172]
  784:[176] ConstInt(val=-2147483648) -> -2147483648[176]
  789:[180] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156], from=7[172], till=-2147483648[176]) -> "ðŸ™ƒ"[156]
  790:[172] AppendText(var[56], v1="ðŸ™ƒ"[156])
  793:[156] VarInt(var[128]) -> 7[156]
  796:[160] VarText(var[56]) -> "ðŸ™ƒ"[160]
  799:[176] LengthText(v1="ðŸ™ƒ"[160]) -> 4[160]
  800:[164] AddInt(v1=7[156], v2=4[160]) -> 11[156]
  801:[160] PutInt(var[128], value=11[156])
  804:[156] VarText(var[56]) -> "ðŸ™ƒ"[156]
  807:[172] AppendText(var[132], v1="ðŸ™ƒ"[156])
  810:[156] VarText(var[132]) -> "ðŸ™ƒ"[156]
  813:[172] ConvBoolFromText(v1="ðŸ™ƒ"[156]) -> true[156]
  814:[157] Not(v1=true[156]) -> false[156]
  815:[157] GotoFalseWord(jump=828, if_false=false[156])
  828:[156] VarVector(var[104]) -> ref(1,1,4)="	   "[156]
  831:[168] NewRecord(data=ref(1,1,4)[156], parent_tp=12, fld=65535) -> ref(1,2,24)[156]
  836:[168] VarRef(var[156]) -> ref(1,2,24)=false[168]
  839:[180] VarText(var[132]) -> "ðŸ™ƒ"[180]
  842:[196] SetText(v1=ref(1,2,24)[168], fld=0, val="ðŸ™ƒ"[180])
  845:[168] VarVector(var[104]) -> ref(1,1,4)="	   "[168]
  848:[180] VarRef(var[156]) -> ref(1,2,24)=true[180]
  851:[192] FinishRecord(data=ref(1,1,4)[168], rec=ref(1,2,24)[180], parent_tp=12, fld=65535)
  856:[168] FreeStack(value=0, discard=12)
  860:[156] VarVector(var[116]) -> ref(2,1,4)=[1,2,3,7][156]
  863:[168] NewRecord(data=ref(2,1,4)[156], parent_tp=13, fld=65535) -> ref(2,2,24)[156]
  868:[168] VarRef(var[156]) -> ref(2,2,24)=false[168]
  871:[180] VarInt(var[128]) -> 11[180]
  874:[184] SetInt(v1=ref(2,2,24)[168], fld=0, val=11[180])
  877:[168] VarVector(var[116]) -> ref(2,1,4)=[1,2,3,7,11][168]
  880:[180] VarRef(var[156]) -> ref(2,2,24)=true[180]
  883:[192] FinishRecord(data=ref(2,1,4)[168], rec=ref(2,2,24)[180], parent_tp=13, fld=65535)
  888:[168] FreeStack(value=0, discard=12)
  892:[156] FreeText(var[132])
  895:[156] FreeStack(value=0, discard=24)
  899:[132] GotoWord(jump=759)
  759:[132] Text()
  760:[156] ClearText(var[56])
  763:[156] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156]
  781:[172] VarInt(var[128]) -> 11[172]
  784:[176] ConstInt(val=-2147483648) -> -2147483648[176]
  789:[180] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156], from=11[172], till=-2147483648[176]) -> "ðŸ˜‹"[156]
  790:[172] AppendText(var[56], v1="ðŸ˜‹"[156])
  793:[156] VarInt(var[128]) -> 11[156]
  796:[160] VarText(var[56]) -> "ðŸ˜‹"[160]
  799:[176] LengthText(v1="ðŸ˜‹"[160]) -> 4[160]
  800:[164] AddInt(v1=11[156], v2=4[160]) -> 15[156]
  801:[160] PutInt(var[128], value=15[156])
  804:[156] VarText(var[56]) -> "ðŸ˜‹"[156]
  807:[172] AppendText(var[132], v1="ðŸ˜‹"[156])
  810:[156] VarText(var[132]) -> "ðŸ˜‹"[156]
  813:[172] ConvBoolFromText(v1="ðŸ˜‹"[156]) -> true[156]
  814:[157] Not(v1=true[156]) -> false[156]
  815:[157] GotoFalseWord(jump=828, if_false=false[156])
  828:[156] VarVector(var[104]) -> ref(1,1,4)="	   "[156]
  831:[168] NewRecord(data=ref(1,1,4)[156], parent_tp=12, fld=65535) -> ref(1,2,28)[156]
  836:[168] VarRef(var[156]) -> ref(1,2,28)=false[168]
  839:[180] VarText(var[132]) -> "ðŸ˜‹"[180]
  842:[196] SetText(v1=ref(1,2,28)[168], fld=0, val="ðŸ˜‹"[180])
  845:[168] VarVector(var[104]) -> ref(1,1,4)="	    "[168]
  848:[180] VarRef(var[156]) -> ref(1,2,28)=true[180]
  851:[192] FinishRecord(data=ref(1,1,4)[168], rec=ref(1,2,28)[180], parent_tp=12, fld=65535)
  856:[168] FreeStack(value=0, discard=12)
  860:[156] VarVector(var[116]) -> ref(2,1,4)=[1,2,3,7,11][156]
  863:[168] NewRecord(data=ref(2,1,4)[156], parent_tp=13, fld=65535) -> ref(2,2,28)[156]
  868:[168] VarRef(var[156]) -> ref(2,2,28)=false[168]
  871:[180] VarInt(var[128]) -> 15[180]
  874:[184] SetInt(v1=ref(2,2,28)[168], fld=0, val=15[180])
  877:[168] VarVector(var[116]) -> ref(2,1,4)=[1,2,3,7,11,15][168]
  880:[180] VarRef(var[156]) -> ref(2,2,28)=true[180]
  883:[192] FinishRecord(data=ref(2,1,4)[168], rec=ref(2,2,28)[180], parent_tp=13, fld=65535)
  888:[168] FreeStack(value=0, discard=12)
  892:[156] FreeText(var[132])
  895:[156] FreeStack(value=0, discard=24)
  899:[132] GotoWord(jump=759)
  759:[132] Text()
  760:[156] ClearText(var[56])
  763:[156] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156]
  781:[172] VarInt(var[128]) -> 15[172]
  784:[176] ConstInt(val=-2147483648) -> -2147483648[176]
  789:[180] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156], from=15[172], till=-2147483648[176]) -> "8"[156]
  790:[172] AppendText(var[56], v1="8"[156])
  793:[156] VarInt(var[128]) -> 15[156]
  796:[160] VarText(var[56]) -> "8"[160]
  799:[176] LengthText(v1="8"[160]) -> 1[160]
  800:[164] AddInt(v1=15[156], v2=1[160]) -> 16[156]
  801:[160] PutInt(var[128], value=16[156])
  804:[156] VarText(var[56]) -> "8"[156]
  807:[172] AppendText(var[132], v1="8"[156])
  810:[156] VarText(var[132]) -> "8"[156]
  813:[172] ConvBoolFromText(v1="8"[156]) -> true[156]
  814:[157] Not(v1=true[156]) -> false[156]
  815:[157] GotoFalseWord(jump=828, if_false=false[156])
  828:[156] VarVector(var[104]) -> ref(1,1,4)="	    "[156]
  831:[168] NewRecord(data=ref(1,1,4)[156], parent_tp=12, fld=65535) -> ref(1,2,32)[156]
  836:[168] VarRef(var[156]) -> ref(1,2,32)=false[168]
  839:[180] VarText(var[132]) -> "8"[180]
  842:[196] SetText(v1=ref(1,2,32)[168], fld=0, val="8"[180])
  845:[168] VarVector(var[104]) -> ref(1,1,4)="	     "[168]
  848:[180] VarRef(var[156]) -> ref(1,2,32)=true[180]
  851:[192] FinishRecord(data=ref(1,1,4)[168], rec=ref(1,2,32)[180], parent_tp=12, fld=65535)
  856:[168] FreeStack(value=0, discard=12)
  860:[156] VarVector(var[116]) -> ref(2,1,4)=[1,2,3,7,11,15][156]
  863:[168] NewRecord(data=ref(2,1,4)[156], parent_tp=13, fld=65535) -> ref(2,2,32)[156]
  868:[168] VarRef(var[156]) -> ref(2,2,32)=false[168]
  871:[180] VarInt(var[128]) -> 16[180]
  874:[184] SetInt(v1=ref(2,2,32)[168], fld=0, val=16[180])
  877:[168] VarVector(var[116]) -> ref(2,1,4)=[1,2,3,7,11,15,16][168]
  880:[180] VarRef(var[156]) -> ref(2,2,32)=true[180]
  883:[192] FinishRecord(data=ref(2,1,4)[168], rec=ref(2,2,32)[180], parent_tp=13, fld=65535)
  888:[168] FreeStack(value=0, discard=12)
  892:[156] FreeText(var[132])
  895:[156] FreeStack(value=0, discard=24)
  899:[132] GotoWord(jump=759)
  759:[132] Text()
  760:[156] ClearText(var[56])
  763:[156] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156]
  781:[172] VarInt(var[128]) -> 16[172]
  784:[176] ConstInt(val=-2147483648) -> -2147483648[176]
  789:[180] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[156], from=16[172], till=-2147483648[176]) -> ""[156]
  790:[172] AppendText(var[56], v1=""[156])
  793:[156] VarInt(var[128]) -> 16[156]
  796:[160] VarText(var[56]) -> ""[160]
  799:[176] LengthText(v1=""[160]) -> 0[160]
  800:[164] AddInt(v1=16[156], v2=0[160]) -> 16[156]
  801:[160] PutInt(var[128], value=16[156])
  804:[156] VarText(var[56]) -> ""[156]
  807:[172] AppendText(var[132], v1=""[156])
  810:[156] VarText(var[132]) -> ""[156]
  813:[172] ConvBoolFromText(v1=""[156]) -> false[156]
  814:[157] Not(v1=false[156]) -> true[156]
  815:[157] GotoFalseWord(jump=828, if_false=true[156])
  818:[156] FreeText(var[132])
  821:[156] FreeStack(value=0, discard=24)
  825:[132] GotoWord(jump=902)
  902:[132] FreeStack(value=0, discard=4)
  906:[128] ClearText(var[32])
  909:[128] ConstText(_value="") -> ""[128]
  911:[144] AppendText(var[32], v1=""[128])
  914:[128] VarVector(var[104]) -> ref(1,1,4)="	     "[128]
  917:[140] FormatDatabase(var[32], val=ref(1,1,4)[128], db_tp=12, pretty=false)
  923:[128] ConstText(_value=" indexes:") -> " indexes:"[128]
  934:[144] AppendText(var[32], v1=" indexes:"[128])
  937:[128] VarVector(var[116]) -> ref(2,1,4)=[1,2,3,7,11,15,16][128]
  940:[140] FormatDatabase(var[32], val=ref(2,1,4)[128], db_tp=13, pretty=false)
  946:[128] VarText(var[32]) -> "[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[128]
  949:[144] FreeStack(value=16, discard=40)
  953:[120] AppendText(var[80], v1="[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[104])
  956:[104] VarText(var[80]) -> "[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[104]
  959:[120] ConstText(_value="["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]") -> "[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[120]
 1026:[136] EqText(v1="[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[104], v2="[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[120]) -> true[104]
 1027:[105] GotoFalseWord(jump=1033, if_false=true[104])
 1030:[104] GotoWord(jump=1146)
 1146:[104] FreeText(var[80])
 1149:[104] FreeText(var[56])
 1152:[104] FreeText(var[32])
 1155:[104] FreeText(var[8])
 1158:[104] Return(ret=4294967295[4], value=0, discard=100)
Finished
