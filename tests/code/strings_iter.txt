pub fn test() {
    test_value = {a=[];
b=[];
for c in "123ðŸ˜ŠðŸ™ƒðŸ˜‹8" {
    a += [c];
    b += [c#index]
};
"{a} indexes:{b}"};
    assert(
        test_value == "[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]",
        "Test failed {test_value} != \"[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]\""
    );
}
Type 17:vector<integer>[4]:Vector(0)

Type 18:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#block(1):void
  __ref_2(1):ref(main_vector<integer>) = null;
  __ref_1(1):ref(main_vector<text>) = null;
  __work_3(1):text = "";
  __work_2(1):text = "";
  __work_1(1):text = "";
  test_value(1):text = {#block(2):text
    OpDatabase(__ref_1(1), 14i32);
    a(2):vector<text>["__ref_1"] = OpGetField(__ref_1(1), 4i32, 7i32);
    OpSetInt(__ref_1(1), 4i32, 0i32);
    OpDatabase(__ref_2(1), 18i32);
    b(2):vector<integer>["__ref_2"] = OpGetField(__ref_2(1), 4i32, 17i32);
    OpSetInt(__ref_2(1), 4i32, 0i32);
    {#For block(3):void
      c#index(3):integer = 0i32;
      loop {#For loop_4
        c(4):text = {#for text next(5):text
          __work_1(1):text = OpGetTextSub("123ðŸ˜ŠðŸ™ƒðŸ˜‹8", c#index(3), -2147483648i32);
          c#index(3):integer = OpAddInt(c#index(3), OpLengthText(__work_1(1)));
          __work_1(1);
        }#for text next(5):text;
        if OpNot(OpConvBoolFromText(c(4))) {#break(6):void
          OpFreeText(c(4));
          break(0);
        }#break(6):void else null;
        {#block(7):void
          _elm_1(7):ref(boolean)["a"] = OpNewRecord(a(2), 7i32, 65535i32);
          OpSetText(_elm_1(7), 0i32, c(4));
          OpFinishRecord(a(2), _elm_1(7), 7i32, 65535i32);
          _elm_2(7):ref(boolean)["b"] = OpNewRecord(b(2), 17i32, 65535i32);
          OpSetInt(_elm_2(7), 0i32, c#index(3));
          OpFinishRecord(b(2), _elm_2(7), 17i32, 65535i32);
        }#block(7):void;
        OpFreeText(c(4));
      }#For loop_4;
    }#For block(3):void;
    {#Formatted string(8):text
      __work_2(1):text = "";
      OpFormatDatabase(__work_2(1), a(2), 7i32, false);
      OpAppendText(__work_2(1), " indexes:");
      OpFormatDatabase(__work_2(1), b(2), 17i32, false);
      __work_2(1);
    }#Formatted string(8):text;
  }#block(2):text;
  if OpEqText(test_value(1), "["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]") null else OpPanic({#Formatted string(9):text
    __work_3(1):text = "Test failed ";
    OpFormatText(__work_3(1), test_value(1), 0i32, -1i32, 32i32);
    OpAppendText(__work_3(1), " != "["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]"");
    __work_3(1);
  }#Formatted string(9):text);
  OpFreeText(test_value(1));
  OpFreeText(__work_1(1));
  OpFreeRef(__ref_1(1));
  OpFreeRef(__ref_2(1));
  OpFreeText(__work_2(1));
  OpFreeText(__work_3(1));
}#block(1):void

byte-code for iter:test() [1119]
   0[4]: return-address
   0[8]: ConvRefFromNull() -> ref(reference) var=__ref_2[8]:ref(main_vector<integer>)
   1[20]: ConvRefFromNull() -> ref(reference) var=__ref_1[20]:ref(main_vector<text>)
   2[32]: Text() var=__work_3[32]:text
   3[56]: Text() var=__work_2[56]:text
   4[80]: Text() var=__work_1[80]:text
   5[104]: Text() var=test_value[104]:text
   6[128]: Database(var[20], db_tp=14) type=main_vector<text>[8]:{vector:vector<text>[4]}[14]
  11[128]: VarRef(var[20]) -> ref(reference) type=main_vector<text>[8]:{vector:vector<text>[4]}[14] var=__ref_1[20]:ref(main_vector<text>)
  14[140]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=vector<text>[4]:Vector(5)[7]
  17[140]: VarRef(var[20]) -> ref(reference) type=main_vector<text>[8]:{vector:vector<text>[4]}[14] var=__ref_1[20]:ref(main_vector<text>)
  20[152]: ConstInt(val=0) -> integer
  25[156]: SetInt(v1: ref(reference), fld=4, val: integer)
  28[140]: Database(var[8], db_tp=18) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18]
  33[140]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_2[8]:ref(main_vector<integer>)
  36[152]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=vector<integer>[4]:Vector(0)[17]
  39[152]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_2[8]:ref(main_vector<integer>)
  42[164]: ConstInt(val=0) -> integer
  47[168]: SetInt(v1: ref(reference), fld=4, val: integer)
  50[152]: ConstInt(val=0) -> integer var=c#index[152]:integer
  55[156]: Text() var=c[156]:text
  56[180]: ClearText(var[80]) var=__work_1[80]:text
  59[180]: ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> text
  77[196]: VarInt(var[152]) -> integer var=c#index[152]:integer
  80[200]: ConstInt(val=-2147483648) -> integer
  85[204]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
  86[196]: AppendText(var[80], v1: text)
  89[180]: VarInt(var[152]) -> integer var=c#index[152]:integer
  92[184]: VarText(var[80]) -> text var=__work_1[80]:text
  95[200]: LengthText(v1: text) -> integer
  96[188]: AddInt(v1: integer, v2: integer) -> integer
  97[184]: PutInt(var[152], value: integer)
 100[180]: VarText(var[80]) -> text var=__work_1[80]:text
 103[196]: AppendText(var[156], v1: text)
 106[180]: VarText(var[156]) -> text var=c[156]:text
 109[196]: ConvBoolFromText(v1: text) -> boolean
 110[181]: Not(v1: boolean) -> boolean
 111[181]: GotoFalseWord(jump=124, if_false: boolean)
 114[180]: FreeText(var[156])
 117[180]: FreeStack(value=0, discard=24)
 121[156]: GotoWord(jump=194)
 124[180]: VarVector(var[128]) -> vector type=vector<text>[4]:Vector(5)[7] var=a[128]:vector<text>["__ref_1"]
 127[192]: NewRecord(data: ref(reference), parent_tp=7, fld=65535) -> ref(reference)
 132[192]: VarRef(var[180]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[180]:ref(boolean)["a"]
 135[204]: VarText(var[156]) -> text var=c[156]:text
 138[220]: SetText(v1: ref(reference), fld=0, val: text)
 141[192]: VarVector(var[128]) -> vector type=vector<text>[4]:Vector(5)[7] var=a[128]:vector<text>["__ref_1"]
 144[204]: VarRef(var[180]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[180]:ref(boolean)["a"]
 147[216]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=7, fld=65535)
 152[192]: VarVector(var[140]) -> vector type=vector<integer>[4]:Vector(0)[17] var=b[140]:vector<integer>["__ref_2"]
 155[204]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
 160[204]: VarRef(var[192]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[192]:ref(boolean)["b"]
 163[216]: VarInt(var[152]) -> integer var=c#index[152]:integer
 166[220]: SetInt(v1: ref(reference), fld=0, val: integer)
 169[204]: VarVector(var[140]) -> vector type=vector<integer>[4]:Vector(0)[17] var=b[140]:vector<integer>["__ref_2"]
 172[216]: VarRef(var[192]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[192]:ref(boolean)["b"]
 175[228]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 180[204]: FreeStack(value=0, discard=24)
 184[180]: FreeText(var[156])
 187[180]: FreeStack(value=0, discard=24)
 191[156]: GotoWord(jump=55)
 194[156]: FreeStack(value=0, discard=4)
 198[152]: ClearText(var[56]) var=__work_2[56]:text
 201[152]: ConstText(_value="") -> text
 203[168]: AppendText(var[56], v1: text)
 206[152]: VarVector(var[128]) -> vector type=vector<text>[4]:Vector(5)[7] var=a[128]:vector<text>["__ref_1"]
 209[164]: FormatDatabase(var[56], val: ref(reference), db_tp=7, pretty=false)
 215[152]: ConstText(_value=" indexes:") -> text
 226[168]: AppendText(var[56], v1: text)
 229[152]: VarVector(var[140]) -> vector type=vector<integer>[4]:Vector(0)[17] var=b[140]:vector<integer>["__ref_2"]
 232[164]: FormatDatabase(var[56], val: ref(reference), db_tp=17, pretty=false)
 238[152]: VarText(var[56]) -> text var=__work_2[56]:text
 241[168]: FreeStack(value=16, discard=40)
 245[144]: AppendText(var[104], v1: text)
 248[128]: VarText(var[104]) -> text var=test_value[104]:text
 251[144]: ConstText(_value="["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]") -> text
 318[160]: EqText(v1: text, v2: text) -> boolean
 319[129]: GotoFalseWord(jump=325, if_false: boolean)
 322[128]: GotoWord(jump=438)
 325[128]: ClearText(var[32]) var=__work_3[32]:text
 328[128]: ConstText(_value="Test failed ") -> text
 342[144]: AppendText(var[32], v1: text)
 345[128]: VarText(var[104]) -> text var=test_value[104]:text
 348[144]: ConstInt(val=0) -> integer
 353[148]: FormatText(var[32], val: text, width: integer, dir=-1, token=32)
 358[128]: ConstText(_value=" != "["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]"") -> text
 431[144]: AppendText(var[32], v1: text)
 434[128]: VarText(var[32]) -> text var=__work_3[32]:text
 437[144]: Panic(message: text)
 438[128]: FreeText(var[104])
 441[128]: FreeText(var[80])
 444[128]: VarRef(var[20]) -> ref(reference) type=main_vector<text>[8]:{vector:vector<text>[4]}[14] var=__ref_1[20]:ref(main_vector<text>)
 447[140]: FreeRef(v1: ref(reference))
 448[128]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_2[8]:ref(main_vector<integer>)
 451[140]: FreeRef(v1: ref(reference))
 452[128]: FreeText(var[56])
 455[128]: FreeText(var[32])
 458[128]: Return(ret=0, value=0, discard=124)

Execute test:
    0:[8] ConvRefFromNull() -> ref(1,0,0)[8]
    1:[20] ConvRefFromNull() -> ref(2,0,0)[20]
    2:[32] Text()
    3:[56] Text()
    4:[80] Text()
    5:[104] Text()
    6:[128] Database(var[20], db_tp=14)
   11:[128] VarRef(var[20]) -> ref(2,1,0)={}[128]
   14:[140] GetField(v1=ref(2,1,0)[128], fld=4) -> ref(2,1,4)=[][128]
   17:[140] VarRef(var[20]) -> ref(2,1,0)={}[140]
   20:[152] ConstInt(val=0) -> 0[152]
   25:[156] SetInt(v1=ref(2,1,0)[140], fld=4, val=0[152])
   28:[140] Database(var[8], db_tp=18)
   33:[140] VarRef(var[8]) -> ref(1,1,0)={}[140]
   36:[152] GetField(v1=ref(1,1,0)[140], fld=4) -> ref(1,1,4)=[][140]
   39:[152] VarRef(var[8]) -> ref(1,1,0)={}[152]
   42:[164] ConstInt(val=0) -> 0[164]
   47:[168] SetInt(v1=ref(1,1,0)[152], fld=4, val=0[164])
   50:[152] ConstInt(val=0) -> 0[152]
   55:[156] Text()
   56:[180] ClearText(var[80])
   59:[180] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180]
   77:[196] VarInt(var[152]) -> 0[196]
   80:[200] ConstInt(val=-2147483648) -> -2147483648[200]
   85:[204] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180], from=0[196], till=-2147483648[200]) -> "1"[180]
   86:[196] AppendText(var[80], v1="1"[180])
   89:[180] VarInt(var[152]) -> 0[180]
   92:[184] VarText(var[80]) -> "1"[184]
   95:[200] LengthText(v1="1"[184]) -> 1[184]
   96:[188] AddInt(v1=0[180], v2=1[184]) -> 1[180]
   97:[184] PutInt(var[152], value=1[180])
  100:[180] VarText(var[80]) -> "1"[180]
  103:[196] AppendText(var[156], v1="1"[180])
  106:[180] VarText(var[156]) -> "1"[180]
  109:[196] ConvBoolFromText(v1="1"[180]) -> true[180]
  110:[181] Not(v1=true[180]) -> false[180]
  111:[181] GotoFalseWord(jump=124, if_false=false[180])
  124:[180] VarVector(var[128]) -> ref(2,1,4)=[][180]
  127:[192] NewRecord(data=ref(2,1,4)[180], parent_tp=7, fld=65535) -> ref(2,9,8)[180]
  132:[192] VarRef(var[180]) -> ref(2,9,8)=false[192]
  135:[204] VarText(var[156]) -> "1"[204]
  138:[220] SetText(v1=ref(2,9,8)[192], fld=0, val="1"[204])
  141:[192] VarVector(var[128]) -> ref(2,1,4)=["1"][192]
  144:[204] VarRef(var[180]) -> ref(2,9,8)=true[204]
  147:[216] FinishRecord(data=ref(2,1,4)[192], rec=ref(2,9,8)[204], parent_tp=7, fld=65535)
  152:[192] VarVector(var[140]) -> ref(1,1,4)=[][192]
  155:[204] NewRecord(data=ref(1,1,4)[192], parent_tp=17, fld=65535) -> ref(1,9,8)[192]
  160:[204] VarRef(var[192]) -> ref(1,9,8)=false[204]
  163:[216] VarInt(var[152]) -> 1[216]
  166:[220] SetInt(v1=ref(1,9,8)[204], fld=0, val=1[216])
  169:[204] VarVector(var[140]) -> ref(1,1,4)=[1][204]
  172:[216] VarRef(var[192]) -> ref(1,9,8)=true[216]
  175:[228] FinishRecord(data=ref(1,1,4)[204], rec=ref(1,9,8)[216], parent_tp=17, fld=65535)
  180:[204] FreeStack(value=0, discard=24)
  184:[180] FreeText(var[156])
  187:[180] FreeStack(value=0, discard=24)
  191:[156] GotoWord(jump=55)
   55:[156] Text()
   56:[180] ClearText(var[80])
   59:[180] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180]
   77:[196] VarInt(var[152]) -> 1[196]
   80:[200] ConstInt(val=-2147483648) -> -2147483648[200]
   85:[204] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180], from=1[196], till=-2147483648[200]) -> "2"[180]
   86:[196] AppendText(var[80], v1="2"[180])
   89:[180] VarInt(var[152]) -> 1[180]
   92:[184] VarText(var[80]) -> "2"[184]
   95:[200] LengthText(v1="2"[184]) -> 1[184]
   96:[188] AddInt(v1=1[180], v2=1[184]) -> 2[180]
   97:[184] PutInt(var[152], value=2[180])
  100:[180] VarText(var[80]) -> "2"[180]
  103:[196] AppendText(var[156], v1="2"[180])
  106:[180] VarText(var[156]) -> "2"[180]
  109:[196] ConvBoolFromText(v1="2"[180]) -> true[180]
  110:[181] Not(v1=true[180]) -> false[180]
  111:[181] GotoFalseWord(jump=124, if_false=false[180])
  124:[180] VarVector(var[128]) -> ref(2,1,4)=["1"][180]
  127:[192] NewRecord(data=ref(2,1,4)[180], parent_tp=7, fld=65535) -> ref(2,9,12)[180]
  132:[192] VarRef(var[180]) -> ref(2,9,12)=false[192]
  135:[204] VarText(var[156]) -> "2"[204]
  138:[220] SetText(v1=ref(2,9,12)[192], fld=0, val="2"[204])
  141:[192] VarVector(var[128]) -> ref(2,1,4)=["1","2"][192]
  144:[204] VarRef(var[180]) -> ref(2,9,12)=true[204]
  147:[216] FinishRecord(data=ref(2,1,4)[192], rec=ref(2,9,12)[204], parent_tp=7, fld=65535)
  152:[192] VarVector(var[140]) -> ref(1,1,4)=[1][192]
  155:[204] NewRecord(data=ref(1,1,4)[192], parent_tp=17, fld=65535) -> ref(1,9,12)[192]
  160:[204] VarRef(var[192]) -> ref(1,9,12)=false[204]
  163:[216] VarInt(var[152]) -> 2[216]
  166:[220] SetInt(v1=ref(1,9,12)[204], fld=0, val=2[216])
  169:[204] VarVector(var[140]) -> ref(1,1,4)=[1,2][204]
  172:[216] VarRef(var[192]) -> ref(1,9,12)=true[216]
  175:[228] FinishRecord(data=ref(1,1,4)[204], rec=ref(1,9,12)[216], parent_tp=17, fld=65535)
  180:[204] FreeStack(value=0, discard=24)
  184:[180] FreeText(var[156])
  187:[180] FreeStack(value=0, discard=24)
  191:[156] GotoWord(jump=55)
   55:[156] Text()
   56:[180] ClearText(var[80])
   59:[180] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180]
   77:[196] VarInt(var[152]) -> 2[196]
   80:[200] ConstInt(val=-2147483648) -> -2147483648[200]
   85:[204] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180], from=2[196], till=-2147483648[200]) -> "3"[180]
   86:[196] AppendText(var[80], v1="3"[180])
   89:[180] VarInt(var[152]) -> 2[180]
   92:[184] VarText(var[80]) -> "3"[184]
   95:[200] LengthText(v1="3"[184]) -> 1[184]
   96:[188] AddInt(v1=2[180], v2=1[184]) -> 3[180]
   97:[184] PutInt(var[152], value=3[180])
  100:[180] VarText(var[80]) -> "3"[180]
  103:[196] AppendText(var[156], v1="3"[180])
  106:[180] VarText(var[156]) -> "3"[180]
  109:[196] ConvBoolFromText(v1="3"[180]) -> true[180]
  110:[181] Not(v1=true[180]) -> false[180]
  111:[181] GotoFalseWord(jump=124, if_false=false[180])
  124:[180] VarVector(var[128]) -> ref(2,1,4)=["1","2"][180]
  127:[192] NewRecord(data=ref(2,1,4)[180], parent_tp=7, fld=65535) -> ref(2,9,16)[180]
  132:[192] VarRef(var[180]) -> ref(2,9,16)=false[192]
  135:[204] VarText(var[156]) -> "3"[204]
  138:[220] SetText(v1=ref(2,9,16)[192], fld=0, val="3"[204])
  141:[192] VarVector(var[128]) -> ref(2,1,4)=["1","2","3"][192]
  144:[204] VarRef(var[180]) -> ref(2,9,16)=true[204]
  147:[216] FinishRecord(data=ref(2,1,4)[192], rec=ref(2,9,16)[204], parent_tp=7, fld=65535)
  152:[192] VarVector(var[140]) -> ref(1,1,4)=[1,2][192]
  155:[204] NewRecord(data=ref(1,1,4)[192], parent_tp=17, fld=65535) -> ref(1,9,16)[192]
  160:[204] VarRef(var[192]) -> ref(1,9,16)=false[204]
  163:[216] VarInt(var[152]) -> 3[216]
  166:[220] SetInt(v1=ref(1,9,16)[204], fld=0, val=3[216])
  169:[204] VarVector(var[140]) -> ref(1,1,4)=[1,2,3][204]
  172:[216] VarRef(var[192]) -> ref(1,9,16)=true[216]
  175:[228] FinishRecord(data=ref(1,1,4)[204], rec=ref(1,9,16)[216], parent_tp=17, fld=65535)
  180:[204] FreeStack(value=0, discard=24)
  184:[180] FreeText(var[156])
  187:[180] FreeStack(value=0, discard=24)
  191:[156] GotoWord(jump=55)
   55:[156] Text()
   56:[180] ClearText(var[80])
   59:[180] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180]
   77:[196] VarInt(var[152]) -> 3[196]
   80:[200] ConstInt(val=-2147483648) -> -2147483648[200]
   85:[204] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180], from=3[196], till=-2147483648[200]) -> "ðŸ˜Š"[180]
   86:[196] AppendText(var[80], v1="ðŸ˜Š"[180])
   89:[180] VarInt(var[152]) -> 3[180]
   92:[184] VarText(var[80]) -> "ðŸ˜Š"[184]
   95:[200] LengthText(v1="ðŸ˜Š"[184]) -> 4[184]
   96:[188] AddInt(v1=3[180], v2=4[184]) -> 7[180]
   97:[184] PutInt(var[152], value=7[180])
  100:[180] VarText(var[80]) -> "ðŸ˜Š"[180]
  103:[196] AppendText(var[156], v1="ðŸ˜Š"[180])
  106:[180] VarText(var[156]) -> "ðŸ˜Š"[180]
  109:[196] ConvBoolFromText(v1="ðŸ˜Š"[180]) -> true[180]
  110:[181] Not(v1=true[180]) -> false[180]
  111:[181] GotoFalseWord(jump=124, if_false=false[180])
  124:[180] VarVector(var[128]) -> ref(2,1,4)=["1","2","3"][180]
  127:[192] NewRecord(data=ref(2,1,4)[180], parent_tp=7, fld=65535) -> ref(2,9,20)[180]
  132:[192] VarRef(var[180]) -> ref(2,9,20)=false[192]
  135:[204] VarText(var[156]) -> "ðŸ˜Š"[204]
  138:[220] SetText(v1=ref(2,9,20)[192], fld=0, val="ðŸ˜Š"[204])
  141:[192] VarVector(var[128]) -> ref(2,1,4)=["1","2","3","ðŸ˜Š"][192]
  144:[204] VarRef(var[180]) -> ref(2,9,20)=true[204]
  147:[216] FinishRecord(data=ref(2,1,4)[192], rec=ref(2,9,20)[204], parent_tp=7, fld=65535)
  152:[192] VarVector(var[140]) -> ref(1,1,4)=[1,2,3][192]
  155:[204] NewRecord(data=ref(1,1,4)[192], parent_tp=17, fld=65535) -> ref(1,9,20)[192]
  160:[204] VarRef(var[192]) -> ref(1,9,20)=false[204]
  163:[216] VarInt(var[152]) -> 7[216]
  166:[220] SetInt(v1=ref(1,9,20)[204], fld=0, val=7[216])
  169:[204] VarVector(var[140]) -> ref(1,1,4)=[1,2,3,7][204]
  172:[216] VarRef(var[192]) -> ref(1,9,20)=true[216]
  175:[228] FinishRecord(data=ref(1,1,4)[204], rec=ref(1,9,20)[216], parent_tp=17, fld=65535)
  180:[204] FreeStack(value=0, discard=24)
  184:[180] FreeText(var[156])
  187:[180] FreeStack(value=0, discard=24)
  191:[156] GotoWord(jump=55)
   55:[156] Text()
   56:[180] ClearText(var[80])
   59:[180] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180]
   77:[196] VarInt(var[152]) -> 7[196]
   80:[200] ConstInt(val=-2147483648) -> -2147483648[200]
   85:[204] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180], from=7[196], till=-2147483648[200]) -> "ðŸ™ƒ"[180]
   86:[196] AppendText(var[80], v1="ðŸ™ƒ"[180])
   89:[180] VarInt(var[152]) -> 7[180]
   92:[184] VarText(var[80]) -> "ðŸ™ƒ"[184]
   95:[200] LengthText(v1="ðŸ™ƒ"[184]) -> 4[184]
   96:[188] AddInt(v1=7[180], v2=4[184]) -> 11[180]
   97:[184] PutInt(var[152], value=11[180])
  100:[180] VarText(var[80]) -> "ðŸ™ƒ"[180]
  103:[196] AppendText(var[156], v1="ðŸ™ƒ"[180])
  106:[180] VarText(var[156]) -> "ðŸ™ƒ"[180]
  109:[196] ConvBoolFromText(v1="ðŸ™ƒ"[180]) -> true[180]
  110:[181] Not(v1=true[180]) -> false[180]
  111:[181] GotoFalseWord(jump=124, if_false=false[180])
  124:[180] VarVector(var[128]) -> ref(2,1,4)=["1","2","3","ðŸ˜Š"][180]
  127:[192] NewRecord(data=ref(2,1,4)[180], parent_tp=7, fld=65535) -> ref(2,9,24)[180]
  132:[192] VarRef(var[180]) -> ref(2,9,24)=false[192]
  135:[204] VarText(var[156]) -> "ðŸ™ƒ"[204]
  138:[220] SetText(v1=ref(2,9,24)[192], fld=0, val="ðŸ™ƒ"[204])
  141:[192] VarVector(var[128]) -> ref(2,1,4)=["1","2","3","ðŸ˜Š","ðŸ™ƒ"][192]
  144:[204] VarRef(var[180]) -> ref(2,9,24)=true[204]
  147:[216] FinishRecord(data=ref(2,1,4)[192], rec=ref(2,9,24)[204], parent_tp=7, fld=65535)
  152:[192] VarVector(var[140]) -> ref(1,1,4)=[1,2,3,7][192]
  155:[204] NewRecord(data=ref(1,1,4)[192], parent_tp=17, fld=65535) -> ref(1,9,24)[192]
  160:[204] VarRef(var[192]) -> ref(1,9,24)=false[204]
  163:[216] VarInt(var[152]) -> 11[216]
  166:[220] SetInt(v1=ref(1,9,24)[204], fld=0, val=11[216])
  169:[204] VarVector(var[140]) -> ref(1,1,4)=[1,2,3,7,11][204]
  172:[216] VarRef(var[192]) -> ref(1,9,24)=true[216]
  175:[228] FinishRecord(data=ref(1,1,4)[204], rec=ref(1,9,24)[216], parent_tp=17, fld=65535)
  180:[204] FreeStack(value=0, discard=24)
  184:[180] FreeText(var[156])
  187:[180] FreeStack(value=0, discard=24)
  191:[156] GotoWord(jump=55)
   55:[156] Text()
   56:[180] ClearText(var[80])
   59:[180] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180]
   77:[196] VarInt(var[152]) -> 11[196]
   80:[200] ConstInt(val=-2147483648) -> -2147483648[200]
   85:[204] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180], from=11[196], till=-2147483648[200]) -> "ðŸ˜‹"[180]
   86:[196] AppendText(var[80], v1="ðŸ˜‹"[180])
   89:[180] VarInt(var[152]) -> 11[180]
   92:[184] VarText(var[80]) -> "ðŸ˜‹"[184]
   95:[200] LengthText(v1="ðŸ˜‹"[184]) -> 4[184]
   96:[188] AddInt(v1=11[180], v2=4[184]) -> 15[180]
   97:[184] PutInt(var[152], value=15[180])
  100:[180] VarText(var[80]) -> "ðŸ˜‹"[180]
  103:[196] AppendText(var[156], v1="ðŸ˜‹"[180])
  106:[180] VarText(var[156]) -> "ðŸ˜‹"[180]
  109:[196] ConvBoolFromText(v1="ðŸ˜‹"[180]) -> true[180]
  110:[181] Not(v1=true[180]) -> false[180]
  111:[181] GotoFalseWord(jump=124, if_false=false[180])
  124:[180] VarVector(var[128]) -> ref(2,1,4)=["1","2","3","ðŸ˜Š","ðŸ™ƒ"][180]
  127:[192] NewRecord(data=ref(2,1,4)[180], parent_tp=7, fld=65535) -> ref(2,9,28)[180]
  132:[192] VarRef(var[180]) -> ref(2,9,28)=false[192]
  135:[204] VarText(var[156]) -> "ðŸ˜‹"[204]
  138:[220] SetText(v1=ref(2,9,28)[192], fld=0, val="ðŸ˜‹"[204])
  141:[192] VarVector(var[128]) -> ref(2,1,4)=["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹"][192]
  144:[204] VarRef(var[180]) -> ref(2,9,28)=true[204]
  147:[216] FinishRecord(data=ref(2,1,4)[192], rec=ref(2,9,28)[204], parent_tp=7, fld=65535)
  152:[192] VarVector(var[140]) -> ref(1,1,4)=[1,2,3,7,11][192]
  155:[204] NewRecord(data=ref(1,1,4)[192], parent_tp=17, fld=65535) -> ref(1,9,28)[192]
  160:[204] VarRef(var[192]) -> ref(1,9,28)=false[204]
  163:[216] VarInt(var[152]) -> 15[216]
  166:[220] SetInt(v1=ref(1,9,28)[204], fld=0, val=15[216])
  169:[204] VarVector(var[140]) -> ref(1,1,4)=[1,2,3,7,11,15][204]
  172:[216] VarRef(var[192]) -> ref(1,9,28)=true[216]
  175:[228] FinishRecord(data=ref(1,1,4)[204], rec=ref(1,9,28)[216], parent_tp=17, fld=65535)
  180:[204] FreeStack(value=0, discard=24)
  184:[180] FreeText(var[156])
  187:[180] FreeStack(value=0, discard=24)
  191:[156] GotoWord(jump=55)
   55:[156] Text()
   56:[180] ClearText(var[80])
   59:[180] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180]
   77:[196] VarInt(var[152]) -> 15[196]
   80:[200] ConstInt(val=-2147483648) -> -2147483648[200]
   85:[204] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180], from=15[196], till=-2147483648[200]) -> "8"[180]
   86:[196] AppendText(var[80], v1="8"[180])
   89:[180] VarInt(var[152]) -> 15[180]
   92:[184] VarText(var[80]) -> "8"[184]
   95:[200] LengthText(v1="8"[184]) -> 1[184]
   96:[188] AddInt(v1=15[180], v2=1[184]) -> 16[180]
   97:[184] PutInt(var[152], value=16[180])
  100:[180] VarText(var[80]) -> "8"[180]
  103:[196] AppendText(var[156], v1="8"[180])
  106:[180] VarText(var[156]) -> "8"[180]
  109:[196] ConvBoolFromText(v1="8"[180]) -> true[180]
  110:[181] Not(v1=true[180]) -> false[180]
  111:[181] GotoFalseWord(jump=124, if_false=false[180])
  124:[180] VarVector(var[128]) -> ref(2,1,4)=["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹"][180]
  127:[192] NewRecord(data=ref(2,1,4)[180], parent_tp=7, fld=65535) -> ref(2,9,32)[180]
  132:[192] VarRef(var[180]) -> ref(2,9,32)=false[192]
  135:[204] VarText(var[156]) -> "8"[204]
  138:[220] SetText(v1=ref(2,9,32)[192], fld=0, val="8"[204])
  141:[192] VarVector(var[128]) -> ref(2,1,4)=["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"][192]
  144:[204] VarRef(var[180]) -> ref(2,9,32)=true[204]
  147:[216] FinishRecord(data=ref(2,1,4)[192], rec=ref(2,9,32)[204], parent_tp=7, fld=65535)
  152:[192] VarVector(var[140]) -> ref(1,1,4)=[1,2,3,7,11,15][192]
  155:[204] NewRecord(data=ref(1,1,4)[192], parent_tp=17, fld=65535) -> ref(1,9,32)[192]
  160:[204] VarRef(var[192]) -> ref(1,9,32)=false[204]
  163:[216] VarInt(var[152]) -> 16[216]
  166:[220] SetInt(v1=ref(1,9,32)[204], fld=0, val=16[216])
  169:[204] VarVector(var[140]) -> ref(1,1,4)=[1,2,3,7,11,15,16][204]
  172:[216] VarRef(var[192]) -> ref(1,9,32)=true[216]
  175:[228] FinishRecord(data=ref(1,1,4)[204], rec=ref(1,9,32)[216], parent_tp=17, fld=65535)
  180:[204] FreeStack(value=0, discard=24)
  184:[180] FreeText(var[156])
  187:[180] FreeStack(value=0, discard=24)
  191:[156] GotoWord(jump=55)
   55:[156] Text()
   56:[180] ClearText(var[80])
   59:[180] ConstText(_value="123ðŸ˜ŠðŸ™ƒðŸ˜‹8") -> "123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180]
   77:[196] VarInt(var[152]) -> 16[196]
   80:[200] ConstInt(val=-2147483648) -> -2147483648[200]
   85:[204] GetTextSub(v1="123ðŸ˜ŠðŸ™ƒðŸ˜‹8"[180], from=16[196], till=-2147483648[200]) -> ""[180]
   86:[196] AppendText(var[80], v1=""[180])
   89:[180] VarInt(var[152]) -> 16[180]
   92:[184] VarText(var[80]) -> ""[184]
   95:[200] LengthText(v1=""[184]) -> 0[184]
   96:[188] AddInt(v1=16[180], v2=0[184]) -> 16[180]
   97:[184] PutInt(var[152], value=16[180])
  100:[180] VarText(var[80]) -> ""[180]
  103:[196] AppendText(var[156], v1=""[180])
  106:[180] VarText(var[156]) -> ""[180]
  109:[196] ConvBoolFromText(v1=""[180]) -> false[180]
  110:[181] Not(v1=false[180]) -> true[180]
  111:[181] GotoFalseWord(jump=124, if_false=true[180])
  114:[180] FreeText(var[156])
  117:[180] FreeStack(value=0, discard=24)
  121:[156] GotoWord(jump=194)
  194:[156] FreeStack(value=0, discard=4)
  198:[152] ClearText(var[56])
  201:[152] ConstText(_value="") -> ""[152]
  203:[168] AppendText(var[56], v1=""[152])
  206:[152] VarVector(var[128]) -> ref(2,1,4)=["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"][152]
  209:[164] FormatDatabase(var[56], val=ref(2,1,4)[152], db_tp=7, pretty=false)
  215:[152] ConstText(_value=" indexes:") -> " indexes:"[152]
  226:[168] AppendText(var[56], v1=" indexes:"[152])
  229:[152] VarVector(var[140]) -> ref(1,1,4)=[1,2,3,7,11,15,16][152]
  232:[164] FormatDatabase(var[56], val=ref(1,1,4)[152], db_tp=17, pretty=false)
  238:[152] VarText(var[56]) -> "[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[152]
  241:[168] FreeStack(value=16, discard=40)
  245:[144] AppendText(var[104], v1="[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[128])
  248:[128] VarText(var[104]) -> "[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[128]
  251:[144] ConstText(_value="["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"] indexes:[1,2,3,7,11,15,16]") -> "[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[144]
  318:[160] EqText(v1="[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[128], v2="[\"1\",\"2\",\"3\",\"ðŸ˜Š\",\"ðŸ™ƒ\",\"ðŸ˜‹\",\"8\"] indexes:[1,2,3,7,11,15,16]"[144]) -> true[128]
  319:[129] GotoFalseWord(jump=325, if_false=true[128])
  322:[128] GotoWord(jump=438)
  438:[128] FreeText(var[104])
  441:[128] FreeText(var[80])
  444:[128] VarRef(var[20]) -> ref(2,1,0)={vector:["1","2","3","ðŸ˜Š","ðŸ™ƒ","ðŸ˜‹","8"]}[128]
  447:[140] FreeRef(v1=ref(2,1,0)[128])
  448:[128] VarRef(var[8]) -> ref(1,1,0)={vector:[1,2,3,7,11,15,16]}[128]
  451:[140] FreeRef(v1=ref(1,1,0)[128])
  452:[128] FreeText(var[56])
  455:[128] FreeText(var[32])
  458:[128] Return(ret=4294967295[4], value=0, discard=124)
Finished
