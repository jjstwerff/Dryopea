pub struct Data {
    name: text,
    number: integer
}

fn data(n: text) -> vector<Data> {
    res = [];
    nr = 0;
    for ch in n {
        res += [Data {name: ch, number: nr}];
        nr += 1;
    }
    res
}

pub fn test() {
    test_value = {d = data("test"); "{d}"};
    assert(
        test_value == "[{{name:\"t\",number:0}},{{name:\"e\",number:1}},{{name:\"s\",number:2}},{{name:\"t\",number:3}}]",
        "Test failed {test_value} != \"[{{name:\"t\",number:0}},{{name:\"e\",number:1}},{{name:\"s\",number:2}},{{name:\"t\",number:3}}]\""
    );
}
Type 17:Data[8]:
    name:text[0]
    number:integer[4]

Type 18:main_vector<Data>[8]:
    vector:vector<Data>[4]

Type 19:vector<Data>[4]:Vector(17)

fn data(n:text, res:vector<ref(Data)>) -> vector<ref(Data)>["??"] {#block(1):vector<ref(Data)>["res"]
  __ref_1(1):ref(main_vector<Data>) = null;
  __work_1(1):text = "";
  OpDatabase(__ref_1(1), 18i32);
  res(0):vector<ref(Data)>["__ref_1"] = OpGetField(__ref_1(1), 4i32, 19i32);
  OpSetInt(__ref_1(1), 4i32, 0i32);
  nr(1):integer = 0i32;
  {#For block(2):void
    ch#index(2):integer = 0i32;
    loop {#For loop_3
      ch(3):text["n"] = {#for text next(4):text["n"]
        __work_1(1):text = OpGetTextSub(n(0), ch#index(2), -2147483648i32);
        ch#index(2):integer = OpAddInt(ch#index(2), OpLengthText(__work_1(1)));
        __work_1(1);
      }#for text next(4):text["n"];
      if OpNot(OpConvBoolFromText(ch(3))) {#break(5):void
        OpFreeText(ch(3));
        break(0);
      }#break(5):void else null;
      {#block(6):void
        _elm_1(6):ref(Data)["res"] = OpNewRecord(res(0), 19i32, 65535i32);
        OpSetText(_elm_1(6), 0i32, ch(3));
        OpSetInt(_elm_1(6), 4i32, nr(1));
        OpFinishRecord(res(0), _elm_1(6), 19i32, 65535i32);
        nr(1):integer = OpAddInt(nr(1), 1i32);
      }#block(6):void;
      OpFreeText(ch(3));
    }#For loop_3;
  }#For block(2):void;
  OpFreeText(__work_1(1));
  OpFreeRef(__ref_1(1));
  res(0);
}#block(1):vector<ref(Data)>["res"]

byte-code for fill_fn:data(n: text[4], res: vector<ref(Data)>[20]) [1119] -> vector<ref(Data)>["res"]
   0[32]: return-address
   0[36]: ConvRefFromNull() -> ref(reference) var=__ref_1[36]:ref(main_vector<Data>)
   1[48]: Text() var=__work_1[48]:text
   2[72]: Database(var[36], db_tp=18) type=main_vector<Data>[8]:{vector:vector<Data>[4]}[18]
   7[72]: VarRef(var[36]) -> ref(reference) type=main_vector<Data>[8]:{vector:vector<Data>[4]}[18] var=__ref_1[36]:ref(main_vector<Data>)
  10[84]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=vector<Data>[4]:Vector(17)[19]
  13[84]: PutRef(var[20], value: ref(reference))
  16[72]: VarRef(var[36]) -> ref(reference) type=main_vector<Data>[8]:{vector:vector<Data>[4]}[18] var=__ref_1[36]:ref(main_vector<Data>)
  19[84]: ConstInt(val=0) -> integer
  24[88]: SetInt(v1: ref(reference), fld=4, val: integer)
  27[72]: ConstInt(val=0) -> integer var=nr[72]:integer
  32[76]: ConstInt(val=0) -> integer var=ch#index[76]:integer
  37[80]: Text() var=ch[80]:text["n"]
  38[104]: ClearText(var[48]) var=__work_1[48]:text
  41[104]: ArgText(var[4]) -> text var=n[4]:text
  44[120]: VarInt(var[76]) -> integer var=ch#index[76]:integer
  47[124]: ConstInt(val=-2147483648) -> integer
  52[128]: GetTextSub(v1: text, from: integer, till: integer) -> text["n"]
  53[120]: AppendText(var[48], v1: text)
  56[104]: VarInt(var[76]) -> integer var=ch#index[76]:integer
  59[108]: VarText(var[48]) -> text var=__work_1[48]:text
  62[124]: LengthText(v1: text) -> integer
  63[112]: AddInt(v1: integer, v2: integer) -> integer
  64[108]: PutInt(var[76], value: integer)
  67[104]: VarText(var[48]) -> text var=__work_1[48]:text
  70[120]: AppendText(var[80], v1: text)
  73[104]: VarText(var[80]) -> text var=ch[80]:text["n"]
  76[120]: ConvBoolFromText(v1: text) -> boolean
  77[105]: Not(v1: boolean) -> boolean
  78[105]: GotoFalseWord(jump=91, if_false: boolean)
  81[104]: FreeText(var[80])
  84[104]: FreeStack(value=0, discard=24)
  88[80]: GotoWord(jump=154)
  91[104]: VarVector(var[20]) -> vector type=vector<Data>[4]:Vector(17)[19] var=res[20]:vector<ref(Data)>["__ref_1"]
  94[116]: NewRecord(data: ref(reference), parent_tp=19, fld=65535) -> ref(reference)
  99[116]: VarRef(var[104]) -> ref(reference) type=Data[8]:{name:text[0], number:integer[4]}[17] var=_elm_1[104]:ref(Data)["res"]
 102[128]: VarText(var[80]) -> text var=ch[80]:text["n"]
 105[144]: SetText(v1: ref(reference), fld=0, val: text)
 108[116]: VarRef(var[104]) -> ref(reference) type=Data[8]:{name:text[0], number:integer[4]}[17] var=_elm_1[104]:ref(Data)["res"]
 111[128]: VarInt(var[72]) -> integer var=nr[72]:integer
 114[132]: SetInt(v1: ref(reference), fld=4, val: integer)
 117[116]: VarVector(var[20]) -> vector type=vector<Data>[4]:Vector(17)[19] var=res[20]:vector<ref(Data)>["__ref_1"]
 120[128]: VarRef(var[104]) -> ref(reference) type=Data[8]:{name:text[0], number:integer[4]}[17] var=_elm_1[104]:ref(Data)["res"]
 123[140]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=19, fld=65535)
 128[116]: VarInt(var[72]) -> integer var=nr[72]:integer
 131[120]: ConstInt(val=1) -> integer
 136[124]: AddInt(v1: integer, v2: integer) -> integer
 137[120]: PutInt(var[72], value: integer)
 140[116]: FreeStack(value=0, discard=12)
 144[104]: FreeText(var[80])
 147[104]: FreeStack(value=0, discard=24)
 151[80]: GotoWord(jump=37)
 154[80]: FreeStack(value=0, discard=4)
 158[76]: FreeText(var[48])
 161[76]: VarRef(var[36]) -> ref(reference) type=main_vector<Data>[8]:{vector:vector<Data>[4]}[18] var=__ref_1[36]:ref(main_vector<Data>)
 164[88]: FreeRef(v1: ref(reference))
 165[76]: VarVector(var[20]) -> vector type=vector<Data>[4]:Vector(17)[19] var=res[20]:vector<ref(Data)>["__ref_1"]
 168[88]: Return(ret=28, value=12, discard=84) type=vector<Data>[4]:Vector(17)[19]

fn test() {#block(1):void
  __ref_1(1):vector<ref(Data)> = null;
  __work_2(1):text = "";
  __work_1(1):text = "";
  test_value(1):text = {#block(2):text
    d(2):vector<ref(Data)>["__ref_1"] = data("test", __ref_1(1));
    {#Formatted string(3):text
      __work_1(1):text = "";
      OpFormatDatabase(__work_1(1), d(2), 19i32, false);
      __work_1(1);
    }#Formatted string(3):text;
  }#block(2):text;
  if OpEqText(test_value(1), "[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}]") null else OpPanic({#Formatted string(4):text
    __work_2(1):text = "Test failed ";
    OpFormatText(__work_2(1), test_value(1), 0i32, -1i32, 32i32);
    OpAppendText(__work_2(1), " != "[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}]"");
    __work_2(1);
  }#Formatted string(4):text);
  OpFreeText(test_value(1));
  OpFreeRef(__ref_1(1));
  OpFreeText(__work_1(1));
  OpFreeText(__work_2(1));
}#block(1):void

byte-code for fill_fn:test() [1293]
   0[4]: return-address
   0[8]: ConvRefFromNull() -> ref(reference) var=__ref_1[8]:vector<ref(Data)>
   1[20]: Database(var[8], db_tp=18)
   6[20]: VarRef(var[8]) -> ref(reference)
   9[32]: ConstInt(val=0) -> integer
  14[36]: SetInt(v1: ref(reference), fld=4, val: integer)
  17[20]: CreateRef(var[8]) -> ref(reference)
  20[32]: ConstInt(val=4) -> integer
  25[36]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  30[20]: Text() var=__work_2[20]:text
  31[44]: Text() var=__work_1[44]:text
  32[68]: Text() var=test_value[68]:text
  33[92]: ConstText(_value="test") -> text var=d[92]:vector<ref(Data)>["__ref_1"]
  39[108]: VarVector(var[8]) -> vector type=vector<Data>[4]:Vector(17)[19] var=__ref_1[8]:vector<ref(Data)>
  42[120]: Call(size=0, to=1119)
  49[104]: ClearText(var[44]) var=__work_1[44]:text
  52[104]: ConstText(_value="") -> text
  54[120]: AppendText(var[44], v1: text)
  57[104]: VarVector(var[92]) -> vector type=vector<Data>[4]:Vector(17)[19] var=d[92]:vector<ref(Data)>["__ref_1"]
  60[116]: FormatDatabase(var[44], val: ref(reference), db_tp=19, pretty=false)
  66[104]: VarText(var[44]) -> text var=__work_1[44]:text
  69[120]: FreeStack(value=16, discard=28)
  73[108]: AppendText(var[68], v1: text)
  76[92]: VarText(var[68]) -> text var=test_value[68]:text
  79[108]: ConstText(_value="[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}]") -> text
 162[124]: EqText(v1: text, v2: text) -> boolean
 163[93]: GotoFalseWord(jump=169, if_false: boolean)
 166[92]: GotoWord(jump=298)
 169[92]: ClearText(var[20]) var=__work_2[20]:text
 172[92]: ConstText(_value="Test failed ") -> text
 186[108]: AppendText(var[20], v1: text)
 189[92]: VarText(var[68]) -> text var=test_value[68]:text
 192[108]: ConstInt(val=0) -> integer
 197[112]: FormatText(var[20], val: text, width: integer, dir=-1, token=32)
 202[92]: ConstText(_value=" != "[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}]"") -> text
 291[108]: AppendText(var[20], v1: text)
 294[92]: VarText(var[20]) -> text var=__work_2[20]:text
 297[108]: Panic(message: text)
 298[92]: FreeText(var[68])
 301[92]: VarVector(var[8]) -> vector type=vector<Data>[4]:Vector(17)[19] var=__ref_1[8]:vector<ref(Data)>
 304[104]: FreeRef(v1: ref(reference))
 305[92]: FreeText(var[44])
 308[92]: FreeText(var[20])
 311[92]: Return(ret=0, value=0, discard=88)

Execute test:
    0:[8] ConvRefFromNull() -> ref(1,0,0)[8]
    1:[20] Database(var[8], db_tp=18)
    6:[20] VarRef(var[8]) -> ref(1,1,0)[20]
    9:[32] ConstInt(val=0) -> 0[32]
   14:[36] SetInt(v1=ref(1,1,0)[20], fld=4, val=0[32])
   17:[20] CreateRef(var[8]) -> ref(0,1,8)[20]
   20:[32] ConstInt(val=4) -> 4[32]
   25:[36] SetByte(v1=ref(0,1,8)[20], fld=4, min=0, val=4[32])
   30:[20] Text()
   31:[44] Text()
   32:[68] Text()
   33:[92] ConstText(_value="test") -> "test"[92]
   39:[108] VarVector(var[8]) -> ref(1,1,4)=[][108]
   42:[120] Call(size=0, to=1119)
 1119:[124] ConvRefFromNull() -> ref(2,0,0)[124]
 1120:[136] Text()
 1121:[160] Database(var[124], db_tp=18)
 1126:[160] VarRef(var[124]) -> ref(2,1,0)={}[160]
 1129:[172] GetField(v1=ref(2,1,0)[160], fld=4) -> ref(2,1,4)=[][160]
 1132:[172] PutRef(var[108], value=ref(2,1,4)[160])
 1135:[160] VarRef(var[124]) -> ref(2,1,0)={}[160]
 1138:[172] ConstInt(val=0) -> 0[172]
 1143:[176] SetInt(v1=ref(2,1,0)[160], fld=4, val=0[172])
 1146:[160] ConstInt(val=0) -> 0[160]
 1151:[164] ConstInt(val=0) -> 0[164]
 1156:[168] Text()
 1157:[192] ClearText(var[136])
 1160:[192] ArgText(var[92]) -> "test"[192]
 1163:[208] VarInt(var[164]) -> 0[208]
 1166:[212] ConstInt(val=-2147483648) -> -2147483648[212]
 1171:[216] GetTextSub(v1="test"[192], from=0[208], till=-2147483648[212]) -> "t"[192]
 1172:[208] AppendText(var[136], v1="t"[192])
 1175:[192] VarInt(var[164]) -> 0[192]
 1178:[196] VarText(var[136]) -> "t"[196]
 1181:[212] LengthText(v1="t"[196]) -> 1[196]
 1182:[200] AddInt(v1=0[192], v2=1[196]) -> 1[192]
 1183:[196] PutInt(var[164], value=1[192])
 1186:[192] VarText(var[136]) -> "t"[192]
 1189:[208] AppendText(var[168], v1="t"[192])
 1192:[192] VarText(var[168]) -> "t"[192]
 1195:[208] ConvBoolFromText(v1="t"[192]) -> true[192]
 1196:[193] Not(v1=true[192]) -> false[192]
 1197:[193] GotoFalseWord(jump=1210, if_false=false[192])
 1210:[192] VarVector(var[108]) -> ref(2,1,4)=[][192]
 1213:[204] NewRecord(data=ref(2,1,4)[192], parent_tp=19, fld=65535) -> ref(2,9,8)[192]
 1218:[204] VarRef(var[192]) -> ref(2,9,8)={}[204]
 1221:[216] VarText(var[168]) -> "t"[216]
 1224:[232] SetText(v1=ref(2,9,8)[204], fld=0, val="t"[216])
 1227:[204] VarRef(var[192]) -> ref(2,9,8)={name:"t"}[204]
 1230:[216] VarInt(var[160]) -> 0[216]
 1233:[220] SetInt(v1=ref(2,9,8)[204], fld=4, val=0[216])
 1236:[204] VarVector(var[108]) -> ref(2,1,4)=[{name:"t",number:0}][204]
 1239:[216] VarRef(var[192]) -> ref(2,9,8)={name:"t",number:0}[216]
 1242:[228] FinishRecord(data=ref(2,1,4)[204], rec=ref(2,9,8)[216], parent_tp=19, fld=65535)
 1247:[204] VarInt(var[160]) -> 0[204]
 1250:[208] ConstInt(val=1) -> 1[208]
 1255:[212] AddInt(v1=0[204], v2=1[208]) -> 1[204]
 1256:[208] PutInt(var[160], value=1[204])
 1259:[204] FreeStack(value=0, discard=12)
 1263:[192] FreeText(var[168])
 1266:[192] FreeStack(value=0, discard=24)
 1270:[168] GotoWord(jump=1156)
 1156:[168] Text()
 1157:[192] ClearText(var[136])
 1160:[192] ArgText(var[92]) -> "test"[192]
 1163:[208] VarInt(var[164]) -> 1[208]
 1166:[212] ConstInt(val=-2147483648) -> -2147483648[212]
 1171:[216] GetTextSub(v1="test"[192], from=1[208], till=-2147483648[212]) -> "e"[192]
 1172:[208] AppendText(var[136], v1="e"[192])
 1175:[192] VarInt(var[164]) -> 1[192]
 1178:[196] VarText(var[136]) -> "e"[196]
 1181:[212] LengthText(v1="e"[196]) -> 1[196]
 1182:[200] AddInt(v1=1[192], v2=1[196]) -> 2[192]
 1183:[196] PutInt(var[164], value=2[192])
 1186:[192] VarText(var[136]) -> "e"[192]
 1189:[208] AppendText(var[168], v1="e"[192])
 1192:[192] VarText(var[168]) -> "e"[192]
 1195:[208] ConvBoolFromText(v1="e"[192]) -> true[192]
 1196:[193] Not(v1=true[192]) -> false[192]
 1197:[193] GotoFalseWord(jump=1210, if_false=false[192])
 1210:[192] VarVector(var[108]) -> ref(2,1,4)=[{name:"t",number:0}][192]
 1213:[204] NewRecord(data=ref(2,1,4)[192], parent_tp=19, fld=65535) -> ref(2,9,16)[192]
 1218:[204] VarRef(var[192]) -> ref(2,9,16)={}[204]
 1221:[216] VarText(var[168]) -> "e"[216]
 1224:[232] SetText(v1=ref(2,9,16)[204], fld=0, val="e"[216])
 1227:[204] VarRef(var[192]) -> ref(2,9,16)={name:"e"}[204]
 1230:[216] VarInt(var[160]) -> 1[216]
 1233:[220] SetInt(v1=ref(2,9,16)[204], fld=4, val=1[216])
 1236:[204] VarVector(var[108]) -> ref(2,1,4)=[{name:"t",number:0},{name:"e",number:1}][204]
 1239:[216] VarRef(var[192]) -> ref(2,9,16)={name:"e",number:1}[216]
 1242:[228] FinishRecord(data=ref(2,1,4)[204], rec=ref(2,9,16)[216], parent_tp=19, fld=65535)
 1247:[204] VarInt(var[160]) -> 1[204]
 1250:[208] ConstInt(val=1) -> 1[208]
 1255:[212] AddInt(v1=1[204], v2=1[208]) -> 2[204]
 1256:[208] PutInt(var[160], value=2[204])
 1259:[204] FreeStack(value=0, discard=12)
 1263:[192] FreeText(var[168])
 1266:[192] FreeStack(value=0, discard=24)
 1270:[168] GotoWord(jump=1156)
 1156:[168] Text()
 1157:[192] ClearText(var[136])
 1160:[192] ArgText(var[92]) -> "test"[192]
 1163:[208] VarInt(var[164]) -> 2[208]
 1166:[212] ConstInt(val=-2147483648) -> -2147483648[212]
 1171:[216] GetTextSub(v1="test"[192], from=2[208], till=-2147483648[212]) -> "s"[192]
 1172:[208] AppendText(var[136], v1="s"[192])
 1175:[192] VarInt(var[164]) -> 2[192]
 1178:[196] VarText(var[136]) -> "s"[196]
 1181:[212] LengthText(v1="s"[196]) -> 1[196]
 1182:[200] AddInt(v1=2[192], v2=1[196]) -> 3[192]
 1183:[196] PutInt(var[164], value=3[192])
 1186:[192] VarText(var[136]) -> "s"[192]
 1189:[208] AppendText(var[168], v1="s"[192])
 1192:[192] VarText(var[168]) -> "s"[192]
 1195:[208] ConvBoolFromText(v1="s"[192]) -> true[192]
 1196:[193] Not(v1=true[192]) -> false[192]
 1197:[193] GotoFalseWord(jump=1210, if_false=false[192])
 1210:[192] VarVector(var[108]) -> ref(2,1,4)=[{name:"t",number:0},{name:"e",number:1}][192]
 1213:[204] NewRecord(data=ref(2,1,4)[192], parent_tp=19, fld=65535) -> ref(2,9,24)[192]
 1218:[204] VarRef(var[192]) -> ref(2,9,24)={}[204]
 1221:[216] VarText(var[168]) -> "s"[216]
 1224:[232] SetText(v1=ref(2,9,24)[204], fld=0, val="s"[216])
 1227:[204] VarRef(var[192]) -> ref(2,9,24)={name:"s"}[204]
 1230:[216] VarInt(var[160]) -> 2[216]
 1233:[220] SetInt(v1=ref(2,9,24)[204], fld=4, val=2[216])
 1236:[204] VarVector(var[108]) -> ref(2,1,4)=[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2}][204]
 1239:[216] VarRef(var[192]) -> ref(2,9,24)={name:"s",number:2}[216]
 1242:[228] FinishRecord(data=ref(2,1,4)[204], rec=ref(2,9,24)[216], parent_tp=19, fld=65535)
 1247:[204] VarInt(var[160]) -> 2[204]
 1250:[208] ConstInt(val=1) -> 1[208]
 1255:[212] AddInt(v1=2[204], v2=1[208]) -> 3[204]
 1256:[208] PutInt(var[160], value=3[204])
 1259:[204] FreeStack(value=0, discard=12)
 1263:[192] FreeText(var[168])
 1266:[192] FreeStack(value=0, discard=24)
 1270:[168] GotoWord(jump=1156)
 1156:[168] Text()
 1157:[192] ClearText(var[136])
 1160:[192] ArgText(var[92]) -> "test"[192]
 1163:[208] VarInt(var[164]) -> 3[208]
 1166:[212] ConstInt(val=-2147483648) -> -2147483648[212]
 1171:[216] GetTextSub(v1="test"[192], from=3[208], till=-2147483648[212]) -> "t"[192]
 1172:[208] AppendText(var[136], v1="t"[192])
 1175:[192] VarInt(var[164]) -> 3[192]
 1178:[196] VarText(var[136]) -> "t"[196]
 1181:[212] LengthText(v1="t"[196]) -> 1[196]
 1182:[200] AddInt(v1=3[192], v2=1[196]) -> 4[192]
 1183:[196] PutInt(var[164], value=4[192])
 1186:[192] VarText(var[136]) -> "t"[192]
 1189:[208] AppendText(var[168], v1="t"[192])
 1192:[192] VarText(var[168]) -> "t"[192]
 1195:[208] ConvBoolFromText(v1="t"[192]) -> true[192]
 1196:[193] Not(v1=true[192]) -> false[192]
 1197:[193] GotoFalseWord(jump=1210, if_false=false[192])
 1210:[192] VarVector(var[108]) -> ref(2,1,4)=[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2}][192]
 1213:[204] NewRecord(data=ref(2,1,4)[192], parent_tp=19, fld=65535) -> ref(2,9,32)[192]
 1218:[204] VarRef(var[192]) -> ref(2,9,32)={}[204]
 1221:[216] VarText(var[168]) -> "t"[216]
 1224:[232] SetText(v1=ref(2,9,32)[204], fld=0, val="t"[216])
 1227:[204] VarRef(var[192]) -> ref(2,9,32)={name:"t"}[204]
 1230:[216] VarInt(var[160]) -> 3[216]
 1233:[220] SetInt(v1=ref(2,9,32)[204], fld=4, val=3[216])
 1236:[204] VarVector(var[108]) -> ref(2,1,4)=[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}][204]
 1239:[216] VarRef(var[192]) -> ref(2,9,32)={name:"t",number:3}[216]
 1242:[228] FinishRecord(data=ref(2,1,4)[204], rec=ref(2,9,32)[216], parent_tp=19, fld=65535)
 1247:[204] VarInt(var[160]) -> 3[204]
 1250:[208] ConstInt(val=1) -> 1[208]
 1255:[212] AddInt(v1=3[204], v2=1[208]) -> 4[204]
 1256:[208] PutInt(var[160], value=4[204])
 1259:[204] FreeStack(value=0, discard=12)
 1263:[192] FreeText(var[168])
 1266:[192] FreeStack(value=0, discard=24)
 1270:[168] GotoWord(jump=1156)
 1156:[168] Text()
 1157:[192] ClearText(var[136])
 1160:[192] ArgText(var[92]) -> "test"[192]
 1163:[208] VarInt(var[164]) -> 4[208]
 1166:[212] ConstInt(val=-2147483648) -> -2147483648[212]
 1171:[216] GetTextSub(v1="test"[192], from=4[208], till=-2147483648[212]) -> ""[192]
 1172:[208] AppendText(var[136], v1=""[192])
 1175:[192] VarInt(var[164]) -> 4[192]
 1178:[196] VarText(var[136]) -> ""[196]
 1181:[212] LengthText(v1=""[196]) -> 0[196]
 1182:[200] AddInt(v1=4[192], v2=0[196]) -> 4[192]
 1183:[196] PutInt(var[164], value=4[192])
 1186:[192] VarText(var[136]) -> ""[192]
 1189:[208] AppendText(var[168], v1=""[192])
 1192:[192] VarText(var[168]) -> ""[192]
 1195:[208] ConvBoolFromText(v1=""[192]) -> false[192]
 1196:[193] Not(v1=false[192]) -> true[192]
 1197:[193] GotoFalseWord(jump=1210, if_false=true[192])
 1200:[192] FreeText(var[168])
 1203:[192] FreeStack(value=0, discard=24)
 1207:[168] GotoWord(jump=1273)
 1273:[168] FreeStack(value=0, discard=4)
 1277:[164] FreeText(var[136])
 1280:[164] VarRef(var[124]) -> ref(2,1,0)={vector:[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}]}[164]
 1283:[176] FreeRef(v1=ref(2,1,0)[164])
 1284:[164] VarVector(var[108]) -> ref(2,1,4)=[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}][164]
 1287:[176] Return(ret=1342[120], value=12, discard=84) -> ref(2,1,4)=[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}][92]
   49:[104] ClearText(var[44])
   52:[104] ConstText(_value="") -> ""[104]
   54:[120] AppendText(var[44], v1=""[104])
   57:[104] VarVector(var[92]) -> ref(2,1,4)=[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}][104]
   60:[116] FormatDatabase(var[44], val=ref(2,1,4)[104], db_tp=19, pretty=false)
   66:[104] VarText(var[44]) -> "[{name:\"t\",number:0},{name:\"e\",number:1},{name:\"s\",number:2},{name:\"t\",number:3}]"[104]
   69:[120] FreeStack(value=16, discard=28)
   73:[108] AppendText(var[68], v1="[{name:\"t\",number:0},{name:\"e\",number:1},{name:\"s\",number:2},{name:\"t\",number:3}]"[92])
   76:[92] VarText(var[68]) -> "[{name:\"t\",number:0},{name:\"e\",number:1},{name:\"s\",number:2},{name:\"t\",number:3}]"[92]
   79:[108] ConstText(_value="[{name:"t",number:0},{name:"e",number:1},{name:"s",number:2},{name:"t",number:3}]") -> "[{name:\"t\",number:0},{name:\"e\",number:1},{name:\"s\",number:2},{name:\"t\",number:3}]"[108]
  162:[124] EqText(v1="[{name:\"t\",number:0},{name:\"e\",number:1},{name:\"s\",number:2},{name:\"t\",number:3}]"[92], v2="[{name:\"t\",number:0},{name:\"e\",number:1},{name:\"s\",number:2},{name:\"t\",number:3}]"[108]) -> true[92]
  163:[93] GotoFalseWord(jump=169, if_false=true[92])
  166:[92] GotoWord(jump=298)
  298:[92] FreeText(var[68])
  301:[92] VarVector(var[8]) -> ref(1,1,4)=[][92]
  304:[104] FreeRef(v1=ref(1,1,4)[92])
  305:[92] FreeText(var[44])
  308:[92] FreeText(var[20])
  311:[92] Return(ret=4294967295[4], value=0, discard=88)
Finished
