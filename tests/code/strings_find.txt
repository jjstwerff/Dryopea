pub fn test() {
    test_value = {v = "something"; v.find("t" + "h")};
    assert(
        test_value == 4,
        "Test failed {test_value} != 4"
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:integer = {#2 block
    v:text = "something";
    _tp_text_find(v, {#3 AddText
      OpClearText(__work_1);
      OpAppendText(__work_1, "t");
      OpAppendText(__work_1, "h");
      __work_1;
    }#3:text["__work_1"]);
  }#2:integer;
  if OpEqInt(test_value, 4i32) null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatInt(__work_2, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_2, " != 4");
    __work_2;
  }#4:text);
}#1

byte-code for find:test() [1176]
   0[0]: return-address
   0[4]: Text() var=__work_2[4]:text in 1
   1[28]: Text() var=__work_1[28]:text in 1
   2[52]: Text() var=v[52]:text in 2
   3[76]: ConstText(_value="something") -> text
  14[92]: AppendText(var[52], v1: text)
  17[76]: VarText(var[52]) -> text var=v[52]:text in 2
  20[92]: ClearText(var[28])
  23[92]: ConstText(_value="t") -> text
  26[108]: AppendText(var[28], v1: text)
  29[92]: ConstText(_value="h") -> text
  32[108]: AppendText(var[28], v1: text)
  35[92]: VarText(var[28]) -> text var=__work_1[28]:text in 1
  38[108]: StaticCall(_tp_text_find)
  41[80]: FreeText(var[52])
  44[80]: FreeStack(value=4, discard=28) type=integer[4]:Base[0]
  48[56]: VarInt(var[52]) -> integer var=test_value[52]:integer in 1
  51[60]: ConstInt(val=4) -> integer
  56[64]: EqInt(v1: integer, v2: integer) -> boolean
  57[57]: GotoFalseWord(jump=63, if_false: boolean)
  60[56]: GotoWord(jump=112)
  63[56]: ClearText(var[4]) var=__work_2[4]:text in 1
  66[56]: ConstText(_value="Test failed ") -> text
  80[72]: AppendText(var[4], v1: text)
  83[56]: VarInt(var[52]) -> integer var=test_value[52]:integer in 1
  86[60]: ConstInt(val=0) -> integer
  91[64]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
  98[56]: ConstText(_value=" != 4") -> text
 105[72]: AppendText(var[4], v1: text)
 108[56]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 111[72]: Panic(message: text)
 112[56]: FreeText(var[28])
 115[56]: FreeText(var[4])
 118[56]: Return(ret=0, value=0, discard=56)

