pub fn test() {
    test_value = {v=[1, 2, 4, 8];
c = 0;
for e in v[rev(0..=3)] {
  c = c * 10 + e;
}
c};
    assert(
        test_value == 8421,
        "Test failed {test_value} != 8421"
    );
}
Type 12:vector<integer>[4]:Vector(0)

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __ref_1:main_vector<integer> = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    v:vector<integer> = {#3 vector
      OpDatabase(__ref_1, 13i32);
      _vec_2:vector<integer> = OpGetField(__ref_1, 4i32, 65535i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 4i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 8i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _vec_2;
    }#3:vector<integer>;
    c:integer = 0i32;
    {#4 for
      _index_3:integer = OpConvIntFromNull();
      loop {#5 for loop
        e:integer = {#6 for next
          OpGetInt(OpGetVector(v, 4i32, {#7 for next block
            _index_3:integer = if OpNot(OpConvBoolFromInt(_index_3)) 3i32 else OpMinInt(_index_3, 1i32);
            if OpLtInt(_index_3, 0i32) break(0) else null;
            _index_3;
          }#7:integer), 0i32);
        }#6:integer;
        {#8 block
          c:integer = OpAddInt(OpMulInt(c, 10i32), e);
        }#8;
      }#5;
    }#4;
    c;
  }#2:integer;
  if OpEqInt(test_value, 8421i32) null else OpPanic({#9 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 8421");
    __work_1;
  }#9:text);
}#1

byte-code for iter_rev_vector:test()
 691[0]: return-address
 691[4]: ConvRefFromNull() -> reference
 692[16]: Text()
 693[40]: Database(var[4], db_tp=13) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 698[40]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 701[52]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 704[52]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 707[64]: ConstInt(val=0) -> integer
 712[68]: SetInt(v1: reference, fld=4, val: integer)
 715[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 718[64]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 723[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 726[76]: ConstInt(val=1) -> integer
 731[80]: SetInt(v1: reference, fld=0, val: integer)
 734[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 737[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 740[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 745[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 748[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 753[76]: PutRef(var[52], value: reference)
 756[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 759[76]: ConstInt(val=2) -> integer
 764[80]: SetInt(v1: reference, fld=0, val: integer)
 767[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 770[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 773[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 778[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 781[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 786[76]: PutRef(var[52], value: reference)
 789[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 792[76]: ConstInt(val=4) -> integer
 797[80]: SetInt(v1: reference, fld=0, val: integer)
 800[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 803[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 806[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 811[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 814[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 819[76]: PutRef(var[52], value: reference)
 822[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 825[76]: ConstInt(val=8) -> integer
 830[80]: SetInt(v1: reference, fld=0, val: integer)
 833[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 836[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 839[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 844[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 847[76]: FreeStack(value=12, discard=36) type=Variable[12]:{name:text[4], value:text[8]}[6]
 851[52]: ConstInt(val=0) -> integer
 856[56]: ConvIntFromNull() -> integer
 857[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 860[72]: VarInt(var[56]) -> integer
 863[76]: ConvBoolFromInt(v1: integer) -> boolean
 864[73]: Not(v1: boolean) -> boolean
 865[73]: GotoFalseWord(jump=876, if_false: boolean)
 868[72]: ConstInt(val=3) -> integer
 873[76]: GotoWord(jump=885)
 876[72]: VarInt(var[56]) -> integer
 879[76]: ConstInt(val=1) -> integer
 884[80]: MinInt(v1: integer, v2: integer) -> integer
 885[76]: PutInt(var[56], value: integer)
 888[72]: VarInt(var[56]) -> integer
 891[76]: ConstInt(val=0) -> integer
 896[80]: LtInt(v1: integer, v2: integer) -> boolean
 897[73]: GotoFalseWord(jump=907, if_false: boolean)
 900[72]: FreeStack(value=0, discard=12)
 904[60]: GotoWord(jump=939)
 907[72]: VarInt(var[56]) -> integer
 910[76]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 913[72]: GetInt(v1: reference, fld=0) -> integer
 916[64]: VarInt(var[52]) -> integer
 919[68]: ConstInt(val=10) -> integer
 924[72]: MulInt(v1: integer, v2: integer) -> integer
 925[68]: VarInt(var[60]) -> integer
 928[72]: AddInt(v1: integer, v2: integer) -> integer
 929[68]: PutInt(var[52], value: integer)
 932[64]: FreeStack(value=0, discard=4)
 936[60]: GotoWord(jump=857)
 939[60]: FreeStack(value=0, discard=4)
 943[56]: VarInt(var[52]) -> integer
 946[60]: FreeStack(value=4, discard=20) type=integer[4]:Base[0]
 950[44]: VarInt(var[40]) -> integer
 953[48]: ConstInt(val=8421) -> integer
 958[52]: EqInt(v1: integer, v2: integer) -> boolean
 959[45]: GotoFalseWord(jump=965, if_false: boolean)
 962[44]: GotoWord(jump=1017)
 965[44]: ClearText(var[16])
 968[44]: ConstText(_value="Test failed ") -> text
 982[60]: AppendText(var[16], v1: text)
 985[44]: VarInt(var[40]) -> integer
 988[48]: ConstInt(val=0) -> integer
 993[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1000[44]: ConstText(_value=" != 8421") -> text
1010[60]: AppendText(var[16], v1: text)
1013[44]: VarText(var[16]) -> text
1016[60]: Panic(message: text)
1017[44]: FreeText(var[16])
1020[44]: Return(ret=0, value=0, discard=44)

Execute test:
  691:[8] ConvRefFromNull() -> ref(65535,0,0)[8]
  692:[20] Text()
  693:[44] Database(var[8], db_tp=13)
  698:[44] VarRef(var[8]) -> ref(1,1,0)={}[44]
  701:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  704:[56] VarRef(var[8]) -> ref(1,1,0)={}[56]
  707:[68] ConstInt(val=0) -> 0[68]
  712:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  715:[56] VarVector(var[44]) -> ref(1,1,4)=[][56]
  718:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=12, fld=65535) -> ref(1,9,8)[56]
  723:[68] VarRef(var[56]) -> ref(1,9,8)=false[68]
  726:[80] ConstInt(val=1) -> 1[80]
  731:[84] SetInt(v1=ref(1,9,8)[68], fld=0, val=1[80])
  734:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  737:[80] VarRef(var[56]) -> ref(1,9,8)=true[80]
  740:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,8)[80], parent_tp=12, fld=65535)
  745:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  748:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,12)[68]
  753:[80] PutRef(var[56], value=ref(1,9,12)[68])
  756:[68] VarRef(var[56]) -> ref(1,9,12)=false[68]
  759:[80] ConstInt(val=2) -> 2[80]
  764:[84] SetInt(v1=ref(1,9,12)[68], fld=0, val=2[80])
  767:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  770:[80] VarRef(var[56]) -> ref(1,9,12)=true[80]
  773:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,12)[80], parent_tp=12, fld=65535)
  778:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  781:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,16)[68]
  786:[80] PutRef(var[56], value=ref(1,9,16)[68])
  789:[68] VarRef(var[56]) -> ref(1,9,16)=false[68]
  792:[80] ConstInt(val=4) -> 4[80]
  797:[84] SetInt(v1=ref(1,9,16)[68], fld=0, val=4[80])
  800:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4][68]
  803:[80] VarRef(var[56]) -> ref(1,9,16)=true[80]
  806:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,16)[80], parent_tp=12, fld=65535)
  811:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4][68]
  814:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,20)[68]
  819:[80] PutRef(var[56], value=ref(1,9,20)[68])
  822:[68] VarRef(var[56]) -> ref(1,9,20)=false[68]
  825:[80] ConstInt(val=8) -> 8[80]
  830:[84] SetInt(v1=ref(1,9,20)[68], fld=0, val=8[80])
  833:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][68]
  836:[80] VarRef(var[56]) -> ref(1,9,20)=true[80]
  839:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,20)[80], parent_tp=12, fld=65535)
  844:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][68]
  847:[80] FreeStack(value=12, discard=36)
  851:[56] ConstInt(val=0) -> 0[56]
  856:[60] ConvIntFromNull() -> -2147483648[60]
  857:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][64]
  860:[76] VarInt(var[60]) -> -2147483648[76]
  863:[80] ConvBoolFromInt(v1=-2147483648[76]) -> false[76]
  864:[77] Not(v1=false[76]) -> true[76]
  865:[77] GotoFalseWord(jump=876, if_false=true[76])
  868:[76] ConstInt(val=3) -> 3[76]
  873:[80] GotoWord(jump=885)
  885:[80] PutInt(var[60], value=3[76])
  888:[76] VarInt(var[60]) -> 3[76]
  891:[80] ConstInt(val=0) -> 0[80]
  896:[84] LtInt(v1=3[76], v2=0[80]) -> false[76]
  897:[77] GotoFalseWord(jump=907, if_false=false[76])
  907:[76] VarInt(var[60]) -> 3[76]
  910:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=3[76]) -> ref(1,9,20)=8[64]
  913:[76] GetInt(v1=ref(1,9,20)[64], fld=0) -> 8[64]
  916:[68] VarInt(var[56]) -> 0[68]
  919:[72] ConstInt(val=10) -> 10[72]
  924:[76] MulInt(v1=0[68], v2=10[72]) -> 0[68]
  925:[72] VarInt(var[64]) -> 8[72]
  928:[76] AddInt(v1=0[68], v2=8[72]) -> 8[68]
  929:[72] PutInt(var[56], value=8[68])
  932:[68] FreeStack(value=0, discard=4)
  936:[64] GotoWord(jump=857)
  857:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][64]
  860:[76] VarInt(var[60]) -> 3[76]
  863:[80] ConvBoolFromInt(v1=3[76]) -> true[76]
  864:[77] Not(v1=true[76]) -> false[76]
  865:[77] GotoFalseWord(jump=876, if_false=false[76])
  876:[76] VarInt(var[60]) -> 3[76]
  879:[80] ConstInt(val=1) -> 1[80]
  884:[84] MinInt(v1=3[76], v2=1[80]) -> 2[76]
  885:[80] PutInt(var[60], value=2[76])
  888:[76] VarInt(var[60]) -> 2[76]
  891:[80] ConstInt(val=0) -> 0[80]
  896:[84] LtInt(v1=2[76], v2=0[80]) -> false[76]
  897:[77] GotoFalseWord(jump=907, if_false=false[76])
  907:[76] VarInt(var[60]) -> 2[76]
  910:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=2[76]) -> ref(1,9,16)=4[64]
  913:[76] GetInt(v1=ref(1,9,16)[64], fld=0) -> 4[64]
  916:[68] VarInt(var[56]) -> 8[68]
  919:[72] ConstInt(val=10) -> 10[72]
  924:[76] MulInt(v1=8[68], v2=10[72]) -> 80[68]
  925:[72] VarInt(var[64]) -> 4[72]
  928:[76] AddInt(v1=80[68], v2=4[72]) -> 84[68]
  929:[72] PutInt(var[56], value=84[68])
  932:[68] FreeStack(value=0, discard=4)
  936:[64] GotoWord(jump=857)
  857:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][64]
  860:[76] VarInt(var[60]) -> 2[76]
  863:[80] ConvBoolFromInt(v1=2[76]) -> true[76]
  864:[77] Not(v1=true[76]) -> false[76]
  865:[77] GotoFalseWord(jump=876, if_false=false[76])
  876:[76] VarInt(var[60]) -> 2[76]
  879:[80] ConstInt(val=1) -> 1[80]
  884:[84] MinInt(v1=2[76], v2=1[80]) -> 1[76]
  885:[80] PutInt(var[60], value=1[76])
  888:[76] VarInt(var[60]) -> 1[76]
  891:[80] ConstInt(val=0) -> 0[80]
  896:[84] LtInt(v1=1[76], v2=0[80]) -> false[76]
  897:[77] GotoFalseWord(jump=907, if_false=false[76])
  907:[76] VarInt(var[60]) -> 1[76]
  910:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=1[76]) -> ref(1,9,12)=2[64]
  913:[76] GetInt(v1=ref(1,9,12)[64], fld=0) -> 2[64]
  916:[68] VarInt(var[56]) -> 84[68]
  919:[72] ConstInt(val=10) -> 10[72]
  924:[76] MulInt(v1=84[68], v2=10[72]) -> 840[68]
  925:[72] VarInt(var[64]) -> 2[72]
  928:[76] AddInt(v1=840[68], v2=2[72]) -> 842[68]
  929:[72] PutInt(var[56], value=842[68])
  932:[68] FreeStack(value=0, discard=4)
  936:[64] GotoWord(jump=857)
  857:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][64]
  860:[76] VarInt(var[60]) -> 1[76]
  863:[80] ConvBoolFromInt(v1=1[76]) -> true[76]
  864:[77] Not(v1=true[76]) -> false[76]
  865:[77] GotoFalseWord(jump=876, if_false=false[76])
  876:[76] VarInt(var[60]) -> 1[76]
  879:[80] ConstInt(val=1) -> 1[80]
  884:[84] MinInt(v1=1[76], v2=1[80]) -> 0[76]
  885:[80] PutInt(var[60], value=0[76])
  888:[76] VarInt(var[60]) -> 0[76]
  891:[80] ConstInt(val=0) -> 0[80]
  896:[84] LtInt(v1=0[76], v2=0[80]) -> false[76]
  897:[77] GotoFalseWord(jump=907, if_false=false[76])
  907:[76] VarInt(var[60]) -> 0[76]
  910:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=0[76]) -> ref(1,9,8)=1[64]
  913:[76] GetInt(v1=ref(1,9,8)[64], fld=0) -> 1[64]
  916:[68] VarInt(var[56]) -> 842[68]
  919:[72] ConstInt(val=10) -> 10[72]
  924:[76] MulInt(v1=842[68], v2=10[72]) -> 8420[68]
  925:[72] VarInt(var[64]) -> 1[72]
  928:[76] AddInt(v1=8420[68], v2=1[72]) -> 8421[68]
  929:[72] PutInt(var[56], value=8421[68])
  932:[68] FreeStack(value=0, discard=4)
  936:[64] GotoWord(jump=857)
  857:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][64]
  860:[76] VarInt(var[60]) -> 0[76]
  863:[80] ConvBoolFromInt(v1=0[76]) -> true[76]
  864:[77] Not(v1=true[76]) -> false[76]
  865:[77] GotoFalseWord(jump=876, if_false=false[76])
  876:[76] VarInt(var[60]) -> 0[76]
  879:[80] ConstInt(val=1) -> 1[80]
  884:[84] MinInt(v1=0[76], v2=1[80]) -> -1[76]
  885:[80] PutInt(var[60], value=-1[76])
  888:[76] VarInt(var[60]) -> -1[76]
  891:[80] ConstInt(val=0) -> 0[80]
  896:[84] LtInt(v1=-1[76], v2=0[80]) -> true[76]
  897:[77] GotoFalseWord(jump=907, if_false=true[76])
  900:[76] FreeStack(value=0, discard=12)
  904:[64] GotoWord(jump=939)
  939:[64] FreeStack(value=0, discard=4)
  943:[60] VarInt(var[56]) -> 8421[60]
  946:[64] FreeStack(value=4, discard=20)
  950:[48] VarInt(var[44]) -> 8421[48]
  953:[52] ConstInt(val=8421) -> 8421[52]
  958:[56] EqInt(v1=8421[48], v2=8421[52]) -> true[48]
  959:[49] GotoFalseWord(jump=965, if_false=true[48])
  962:[48] GotoWord(jump=1017)
 1017:[48] FreeText(var[20])
 1020:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
