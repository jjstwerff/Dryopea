Test code:
pub fn test() {
    test_value = {v=[1, 2, 4, 8];
c = 0;
for e in v[rev(0..=3)] {
  c = c * 10 + e;
}
c};
    assert(
        test_value == 8421,
        "Test failed {test_value} != 8421"
    );
}

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

Type 14:vector<integer>[4]:Vector(0)

fn test {
  let test_value = {
    let v = {
      let db_16 = OpDatabase(4i32, 13i32);
      let vec_15 = OpGetField(db_16, 4i32, 14i32);
      OpSetInt(db_16, 4i32, 0i32);
      let elm_14 = OpNewRecord(vec_15, 14i32, 65535i32);
      OpSetInt(elm_14, 0i32, 1i32);
      OpFinishRecord(vec_15, elm_14, 14i32, 65535i32);
      elm_14 = OpNewRecord(vec_15, 14i32, 65535i32);
      OpSetInt(elm_14, 0i32, 2i32);
      OpFinishRecord(vec_15, elm_14, 14i32, 65535i32);
      elm_14 = OpNewRecord(vec_15, 14i32, 65535i32);
      OpSetInt(elm_14, 0i32, 4i32);
      OpFinishRecord(vec_15, elm_14, 14i32, 65535i32);
      elm_14 = OpNewRecord(vec_15, 14i32, 65535i32);
      OpSetInt(elm_14, 0i32, 8i32);
      OpFinishRecord(vec_15, elm_14, 14i32, 65535i32);
      vec_15;
    };
    let c = 0i32;
    {
      let index_17 = OpConvIntFromNull();
      loop {
        let e = OpGetInt(OpGetVector(v, 4i32, {
          index_17 = if OpNot(OpConvBoolFromInt(index_17)) {3i32} else {OpMinInt(index_17, 1i32)};
          if OpLtInt(index_17, 0i32) {break(0)} else {null};
          index_17;
        }), 0i32);
        {
          c = OpAddInt(OpMulInt(c, 10i32), e);
        };
      };
    };
    c;
  };
  if OpEqInt(test_value, 8421i32) {null} else {OpGenPanic({
    let append_18 = "Test failed ";
    OpFormatInt(append_18, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_18, " != 8421");
    append_18;
  })};
}

byte-code for iter_rev_vector:test()
 668[0]: return-address
 668[4]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 673[16]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 676[28]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[14]
 679[28]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 682[40]: ConstInt(val=0) -> integer
 687[44]: SetInt(v1: reference, fld=4, val: integer)
 690[28]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 693[40]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 698[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 701[52]: ConstInt(val=1) -> integer
 706[56]: SetInt(v1: reference, fld=0, val: integer)
 709[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 712[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 715[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 720[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 723[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 728[52]: PutRef(var[28], value: reference)
 731[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 734[52]: ConstInt(val=2) -> integer
 739[56]: SetInt(v1: reference, fld=0, val: integer)
 742[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 745[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 748[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 753[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 756[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 761[52]: PutRef(var[28], value: reference)
 764[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 767[52]: ConstInt(val=4) -> integer
 772[56]: SetInt(v1: reference, fld=0, val: integer)
 775[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 778[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 781[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 786[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 789[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 794[52]: PutRef(var[28], value: reference)
 797[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 800[52]: ConstInt(val=8) -> integer
 805[56]: SetInt(v1: reference, fld=0, val: integer)
 808[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 811[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 814[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 819[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 822[52]: GenFreeStack(value=12, discard=36)
 826[16]: ConstInt(val=0) -> integer
 831[20]: ConvIntFromNull() -> integer
 832[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 835[36]: VarInt(var[20]) -> integer
 838[40]: ConvBoolFromInt(v1: integer) -> boolean
 839[37]: Not(v1: boolean) -> boolean
 840[37]: GenGotoFalseWord(jump=851, if_false: boolean)
 843[36]: ConstInt(val=3) -> integer
 848[40]: GenGotoWord(jump=860)
 851[36]: VarInt(var[20]) -> integer
 854[40]: ConstInt(val=1) -> integer
 859[44]: MinInt(v1: integer, v2: integer) -> integer
 860[40]: PutInt(var[20], value: integer)
 863[36]: VarInt(var[20]) -> integer
 866[40]: ConstInt(val=0) -> integer
 871[44]: LtInt(v1: integer, v2: integer) -> boolean
 872[37]: GenGotoFalseWord(jump=882, if_false: boolean)
 875[36]: GenFreeStack(value=0, discard=12)
 879[24]: GenGotoWord(jump=914)
 882[36]: VarInt(var[20]) -> integer
 885[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 888[36]: GetInt(v1: reference, fld=0) -> integer
 891[28]: VarInt(var[16]) -> integer
 894[32]: ConstInt(val=10) -> integer
 899[36]: MulInt(v1: integer, v2: integer) -> integer
 900[32]: VarInt(var[24]) -> integer
 903[36]: AddInt(v1: integer, v2: integer) -> integer
 904[32]: PutInt(var[16], value: integer)
 907[28]: GenFreeStack(value=0, discard=4)
 911[24]: GenGotoWord(jump=832)
 914[24]: GenFreeStack(value=0, discard=4)
 918[20]: VarInt(var[16]) -> integer
 921[24]: GenFreeStack(value=4, discard=16)
 925[8]: VarInt(var[4]) -> integer
 928[12]: ConstInt(val=8421) -> integer
 933[16]: EqInt(v1: integer, v2: integer) -> boolean
 934[9]: GenGotoFalseWord(jump=940, if_false: boolean)
 937[8]: GenGotoWord(jump=994)
 940[8]: Text()
 941[32]: ConstText(_value="Test failed ") -> text
 955[48]: AppendText(var[8], v1: text)
 958[32]: VarInt(var[4]) -> integer
 961[36]: ConstInt(val=0) -> integer
 966[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 973[32]: ConstText(_value=" != 8421") -> text
 983[48]: AppendText(var[8], v1: text)
 986[32]: VarText(var[8]) -> text
 989[48]: GenFreeStack(value=16, discard=24)
 993[24]: GenPanic(message: text)
 994[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
  668:[4] Database(size=4, db_tp=13) -> ref(1,1,0)={}[4]
  673:[16] VarRef(var[4]) -> ref(1,1,0)={}[16]
  676:[28] GetField(v1=ref(1,1,0)[16], fld=4) -> ref(1,1,4)=[][16]
  679:[28] VarRef(var[4]) -> ref(1,1,0)={}[28]
  682:[40] ConstInt(val=0) -> 0[40]
  687:[44] SetInt(v1=ref(1,1,0)[28], fld=4, val=0[40])
  690:[28] VarVector(var[16]) -> ref(1,1,4)=[][28]
  693:[40] NewRecord(data=ref(1,1,4)[28], parent_tp=14, fld=65535) -> ref(1,5,8)[28]
  698:[40] VarRef(var[28]) -> ref(1,5,8)=false[40]
  701:[52] ConstInt(val=1) -> 1[52]
  706:[56] SetInt(v1=ref(1,5,8)[40], fld=0, val=1[52])
  709:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  712:[52] VarRef(var[28]) -> ref(1,5,8)=true[52]
  715:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,8)[52], parent_tp=14, fld=65535)
  720:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  723:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,12)[40]
  728:[52] PutRef(var[28], value=ref(1,5,12)[40])
  731:[40] VarRef(var[28]) -> ref(1,5,12)=false[40]
  734:[52] ConstInt(val=2) -> 2[52]
  739:[56] SetInt(v1=ref(1,5,12)[40], fld=0, val=2[52])
  742:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  745:[52] VarRef(var[28]) -> ref(1,5,12)=true[52]
  748:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,12)[52], parent_tp=14, fld=65535)
  753:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  756:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,16)[40]
  761:[52] PutRef(var[28], value=ref(1,5,16)[40])
  764:[40] VarRef(var[28]) -> ref(1,5,16)=false[40]
  767:[52] ConstInt(val=4) -> 4[52]
  772:[56] SetInt(v1=ref(1,5,16)[40], fld=0, val=4[52])
  775:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4][40]
  778:[52] VarRef(var[28]) -> ref(1,5,16)=true[52]
  781:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,16)[52], parent_tp=14, fld=65535)
  786:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4][40]
  789:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,20)[40]
  794:[52] PutRef(var[28], value=ref(1,5,20)[40])
  797:[40] VarRef(var[28]) -> ref(1,5,20)=false[40]
  800:[52] ConstInt(val=8) -> 8[52]
  805:[56] SetInt(v1=ref(1,5,20)[40], fld=0, val=8[52])
  808:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4,8][40]
  811:[52] VarRef(var[28]) -> ref(1,5,20)=true[52]
  814:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,20)[52], parent_tp=14, fld=65535)
  819:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4,8][40]
  822:[52] GenFreeStack(value=12, discard=36)
  826:[16] ConstInt(val=0) -> 0[16]
  831:[20] ConvIntFromNull() -> -2147483648[20]
  832:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  835:[36] VarInt(var[20]) -> -2147483648[36]
  838:[40] ConvBoolFromInt(v1=-2147483648[36]) -> false[36]
  839:[37] Not(v1=false[36]) -> true[36]
  840:[37] GenGotoFalseWord(jump=851, if_false=true[36])
  843:[36] ConstInt(val=3) -> 3[36]
  848:[40] GenGotoWord(jump=860)
  860:[40] PutInt(var[20], value=3[36])
  863:[36] VarInt(var[20]) -> 3[36]
  866:[40] ConstInt(val=0) -> 0[40]
  871:[44] LtInt(v1=3[36], v2=0[40]) -> false[36]
  872:[37] GenGotoFalseWord(jump=882, if_false=false[36])
  882:[36] VarInt(var[20]) -> 3[36]
  885:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=3[36]) -> ref(1,5,20)=8[24]
  888:[36] GetInt(v1=ref(1,5,20)[24], fld=0) -> 8[24]
  891:[28] VarInt(var[16]) -> 0[28]
  894:[32] ConstInt(val=10) -> 10[32]
  899:[36] MulInt(v1=0[28], v2=10[32]) -> 0[28]
  900:[32] VarInt(var[24]) -> 8[32]
  903:[36] AddInt(v1=0[28], v2=8[32]) -> 8[28]
  904:[32] PutInt(var[16], value=8[28])
  907:[28] GenFreeStack(value=0, discard=4)
  911:[24] GenGotoWord(jump=832)
  832:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  835:[36] VarInt(var[20]) -> 3[36]
  838:[40] ConvBoolFromInt(v1=3[36]) -> true[36]
  839:[37] Not(v1=true[36]) -> false[36]
  840:[37] GenGotoFalseWord(jump=851, if_false=false[36])
  851:[36] VarInt(var[20]) -> 3[36]
  854:[40] ConstInt(val=1) -> 1[40]
  859:[44] MinInt(v1=3[36], v2=1[40]) -> 2[36]
  860:[40] PutInt(var[20], value=2[36])
  863:[36] VarInt(var[20]) -> 2[36]
  866:[40] ConstInt(val=0) -> 0[40]
  871:[44] LtInt(v1=2[36], v2=0[40]) -> false[36]
  872:[37] GenGotoFalseWord(jump=882, if_false=false[36])
  882:[36] VarInt(var[20]) -> 2[36]
  885:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=2[36]) -> ref(1,5,16)=4[24]
  888:[36] GetInt(v1=ref(1,5,16)[24], fld=0) -> 4[24]
  891:[28] VarInt(var[16]) -> 8[28]
  894:[32] ConstInt(val=10) -> 10[32]
  899:[36] MulInt(v1=8[28], v2=10[32]) -> 80[28]
  900:[32] VarInt(var[24]) -> 4[32]
  903:[36] AddInt(v1=80[28], v2=4[32]) -> 84[28]
  904:[32] PutInt(var[16], value=84[28])
  907:[28] GenFreeStack(value=0, discard=4)
  911:[24] GenGotoWord(jump=832)
  832:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  835:[36] VarInt(var[20]) -> 2[36]
  838:[40] ConvBoolFromInt(v1=2[36]) -> true[36]
  839:[37] Not(v1=true[36]) -> false[36]
  840:[37] GenGotoFalseWord(jump=851, if_false=false[36])
  851:[36] VarInt(var[20]) -> 2[36]
  854:[40] ConstInt(val=1) -> 1[40]
  859:[44] MinInt(v1=2[36], v2=1[40]) -> 1[36]
  860:[40] PutInt(var[20], value=1[36])
  863:[36] VarInt(var[20]) -> 1[36]
  866:[40] ConstInt(val=0) -> 0[40]
  871:[44] LtInt(v1=1[36], v2=0[40]) -> false[36]
  872:[37] GenGotoFalseWord(jump=882, if_false=false[36])
  882:[36] VarInt(var[20]) -> 1[36]
  885:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=1[36]) -> ref(1,5,12)=2[24]
  888:[36] GetInt(v1=ref(1,5,12)[24], fld=0) -> 2[24]
  891:[28] VarInt(var[16]) -> 84[28]
  894:[32] ConstInt(val=10) -> 10[32]
  899:[36] MulInt(v1=84[28], v2=10[32]) -> 840[28]
  900:[32] VarInt(var[24]) -> 2[32]
  903:[36] AddInt(v1=840[28], v2=2[32]) -> 842[28]
  904:[32] PutInt(var[16], value=842[28])
  907:[28] GenFreeStack(value=0, discard=4)
  911:[24] GenGotoWord(jump=832)
  832:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  835:[36] VarInt(var[20]) -> 1[36]
  838:[40] ConvBoolFromInt(v1=1[36]) -> true[36]
  839:[37] Not(v1=true[36]) -> false[36]
  840:[37] GenGotoFalseWord(jump=851, if_false=false[36])
  851:[36] VarInt(var[20]) -> 1[36]
  854:[40] ConstInt(val=1) -> 1[40]
  859:[44] MinInt(v1=1[36], v2=1[40]) -> 0[36]
  860:[40] PutInt(var[20], value=0[36])
  863:[36] VarInt(var[20]) -> 0[36]
  866:[40] ConstInt(val=0) -> 0[40]
  871:[44] LtInt(v1=0[36], v2=0[40]) -> false[36]
  872:[37] GenGotoFalseWord(jump=882, if_false=false[36])
  882:[36] VarInt(var[20]) -> 0[36]
  885:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=0[36]) -> ref(1,5,8)=1[24]
  888:[36] GetInt(v1=ref(1,5,8)[24], fld=0) -> 1[24]
  891:[28] VarInt(var[16]) -> 842[28]
  894:[32] ConstInt(val=10) -> 10[32]
  899:[36] MulInt(v1=842[28], v2=10[32]) -> 8420[28]
  900:[32] VarInt(var[24]) -> 1[32]
  903:[36] AddInt(v1=8420[28], v2=1[32]) -> 8421[28]
  904:[32] PutInt(var[16], value=8421[28])
  907:[28] GenFreeStack(value=0, discard=4)
  911:[24] GenGotoWord(jump=832)
  832:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  835:[36] VarInt(var[20]) -> 0[36]
  838:[40] ConvBoolFromInt(v1=0[36]) -> true[36]
  839:[37] Not(v1=true[36]) -> false[36]
  840:[37] GenGotoFalseWord(jump=851, if_false=false[36])
  851:[36] VarInt(var[20]) -> 0[36]
  854:[40] ConstInt(val=1) -> 1[40]
  859:[44] MinInt(v1=0[36], v2=1[40]) -> -1[36]
  860:[40] PutInt(var[20], value=-1[36])
  863:[36] VarInt(var[20]) -> -1[36]
  866:[40] ConstInt(val=0) -> 0[40]
  871:[44] LtInt(v1=-1[36], v2=0[40]) -> true[36]
  872:[37] GenGotoFalseWord(jump=882, if_false=true[36])
  875:[36] GenFreeStack(value=0, discard=12)
  879:[24] GenGotoWord(jump=914)
  914:[24] GenFreeStack(value=0, discard=4)
  918:[20] VarInt(var[16]) -> 8421[20]
  921:[24] GenFreeStack(value=4, discard=16)
  925:[8] VarInt(var[4]) -> 8421[8]
  928:[12] ConstInt(val=8421) -> 8421[12]
  933:[16] EqInt(v1=8421[8], v2=8421[12]) -> true[8]
  934:[9] GenGotoFalseWord(jump=940, if_false=true[8])
  937:[8] GenGotoWord(jump=994)
  994:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
