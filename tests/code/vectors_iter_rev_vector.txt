pub fn test() {
    test_value = {v=[1, 2, 4, 8];
c = 0;
for e in v[rev(0..=3)] {
  c = c * 10 + e;
}
c};
    assert(
        test_value == 8421,
        "Test failed {test_value} != 8421"
    );
}
Type 17:vector<integer>[4]:Vector(0)

Type 18:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#block(1):void
  __ref_1(1):ref(main_vector<integer>) = null;
  __work_1(1):text = "";
  test_value(1):integer = {#block(2):integer
    OpDatabase(__ref_1(1), 18i32);
    v(2):vector<integer>["__ref_1"] = OpGetField(__ref_1(1), 4i32, 17i32);
    OpSetInt(__ref_1(1), 4i32, 0i32);
    _elm_1(2):ref(boolean)["v"] = OpNewRecord(v(2), 17i32, 65535i32);
    OpSetInt(_elm_1(2), 0i32, 1i32);
    OpFinishRecord(v(2), _elm_1(2), 17i32, 65535i32);
    _elm_1(2):ref(boolean)["v"] = OpNewRecord(v(2), 17i32, 65535i32);
    OpSetInt(_elm_1(2), 0i32, 2i32);
    OpFinishRecord(v(2), _elm_1(2), 17i32, 65535i32);
    _elm_1(2):ref(boolean)["v"] = OpNewRecord(v(2), 17i32, 65535i32);
    OpSetInt(_elm_1(2), 0i32, 4i32);
    OpFinishRecord(v(2), _elm_1(2), 17i32, 65535i32);
    _elm_1(2):ref(boolean)["v"] = OpNewRecord(v(2), 17i32, 65535i32);
    OpSetInt(_elm_1(2), 0i32, 8i32);
    OpFinishRecord(v(2), _elm_1(2), 17i32, 65535i32);
    c(2):integer = 0i32;
    {#For block(3):void
      _index_2(3):integer = OpConvIntFromNull();
      loop {#For loop_4
        e(4):integer = {#Vector Index(5):integer
          OpGetInt(OpGetVector(v(2), 4i32, {#Iter range(6):integer
            _index_2(3):integer = if OpNot(OpConvBoolFromInt(_index_2(3))) 3i32 else OpMinInt(_index_2(3), 1i32);
            if OpLtInt(_index_2(3), 0i32) break(0) else null;
            _index_2(3);
          }#Iter range(6):integer), 0i32);
        }#Vector Index(5):integer;
        {#block(7):void
          c(2):integer = OpAddInt(OpMulInt(c(2), 10i32), e(4));
        }#block(7):void;
      }#For loop_4;
    }#For block(3):void;
    c(2);
  }#block(2):integer;
  if OpEqInt(test_value(1), 8421i32) null else OpPanic({#Formatted string(8):text
    __work_1(1):text = "Test failed ";
    OpFormatInt(__work_1(1), test_value(1), 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1(1), " != 8421");
    __work_1(1);
  }#Formatted string(8):text);
  OpFreeRef(__ref_1(1));
  OpFreeText(__work_1(1));
}#block(1):void

byte-code for iter_rev_vector:test() [1119]
   0[4]: return-address
   0[8]: ConvRefFromNull() -> ref(reference) var=__ref_1[8]:ref(main_vector<integer>)
   1[20]: Text() var=__work_1[20]:text
   2[44]: Database(var[8], db_tp=18) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=test_value[44]:integer
   7[44]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_1[8]:ref(main_vector<integer>)
  10[56]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=vector<integer>[4]:Vector(0)[17]
  13[56]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_1[8]:ref(main_vector<integer>)
  16[68]: ConstInt(val=0) -> integer
  21[72]: SetInt(v1: ref(reference), fld=4, val: integer)
  24[56]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[44]:vector<integer>["__ref_1"]
  27[68]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
  32[68]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[56]:ref(boolean)["v"]
  35[80]: ConstInt(val=1) -> integer
  40[84]: SetInt(v1: ref(reference), fld=0, val: integer)
  43[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[44]:vector<integer>["__ref_1"]
  46[80]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[56]:ref(boolean)["v"]
  49[92]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
  54[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[44]:vector<integer>["__ref_1"]
  57[80]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
  62[80]: PutRef(var[56], value: ref(reference))
  65[68]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[56]:ref(boolean)["v"]
  68[80]: ConstInt(val=2) -> integer
  73[84]: SetInt(v1: ref(reference), fld=0, val: integer)
  76[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[44]:vector<integer>["__ref_1"]
  79[80]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[56]:ref(boolean)["v"]
  82[92]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
  87[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[44]:vector<integer>["__ref_1"]
  90[80]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
  95[80]: PutRef(var[56], value: ref(reference))
  98[68]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[56]:ref(boolean)["v"]
 101[80]: ConstInt(val=4) -> integer
 106[84]: SetInt(v1: ref(reference), fld=0, val: integer)
 109[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[44]:vector<integer>["__ref_1"]
 112[80]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[56]:ref(boolean)["v"]
 115[92]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 120[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[44]:vector<integer>["__ref_1"]
 123[80]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
 128[80]: PutRef(var[56], value: ref(reference))
 131[68]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[56]:ref(boolean)["v"]
 134[80]: ConstInt(val=8) -> integer
 139[84]: SetInt(v1: ref(reference), fld=0, val: integer)
 142[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[44]:vector<integer>["__ref_1"]
 145[80]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[56]:ref(boolean)["v"]
 148[92]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 153[68]: ConstInt(val=0) -> integer var=c[68]:integer
 158[72]: ConvIntFromNull() -> integer var=_index_2[72]:integer
 159[76]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[44]:vector<integer>["__ref_1"]
 162[88]: VarInt(var[72]) -> integer var=_index_2[72]:integer
 165[92]: ConvBoolFromInt(v1: integer) -> boolean
 166[89]: Not(v1: boolean) -> boolean
 167[89]: GotoFalseWord(jump=178, if_false: boolean)
 170[88]: ConstInt(val=3) -> integer
 175[92]: GotoWord(jump=187)
 178[88]: VarInt(var[72]) -> integer var=_index_2[72]:integer
 181[92]: ConstInt(val=1) -> integer
 186[96]: MinInt(v1: integer, v2: integer) -> integer
 187[92]: PutInt(var[72], value: integer)
 190[88]: VarInt(var[72]) -> integer var=_index_2[72]:integer
 193[92]: ConstInt(val=0) -> integer
 198[96]: LtInt(v1: integer, v2: integer) -> boolean
 199[89]: GotoFalseWord(jump=209, if_false: boolean)
 202[88]: FreeStack(value=0, discard=12)
 206[76]: GotoWord(jump=241)
 209[88]: VarInt(var[72]) -> integer var=_index_2[72]:integer
 212[92]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 215[88]: GetInt(v1: ref(reference), fld=0) -> integer
 218[80]: VarInt(var[68]) -> integer var=c[68]:integer
 221[84]: ConstInt(val=10) -> integer
 226[88]: MulInt(v1: integer, v2: integer) -> integer
 227[84]: VarInt(var[76]) -> integer var=e[76]:integer
 230[88]: AddInt(v1: integer, v2: integer) -> integer
 231[84]: PutInt(var[68], value: integer)
 234[80]: FreeStack(value=0, discard=4)
 238[76]: GotoWord(jump=159)
 241[76]: FreeStack(value=0, discard=4)
 245[72]: VarInt(var[68]) -> integer var=c[68]:integer
 248[76]: FreeStack(value=4, discard=32)
 252[48]: VarInt(var[44]) -> integer var=test_value[44]:integer
 255[52]: ConstInt(val=8421) -> integer
 260[56]: EqInt(v1: integer, v2: integer) -> boolean
 261[49]: GotoFalseWord(jump=267, if_false: boolean)
 264[48]: GotoWord(jump=319)
 267[48]: ClearText(var[20]) var=__work_1[20]:text
 270[48]: ConstText(_value="Test failed ") -> text
 284[64]: AppendText(var[20], v1: text)
 287[48]: VarInt(var[44]) -> integer var=test_value[44]:integer
 290[52]: ConstInt(val=0) -> integer
 295[56]: FormatInt(var[20], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 302[48]: ConstText(_value=" != 8421") -> text
 312[64]: AppendText(var[20], v1: text)
 315[48]: VarText(var[20]) -> text var=__work_1[20]:text
 318[64]: Panic(message: text)
 319[48]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_1[8]:ref(main_vector<integer>)
 322[60]: FreeRef(v1: ref(reference))
 323[48]: FreeText(var[20])
 326[48]: Return(ret=0, value=0, discard=44)

Execute test:
    0:[8] ConvRefFromNull() -> ref(1,0,0)[8]
    1:[20] Text()
    2:[44] Database(var[8], db_tp=18)
    7:[44] VarRef(var[8]) -> ref(1,1,0)={}[44]
   10:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)=[][44]
   13:[56] VarRef(var[8]) -> ref(1,1,0)={}[56]
   16:[68] ConstInt(val=0) -> 0[68]
   21:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
   24:[56] VarVector(var[44]) -> ref(1,1,4)=[][56]
   27:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=17, fld=65535) -> ref(1,9,8)[56]
   32:[68] VarRef(var[56]) -> ref(1,9,8)=false[68]
   35:[80] ConstInt(val=1) -> 1[80]
   40:[84] SetInt(v1=ref(1,9,8)[68], fld=0, val=1[80])
   43:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
   46:[80] VarRef(var[56]) -> ref(1,9,8)=true[80]
   49:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,8)[80], parent_tp=17, fld=65535)
   54:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
   57:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=17, fld=65535) -> ref(1,9,12)[68]
   62:[80] PutRef(var[56], value=ref(1,9,12)[68])
   65:[68] VarRef(var[56]) -> ref(1,9,12)=false[68]
   68:[80] ConstInt(val=2) -> 2[80]
   73:[84] SetInt(v1=ref(1,9,12)[68], fld=0, val=2[80])
   76:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
   79:[80] VarRef(var[56]) -> ref(1,9,12)=true[80]
   82:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,12)[80], parent_tp=17, fld=65535)
   87:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
   90:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=17, fld=65535) -> ref(1,9,16)[68]
   95:[80] PutRef(var[56], value=ref(1,9,16)[68])
   98:[68] VarRef(var[56]) -> ref(1,9,16)=false[68]
  101:[80] ConstInt(val=4) -> 4[80]
  106:[84] SetInt(v1=ref(1,9,16)[68], fld=0, val=4[80])
  109:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4][68]
  112:[80] VarRef(var[56]) -> ref(1,9,16)=true[80]
  115:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,16)[80], parent_tp=17, fld=65535)
  120:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4][68]
  123:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=17, fld=65535) -> ref(1,9,20)[68]
  128:[80] PutRef(var[56], value=ref(1,9,20)[68])
  131:[68] VarRef(var[56]) -> ref(1,9,20)=false[68]
  134:[80] ConstInt(val=8) -> 8[80]
  139:[84] SetInt(v1=ref(1,9,20)[68], fld=0, val=8[80])
  142:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][68]
  145:[80] VarRef(var[56]) -> ref(1,9,20)=true[80]
  148:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,20)[80], parent_tp=17, fld=65535)
  153:[68] ConstInt(val=0) -> 0[68]
  158:[72] ConvIntFromNull() -> -2147483648[72]
  159:[76] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][76]
  162:[88] VarInt(var[72]) -> -2147483648[88]
  165:[92] ConvBoolFromInt(v1=-2147483648[88]) -> false[88]
  166:[89] Not(v1=false[88]) -> true[88]
  167:[89] GotoFalseWord(jump=178, if_false=true[88])
  170:[88] ConstInt(val=3) -> 3[88]
  175:[92] GotoWord(jump=187)
  187:[92] PutInt(var[72], value=3[88])
  190:[88] VarInt(var[72]) -> 3[88]
  193:[92] ConstInt(val=0) -> 0[92]
  198:[96] LtInt(v1=3[88], v2=0[92]) -> false[88]
  199:[89] GotoFalseWord(jump=209, if_false=false[88])
  209:[88] VarInt(var[72]) -> 3[88]
  212:[92] GetVector(r=ref(1,1,4)[76], size=4, index=3[88]) -> ref(1,9,20)=8[76]
  215:[88] GetInt(v1=ref(1,9,20)[76], fld=0) -> 8[76]
  218:[80] VarInt(var[68]) -> 0[80]
  221:[84] ConstInt(val=10) -> 10[84]
  226:[88] MulInt(v1=0[80], v2=10[84]) -> 0[80]
  227:[84] VarInt(var[76]) -> 8[84]
  230:[88] AddInt(v1=0[80], v2=8[84]) -> 8[80]
  231:[84] PutInt(var[68], value=8[80])
  234:[80] FreeStack(value=0, discard=4)
  238:[76] GotoWord(jump=159)
  159:[76] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][76]
  162:[88] VarInt(var[72]) -> 3[88]
  165:[92] ConvBoolFromInt(v1=3[88]) -> true[88]
  166:[89] Not(v1=true[88]) -> false[88]
  167:[89] GotoFalseWord(jump=178, if_false=false[88])
  178:[88] VarInt(var[72]) -> 3[88]
  181:[92] ConstInt(val=1) -> 1[92]
  186:[96] MinInt(v1=3[88], v2=1[92]) -> 2[88]
  187:[92] PutInt(var[72], value=2[88])
  190:[88] VarInt(var[72]) -> 2[88]
  193:[92] ConstInt(val=0) -> 0[92]
  198:[96] LtInt(v1=2[88], v2=0[92]) -> false[88]
  199:[89] GotoFalseWord(jump=209, if_false=false[88])
  209:[88] VarInt(var[72]) -> 2[88]
  212:[92] GetVector(r=ref(1,1,4)[76], size=4, index=2[88]) -> ref(1,9,16)=4[76]
  215:[88] GetInt(v1=ref(1,9,16)[76], fld=0) -> 4[76]
  218:[80] VarInt(var[68]) -> 8[80]
  221:[84] ConstInt(val=10) -> 10[84]
  226:[88] MulInt(v1=8[80], v2=10[84]) -> 80[80]
  227:[84] VarInt(var[76]) -> 4[84]
  230:[88] AddInt(v1=80[80], v2=4[84]) -> 84[80]
  231:[84] PutInt(var[68], value=84[80])
  234:[80] FreeStack(value=0, discard=4)
  238:[76] GotoWord(jump=159)
  159:[76] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][76]
  162:[88] VarInt(var[72]) -> 2[88]
  165:[92] ConvBoolFromInt(v1=2[88]) -> true[88]
  166:[89] Not(v1=true[88]) -> false[88]
  167:[89] GotoFalseWord(jump=178, if_false=false[88])
  178:[88] VarInt(var[72]) -> 2[88]
  181:[92] ConstInt(val=1) -> 1[92]
  186:[96] MinInt(v1=2[88], v2=1[92]) -> 1[88]
  187:[92] PutInt(var[72], value=1[88])
  190:[88] VarInt(var[72]) -> 1[88]
  193:[92] ConstInt(val=0) -> 0[92]
  198:[96] LtInt(v1=1[88], v2=0[92]) -> false[88]
  199:[89] GotoFalseWord(jump=209, if_false=false[88])
  209:[88] VarInt(var[72]) -> 1[88]
  212:[92] GetVector(r=ref(1,1,4)[76], size=4, index=1[88]) -> ref(1,9,12)=2[76]
  215:[88] GetInt(v1=ref(1,9,12)[76], fld=0) -> 2[76]
  218:[80] VarInt(var[68]) -> 84[80]
  221:[84] ConstInt(val=10) -> 10[84]
  226:[88] MulInt(v1=84[80], v2=10[84]) -> 840[80]
  227:[84] VarInt(var[76]) -> 2[84]
  230:[88] AddInt(v1=840[80], v2=2[84]) -> 842[80]
  231:[84] PutInt(var[68], value=842[80])
  234:[80] FreeStack(value=0, discard=4)
  238:[76] GotoWord(jump=159)
  159:[76] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][76]
  162:[88] VarInt(var[72]) -> 1[88]
  165:[92] ConvBoolFromInt(v1=1[88]) -> true[88]
  166:[89] Not(v1=true[88]) -> false[88]
  167:[89] GotoFalseWord(jump=178, if_false=false[88])
  178:[88] VarInt(var[72]) -> 1[88]
  181:[92] ConstInt(val=1) -> 1[92]
  186:[96] MinInt(v1=1[88], v2=1[92]) -> 0[88]
  187:[92] PutInt(var[72], value=0[88])
  190:[88] VarInt(var[72]) -> 0[88]
  193:[92] ConstInt(val=0) -> 0[92]
  198:[96] LtInt(v1=0[88], v2=0[92]) -> false[88]
  199:[89] GotoFalseWord(jump=209, if_false=false[88])
  209:[88] VarInt(var[72]) -> 0[88]
  212:[92] GetVector(r=ref(1,1,4)[76], size=4, index=0[88]) -> ref(1,9,8)=1[76]
  215:[88] GetInt(v1=ref(1,9,8)[76], fld=0) -> 1[76]
  218:[80] VarInt(var[68]) -> 842[80]
  221:[84] ConstInt(val=10) -> 10[84]
  226:[88] MulInt(v1=842[80], v2=10[84]) -> 8420[80]
  227:[84] VarInt(var[76]) -> 1[84]
  230:[88] AddInt(v1=8420[80], v2=1[84]) -> 8421[80]
  231:[84] PutInt(var[68], value=8421[80])
  234:[80] FreeStack(value=0, discard=4)
  238:[76] GotoWord(jump=159)
  159:[76] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][76]
  162:[88] VarInt(var[72]) -> 0[88]
  165:[92] ConvBoolFromInt(v1=0[88]) -> true[88]
  166:[89] Not(v1=true[88]) -> false[88]
  167:[89] GotoFalseWord(jump=178, if_false=false[88])
  178:[88] VarInt(var[72]) -> 0[88]
  181:[92] ConstInt(val=1) -> 1[92]
  186:[96] MinInt(v1=0[88], v2=1[92]) -> -1[88]
  187:[92] PutInt(var[72], value=-1[88])
  190:[88] VarInt(var[72]) -> -1[88]
  193:[92] ConstInt(val=0) -> 0[92]
  198:[96] LtInt(v1=-1[88], v2=0[92]) -> true[88]
  199:[89] GotoFalseWord(jump=209, if_false=true[88])
  202:[88] FreeStack(value=0, discard=12)
  206:[76] GotoWord(jump=241)
  241:[76] FreeStack(value=0, discard=4)
  245:[72] VarInt(var[68]) -> 8421[72]
  248:[76] FreeStack(value=4, discard=32)
  252:[48] VarInt(var[44]) -> 8421[48]
  255:[52] ConstInt(val=8421) -> 8421[52]
  260:[56] EqInt(v1=8421[48], v2=8421[52]) -> true[48]
  261:[49] GotoFalseWord(jump=267, if_false=true[48])
  264:[48] GotoWord(jump=319)
  319:[48] VarRef(var[8]) -> ref(1,1,0)={vector:[1,2,4,8]}[48]
  322:[60] FreeRef(v1=ref(1,1,0)[48])
  323:[48] FreeText(var[20])
  326:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
