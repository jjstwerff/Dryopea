pub fn test() {
    test_value = {v=[1, 2, 4, 8];
c = 0;
for e in v[rev(0..=3)] {
  c = c * 10 + e;
}
c};
    assert(
        test_value == 8421,
        "Test failed {test_value} != 8421"
    );
}
Type 11:vector<integer>[4]:Vector(0)

Type 12:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    v:vector<integer>#[] = {#3 vector
      _db_3:main_vector<integer> = OpDatabase(4i32, 12i32);
      _vec_2:vector<integer>#[] = OpGetField(_db_3, 4i32, 65535i32);
      OpSetInt(_db_3, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 4i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 8i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _vec_2;
    }#3:vector<integer>#[];
    c:integer = 0i32;
    {#4 for
      _index_4:integer = OpConvIntFromNull();
      loop {#5 for loop
        e:integer = {#6 for next
          OpGetInt(OpGetVector(v, 4i32, {#7 for next block
            _index_4:integer = if OpNot(OpConvBoolFromInt(_index_4)) 3i32 else OpMinInt(_index_4, 1i32);
            if OpLtInt(_index_4, 0i32) break(0) else null;
            _index_4;
          }#7:integer), 0i32);
        }#6:integer;
        {#8 block
          c:integer = OpAddInt(OpMulInt(c, 10i32), e);
        }#8;
      }#5;
    }#4;
    c;
  }#2:integer;
  if OpEqInt(test_value, 8421i32) null else OpPanic({#9 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 8421");
    __work_1;
  }#9:text);
}#1

byte-code for iter_rev_vector:test()
 682[0]: return-address
 682[4]: Text()
 683[28]: Database(size=4, db_tp=12) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 688[40]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 691[52]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 694[52]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 697[64]: ConstInt(val=0) -> integer
 702[68]: SetInt(v1: reference, fld=4, val: integer)
 705[52]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 708[64]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 713[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 716[76]: ConstInt(val=1) -> integer
 721[80]: SetInt(v1: reference, fld=0, val: integer)
 724[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 727[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 730[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 735[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 738[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 743[76]: PutRef(var[52], value: reference)
 746[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 749[76]: ConstInt(val=2) -> integer
 754[80]: SetInt(v1: reference, fld=0, val: integer)
 757[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 760[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 763[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 768[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 771[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 776[76]: PutRef(var[52], value: reference)
 779[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 782[76]: ConstInt(val=4) -> integer
 787[80]: SetInt(v1: reference, fld=0, val: integer)
 790[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 793[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 796[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 801[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 804[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 809[76]: PutRef(var[52], value: reference)
 812[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 815[76]: ConstInt(val=8) -> integer
 820[80]: SetInt(v1: reference, fld=0, val: integer)
 823[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 826[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 829[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 834[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 837[76]: FreeStack(value=12, discard=36) type=Pixel[3]:{r:byte[0], g:byte[1], b:byte[2]}[6]
 841[40]: ConstInt(val=0) -> integer
 846[44]: ConvIntFromNull() -> integer
 847[48]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 850[60]: VarInt(var[44]) -> integer
 853[64]: ConvBoolFromInt(v1: integer) -> boolean
 854[61]: Not(v1: boolean) -> boolean
 855[61]: GotoFalseWord(jump=866, if_false: boolean)
 858[60]: ConstInt(val=3) -> integer
 863[64]: GotoWord(jump=875)
 866[60]: VarInt(var[44]) -> integer
 869[64]: ConstInt(val=1) -> integer
 874[68]: MinInt(v1: integer, v2: integer) -> integer
 875[64]: PutInt(var[44], value: integer)
 878[60]: VarInt(var[44]) -> integer
 881[64]: ConstInt(val=0) -> integer
 886[68]: LtInt(v1: integer, v2: integer) -> boolean
 887[61]: GotoFalseWord(jump=897, if_false: boolean)
 890[60]: FreeStack(value=0, discard=12)
 894[48]: GotoWord(jump=929)
 897[60]: VarInt(var[44]) -> integer
 900[64]: GetVector(r: vector#[], size=4, index: integer) -> reference type=integer[4]:Base[0]
 903[60]: GetInt(v1: reference, fld=0) -> integer
 906[52]: VarInt(var[40]) -> integer
 909[56]: ConstInt(val=10) -> integer
 914[60]: MulInt(v1: integer, v2: integer) -> integer
 915[56]: VarInt(var[48]) -> integer
 918[60]: AddInt(v1: integer, v2: integer) -> integer
 919[56]: PutInt(var[40], value: integer)
 922[52]: FreeStack(value=0, discard=4)
 926[48]: GotoWord(jump=847)
 929[48]: FreeStack(value=0, discard=4)
 933[44]: VarInt(var[40]) -> integer
 936[48]: FreeStack(value=4, discard=16) type=integer[4]:Base[0]
 940[32]: VarInt(var[28]) -> integer
 943[36]: ConstInt(val=8421) -> integer
 948[40]: EqInt(v1: integer, v2: integer) -> boolean
 949[33]: GotoFalseWord(jump=955, if_false: boolean)
 952[32]: GotoWord(jump=1007)
 955[32]: ClearText(var[4])
 958[32]: ConstText(_value="Test failed ") -> text
 972[48]: AppendText(var[4], v1: text)
 975[32]: VarInt(var[28]) -> integer
 978[36]: ConstInt(val=0) -> integer
 983[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 990[32]: ConstText(_value=" != 8421") -> text
1000[48]: AppendText(var[4], v1: text)
1003[32]: VarText(var[4]) -> text
1006[48]: Panic(message: text)
1007[32]: Return(ret=0, value=0, discard=32)

Execute test:
  682:[8] Text()
  683:[32] Database(size=4, db_tp=12) -> ref(1,1,0)={}[32]
  688:[44] VarRef(var[32]) -> ref(1,1,0)={}[44]
  691:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  694:[56] VarRef(var[32]) -> ref(1,1,0)={}[56]
  697:[68] ConstInt(val=0) -> 0[68]
  702:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  705:[56] VarVector(var[44]) -> ref(1,1,4)[56]
  708:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=11, fld=65535) -> ref(1,5,8)[56]
  713:[68] VarRef(var[56]) -> ref(1,5,8)=false[68]
  716:[80] ConstInt(val=1) -> 1[80]
  721:[84] SetInt(v1=ref(1,5,8)[68], fld=0, val=1[80])
  724:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  727:[80] VarRef(var[56]) -> ref(1,5,8)=true[80]
  730:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,8)[80], parent_tp=11, fld=65535)
  735:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  738:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,12)[68]
  743:[80] PutRef(var[56], value=ref(1,5,12)[68])
  746:[68] VarRef(var[56]) -> ref(1,5,12)=false[68]
  749:[80] ConstInt(val=2) -> 2[80]
  754:[84] SetInt(v1=ref(1,5,12)[68], fld=0, val=2[80])
  757:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  760:[80] VarRef(var[56]) -> ref(1,5,12)=true[80]
  763:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,12)[80], parent_tp=11, fld=65535)
  768:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  771:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,16)[68]
  776:[80] PutRef(var[56], value=ref(1,5,16)[68])
  779:[68] VarRef(var[56]) -> ref(1,5,16)=false[68]
  782:[80] ConstInt(val=4) -> 4[80]
  787:[84] SetInt(v1=ref(1,5,16)[68], fld=0, val=4[80])
  790:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  793:[80] VarRef(var[56]) -> ref(1,5,16)=true[80]
  796:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,16)[80], parent_tp=11, fld=65535)
  801:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  804:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,20)[68]
  809:[80] PutRef(var[56], value=ref(1,5,20)[68])
  812:[68] VarRef(var[56]) -> ref(1,5,20)=false[68]
  815:[80] ConstInt(val=8) -> 8[80]
  820:[84] SetInt(v1=ref(1,5,20)[68], fld=0, val=8[80])
  823:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  826:[80] VarRef(var[56]) -> ref(1,5,20)=true[80]
  829:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,20)[80], parent_tp=11, fld=65535)
  834:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  837:[80] FreeStack(value=12, discard=36)
  841:[44] ConstInt(val=0) -> 0[44]
  846:[48] ConvIntFromNull() -> -2147483648[48]
  847:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  850:[64] VarInt(var[48]) -> -2147483648[64]
  853:[68] ConvBoolFromInt(v1=-2147483648[64]) -> false[64]
  854:[65] Not(v1=false[64]) -> true[64]
  855:[65] GotoFalseWord(jump=866, if_false=true[64])
  858:[64] ConstInt(val=3) -> 3[64]
  863:[68] GotoWord(jump=875)
  875:[68] PutInt(var[48], value=3[64])
  878:[64] VarInt(var[48]) -> 3[64]
  881:[68] ConstInt(val=0) -> 0[68]
  886:[72] LtInt(v1=3[64], v2=0[68]) -> false[64]
  887:[65] GotoFalseWord(jump=897, if_false=false[64])
  897:[64] VarInt(var[48]) -> 3[64]
  900:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=3[64]) -> ref(1,5,20)=8[52]
  903:[64] GetInt(v1=ref(1,5,20)[52], fld=0) -> 8[52]
  906:[56] VarInt(var[44]) -> 0[56]
  909:[60] ConstInt(val=10) -> 10[60]
  914:[64] MulInt(v1=0[56], v2=10[60]) -> 0[56]
  915:[60] VarInt(var[52]) -> 8[60]
  918:[64] AddInt(v1=0[56], v2=8[60]) -> 8[56]
  919:[60] PutInt(var[44], value=8[56])
  922:[56] FreeStack(value=0, discard=4)
  926:[52] GotoWord(jump=847)
  847:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  850:[64] VarInt(var[48]) -> 3[64]
  853:[68] ConvBoolFromInt(v1=3[64]) -> true[64]
  854:[65] Not(v1=true[64]) -> false[64]
  855:[65] GotoFalseWord(jump=866, if_false=false[64])
  866:[64] VarInt(var[48]) -> 3[64]
  869:[68] ConstInt(val=1) -> 1[68]
  874:[72] MinInt(v1=3[64], v2=1[68]) -> 2[64]
  875:[68] PutInt(var[48], value=2[64])
  878:[64] VarInt(var[48]) -> 2[64]
  881:[68] ConstInt(val=0) -> 0[68]
  886:[72] LtInt(v1=2[64], v2=0[68]) -> false[64]
  887:[65] GotoFalseWord(jump=897, if_false=false[64])
  897:[64] VarInt(var[48]) -> 2[64]
  900:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=2[64]) -> ref(1,5,16)=4[52]
  903:[64] GetInt(v1=ref(1,5,16)[52], fld=0) -> 4[52]
  906:[56] VarInt(var[44]) -> 8[56]
  909:[60] ConstInt(val=10) -> 10[60]
  914:[64] MulInt(v1=8[56], v2=10[60]) -> 80[56]
  915:[60] VarInt(var[52]) -> 4[60]
  918:[64] AddInt(v1=80[56], v2=4[60]) -> 84[56]
  919:[60] PutInt(var[44], value=84[56])
  922:[56] FreeStack(value=0, discard=4)
  926:[52] GotoWord(jump=847)
  847:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  850:[64] VarInt(var[48]) -> 2[64]
  853:[68] ConvBoolFromInt(v1=2[64]) -> true[64]
  854:[65] Not(v1=true[64]) -> false[64]
  855:[65] GotoFalseWord(jump=866, if_false=false[64])
  866:[64] VarInt(var[48]) -> 2[64]
  869:[68] ConstInt(val=1) -> 1[68]
  874:[72] MinInt(v1=2[64], v2=1[68]) -> 1[64]
  875:[68] PutInt(var[48], value=1[64])
  878:[64] VarInt(var[48]) -> 1[64]
  881:[68] ConstInt(val=0) -> 0[68]
  886:[72] LtInt(v1=1[64], v2=0[68]) -> false[64]
  887:[65] GotoFalseWord(jump=897, if_false=false[64])
  897:[64] VarInt(var[48]) -> 1[64]
  900:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=1[64]) -> ref(1,5,12)=2[52]
  903:[64] GetInt(v1=ref(1,5,12)[52], fld=0) -> 2[52]
  906:[56] VarInt(var[44]) -> 84[56]
  909:[60] ConstInt(val=10) -> 10[60]
  914:[64] MulInt(v1=84[56], v2=10[60]) -> 840[56]
  915:[60] VarInt(var[52]) -> 2[60]
  918:[64] AddInt(v1=840[56], v2=2[60]) -> 842[56]
  919:[60] PutInt(var[44], value=842[56])
  922:[56] FreeStack(value=0, discard=4)
  926:[52] GotoWord(jump=847)
  847:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  850:[64] VarInt(var[48]) -> 1[64]
  853:[68] ConvBoolFromInt(v1=1[64]) -> true[64]
  854:[65] Not(v1=true[64]) -> false[64]
  855:[65] GotoFalseWord(jump=866, if_false=false[64])
  866:[64] VarInt(var[48]) -> 1[64]
  869:[68] ConstInt(val=1) -> 1[68]
  874:[72] MinInt(v1=1[64], v2=1[68]) -> 0[64]
  875:[68] PutInt(var[48], value=0[64])
  878:[64] VarInt(var[48]) -> 0[64]
  881:[68] ConstInt(val=0) -> 0[68]
  886:[72] LtInt(v1=0[64], v2=0[68]) -> false[64]
  887:[65] GotoFalseWord(jump=897, if_false=false[64])
  897:[64] VarInt(var[48]) -> 0[64]
  900:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=0[64]) -> ref(1,5,8)=1[52]
  903:[64] GetInt(v1=ref(1,5,8)[52], fld=0) -> 1[52]
  906:[56] VarInt(var[44]) -> 842[56]
  909:[60] ConstInt(val=10) -> 10[60]
  914:[64] MulInt(v1=842[56], v2=10[60]) -> 8420[56]
  915:[60] VarInt(var[52]) -> 1[60]
  918:[64] AddInt(v1=8420[56], v2=1[60]) -> 8421[56]
  919:[60] PutInt(var[44], value=8421[56])
  922:[56] FreeStack(value=0, discard=4)
  926:[52] GotoWord(jump=847)
  847:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  850:[64] VarInt(var[48]) -> 0[64]
  853:[68] ConvBoolFromInt(v1=0[64]) -> true[64]
  854:[65] Not(v1=true[64]) -> false[64]
  855:[65] GotoFalseWord(jump=866, if_false=false[64])
  866:[64] VarInt(var[48]) -> 0[64]
  869:[68] ConstInt(val=1) -> 1[68]
  874:[72] MinInt(v1=0[64], v2=1[68]) -> -1[64]
  875:[68] PutInt(var[48], value=-1[64])
  878:[64] VarInt(var[48]) -> -1[64]
  881:[68] ConstInt(val=0) -> 0[68]
  886:[72] LtInt(v1=-1[64], v2=0[68]) -> true[64]
  887:[65] GotoFalseWord(jump=897, if_false=true[64])
  890:[64] FreeStack(value=0, discard=12)
  894:[52] GotoWord(jump=929)
  929:[52] FreeStack(value=0, discard=4)
  933:[48] VarInt(var[44]) -> 8421[48]
  936:[52] FreeStack(value=4, discard=16)
  940:[36] VarInt(var[32]) -> 8421[36]
  943:[40] ConstInt(val=8421) -> 8421[40]
  948:[44] EqInt(v1=8421[36], v2=8421[40]) -> true[36]
  949:[37] GotoFalseWord(jump=955, if_false=true[36])
  952:[36] GotoWord(jump=1007)
 1007:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
