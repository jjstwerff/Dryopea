pub fn test() {
    test_value = {v=[1, 2, 1+2];
v += [4];
t = 0;
for e in v { t += e };
v[1 + 2] = 5;
t + v[0] + v[-1] + v.len()};
    assert(
        test_value == 20,
        "Test failed {test_value} != 20"
    );
}
Type 12:vector<integer>[4]:Vector(0)

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __ref_1:main_vector<integer> = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    v:vector<integer> = {#3 vector
      OpDatabase(__ref_1, 13i32);
      _vec_2:vector<integer> = OpGetField(__ref_1, 4i32, 65535i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, OpAddInt(1i32, 2i32));
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _vec_2;
    }#3:vector<integer>;
    {#4 vector
      _elm_3:boolean = OpNewRecord(v, 12i32, 65535i32);
      OpSetInt(_elm_3, 0i32, 4i32);
      OpFinishRecord(v, _elm_3, 12i32, 65535i32);
    }#4;
    t:integer = 0i32;
    {#5 for
      e#index:integer = 0i32;
      loop {#6 for loop
        e:integer = if OpGeInt(e#index, OpLengthVector(v)) OpConvIntFromNull() else {#7 iter next
          _res_4:integer = OpGetInt(OpGetVector(v, 4i32, e#index), 0i32);
          e#index:integer = OpAddInt(e#index, 1i32);
          _res_4;
        }#7:integer;
        if OpNot(OpConvBoolFromInt(e)) break(0) else null;
        {#8 block
          t:integer = OpAddInt(t, e);
        }#8;
      }#6;
    }#5;
    OpSetInt(OpGetVector(v, 4i32, OpAddInt(1i32, 2i32)), 0i32, 5i32);
    OpAddInt(OpAddInt(OpAddInt(t, OpGetInt(OpGetVector(v, 4i32, 0i32), 0i32)), OpGetInt(OpGetVector(v, 4i32, OpMinSingleInt(1i32)), 0i32)), _tp_vector_len(v));
  }#2:integer;
  if OpEqInt(test_value, 20i32) null else OpPanic({#9 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 20");
    __work_1;
  }#9:text);
}#1

byte-code for vectors:test()
 691[0]: return-address
 691[4]: ConvRefFromNull() -> reference
 692[16]: Text()
 693[40]: Database(var[4], db_tp=13) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 698[40]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 701[52]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 704[52]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 707[64]: ConstInt(val=0) -> integer
 712[68]: SetInt(v1: reference, fld=4, val: integer)
 715[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 718[64]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 723[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 726[76]: ConstInt(val=1) -> integer
 731[80]: SetInt(v1: reference, fld=0, val: integer)
 734[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 737[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 740[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 745[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 748[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 753[76]: PutRef(var[52], value: reference)
 756[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 759[76]: ConstInt(val=2) -> integer
 764[80]: SetInt(v1: reference, fld=0, val: integer)
 767[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 770[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 773[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 778[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 781[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 786[76]: PutRef(var[52], value: reference)
 789[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 792[76]: ConstInt(val=1) -> integer
 797[80]: ConstInt(val=2) -> integer
 802[84]: AddInt(v1: integer, v2: integer) -> integer
 803[80]: SetInt(v1: reference, fld=0, val: integer)
 806[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 809[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 812[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 817[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 820[76]: FreeStack(value=12, discard=36) type=Variable[12]:{name:text[4], value:text[8]}[6]
 824[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 827[64]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 832[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 835[76]: ConstInt(val=4) -> integer
 840[80]: SetInt(v1: reference, fld=0, val: integer)
 843[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 846[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 849[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 854[64]: FreeStack(value=0, discard=12)
 858[52]: ConstInt(val=0) -> integer
 863[56]: ConstInt(val=0) -> integer
 868[60]: VarInt(var[56]) -> integer
 871[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 874[76]: LengthVector(r: vector) -> integer
 875[68]: GeInt(v1: integer, v2: integer) -> boolean
 876[61]: GotoFalseWord(jump=883, if_false: boolean)
 879[60]: ConvIntFromNull() -> integer
 880[64]: GotoWord(jump=914)
 883[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 886[72]: VarInt(var[56]) -> integer
 889[76]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 892[72]: GetInt(v1: reference, fld=0) -> integer
 895[64]: VarInt(var[56]) -> integer
 898[68]: ConstInt(val=1) -> integer
 903[72]: AddInt(v1: integer, v2: integer) -> integer
 904[68]: PutInt(var[56], value: integer)
 907[64]: VarInt(var[60]) -> integer
 910[68]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 914[64]: VarInt(var[60]) -> integer
 917[68]: ConvBoolFromInt(v1: integer) -> boolean
 918[65]: Not(v1: boolean) -> boolean
 919[65]: GotoFalseWord(jump=929, if_false: boolean)
 922[64]: FreeStack(value=0, discard=4)
 926[60]: GotoWord(jump=946)
 929[64]: VarInt(var[52]) -> integer
 932[68]: VarInt(var[60]) -> integer
 935[72]: AddInt(v1: integer, v2: integer) -> integer
 936[68]: PutInt(var[52], value: integer)
 939[64]: FreeStack(value=0, discard=4)
 943[60]: GotoWord(jump=868)
 946[60]: FreeStack(value=0, discard=4)
 950[56]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 953[68]: ConstInt(val=1) -> integer
 958[72]: ConstInt(val=2) -> integer
 963[76]: AddInt(v1: integer, v2: integer) -> integer
 964[72]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 967[68]: ConstInt(val=5) -> integer
 972[72]: SetInt(v1: reference, fld=0, val: integer)
 975[56]: VarInt(var[52]) -> integer
 978[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 981[72]: ConstInt(val=0) -> integer
 986[76]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 989[72]: GetInt(v1: reference, fld=0) -> integer
 992[64]: AddInt(v1: integer, v2: integer) -> integer
 993[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 996[72]: ConstInt(val=1) -> integer
1001[76]: MinSingleInt(v1: integer) -> integer
1002[76]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1005[72]: GetInt(v1: reference, fld=0) -> integer
1008[64]: AddInt(v1: integer, v2: integer) -> integer
1009[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
1012[72]: Call(size=0, to=328)
1019[64]: AddInt(v1: integer, v2: integer) -> integer
1020[60]: FreeStack(value=4, discard=20) type=integer[4]:Base[0]
1024[44]: VarInt(var[40]) -> integer
1027[48]: ConstInt(val=20) -> integer
1032[52]: EqInt(v1: integer, v2: integer) -> boolean
1033[45]: GotoFalseWord(jump=1039, if_false: boolean)
1036[44]: GotoWord(jump=1089)
1039[44]: ClearText(var[16])
1042[44]: ConstText(_value="Test failed ") -> text
1056[60]: AppendText(var[16], v1: text)
1059[44]: VarInt(var[40]) -> integer
1062[48]: ConstInt(val=0) -> integer
1067[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1074[44]: ConstText(_value=" != 20") -> text
1082[60]: AppendText(var[16], v1: text)
1085[44]: VarText(var[16]) -> text
1088[60]: Panic(message: text)
1089[44]: FreeText(var[16])
1092[44]: Return(ret=0, value=0, discard=44)

Execute test:
  691:[8] ConvRefFromNull() -> ref(65535,0,0)[8]
  692:[20] Text()
  693:[44] Database(var[8], db_tp=13)
  698:[44] VarRef(var[8]) -> ref(1,1,0)={}[44]
  701:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  704:[56] VarRef(var[8]) -> ref(1,1,0)={}[56]
  707:[68] ConstInt(val=0) -> 0[68]
  712:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  715:[56] VarVector(var[44]) -> ref(1,1,4)=[][56]
  718:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=12, fld=65535) -> ref(1,9,8)[56]
  723:[68] VarRef(var[56]) -> ref(1,9,8)=false[68]
  726:[80] ConstInt(val=1) -> 1[80]
  731:[84] SetInt(v1=ref(1,9,8)[68], fld=0, val=1[80])
  734:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  737:[80] VarRef(var[56]) -> ref(1,9,8)=true[80]
  740:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,8)[80], parent_tp=12, fld=65535)
  745:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  748:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,12)[68]
  753:[80] PutRef(var[56], value=ref(1,9,12)[68])
  756:[68] VarRef(var[56]) -> ref(1,9,12)=false[68]
  759:[80] ConstInt(val=2) -> 2[80]
  764:[84] SetInt(v1=ref(1,9,12)[68], fld=0, val=2[80])
  767:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  770:[80] VarRef(var[56]) -> ref(1,9,12)=true[80]
  773:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,12)[80], parent_tp=12, fld=65535)
  778:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  781:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,16)[68]
  786:[80] PutRef(var[56], value=ref(1,9,16)[68])
  789:[68] VarRef(var[56]) -> ref(1,9,16)=false[68]
  792:[80] ConstInt(val=1) -> 1[80]
  797:[84] ConstInt(val=2) -> 2[84]
  802:[88] AddInt(v1=1[80], v2=2[84]) -> 3[80]
  803:[84] SetInt(v1=ref(1,9,16)[68], fld=0, val=3[80])
  806:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3][68]
  809:[80] VarRef(var[56]) -> ref(1,9,16)=true[80]
  812:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,16)[80], parent_tp=12, fld=65535)
  817:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3][68]
  820:[80] FreeStack(value=12, discard=36)
  824:[56] VarVector(var[44]) -> ref(1,1,4)=[1,2,3][56]
  827:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=12, fld=65535) -> ref(1,9,20)[56]
  832:[68] VarRef(var[56]) -> ref(1,9,20)=false[68]
  835:[80] ConstInt(val=4) -> 4[80]
  840:[84] SetInt(v1=ref(1,9,20)[68], fld=0, val=4[80])
  843:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  846:[80] VarRef(var[56]) -> ref(1,9,20)=true[80]
  849:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,20)[80], parent_tp=12, fld=65535)
  854:[68] FreeStack(value=0, discard=12)
  858:[56] ConstInt(val=0) -> 0[56]
  863:[60] ConstInt(val=0) -> 0[60]
  868:[64] VarInt(var[60]) -> 0[64]
  871:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  874:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  875:[72] GeInt(v1=0[64], v2=4[68]) -> false[64]
  876:[65] GotoFalseWord(jump=883, if_false=false[64])
  883:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][64]
  886:[76] VarInt(var[60]) -> 0[76]
  889:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=0[76]) -> ref(1,9,8)=1[64]
  892:[76] GetInt(v1=ref(1,9,8)[64], fld=0) -> 1[64]
  895:[68] VarInt(var[60]) -> 0[68]
  898:[72] ConstInt(val=1) -> 1[72]
  903:[76] AddInt(v1=0[68], v2=1[72]) -> 1[68]
  904:[72] PutInt(var[60], value=1[68])
  907:[68] VarInt(var[64]) -> 1[68]
  910:[72] FreeStack(value=4, discard=8)
  914:[68] VarInt(var[64]) -> 1[68]
  917:[72] ConvBoolFromInt(v1=1[68]) -> true[68]
  918:[69] Not(v1=true[68]) -> false[68]
  919:[69] GotoFalseWord(jump=929, if_false=false[68])
  929:[68] VarInt(var[56]) -> 0[68]
  932:[72] VarInt(var[64]) -> 1[72]
  935:[76] AddInt(v1=0[68], v2=1[72]) -> 1[68]
  936:[72] PutInt(var[56], value=1[68])
  939:[68] FreeStack(value=0, discard=4)
  943:[64] GotoWord(jump=868)
  868:[64] VarInt(var[60]) -> 1[64]
  871:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  874:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  875:[72] GeInt(v1=1[64], v2=4[68]) -> false[64]
  876:[65] GotoFalseWord(jump=883, if_false=false[64])
  883:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][64]
  886:[76] VarInt(var[60]) -> 1[76]
  889:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=1[76]) -> ref(1,9,12)=2[64]
  892:[76] GetInt(v1=ref(1,9,12)[64], fld=0) -> 2[64]
  895:[68] VarInt(var[60]) -> 1[68]
  898:[72] ConstInt(val=1) -> 1[72]
  903:[76] AddInt(v1=1[68], v2=1[72]) -> 2[68]
  904:[72] PutInt(var[60], value=2[68])
  907:[68] VarInt(var[64]) -> 2[68]
  910:[72] FreeStack(value=4, discard=8)
  914:[68] VarInt(var[64]) -> 2[68]
  917:[72] ConvBoolFromInt(v1=2[68]) -> true[68]
  918:[69] Not(v1=true[68]) -> false[68]
  919:[69] GotoFalseWord(jump=929, if_false=false[68])
  929:[68] VarInt(var[56]) -> 1[68]
  932:[72] VarInt(var[64]) -> 2[72]
  935:[76] AddInt(v1=1[68], v2=2[72]) -> 3[68]
  936:[72] PutInt(var[56], value=3[68])
  939:[68] FreeStack(value=0, discard=4)
  943:[64] GotoWord(jump=868)
  868:[64] VarInt(var[60]) -> 2[64]
  871:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  874:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  875:[72] GeInt(v1=2[64], v2=4[68]) -> false[64]
  876:[65] GotoFalseWord(jump=883, if_false=false[64])
  883:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][64]
  886:[76] VarInt(var[60]) -> 2[76]
  889:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=2[76]) -> ref(1,9,16)=3[64]
  892:[76] GetInt(v1=ref(1,9,16)[64], fld=0) -> 3[64]
  895:[68] VarInt(var[60]) -> 2[68]
  898:[72] ConstInt(val=1) -> 1[72]
  903:[76] AddInt(v1=2[68], v2=1[72]) -> 3[68]
  904:[72] PutInt(var[60], value=3[68])
  907:[68] VarInt(var[64]) -> 3[68]
  910:[72] FreeStack(value=4, discard=8)
  914:[68] VarInt(var[64]) -> 3[68]
  917:[72] ConvBoolFromInt(v1=3[68]) -> true[68]
  918:[69] Not(v1=true[68]) -> false[68]
  919:[69] GotoFalseWord(jump=929, if_false=false[68])
  929:[68] VarInt(var[56]) -> 3[68]
  932:[72] VarInt(var[64]) -> 3[72]
  935:[76] AddInt(v1=3[68], v2=3[72]) -> 6[68]
  936:[72] PutInt(var[56], value=6[68])
  939:[68] FreeStack(value=0, discard=4)
  943:[64] GotoWord(jump=868)
  868:[64] VarInt(var[60]) -> 3[64]
  871:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  874:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  875:[72] GeInt(v1=3[64], v2=4[68]) -> false[64]
  876:[65] GotoFalseWord(jump=883, if_false=false[64])
  883:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][64]
  886:[76] VarInt(var[60]) -> 3[76]
  889:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=3[76]) -> ref(1,9,20)=4[64]
  892:[76] GetInt(v1=ref(1,9,20)[64], fld=0) -> 4[64]
  895:[68] VarInt(var[60]) -> 3[68]
  898:[72] ConstInt(val=1) -> 1[72]
  903:[76] AddInt(v1=3[68], v2=1[72]) -> 4[68]
  904:[72] PutInt(var[60], value=4[68])
  907:[68] VarInt(var[64]) -> 4[68]
  910:[72] FreeStack(value=4, discard=8)
  914:[68] VarInt(var[64]) -> 4[68]
  917:[72] ConvBoolFromInt(v1=4[68]) -> true[68]
  918:[69] Not(v1=true[68]) -> false[68]
  919:[69] GotoFalseWord(jump=929, if_false=false[68])
  929:[68] VarInt(var[56]) -> 6[68]
  932:[72] VarInt(var[64]) -> 4[72]
  935:[76] AddInt(v1=6[68], v2=4[72]) -> 10[68]
  936:[72] PutInt(var[56], value=10[68])
  939:[68] FreeStack(value=0, discard=4)
  943:[64] GotoWord(jump=868)
  868:[64] VarInt(var[60]) -> 4[64]
  871:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  874:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  875:[72] GeInt(v1=4[64], v2=4[68]) -> true[64]
  876:[65] GotoFalseWord(jump=883, if_false=true[64])
  879:[64] ConvIntFromNull() -> -2147483648[64]
  880:[68] GotoWord(jump=914)
  914:[68] VarInt(var[64]) -> -2147483648[68]
  917:[72] ConvBoolFromInt(v1=-2147483648[68]) -> false[68]
  918:[69] Not(v1=false[68]) -> true[68]
  919:[69] GotoFalseWord(jump=929, if_false=true[68])
  922:[68] FreeStack(value=0, discard=4)
  926:[64] GotoWord(jump=946)
  946:[64] FreeStack(value=0, discard=4)
  950:[60] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][60]
  953:[72] ConstInt(val=1) -> 1[72]
  958:[76] ConstInt(val=2) -> 2[76]
  963:[80] AddInt(v1=1[72], v2=2[76]) -> 3[72]
  964:[76] GetVector(r=ref(1,1,4)=true[60], size=4, index=3[72]) -> ref(1,9,20)=4[60]
  967:[72] ConstInt(val=5) -> 5[72]
  972:[76] SetInt(v1=ref(1,9,20)[60], fld=0, val=5[72])
  975:[60] VarInt(var[56]) -> 10[60]
  978:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,5][64]
  981:[76] ConstInt(val=0) -> 0[76]
  986:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=0[76]) -> ref(1,9,8)=1[64]
  989:[76] GetInt(v1=ref(1,9,8)[64], fld=0) -> 1[64]
  992:[68] AddInt(v1=10[60], v2=1[64]) -> 11[60]
  993:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,5][64]
  996:[76] ConstInt(val=1) -> 1[76]
 1001:[80] MinSingleInt(v1=1[76]) -> -1[76]
 1002:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=-1[76]) -> ref(1,9,20)=5[64]
 1005:[76] GetInt(v1=ref(1,9,20)[64], fld=0) -> 5[64]
 1008:[68] AddInt(v1=11[60], v2=5[64]) -> 16[60]
 1009:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,5][64]
 1012:[76] Call(size=0, to=328)
  328:[80] VarVector(var[64]) -> ref(1,1,4)=true[80]
  331:[92] LengthVector(r=ref(1,1,4)=true[80]) -> 4[80]
  332:[84] Return(ret=1019[76], value=4, discard=20) -> 4[64]
 1019:[68] AddInt(v1=16[60], v2=4[64]) -> 20[60]
 1020:[64] FreeStack(value=4, discard=20)
 1024:[48] VarInt(var[44]) -> 20[48]
 1027:[52] ConstInt(val=20) -> 20[52]
 1032:[56] EqInt(v1=20[48], v2=20[52]) -> true[48]
 1033:[49] GotoFalseWord(jump=1039, if_false=true[48])
 1036:[48] GotoWord(jump=1089)
 1089:[48] FreeText(var[20])
 1092:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
