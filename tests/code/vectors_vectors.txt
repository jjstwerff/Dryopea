pub fn test() {
    test_value = {v=[1, 2, 1+2];
v += [4];
t = 0;
for e in v { t += e };
v[1 + 2] = 5;
t + v[0] + v[-1] + v.len()};
    assert(
        test_value == 20,
        "Test failed {test_value} != 20"
    );
}
Type 14:vector<integer>[4]:Vector(0)

Type 15:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __ref_1:ref(main_vector<integer>) = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    v:vector<integer>["__ref_1"] = {#3 vector
      OpDatabase(__ref_1, 15i32);
      _vec_1:vector<integer>["__ref_1"] = OpGetField(__ref_1, 4i32, 65535i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 1i32);
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 2i32);
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, OpAddInt(1i32, 2i32));
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _vec_1;
    }#3:vector<integer>["__ref_1"];
    {#4 vector
      _elm_3:ref(boolean)["v"] = OpNewRecord(v, 14i32, 65535i32);
      OpSetInt(_elm_3, 0i32, 4i32);
      OpFinishRecord(v, _elm_3, 14i32, 65535i32);
    }#4;
    t:integer = 0i32;
    {#5 for
      _vector_4:vector<integer>["v"] = v;
      e#index:integer = -1i32;
      loop {#6 for loop
        e:integer = {#7 iter next
          e#index:integer = OpAddInt(e#index, 1i32);
          OpGetInt(OpGetVector(_vector_4, 4i32, e#index), 0i32);
        }#7:integer;
        if OpNot(OpConvBoolFromInt(e)) break(0) else null;
        {#8 block
          t:integer = OpAddInt(t, e);
        }#8;
      }#6;
    }#5;
    OpSetInt(OpGetVector(v, 4i32, OpAddInt(1i32, 2i32)), 0i32, 5i32);
    OpAddInt(OpAddInt(OpAddInt(t, OpGetInt(OpGetVector(v, 4i32, 0i32), 0i32)), OpGetInt(OpGetVector(v, 4i32, OpMinSingleInt(1i32)), 0i32)), _tp_vector_len(v));
  }#2:integer;
  if OpEqInt(test_value, 20i32) null else OpPanic({#9 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 20");
    __work_1;
  }#9:text);
}#1

byte-code for vectors:test() [1073]
   0[0]: return-address
   0[4]: ConvRefFromNull() -> ref(reference) var=__ref_1[4]:ref(main_vector<integer>) in 1
   1[16]: Text() var=__work_1[16]:text in 1
   2[40]: Database(var[4], db_tp=15) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=v[40]:vector<integer>["__ref_1"] in 2
   7[40]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=__ref_1[4]:ref(main_vector<integer>) in 1
  10[52]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=Unknown type(65535)[65535]
  13[52]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=__ref_1[4]:ref(main_vector<integer>) in 1
  16[64]: ConstInt(val=0) -> integer
  21[68]: SetInt(v1: ref(reference), fld=4, val: integer)
  24[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  27[64]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
  32[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  35[76]: ConstInt(val=1) -> integer
  40[80]: SetInt(v1: ref(reference), fld=0, val: integer)
  43[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  46[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  49[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
  54[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  57[76]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
  62[76]: PutRef(var[52], value: ref(reference))
  65[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  68[76]: ConstInt(val=2) -> integer
  73[80]: SetInt(v1: ref(reference), fld=0, val: integer)
  76[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  79[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  82[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
  87[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  90[76]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
  95[76]: PutRef(var[52], value: ref(reference))
  98[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 101[76]: ConstInt(val=1) -> integer
 106[80]: ConstInt(val=2) -> integer
 111[84]: AddInt(v1: integer, v2: integer) -> integer
 112[80]: SetInt(v1: ref(reference), fld=0, val: integer)
 115[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 118[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 121[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
 126[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 129[76]: FreeStack(value=12, discard=36) type=vector<text>[4]:Vector(5)[6]
 133[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 136[64]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
 141[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_3[52]:ref(boolean)["v"] in 4
 144[76]: ConstInt(val=4) -> integer
 149[80]: SetInt(v1: ref(reference), fld=0, val: integer)
 152[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 155[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_3[52]:ref(boolean)["v"] in 4
 158[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
 163[64]: FreeStack(value=0, discard=12)
 167[52]: ConstInt(val=0) -> integer var=t[52]:integer in 2
 172[56]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 175[68]: ConstInt(val=-1) -> integer var=e#index[68]:integer in 5
 180[72]: VarInt(var[68]) -> integer var=e#index[68]:integer in 5
 183[76]: ConstInt(val=1) -> integer
 188[80]: AddInt(v1: integer, v2: integer) -> integer
 189[76]: PutInt(var[68], value: integer)
 192[72]: VarVector(var[56]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vector_4[56]:vector<integer>["v"] in 5
 195[84]: VarInt(var[68]) -> integer var=e#index[68]:integer in 5
 198[88]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 201[84]: GetInt(v1: ref(reference), fld=0) -> integer
 204[76]: VarInt(var[72]) -> integer var=e[72]:integer in 6
 207[80]: ConvBoolFromInt(v1: integer) -> boolean
 208[77]: Not(v1: boolean) -> boolean
 209[77]: GotoFalseWord(jump=219, if_false: boolean)
 212[76]: FreeStack(value=0, discard=4)
 216[72]: GotoWord(jump=236)
 219[76]: VarInt(var[52]) -> integer var=t[52]:integer in 2
 222[80]: VarInt(var[72]) -> integer var=e[72]:integer in 6
 225[84]: AddInt(v1: integer, v2: integer) -> integer
 226[80]: PutInt(var[52], value: integer)
 229[76]: FreeStack(value=0, discard=4)
 233[72]: GotoWord(jump=180)
 236[72]: FreeStack(value=0, discard=16)
 240[56]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 243[68]: ConstInt(val=1) -> integer
 248[72]: ConstInt(val=2) -> integer
 253[76]: AddInt(v1: integer, v2: integer) -> integer
 254[72]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 257[68]: ConstInt(val=5) -> integer
 262[72]: SetInt(v1: ref(reference), fld=0, val: integer)
 265[56]: VarInt(var[52]) -> integer var=t[52]:integer in 2
 268[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 271[72]: ConstInt(val=0) -> integer
 276[76]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 279[72]: GetInt(v1: ref(reference), fld=0) -> integer
 282[64]: AddInt(v1: integer, v2: integer) -> integer
 283[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 286[72]: ConstInt(val=1) -> integer
 291[76]: MinSingleInt(v1: integer) -> integer
 292[76]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 295[72]: GetInt(v1: ref(reference), fld=0) -> integer
 298[64]: AddInt(v1: integer, v2: integer) -> integer
 299[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 302[72]: Call(size=0, to=334)
 309[64]: AddInt(v1: integer, v2: integer) -> integer
 310[60]: FreeStack(value=4, discard=20) type=integer[4]:Base[0]
 314[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
 317[48]: ConstInt(val=20) -> integer
 322[52]: EqInt(v1: integer, v2: integer) -> boolean
 323[45]: GotoFalseWord(jump=329, if_false: boolean)
 326[44]: GotoWord(jump=379)
 329[44]: ClearText(var[16]) var=__work_1[16]:text in 1
 332[44]: ConstText(_value="Test failed ") -> text
 346[60]: AppendText(var[16], v1: text)
 349[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
 352[48]: ConstInt(val=0) -> integer
 357[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 364[44]: ConstText(_value=" != 20") -> text
 372[60]: AppendText(var[16], v1: text)
 375[44]: VarText(var[16]) -> text var=__work_1[16]:text in 1
 378[60]: Panic(message: text)
 379[44]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=__ref_1[4]:ref(main_vector<integer>) in 1
 382[56]: FreeRef(v1: ref(reference))
 383[44]: FreeText(var[16])
 386[44]: Return(ret=0, value=0, discard=44)

