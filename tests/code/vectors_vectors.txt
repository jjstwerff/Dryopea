Test code:
pub fn test() {
    test_value = {v=[1, 2, 1+2];
v += [4];
t = 0;
for e in v { t += e };
v[1 + 2] = 5;
t + v[0] + v[-1] + v.len()};
    assert(
        test_value == 20,
        "Test failed {test_value} != 20"
    );
}

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

Type 14:vector<integer>[4]:Vector(0)

fn test {
  let test_value = {
    let v = {
      let db_19 = OpDatabase(4i32, 13i32);
      let vec_18 = OpGetField(db_19, 4i32, 14i32);
      OpSetInt(db_19, 4i32, 0i32);
      let elm_17 = OpNewRecord(vec_18, 14i32, 65535i32);
      OpSetInt(elm_17, 0i32, 1i32);
      OpFinishRecord(vec_18, elm_17, 14i32, 65535i32);
      elm_17 = OpNewRecord(vec_18, 14i32, 65535i32);
      OpSetInt(elm_17, 0i32, 2i32);
      OpFinishRecord(vec_18, elm_17, 14i32, 65535i32);
      elm_17 = OpNewRecord(vec_18, 14i32, 65535i32);
      OpSetInt(elm_17, 0i32, OpAddInt(1i32, 2i32));
      OpFinishRecord(vec_18, elm_17, 14i32, 65535i32);
      vec_18;
    };
    {
      let vec_21 = v;
      let elm_20 = OpNewRecord(vec_21, 14i32, 65535i32);
      OpSetInt(elm_20, 0i32, 4i32);
      OpFinishRecord(vec_21, elm_20, 14i32, 65535i32);
    };
    let t = 0i32;
    {
      let e#index = 0i32;
      loop {
        let e = if OpGeInt(e#index, OpLengthVector(v)) {{
          OpConvIntFromNull();
        }} else {{
          let res_22 = OpGetInt(OpGetVector(v, 4i32, e#index), 0i32);
          e#index = OpAddInt(e#index, 1i32);
          res_22;
        }};
        if OpNot(OpConvBoolFromInt(e)) {break(0)} else {null};
        {
          t = OpAddInt(t, e);
        };
      };
    };
    OpSetInt(OpGetVector(v, 4i32, OpAddInt(1i32, 2i32)), 0i32, 5i32);
    OpAddInt(OpAddInt(OpAddInt(t, OpGetInt(OpGetVector(v, 4i32, 0i32), 0i32)), OpGetInt(OpGetVector(v, 4i32, OpMinSingleInt(1i32)), 0i32)), _tp_vector_len(v));
  };
  if OpEqInt(test_value, 20i32) {null} else {OpGenPanic({
    let append_23 = "Test failed ";
    OpFormatInt(append_23, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_23, " != 20");
    append_23;
  })};
}

byte-code for vectors:test()
 668[0]: return-address
 668[4]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 673[16]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 676[28]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[14]
 679[28]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 682[40]: ConstInt(val=0) -> integer
 687[44]: SetInt(v1: reference, fld=4, val: integer)
 690[28]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 693[40]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 698[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 701[52]: ConstInt(val=1) -> integer
 706[56]: SetInt(v1: reference, fld=0, val: integer)
 709[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 712[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 715[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 720[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 723[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 728[52]: PutRef(var[28], value: reference)
 731[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 734[52]: ConstInt(val=2) -> integer
 739[56]: SetInt(v1: reference, fld=0, val: integer)
 742[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 745[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 748[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 753[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 756[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 761[52]: PutRef(var[28], value: reference)
 764[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 767[52]: ConstInt(val=1) -> integer
 772[56]: ConstInt(val=2) -> integer
 777[60]: AddInt(v1: integer, v2: integer) -> integer
 778[56]: SetInt(v1: reference, fld=0, val: integer)
 781[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 784[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 787[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 792[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 795[52]: GenFreeStack(value=12, discard=36)
 799[16]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 802[28]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 805[40]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 810[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 813[52]: ConstInt(val=4) -> integer
 818[56]: SetInt(v1: reference, fld=0, val: integer)
 821[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 824[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 827[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 832[40]: GenFreeStack(value=0, discard=24)
 836[16]: ConstInt(val=0) -> integer
 841[20]: ConstInt(val=0) -> integer
 846[24]: VarInt(var[20]) -> integer
 849[28]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 852[40]: LengthVector(r: vector) -> integer
 853[32]: GeInt(v1: integer, v2: integer) -> boolean
 854[25]: GenGotoFalseWord(jump=861, if_false: boolean)
 857[24]: ConvIntFromNull() -> integer
 858[28]: GenGotoWord(jump=892)
 861[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 864[36]: VarInt(var[20]) -> integer
 867[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 870[36]: GetInt(v1: reference, fld=0) -> integer
 873[28]: VarInt(var[20]) -> integer
 876[32]: ConstInt(val=1) -> integer
 881[36]: AddInt(v1: integer, v2: integer) -> integer
 882[32]: PutInt(var[20], value: integer)
 885[28]: VarInt(var[24]) -> integer
 888[32]: GenFreeStack(value=4, discard=4)
 892[28]: VarInt(var[24]) -> integer
 895[32]: ConvBoolFromInt(v1: integer) -> boolean
 896[29]: Not(v1: boolean) -> boolean
 897[29]: GenGotoFalseWord(jump=907, if_false: boolean)
 900[28]: GenFreeStack(value=0, discard=4)
 904[24]: GenGotoWord(jump=924)
 907[28]: VarInt(var[16]) -> integer
 910[32]: VarInt(var[24]) -> integer
 913[36]: AddInt(v1: integer, v2: integer) -> integer
 914[32]: PutInt(var[16], value: integer)
 917[28]: GenFreeStack(value=0, discard=4)
 921[24]: GenGotoWord(jump=846)
 924[24]: GenFreeStack(value=0, discard=4)
 928[20]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 931[32]: ConstInt(val=1) -> integer
 936[36]: ConstInt(val=2) -> integer
 941[40]: AddInt(v1: integer, v2: integer) -> integer
 942[36]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 945[32]: ConstInt(val=5) -> integer
 950[36]: SetInt(v1: reference, fld=0, val: integer)
 953[20]: VarInt(var[16]) -> integer
 956[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 959[36]: ConstInt(val=0) -> integer
 964[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 967[36]: GetInt(v1: reference, fld=0) -> integer
 970[28]: AddInt(v1: integer, v2: integer) -> integer
 971[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 974[36]: ConstInt(val=1) -> integer
 979[40]: MinSingleInt(v1: integer) -> integer
 980[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 983[36]: GetInt(v1: reference, fld=0) -> integer
 986[28]: AddInt(v1: integer, v2: integer) -> integer
 987[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 990[36]: GenCall(size=0, to=328)
 997[28]: AddInt(v1: integer, v2: integer) -> integer
 998[24]: GenFreeStack(value=4, discard=16)
1002[8]: VarInt(var[4]) -> integer
1005[12]: ConstInt(val=20) -> integer
1010[16]: EqInt(v1: integer, v2: integer) -> boolean
1011[9]: GenGotoFalseWord(jump=1017, if_false: boolean)
1014[8]: GenGotoWord(jump=1069)
1017[8]: Text()
1018[32]: ConstText(_value="Test failed ") -> text
1032[48]: AppendText(var[8], v1: text)
1035[32]: VarInt(var[4]) -> integer
1038[36]: ConstInt(val=0) -> integer
1043[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1050[32]: ConstText(_value=" != 20") -> text
1058[48]: AppendText(var[8], v1: text)
1061[32]: VarText(var[8]) -> text
1064[48]: GenFreeStack(value=16, discard=24)
1068[24]: GenPanic(message: text)
1069[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
  668:[4] Database(size=4, db_tp=13) -> ref(1,1,0)={}[4]
  673:[16] VarRef(var[4]) -> ref(1,1,0)={}[16]
  676:[28] GetField(v1=ref(1,1,0)[16], fld=4) -> ref(1,1,4)=[][16]
  679:[28] VarRef(var[4]) -> ref(1,1,0)={}[28]
  682:[40] ConstInt(val=0) -> 0[40]
  687:[44] SetInt(v1=ref(1,1,0)[28], fld=4, val=0[40])
  690:[28] VarVector(var[16]) -> ref(1,1,4)=[][28]
  693:[40] NewRecord(data=ref(1,1,4)[28], parent_tp=14, fld=65535) -> ref(1,5,8)[28]
  698:[40] VarRef(var[28]) -> ref(1,5,8)=false[40]
  701:[52] ConstInt(val=1) -> 1[52]
  706:[56] SetInt(v1=ref(1,5,8)[40], fld=0, val=1[52])
  709:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  712:[52] VarRef(var[28]) -> ref(1,5,8)=true[52]
  715:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,8)[52], parent_tp=14, fld=65535)
  720:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  723:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,12)[40]
  728:[52] PutRef(var[28], value=ref(1,5,12)[40])
  731:[40] VarRef(var[28]) -> ref(1,5,12)=false[40]
  734:[52] ConstInt(val=2) -> 2[52]
  739:[56] SetInt(v1=ref(1,5,12)[40], fld=0, val=2[52])
  742:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  745:[52] VarRef(var[28]) -> ref(1,5,12)=true[52]
  748:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,12)[52], parent_tp=14, fld=65535)
  753:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  756:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,16)[40]
  761:[52] PutRef(var[28], value=ref(1,5,16)[40])
  764:[40] VarRef(var[28]) -> ref(1,5,16)=false[40]
  767:[52] ConstInt(val=1) -> 1[52]
  772:[56] ConstInt(val=2) -> 2[56]
  777:[60] AddInt(v1=1[52], v2=2[56]) -> 3[52]
  778:[56] SetInt(v1=ref(1,5,16)[40], fld=0, val=3[52])
  781:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3][40]
  784:[52] VarRef(var[28]) -> ref(1,5,16)=true[52]
  787:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,16)[52], parent_tp=14, fld=65535)
  792:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3][40]
  795:[52] GenFreeStack(value=12, discard=36)
  799:[16] VarVector(var[4]) -> ref(1,1,4)=[1,2,3][16]
  802:[28] VarVector(var[16]) -> ref(1,1,4)=[1,2,3][28]
  805:[40] NewRecord(data=ref(1,1,4)[28], parent_tp=14, fld=65535) -> ref(1,5,20)[28]
  810:[40] VarRef(var[28]) -> ref(1,5,20)=false[40]
  813:[52] ConstInt(val=4) -> 4[52]
  818:[56] SetInt(v1=ref(1,5,20)[40], fld=0, val=4[52])
  821:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3,4][40]
  824:[52] VarRef(var[28]) -> ref(1,5,20)=true[52]
  827:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,20)[52], parent_tp=14, fld=65535)
  832:[40] GenFreeStack(value=0, discard=24)
  836:[16] ConstInt(val=0) -> 0[16]
  841:[20] ConstInt(val=0) -> 0[20]
  846:[24] VarInt(var[20]) -> 0[24]
  849:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  852:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  853:[32] GeInt(v1=0[24], v2=4[28]) -> false[24]
  854:[25] GenGotoFalseWord(jump=861, if_false=false[24])
  861:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][24]
  864:[36] VarInt(var[20]) -> 0[36]
  867:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=0[36]) -> ref(1,5,8)=1[24]
  870:[36] GetInt(v1=ref(1,5,8)[24], fld=0) -> 1[24]
  873:[28] VarInt(var[20]) -> 0[28]
  876:[32] ConstInt(val=1) -> 1[32]
  881:[36] AddInt(v1=0[28], v2=1[32]) -> 1[28]
  882:[32] PutInt(var[20], value=1[28])
  885:[28] VarInt(var[24]) -> 1[28]
  888:[32] GenFreeStack(value=4, discard=4)
  892:[28] VarInt(var[24]) -> 1[28]
  895:[32] ConvBoolFromInt(v1=1[28]) -> true[28]
  896:[29] Not(v1=true[28]) -> false[28]
  897:[29] GenGotoFalseWord(jump=907, if_false=false[28])
  907:[28] VarInt(var[16]) -> 0[28]
  910:[32] VarInt(var[24]) -> 1[32]
  913:[36] AddInt(v1=0[28], v2=1[32]) -> 1[28]
  914:[32] PutInt(var[16], value=1[28])
  917:[28] GenFreeStack(value=0, discard=4)
  921:[24] GenGotoWord(jump=846)
  846:[24] VarInt(var[20]) -> 1[24]
  849:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  852:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  853:[32] GeInt(v1=1[24], v2=4[28]) -> false[24]
  854:[25] GenGotoFalseWord(jump=861, if_false=false[24])
  861:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][24]
  864:[36] VarInt(var[20]) -> 1[36]
  867:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=1[36]) -> ref(1,5,12)=2[24]
  870:[36] GetInt(v1=ref(1,5,12)[24], fld=0) -> 2[24]
  873:[28] VarInt(var[20]) -> 1[28]
  876:[32] ConstInt(val=1) -> 1[32]
  881:[36] AddInt(v1=1[28], v2=1[32]) -> 2[28]
  882:[32] PutInt(var[20], value=2[28])
  885:[28] VarInt(var[24]) -> 2[28]
  888:[32] GenFreeStack(value=4, discard=4)
  892:[28] VarInt(var[24]) -> 2[28]
  895:[32] ConvBoolFromInt(v1=2[28]) -> true[28]
  896:[29] Not(v1=true[28]) -> false[28]
  897:[29] GenGotoFalseWord(jump=907, if_false=false[28])
  907:[28] VarInt(var[16]) -> 1[28]
  910:[32] VarInt(var[24]) -> 2[32]
  913:[36] AddInt(v1=1[28], v2=2[32]) -> 3[28]
  914:[32] PutInt(var[16], value=3[28])
  917:[28] GenFreeStack(value=0, discard=4)
  921:[24] GenGotoWord(jump=846)
  846:[24] VarInt(var[20]) -> 2[24]
  849:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  852:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  853:[32] GeInt(v1=2[24], v2=4[28]) -> false[24]
  854:[25] GenGotoFalseWord(jump=861, if_false=false[24])
  861:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][24]
  864:[36] VarInt(var[20]) -> 2[36]
  867:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=2[36]) -> ref(1,5,16)=3[24]
  870:[36] GetInt(v1=ref(1,5,16)[24], fld=0) -> 3[24]
  873:[28] VarInt(var[20]) -> 2[28]
  876:[32] ConstInt(val=1) -> 1[32]
  881:[36] AddInt(v1=2[28], v2=1[32]) -> 3[28]
  882:[32] PutInt(var[20], value=3[28])
  885:[28] VarInt(var[24]) -> 3[28]
  888:[32] GenFreeStack(value=4, discard=4)
  892:[28] VarInt(var[24]) -> 3[28]
  895:[32] ConvBoolFromInt(v1=3[28]) -> true[28]
  896:[29] Not(v1=true[28]) -> false[28]
  897:[29] GenGotoFalseWord(jump=907, if_false=false[28])
  907:[28] VarInt(var[16]) -> 3[28]
  910:[32] VarInt(var[24]) -> 3[32]
  913:[36] AddInt(v1=3[28], v2=3[32]) -> 6[28]
  914:[32] PutInt(var[16], value=6[28])
  917:[28] GenFreeStack(value=0, discard=4)
  921:[24] GenGotoWord(jump=846)
  846:[24] VarInt(var[20]) -> 3[24]
  849:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  852:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  853:[32] GeInt(v1=3[24], v2=4[28]) -> false[24]
  854:[25] GenGotoFalseWord(jump=861, if_false=false[24])
  861:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][24]
  864:[36] VarInt(var[20]) -> 3[36]
  867:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=3[36]) -> ref(1,5,20)=4[24]
  870:[36] GetInt(v1=ref(1,5,20)[24], fld=0) -> 4[24]
  873:[28] VarInt(var[20]) -> 3[28]
  876:[32] ConstInt(val=1) -> 1[32]
  881:[36] AddInt(v1=3[28], v2=1[32]) -> 4[28]
  882:[32] PutInt(var[20], value=4[28])
  885:[28] VarInt(var[24]) -> 4[28]
  888:[32] GenFreeStack(value=4, discard=4)
  892:[28] VarInt(var[24]) -> 4[28]
  895:[32] ConvBoolFromInt(v1=4[28]) -> true[28]
  896:[29] Not(v1=true[28]) -> false[28]
  897:[29] GenGotoFalseWord(jump=907, if_false=false[28])
  907:[28] VarInt(var[16]) -> 6[28]
  910:[32] VarInt(var[24]) -> 4[32]
  913:[36] AddInt(v1=6[28], v2=4[32]) -> 10[28]
  914:[32] PutInt(var[16], value=10[28])
  917:[28] GenFreeStack(value=0, discard=4)
  921:[24] GenGotoWord(jump=846)
  846:[24] VarInt(var[20]) -> 4[24]
  849:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  852:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  853:[32] GeInt(v1=4[24], v2=4[28]) -> true[24]
  854:[25] GenGotoFalseWord(jump=861, if_false=true[24])
  857:[24] ConvIntFromNull() -> -2147483648[24]
  858:[28] GenGotoWord(jump=892)
  892:[28] VarInt(var[24]) -> -2147483648[28]
  895:[32] ConvBoolFromInt(v1=-2147483648[28]) -> false[28]
  896:[29] Not(v1=false[28]) -> true[28]
  897:[29] GenGotoFalseWord(jump=907, if_false=true[28])
  900:[28] GenFreeStack(value=0, discard=4)
  904:[24] GenGotoWord(jump=924)
  924:[24] GenFreeStack(value=0, discard=4)
  928:[20] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][20]
  931:[32] ConstInt(val=1) -> 1[32]
  936:[36] ConstInt(val=2) -> 2[36]
  941:[40] AddInt(v1=1[32], v2=2[36]) -> 3[32]
  942:[36] GetVector(r=ref(1,1,4)=true[20], size=4, index=3[32]) -> ref(1,5,20)=4[20]
  945:[32] ConstInt(val=5) -> 5[32]
  950:[36] SetInt(v1=ref(1,5,20)[20], fld=0, val=5[32])
  953:[20] VarInt(var[16]) -> 10[20]
  956:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,5][24]
  959:[36] ConstInt(val=0) -> 0[36]
  964:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=0[36]) -> ref(1,5,8)=1[24]
  967:[36] GetInt(v1=ref(1,5,8)[24], fld=0) -> 1[24]
  970:[28] AddInt(v1=10[20], v2=1[24]) -> 11[20]
  971:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,5][24]
  974:[36] ConstInt(val=1) -> 1[36]
  979:[40] MinSingleInt(v1=1[36]) -> -1[36]
  980:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=-1[36]) -> ref(1,5,20)=5[24]
  983:[36] GetInt(v1=ref(1,5,20)[24], fld=0) -> 5[24]
  986:[28] AddInt(v1=11[20], v2=5[24]) -> 16[20]
  987:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,5][24]
  990:[36] GenCall(size=0, to=328)
  328:[40] VarVector(var[24]) -> ref(1,1,4)={r:5,g:0,b:0}[40]
  331:[52] LengthVector(r=ref(1,1,4)=true[40]) -> 4[40]
  332:[44] GenReturn(ret=997[36], value=4, discard=20)
  997:[28] AddInt(v1=16[20], v2=4[24]) -> 20[20]
  998:[24] GenFreeStack(value=4, discard=16)
 1002:[8] VarInt(var[4]) -> 20[8]
 1005:[12] ConstInt(val=20) -> 20[12]
 1010:[16] EqInt(v1=20[8], v2=20[12]) -> true[8]
 1011:[9] GenGotoFalseWord(jump=1017, if_false=true[8])
 1014:[8] GenGotoWord(jump=1069)
 1069:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
