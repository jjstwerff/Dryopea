Test code:
pub fn test() {
    test_value = {v=[1, 2, 1+2];
v += [4];
t = 0;
for e in v { t += e };
v[1 + 2] = 5;
t + v[0] + v[-1] + v.len()};
    assert(
        test_value == 20,
        "Test failed {test_value} != 20"
    );
}

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

Type 14:vector<integer>[4]:Vector(0)

fn test {
  let test_value = {
    let v = {
      let db_19 = OpDatabase(4i32, 13i32);
      let vec_18 = OpGetField(db_19, 4i32, 14i32);
      OpSetInt(db_19, 4i32, 0i32);
      let elm_17 = OpNewRecord(vec_18, 14i32, 65535i32);
      OpSetInt(elm_17, 0i32, 1i32);
      OpFinishRecord(vec_18, elm_17, 14i32, 65535i32);
      elm_17 = OpNewRecord(vec_18, 14i32, 65535i32);
      OpSetInt(elm_17, 0i32, 2i32);
      OpFinishRecord(vec_18, elm_17, 14i32, 65535i32);
      elm_17 = OpNewRecord(vec_18, 14i32, 65535i32);
      OpSetInt(elm_17, 0i32, OpAddInt(1i32, 2i32));
      OpFinishRecord(vec_18, elm_17, 14i32, 65535i32);
      vec_18;
    };
    {
      let vec_21 = v;
      let elm_20 = OpNewRecord(vec_21, 14i32, 65535i32);
      OpSetInt(elm_20, 0i32, 4i32);
      OpFinishRecord(vec_21, elm_20, 14i32, 65535i32);
    };
    let t = 0i32;
    {
      let e#index = 0i32;
      loop {
        let e = if OpGeInt(e#index, OpLengthVector(v)) {{
          OpConvIntFromNull();
        }} else {{
          let res_22 = OpGetInt(OpGetVector(v, 4i32, e#index), 0i32);
          e#index = OpAddInt(e#index, 1i32);
          res_22;
        }};
        if OpNot(OpConvBoolFromInt(e)) {break(0)} else {null};
        {
          t = OpAddInt(t, e);
        };
      };
    };
    OpSetInt(OpGetVector(v, 4i32, OpAddInt(1i32, 2i32)), 0i32, 5i32);
    OpAddInt(OpAddInt(OpAddInt(t, OpGetInt(OpGetVector(v, 4i32, 0i32), 0i32)), OpGetInt(OpGetVector(v, 4i32, OpMinSingleInt(1i32)), 0i32)), _tp_vector_len(v));
  };
  if OpEqInt(test_value, 20i32) {null} else {OpGenPanic({
    let append_23 = "Test failed ";
    OpFormatInt(append_23, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_23, " != 20");
    append_23;
  })};
}

byte-code for vectors:test()
 664[0]: return-address
 664[4]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 669[16]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 672[28]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[14]
 675[28]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 678[40]: ConstInt(val=0) -> integer
 683[44]: SetInt(v1: reference, fld=4, val: integer)
 686[28]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 689[40]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 694[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 697[52]: ConstInt(val=1) -> integer
 702[56]: SetInt(v1: reference, fld=0, val: integer)
 705[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 708[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 711[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 716[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 719[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 724[52]: PutRef(var[28], value: reference)
 727[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 730[52]: ConstInt(val=2) -> integer
 735[56]: SetInt(v1: reference, fld=0, val: integer)
 738[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 741[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 744[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 749[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 752[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 757[52]: PutRef(var[28], value: reference)
 760[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 763[52]: ConstInt(val=1) -> integer
 768[56]: ConstInt(val=2) -> integer
 773[60]: AddInt(v1: integer, v2: integer) -> integer
 774[56]: SetInt(v1: reference, fld=0, val: integer)
 777[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 780[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 783[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 788[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 791[52]: GenFreeStack(value=12, discard=36)
 795[16]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 798[28]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 801[40]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 806[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 809[52]: ConstInt(val=4) -> integer
 814[56]: SetInt(v1: reference, fld=0, val: integer)
 817[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 820[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 823[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 828[40]: GenFreeStack(value=0, discard=24)
 832[16]: ConstInt(val=0) -> integer
 837[20]: ConstInt(val=0) -> integer
 842[24]: VarInt(var[20]) -> integer
 845[28]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 848[40]: LengthVector(r: vector) -> integer
 849[32]: GeInt(v1: integer, v2: integer) -> boolean
 850[25]: GenGotoFalseWord(jump=857, if_false: boolean)
 853[24]: ConvIntFromNull() -> integer
 854[28]: GenGotoWord(jump=888)
 857[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 860[36]: VarInt(var[20]) -> integer
 863[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 866[36]: GetInt(v1: reference, fld=0) -> integer
 869[28]: VarInt(var[20]) -> integer
 872[32]: ConstInt(val=1) -> integer
 877[36]: AddInt(v1: integer, v2: integer) -> integer
 878[32]: PutInt(var[20], value: integer)
 881[28]: VarInt(var[24]) -> integer
 884[32]: GenFreeStack(value=4, discard=4)
 888[28]: VarInt(var[24]) -> integer
 891[32]: ConvBoolFromInt(v1: integer) -> boolean
 892[29]: Not(v1: boolean) -> boolean
 893[29]: GenGotoFalseWord(jump=903, if_false: boolean)
 896[28]: GenFreeStack(value=0, discard=4)
 900[24]: GenGotoWord(jump=920)
 903[28]: VarInt(var[16]) -> integer
 906[32]: VarInt(var[24]) -> integer
 909[36]: AddInt(v1: integer, v2: integer) -> integer
 910[32]: PutInt(var[16], value: integer)
 913[28]: GenFreeStack(value=0, discard=4)
 917[24]: GenGotoWord(jump=842)
 920[24]: GenFreeStack(value=0, discard=4)
 924[20]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 927[32]: ConstInt(val=1) -> integer
 932[36]: ConstInt(val=2) -> integer
 937[40]: AddInt(v1: integer, v2: integer) -> integer
 938[36]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 941[32]: ConstInt(val=5) -> integer
 946[36]: SetInt(v1: reference, fld=0, val: integer)
 949[20]: VarInt(var[16]) -> integer
 952[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 955[36]: ConstInt(val=0) -> integer
 960[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 963[36]: GetInt(v1: reference, fld=0) -> integer
 966[28]: AddInt(v1: integer, v2: integer) -> integer
 967[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 970[36]: ConstInt(val=1) -> integer
 975[40]: MinSingleInt(v1: integer) -> integer
 976[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 979[36]: GetInt(v1: reference, fld=0) -> integer
 982[28]: AddInt(v1: integer, v2: integer) -> integer
 983[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 986[36]: GenCall(size=0, to=328)
 993[28]: AddInt(v1: integer, v2: integer) -> integer
 994[24]: GenFreeStack(value=4, discard=16)
 998[8]: VarInt(var[4]) -> integer
1001[12]: ConstInt(val=20) -> integer
1006[16]: EqInt(v1: integer, v2: integer) -> boolean
1007[9]: GenGotoFalseWord(jump=1013, if_false: boolean)
1010[8]: GenGotoWord(jump=1065)
1013[8]: Text()
1014[32]: ConstText(_value="Test failed ") -> text
1028[48]: AppendText(var[8], v1: text)
1031[32]: VarInt(var[4]) -> integer
1034[36]: ConstInt(val=0) -> integer
1039[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1046[32]: ConstText(_value=" != 20") -> text
1054[48]: AppendText(var[8], v1: text)
1057[32]: VarText(var[8]) -> text
1060[48]: GenFreeStack(value=16, discard=24)
1064[24]: GenPanic(message: text)
1065[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
  664:[4] Database(size=4, db_tp=13) -> ref(1,1,0)={}[4]
  669:[16] VarRef(var[4]) -> ref(1,1,0)={}[16]
  672:[28] GetField(v1=ref(1,1,0)[16], fld=4) -> ref(1,1,4)=[][16]
  675:[28] VarRef(var[4]) -> ref(1,1,0)={}[28]
  678:[40] ConstInt(val=0) -> 0[40]
  683:[44] SetInt(v1=ref(1,1,0)[28], fld=4, val=0[40])
  686:[28] VarVector(var[16]) -> ref(1,1,4)=[][28]
  689:[40] NewRecord(data=ref(1,1,4)[28], parent_tp=14, fld=65535) -> ref(1,5,8)[28]
  694:[40] VarRef(var[28]) -> ref(1,5,8)=false[40]
  697:[52] ConstInt(val=1) -> 1[52]
  702:[56] SetInt(v1=ref(1,5,8)[40], fld=0, val=1[52])
  705:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  708:[52] VarRef(var[28]) -> ref(1,5,8)=true[52]
  711:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,8)[52], parent_tp=14, fld=65535)
  716:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  719:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,12)[40]
  724:[52] PutRef(var[28], value=ref(1,5,12)[40])
  727:[40] VarRef(var[28]) -> ref(1,5,12)=false[40]
  730:[52] ConstInt(val=2) -> 2[52]
  735:[56] SetInt(v1=ref(1,5,12)[40], fld=0, val=2[52])
  738:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  741:[52] VarRef(var[28]) -> ref(1,5,12)=true[52]
  744:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,12)[52], parent_tp=14, fld=65535)
  749:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  752:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,16)[40]
  757:[52] PutRef(var[28], value=ref(1,5,16)[40])
  760:[40] VarRef(var[28]) -> ref(1,5,16)=false[40]
  763:[52] ConstInt(val=1) -> 1[52]
  768:[56] ConstInt(val=2) -> 2[56]
  773:[60] AddInt(v1=1[52], v2=2[56]) -> 3[52]
  774:[56] SetInt(v1=ref(1,5,16)[40], fld=0, val=3[52])
  777:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3][40]
  780:[52] VarRef(var[28]) -> ref(1,5,16)=true[52]
  783:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,16)[52], parent_tp=14, fld=65535)
  788:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3][40]
  791:[52] GenFreeStack(value=12, discard=36)
  795:[16] VarVector(var[4]) -> ref(1,1,4)=[1,2,3][16]
  798:[28] VarVector(var[16]) -> ref(1,1,4)=[1,2,3][28]
  801:[40] NewRecord(data=ref(1,1,4)[28], parent_tp=14, fld=65535) -> ref(1,5,20)[28]
  806:[40] VarRef(var[28]) -> ref(1,5,20)=false[40]
  809:[52] ConstInt(val=4) -> 4[52]
  814:[56] SetInt(v1=ref(1,5,20)[40], fld=0, val=4[52])
  817:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3,4][40]
  820:[52] VarRef(var[28]) -> ref(1,5,20)=true[52]
  823:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,20)[52], parent_tp=14, fld=65535)
  828:[40] GenFreeStack(value=0, discard=24)
  832:[16] ConstInt(val=0) -> 0[16]
  837:[20] ConstInt(val=0) -> 0[20]
  842:[24] VarInt(var[20]) -> 0[24]
  845:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  848:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  849:[32] GeInt(v1=0[24], v2=4[28]) -> false[24]
  850:[25] GenGotoFalseWord(jump=857, if_false=false[24])
  857:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][24]
  860:[36] VarInt(var[20]) -> 0[36]
  863:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=0[36]) -> ref(1,5,8)=1[24]
  866:[36] GetInt(v1=ref(1,5,8)[24], fld=0) -> 1[24]
  869:[28] VarInt(var[20]) -> 0[28]
  872:[32] ConstInt(val=1) -> 1[32]
  877:[36] AddInt(v1=0[28], v2=1[32]) -> 1[28]
  878:[32] PutInt(var[20], value=1[28])
  881:[28] VarInt(var[24]) -> 1[28]
  884:[32] GenFreeStack(value=4, discard=4)
  888:[28] VarInt(var[24]) -> 1[28]
  891:[32] ConvBoolFromInt(v1=1[28]) -> true[28]
  892:[29] Not(v1=true[28]) -> false[28]
  893:[29] GenGotoFalseWord(jump=903, if_false=false[28])
  903:[28] VarInt(var[16]) -> 0[28]
  906:[32] VarInt(var[24]) -> 1[32]
  909:[36] AddInt(v1=0[28], v2=1[32]) -> 1[28]
  910:[32] PutInt(var[16], value=1[28])
  913:[28] GenFreeStack(value=0, discard=4)
  917:[24] GenGotoWord(jump=842)
  842:[24] VarInt(var[20]) -> 1[24]
  845:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  848:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  849:[32] GeInt(v1=1[24], v2=4[28]) -> false[24]
  850:[25] GenGotoFalseWord(jump=857, if_false=false[24])
  857:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][24]
  860:[36] VarInt(var[20]) -> 1[36]
  863:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=1[36]) -> ref(1,5,12)=2[24]
  866:[36] GetInt(v1=ref(1,5,12)[24], fld=0) -> 2[24]
  869:[28] VarInt(var[20]) -> 1[28]
  872:[32] ConstInt(val=1) -> 1[32]
  877:[36] AddInt(v1=1[28], v2=1[32]) -> 2[28]
  878:[32] PutInt(var[20], value=2[28])
  881:[28] VarInt(var[24]) -> 2[28]
  884:[32] GenFreeStack(value=4, discard=4)
  888:[28] VarInt(var[24]) -> 2[28]
  891:[32] ConvBoolFromInt(v1=2[28]) -> true[28]
  892:[29] Not(v1=true[28]) -> false[28]
  893:[29] GenGotoFalseWord(jump=903, if_false=false[28])
  903:[28] VarInt(var[16]) -> 1[28]
  906:[32] VarInt(var[24]) -> 2[32]
  909:[36] AddInt(v1=1[28], v2=2[32]) -> 3[28]
  910:[32] PutInt(var[16], value=3[28])
  913:[28] GenFreeStack(value=0, discard=4)
  917:[24] GenGotoWord(jump=842)
  842:[24] VarInt(var[20]) -> 2[24]
  845:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  848:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  849:[32] GeInt(v1=2[24], v2=4[28]) -> false[24]
  850:[25] GenGotoFalseWord(jump=857, if_false=false[24])
  857:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][24]
  860:[36] VarInt(var[20]) -> 2[36]
  863:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=2[36]) -> ref(1,5,16)=3[24]
  866:[36] GetInt(v1=ref(1,5,16)[24], fld=0) -> 3[24]
  869:[28] VarInt(var[20]) -> 2[28]
  872:[32] ConstInt(val=1) -> 1[32]
  877:[36] AddInt(v1=2[28], v2=1[32]) -> 3[28]
  878:[32] PutInt(var[20], value=3[28])
  881:[28] VarInt(var[24]) -> 3[28]
  884:[32] GenFreeStack(value=4, discard=4)
  888:[28] VarInt(var[24]) -> 3[28]
  891:[32] ConvBoolFromInt(v1=3[28]) -> true[28]
  892:[29] Not(v1=true[28]) -> false[28]
  893:[29] GenGotoFalseWord(jump=903, if_false=false[28])
  903:[28] VarInt(var[16]) -> 3[28]
  906:[32] VarInt(var[24]) -> 3[32]
  909:[36] AddInt(v1=3[28], v2=3[32]) -> 6[28]
  910:[32] PutInt(var[16], value=6[28])
  913:[28] GenFreeStack(value=0, discard=4)
  917:[24] GenGotoWord(jump=842)
  842:[24] VarInt(var[20]) -> 3[24]
  845:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  848:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  849:[32] GeInt(v1=3[24], v2=4[28]) -> false[24]
  850:[25] GenGotoFalseWord(jump=857, if_false=false[24])
  857:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][24]
  860:[36] VarInt(var[20]) -> 3[36]
  863:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=3[36]) -> ref(1,5,20)=4[24]
  866:[36] GetInt(v1=ref(1,5,20)[24], fld=0) -> 4[24]
  869:[28] VarInt(var[20]) -> 3[28]
  872:[32] ConstInt(val=1) -> 1[32]
  877:[36] AddInt(v1=3[28], v2=1[32]) -> 4[28]
  878:[32] PutInt(var[20], value=4[28])
  881:[28] VarInt(var[24]) -> 4[28]
  884:[32] GenFreeStack(value=4, discard=4)
  888:[28] VarInt(var[24]) -> 4[28]
  891:[32] ConvBoolFromInt(v1=4[28]) -> true[28]
  892:[29] Not(v1=true[28]) -> false[28]
  893:[29] GenGotoFalseWord(jump=903, if_false=false[28])
  903:[28] VarInt(var[16]) -> 6[28]
  906:[32] VarInt(var[24]) -> 4[32]
  909:[36] AddInt(v1=6[28], v2=4[32]) -> 10[28]
  910:[32] PutInt(var[16], value=10[28])
  913:[28] GenFreeStack(value=0, discard=4)
  917:[24] GenGotoWord(jump=842)
  842:[24] VarInt(var[20]) -> 4[24]
  845:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][28]
  848:[40] LengthVector(r=ref(1,1,4)=true[28]) -> 4[28]
  849:[32] GeInt(v1=4[24], v2=4[28]) -> true[24]
  850:[25] GenGotoFalseWord(jump=857, if_false=true[24])
  853:[24] ConvIntFromNull() -> -2147483648[24]
  854:[28] GenGotoWord(jump=888)
  888:[28] VarInt(var[24]) -> -2147483648[28]
  891:[32] ConvBoolFromInt(v1=-2147483648[28]) -> false[28]
  892:[29] Not(v1=false[28]) -> true[28]
  893:[29] GenGotoFalseWord(jump=903, if_false=true[28])
  896:[28] GenFreeStack(value=0, discard=4)
  900:[24] GenGotoWord(jump=920)
  920:[24] GenFreeStack(value=0, discard=4)
  924:[20] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4][20]
  927:[32] ConstInt(val=1) -> 1[32]
  932:[36] ConstInt(val=2) -> 2[36]
  937:[40] AddInt(v1=1[32], v2=2[36]) -> 3[32]
  938:[36] GetVector(r=ref(1,1,4)=true[20], size=4, index=3[32]) -> ref(1,5,20)=4[20]
  941:[32] ConstInt(val=5) -> 5[32]
  946:[36] SetInt(v1=ref(1,5,20)[20], fld=0, val=5[32])
  949:[20] VarInt(var[16]) -> 10[20]
  952:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,5][24]
  955:[36] ConstInt(val=0) -> 0[36]
  960:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=0[36]) -> ref(1,5,8)=1[24]
  963:[36] GetInt(v1=ref(1,5,8)[24], fld=0) -> 1[24]
  966:[28] AddInt(v1=10[20], v2=1[24]) -> 11[20]
  967:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,5][24]
  970:[36] ConstInt(val=1) -> 1[36]
  975:[40] MinSingleInt(v1=1[36]) -> -1[36]
  976:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=-1[36]) -> ref(1,5,20)=5[24]
  979:[36] GetInt(v1=ref(1,5,20)[24], fld=0) -> 5[24]
  982:[28] AddInt(v1=11[20], v2=5[24]) -> 16[20]
  983:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,5][24]
  986:[36] GenCall(size=0, to=328)
  328:[40] VarVector(var[24]) -> ref(1,1,4)={r:5,g:0,b:0}[40]
  331:[52] LengthVector(r=ref(1,1,4)=true[40]) -> 4[40]
  332:[44] GenReturn(ret=993[36], value=4, discard=20)
  993:[28] AddInt(v1=16[20], v2=4[24]) -> 20[20]
  994:[24] GenFreeStack(value=4, discard=16)
  998:[8] VarInt(var[4]) -> 20[8]
 1001:[12] ConstInt(val=20) -> 20[12]
 1006:[16] EqInt(v1=20[8], v2=20[12]) -> true[8]
 1007:[9] GenGotoFalseWord(jump=1013, if_false=true[8])
 1010:[8] GenGotoWord(jump=1065)
 1065:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
