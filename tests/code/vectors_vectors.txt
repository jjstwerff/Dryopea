pub fn test() {
    test_value = {v=[1, 2, 1+2];
v += [4];
t = 0;
for e in v { t += e };
v[1 + 2] = 5;
t + v[0] + v[-1] + v.len()};
    assert(
        test_value == 20,
        "Test failed {test_value} != 20"
    );
}
Type 11:vector<integer>[4]:Vector(0)

Type 12:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test {#1 block
  let __work_1 = "";
  let test_value = {#2 block
    let v = {#3 vector
      let _db_3 = OpDatabase(4i32, 12i32);
      let _vec_2 = OpGetField(_db_3, 4i32, 65535i32);
      OpSetInt(_db_3, 4i32, 0i32);
      let _elm_1 = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1 = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1 = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, OpAddInt(1i32, 2i32));
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _vec_2;
    }#3;
    {#4 vector
      let _elm_4 = OpNewRecord(v, 11i32, 65535i32);
      OpSetInt(_elm_4, 0i32, 4i32);
      OpFinishRecord(v, _elm_4, 11i32, 65535i32);
    }#4;
    let t = 0i32;
    {#5 for
      let e#index = 0i32;
      loop {#6 for loop
        let e = if OpGeInt(e#index, OpLengthVector(v)) OpConvIntFromNull() else {#7 iter next
          let _res_5 = OpGetInt(OpGetVector(v, 4i32, e#index), 0i32);
          e#index = OpAddInt(e#index, 1i32);
          _res_5;
        }#7;
        if OpNot(OpConvBoolFromInt(e)) break(0) else null;
        {#8 block
          t = OpAddInt(t, e);
        }#8;
      }#6;
    }#5;
    OpSetInt(OpGetVector(v, 4i32, OpAddInt(1i32, 2i32)), 0i32, 5i32);
    OpAddInt(OpAddInt(OpAddInt(t, OpGetInt(OpGetVector(v, 4i32, 0i32), 0i32)), OpGetInt(OpGetVector(v, 4i32, OpMinSingleInt(1i32)), 0i32)), _tp_vector_len(v));
  }#2;
  if OpEqInt(test_value, 20i32) null else OpGenPanic({#9 formatting string
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 20");
    __work_1;
  }#9);
}#1

byte-code for vectors:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: Database(size=4, db_tp=12) -> reference#[] type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 674[40]: VarRef(var[28]) -> reference#[] type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 677[52]: GetField(v1: reference#[], fld=4) -> reference#[] type=Unknown type(65535)[65535]
 680[52]: VarRef(var[28]) -> reference#[] type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 683[64]: ConstInt(val=0) -> integer
 688[68]: SetInt(v1: reference#[], fld=4, val: integer)
 691[52]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 694[64]: NewRecord(data: reference#[], parent_tp=11, fld=65535) -> reference#[]
 699[64]: VarRef(var[52]) -> reference#[] type=boolean[1]:Base[4]
 702[76]: ConstInt(val=1) -> integer
 707[80]: SetInt(v1: reference#[], fld=0, val: integer)
 710[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 713[76]: VarRef(var[52]) -> reference#[] type=boolean[1]:Base[4]
 716[88]: FinishRecord(data: reference#[], rec: reference#[], parent_tp=11, fld=65535)
 721[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 724[76]: NewRecord(data: reference#[], parent_tp=11, fld=65535) -> reference#[]
 729[76]: PutRef(var[52], value: reference#[])
 732[64]: VarRef(var[52]) -> reference#[] type=boolean[1]:Base[4]
 735[76]: ConstInt(val=2) -> integer
 740[80]: SetInt(v1: reference#[], fld=0, val: integer)
 743[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 746[76]: VarRef(var[52]) -> reference#[] type=boolean[1]:Base[4]
 749[88]: FinishRecord(data: reference#[], rec: reference#[], parent_tp=11, fld=65535)
 754[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 757[76]: NewRecord(data: reference#[], parent_tp=11, fld=65535) -> reference#[]
 762[76]: PutRef(var[52], value: reference#[])
 765[64]: VarRef(var[52]) -> reference#[] type=boolean[1]:Base[4]
 768[76]: ConstInt(val=1) -> integer
 773[80]: ConstInt(val=2) -> integer
 778[84]: AddInt(v1: integer, v2: integer) -> integer
 779[80]: SetInt(v1: reference#[], fld=0, val: integer)
 782[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 785[76]: VarRef(var[52]) -> reference#[] type=boolean[1]:Base[4]
 788[88]: FinishRecord(data: reference#[], rec: reference#[], parent_tp=11, fld=65535)
 793[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 796[76]: GenFreeStack(value=12, discard=36)
 800[40]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 803[52]: NewRecord(data: reference#[], parent_tp=11, fld=65535) -> reference#[]
 808[52]: VarRef(var[40]) -> reference#[] type=boolean[1]:Base[4]
 811[64]: ConstInt(val=4) -> integer
 816[68]: SetInt(v1: reference#[], fld=0, val: integer)
 819[52]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 822[64]: VarRef(var[40]) -> reference#[] type=boolean[1]:Base[4]
 825[76]: FinishRecord(data: reference#[], rec: reference#[], parent_tp=11, fld=65535)
 830[52]: GenFreeStack(value=0, discard=12)
 834[40]: ConstInt(val=0) -> integer
 839[44]: ConstInt(val=0) -> integer
 844[48]: VarInt(var[44]) -> integer
 847[52]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 850[64]: LengthVector(r: vector#[]) -> integer
 851[56]: GeInt(v1: integer, v2: integer) -> boolean
 852[49]: GenGotoFalseWord(jump=859, if_false: boolean)
 855[48]: ConvIntFromNull() -> integer
 856[52]: GenGotoWord(jump=890)
 859[48]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 862[60]: VarInt(var[44]) -> integer
 865[64]: GetVector(r: vector#[], size=4, index: integer) -> reference#[] type=integer[4]:Base[0]
 868[60]: GetInt(v1: reference#[], fld=0) -> integer
 871[52]: VarInt(var[44]) -> integer
 874[56]: ConstInt(val=1) -> integer
 879[60]: AddInt(v1: integer, v2: integer) -> integer
 880[56]: PutInt(var[44], value: integer)
 883[52]: VarInt(var[48]) -> integer
 886[56]: GenFreeStack(value=4, discard=4)
 890[52]: VarInt(var[48]) -> integer
 893[56]: ConvBoolFromInt(v1: integer) -> boolean
 894[53]: Not(v1: boolean) -> boolean
 895[53]: GenGotoFalseWord(jump=905, if_false: boolean)
 898[52]: GenFreeStack(value=0, discard=4)
 902[48]: GenGotoWord(jump=922)
 905[52]: VarInt(var[40]) -> integer
 908[56]: VarInt(var[48]) -> integer
 911[60]: AddInt(v1: integer, v2: integer) -> integer
 912[56]: PutInt(var[40], value: integer)
 915[52]: GenFreeStack(value=0, discard=4)
 919[48]: GenGotoWord(jump=844)
 922[48]: GenFreeStack(value=0, discard=4)
 926[44]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 929[56]: ConstInt(val=1) -> integer
 934[60]: ConstInt(val=2) -> integer
 939[64]: AddInt(v1: integer, v2: integer) -> integer
 940[60]: GetVector(r: vector#[], size=4, index: integer) -> reference#[] type=integer[4]:Base[0]
 943[56]: ConstInt(val=5) -> integer
 948[60]: SetInt(v1: reference#[], fld=0, val: integer)
 951[44]: VarInt(var[40]) -> integer
 954[48]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 957[60]: ConstInt(val=0) -> integer
 962[64]: GetVector(r: vector#[], size=4, index: integer) -> reference#[] type=integer[4]:Base[0]
 965[60]: GetInt(v1: reference#[], fld=0) -> integer
 968[52]: AddInt(v1: integer, v2: integer) -> integer
 969[48]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 972[60]: ConstInt(val=1) -> integer
 977[64]: MinSingleInt(v1: integer) -> integer
 978[64]: GetVector(r: vector#[], size=4, index: integer) -> reference#[] type=integer[4]:Base[0]
 981[60]: GetInt(v1: reference#[], fld=0) -> integer
 984[52]: AddInt(v1: integer, v2: integer) -> integer
 985[48]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 988[60]: GenCall(size=0, to=328)
 995[52]: AddInt(v1: integer, v2: integer) -> integer
 996[48]: GenFreeStack(value=4, discard=16)
1000[32]: VarInt(var[28]) -> integer
1003[36]: ConstInt(val=20) -> integer
1008[40]: EqInt(v1: integer, v2: integer) -> boolean
1009[33]: GenGotoFalseWord(jump=1015, if_false: boolean)
1012[32]: GenGotoWord(jump=1065)
1015[32]: ClearText(var[4])
1018[32]: ConstText(_value="Test failed ") -> text(false, [])
1032[48]: AppendText(var[4], v1: text(false, []))
1035[32]: VarInt(var[28]) -> integer
1038[36]: ConstInt(val=0) -> integer
1043[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1050[32]: ConstText(_value=" != 20") -> text(false, [])
1058[48]: AppendText(var[4], v1: text(false, []))
1061[32]: VarText(var[4]) -> text(false, [])
1064[48]: GenPanic(message: text(false, []))
1065[32]: GenReturn(ret=0, value=0, discard=32)

Execute test:
  668:[8] Text()
  669:[32] Database(size=4, db_tp=12) -> ref(1,1,0)={}[32]
  674:[44] VarRef(var[32]) -> ref(1,1,0)={}[44]
  677:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  680:[56] VarRef(var[32]) -> ref(1,1,0)={}[56]
  683:[68] ConstInt(val=0) -> 0[68]
  688:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  691:[56] VarVector(var[44]) -> ref(1,1,4)[56]
  694:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=11, fld=65535) -> ref(1,5,8)[56]
  699:[68] VarRef(var[56]) -> ref(1,5,8)=false[68]
  702:[80] ConstInt(val=1) -> 1[80]
  707:[84] SetInt(v1=ref(1,5,8)[68], fld=0, val=1[80])
  710:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  713:[80] VarRef(var[56]) -> ref(1,5,8)=true[80]
  716:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,8)[80], parent_tp=11, fld=65535)
  721:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  724:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,12)[68]
  729:[80] PutRef(var[56], value=ref(1,5,12)[68])
  732:[68] VarRef(var[56]) -> ref(1,5,12)=false[68]
  735:[80] ConstInt(val=2) -> 2[80]
  740:[84] SetInt(v1=ref(1,5,12)[68], fld=0, val=2[80])
  743:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  746:[80] VarRef(var[56]) -> ref(1,5,12)=true[80]
  749:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,12)[80], parent_tp=11, fld=65535)
  754:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  757:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,16)[68]
  762:[80] PutRef(var[56], value=ref(1,5,16)[68])
  765:[68] VarRef(var[56]) -> ref(1,5,16)=false[68]
  768:[80] ConstInt(val=1) -> 1[80]
  773:[84] ConstInt(val=2) -> 2[84]
  778:[88] AddInt(v1=1[80], v2=2[84]) -> 3[80]
  779:[84] SetInt(v1=ref(1,5,16)[68], fld=0, val=3[80])
  782:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  785:[80] VarRef(var[56]) -> ref(1,5,16)=true[80]
  788:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,16)[80], parent_tp=11, fld=65535)
  793:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  796:[80] GenFreeStack(value=12, discard=36)
  800:[44] VarVector(var[32]) -> ref(1,1,4)[44]
  803:[56] NewRecord(data=ref(1,1,4)[44], parent_tp=11, fld=65535) -> ref(1,5,20)[44]
  808:[56] VarRef(var[44]) -> ref(1,5,20)=false[56]
  811:[68] ConstInt(val=4) -> 4[68]
  816:[72] SetInt(v1=ref(1,5,20)[56], fld=0, val=4[68])
  819:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  822:[68] VarRef(var[44]) -> ref(1,5,20)=true[68]
  825:[80] FinishRecord(data=ref(1,1,4)[56], rec=ref(1,5,20)[68], parent_tp=11, fld=65535)
  830:[56] GenFreeStack(value=0, discard=12)
  834:[44] ConstInt(val=0) -> 0[44]
  839:[48] ConstInt(val=0) -> 0[48]
  844:[52] VarInt(var[48]) -> 0[52]
  847:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  850:[68] LengthVector(r=ref(1,1,4)=true[56]) -> 4[56]
  851:[60] GeInt(v1=0[52], v2=4[56]) -> false[52]
  852:[53] GenGotoFalseWord(jump=859, if_false=false[52])
  859:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  862:[64] VarInt(var[48]) -> 0[64]
  865:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=0[64]) -> ref(1,5,8)=1[52]
  868:[64] GetInt(v1=ref(1,5,8)[52], fld=0) -> 1[52]
  871:[56] VarInt(var[48]) -> 0[56]
  874:[60] ConstInt(val=1) -> 1[60]
  879:[64] AddInt(v1=0[56], v2=1[60]) -> 1[56]
  880:[60] PutInt(var[48], value=1[56])
  883:[56] VarInt(var[52]) -> 1[56]
  886:[60] GenFreeStack(value=4, discard=4)
  890:[56] VarInt(var[52]) -> 1[56]
  893:[60] ConvBoolFromInt(v1=1[56]) -> true[56]
  894:[57] Not(v1=true[56]) -> false[56]
  895:[57] GenGotoFalseWord(jump=905, if_false=false[56])
  905:[56] VarInt(var[44]) -> 0[56]
  908:[60] VarInt(var[52]) -> 1[60]
  911:[64] AddInt(v1=0[56], v2=1[60]) -> 1[56]
  912:[60] PutInt(var[44], value=1[56])
  915:[56] GenFreeStack(value=0, discard=4)
  919:[52] GenGotoWord(jump=844)
  844:[52] VarInt(var[48]) -> 1[52]
  847:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  850:[68] LengthVector(r=ref(1,1,4)=true[56]) -> 4[56]
  851:[60] GeInt(v1=1[52], v2=4[56]) -> false[52]
  852:[53] GenGotoFalseWord(jump=859, if_false=false[52])
  859:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  862:[64] VarInt(var[48]) -> 1[64]
  865:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=1[64]) -> ref(1,5,12)=2[52]
  868:[64] GetInt(v1=ref(1,5,12)[52], fld=0) -> 2[52]
  871:[56] VarInt(var[48]) -> 1[56]
  874:[60] ConstInt(val=1) -> 1[60]
  879:[64] AddInt(v1=1[56], v2=1[60]) -> 2[56]
  880:[60] PutInt(var[48], value=2[56])
  883:[56] VarInt(var[52]) -> 2[56]
  886:[60] GenFreeStack(value=4, discard=4)
  890:[56] VarInt(var[52]) -> 2[56]
  893:[60] ConvBoolFromInt(v1=2[56]) -> true[56]
  894:[57] Not(v1=true[56]) -> false[56]
  895:[57] GenGotoFalseWord(jump=905, if_false=false[56])
  905:[56] VarInt(var[44]) -> 1[56]
  908:[60] VarInt(var[52]) -> 2[60]
  911:[64] AddInt(v1=1[56], v2=2[60]) -> 3[56]
  912:[60] PutInt(var[44], value=3[56])
  915:[56] GenFreeStack(value=0, discard=4)
  919:[52] GenGotoWord(jump=844)
  844:[52] VarInt(var[48]) -> 2[52]
  847:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  850:[68] LengthVector(r=ref(1,1,4)=true[56]) -> 4[56]
  851:[60] GeInt(v1=2[52], v2=4[56]) -> false[52]
  852:[53] GenGotoFalseWord(jump=859, if_false=false[52])
  859:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  862:[64] VarInt(var[48]) -> 2[64]
  865:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=2[64]) -> ref(1,5,16)=3[52]
  868:[64] GetInt(v1=ref(1,5,16)[52], fld=0) -> 3[52]
  871:[56] VarInt(var[48]) -> 2[56]
  874:[60] ConstInt(val=1) -> 1[60]
  879:[64] AddInt(v1=2[56], v2=1[60]) -> 3[56]
  880:[60] PutInt(var[48], value=3[56])
  883:[56] VarInt(var[52]) -> 3[56]
  886:[60] GenFreeStack(value=4, discard=4)
  890:[56] VarInt(var[52]) -> 3[56]
  893:[60] ConvBoolFromInt(v1=3[56]) -> true[56]
  894:[57] Not(v1=true[56]) -> false[56]
  895:[57] GenGotoFalseWord(jump=905, if_false=false[56])
  905:[56] VarInt(var[44]) -> 3[56]
  908:[60] VarInt(var[52]) -> 3[60]
  911:[64] AddInt(v1=3[56], v2=3[60]) -> 6[56]
  912:[60] PutInt(var[44], value=6[56])
  915:[56] GenFreeStack(value=0, discard=4)
  919:[52] GenGotoWord(jump=844)
  844:[52] VarInt(var[48]) -> 3[52]
  847:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  850:[68] LengthVector(r=ref(1,1,4)=true[56]) -> 4[56]
  851:[60] GeInt(v1=3[52], v2=4[56]) -> false[52]
  852:[53] GenGotoFalseWord(jump=859, if_false=false[52])
  859:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  862:[64] VarInt(var[48]) -> 3[64]
  865:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=3[64]) -> ref(1,5,20)=4[52]
  868:[64] GetInt(v1=ref(1,5,20)[52], fld=0) -> 4[52]
  871:[56] VarInt(var[48]) -> 3[56]
  874:[60] ConstInt(val=1) -> 1[60]
  879:[64] AddInt(v1=3[56], v2=1[60]) -> 4[56]
  880:[60] PutInt(var[48], value=4[56])
  883:[56] VarInt(var[52]) -> 4[56]
  886:[60] GenFreeStack(value=4, discard=4)
  890:[56] VarInt(var[52]) -> 4[56]
  893:[60] ConvBoolFromInt(v1=4[56]) -> true[56]
  894:[57] Not(v1=true[56]) -> false[56]
  895:[57] GenGotoFalseWord(jump=905, if_false=false[56])
  905:[56] VarInt(var[44]) -> 6[56]
  908:[60] VarInt(var[52]) -> 4[60]
  911:[64] AddInt(v1=6[56], v2=4[60]) -> 10[56]
  912:[60] PutInt(var[44], value=10[56])
  915:[56] GenFreeStack(value=0, discard=4)
  919:[52] GenGotoWord(jump=844)
  844:[52] VarInt(var[48]) -> 4[52]
  847:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  850:[68] LengthVector(r=ref(1,1,4)=true[56]) -> 4[56]
  851:[60] GeInt(v1=4[52], v2=4[56]) -> true[52]
  852:[53] GenGotoFalseWord(jump=859, if_false=true[52])
  855:[52] ConvIntFromNull() -> -2147483648[52]
  856:[56] GenGotoWord(jump=890)
  890:[56] VarInt(var[52]) -> -2147483648[56]
  893:[60] ConvBoolFromInt(v1=-2147483648[56]) -> false[56]
  894:[57] Not(v1=false[56]) -> true[56]
  895:[57] GenGotoFalseWord(jump=905, if_false=true[56])
  898:[56] GenFreeStack(value=0, discard=4)
  902:[52] GenGotoWord(jump=922)
  922:[52] GenFreeStack(value=0, discard=4)
  926:[48] VarVector(var[32]) -> ref(1,1,4)[48]
  929:[60] ConstInt(val=1) -> 1[60]
  934:[64] ConstInt(val=2) -> 2[64]
  939:[68] AddInt(v1=1[60], v2=2[64]) -> 3[60]
  940:[64] GetVector(r=ref(1,1,4)=true[48], size=4, index=3[60]) -> ref(1,5,20)=4[48]
  943:[60] ConstInt(val=5) -> 5[60]
  948:[64] SetInt(v1=ref(1,5,20)[48], fld=0, val=5[60])
  951:[48] VarInt(var[44]) -> 10[48]
  954:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  957:[64] ConstInt(val=0) -> 0[64]
  962:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=0[64]) -> ref(1,5,8)=1[52]
  965:[64] GetInt(v1=ref(1,5,8)[52], fld=0) -> 1[52]
  968:[56] AddInt(v1=10[48], v2=1[52]) -> 11[48]
  969:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  972:[64] ConstInt(val=1) -> 1[64]
  977:[68] MinSingleInt(v1=1[64]) -> -1[64]
  978:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=-1[64]) -> ref(1,5,20)=5[52]
  981:[64] GetInt(v1=ref(1,5,20)[52], fld=0) -> 5[52]
  984:[56] AddInt(v1=11[48], v2=5[52]) -> 16[48]
  985:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  988:[64] GenCall(size=0, to=328)
  328:[68] VarVector(var[52]) -> ref(1,1,4)={r:5,g:0,b:0}[68]
  331:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  332:[72] GenReturn(ret=995[64], value=4, discard=20)
  995:[56] AddInt(v1=16[48], v2=4[52]) -> 20[48]
  996:[52] GenFreeStack(value=4, discard=16)
 1000:[36] VarInt(var[32]) -> 20[36]
 1003:[40] ConstInt(val=20) -> 20[40]
 1008:[44] EqInt(v1=20[36], v2=20[40]) -> true[36]
 1009:[37] GenGotoFalseWord(jump=1015, if_false=true[36])
 1012:[36] GenGotoWord(jump=1065)
 1065:[36] GenReturn(ret=4294967295[4], value=0, discard=32)
Finished
