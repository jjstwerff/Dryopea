pub fn test() {
    test_value = {txt="12ðŸ˜ŠðŸ™ƒ45"; "a{for c in txt[2..-1] {c}}b"};
    assert(
        test_value == "a[ðŸ˜Š,ðŸ™ƒ,4]b",
        "Test failed {test_value} != \"a[ðŸ˜Š,ðŸ™ƒ,4]b\""
    );
}
fn test() {#1 block
  __work_3:text = "";
  __work_2:text = "";
  c:text["txt"] = "";
  __work_1:text = "";
  test_value:text = {#2 block
    txt:text = "12ðŸ˜ŠðŸ™ƒ45";
    {#3 formatting string
      __work_1:text = "a";
      OpAppendText(__work_1, "[");
      c#index:integer = 0i32;
      _first_2:boolean = true;
      loop {#4 iter for loop
        _val_1:text["c"] = {#5 iter for fill
          c:text["txt"] = {#6 for text next
            __work_2:text = OpGetTextSub(OpGetTextSub(txt, 2i32, OpMinSingleInt(1i32)), c#index, -2147483648i32);
            c#index:integer = OpAddInt(c#index, OpLengthText(__work_2));
            __work_2;
          }#6:text["txt"];
          if OpNot(OpConvBoolFromText(c)) break(0) else null;
          {#7 block
            c;
          }#7:text["c"];
        }#5:text["c"];
        if _first_2 _first_2:boolean = false else OpAppendText(__work_1, ",");
        OpFormatText(__work_1, _val_1, 0i32, -1i32, 32i32);
      }#4;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, "b");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a[ðŸ˜Š,ðŸ™ƒ,4]b") null else OpPanic({#8 formatting string
    __work_3:text = "Test failed ";
    OpFormatText(__work_3, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_3, " != "a[ðŸ˜Š,ðŸ™ƒ,4]b"");
    __work_3;
  }#8:text);
}#1

byte-code for format_chars:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: Text()
 693[52]: Text()
 694[76]: Text()
 695[100]: Text()
 696[124]: Text()
 697[148]: ConstText(_value="12ðŸ˜ŠðŸ™ƒ45") -> text
 711[164]: AppendText(var[124], v1: text)
 714[148]: ClearText(var[76])
 717[148]: ConstText(_value="a") -> text
 720[164]: AppendText(var[76], v1: text)
 723[148]: ConstText(_value="[") -> text
 726[164]: AppendText(var[76], v1: text)
 729[148]: ConstInt(val=0) -> integer
 734[152]: ConstTrue() -> boolean
 735[153]: Text()
 736[177]: ClearText(var[52])
 739[177]: ClearText(var[28])
 742[177]: VarText(var[124]) -> text
 745[193]: ConstInt(val=2) -> integer
 750[197]: ConstInt(val=1) -> integer
 755[201]: MinSingleInt(v1: integer) -> integer
 756[201]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 757[193]: VarInt(var[148]) -> integer
 760[197]: ConstInt(val=-2147483648) -> integer
 765[201]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 766[193]: AppendText(var[28], v1: text)
 769[177]: VarInt(var[148]) -> integer
 772[181]: VarText(var[28]) -> text
 775[197]: LengthText(v1: text) -> integer
 776[185]: AddInt(v1: integer, v2: integer) -> integer
 777[181]: PutInt(var[148], value: integer)
 780[177]: VarText(var[28]) -> text
 783[193]: AppendText(var[52], v1: text)
 786[177]: VarText(var[52]) -> text
 789[193]: ConvBoolFromText(v1: text) -> boolean
 790[178]: Not(v1: boolean) -> boolean
 791[178]: GotoFalseWord(jump=804, if_false: boolean)
 794[177]: FreeText(var[153])
 797[177]: FreeStack(value=0, discard=24)
 801[153]: GotoWord(jump=852)
 804[177]: VarText(var[52]) -> text
 807[193]: AppendText(var[153], v1: text)
 810[177]: VarBool(var[152]) -> boolean
 813[178]: GotoFalseWord(jump=823, if_false: boolean)
 816[177]: ConstFalse() -> boolean
 817[178]: PutBool(var=26, value: boolean)
 820[177]: GotoWord(jump=829)
 823[177]: ConstText(_value=",") -> text
 826[193]: AppendText(var[76], v1: text)
 829[177]: VarText(var[153]) -> text
 832[193]: ConstInt(val=0) -> integer
 837[197]: FormatText(var[76], val: text, width: integer, dir=-1, token=32)
 842[177]: FreeText(var[153])
 845[177]: FreeStack(value=0, discard=24)
 849[153]: GotoWord(jump=735)
 852[153]: ConstText(_value="]") -> text
 855[169]: AppendText(var[76], v1: text)
 858[153]: ConstText(_value="b") -> text
 861[169]: AppendText(var[76], v1: text)
 864[153]: VarText(var[76]) -> text
 867[169]: FreeStack(value=16, discard=21) type=text[4]:Base[5]
 871[164]: FreeText(var[124])
 874[164]: FreeStack(value=16, discard=40) type=text[4]:Base[5]
 878[140]: AppendText(var[100], v1: text)
 881[124]: VarText(var[100]) -> text
 884[140]: ConstText(_value="a[ðŸ˜Š,ðŸ™ƒ,4]b") -> text
 901[156]: EqText(v1: text, v2: text) -> boolean
 902[125]: GotoFalseWord(jump=908, if_false: boolean)
 905[124]: GotoWord(jump=971)
 908[124]: ClearText(var[4])
 911[124]: ConstText(_value="Test failed ") -> text
 925[140]: AppendText(var[4], v1: text)
 928[124]: VarText(var[100]) -> text
 931[140]: ConstInt(val=0) -> integer
 936[144]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 941[124]: ConstText(_value=" != "a[ðŸ˜Š,ðŸ™ƒ,4]b"") -> text
 964[140]: AppendText(var[4], v1: text)
 967[124]: VarText(var[4]) -> text
 970[140]: Panic(message: text)
 971[124]: FreeText(var[100])
 974[124]: FreeText(var[76])
 977[124]: FreeText(var[52])
 980[124]: FreeText(var[28])
 983[124]: FreeText(var[4])
 986[124]: Return(ret=0, value=0, discard=124)

Execute test:
  691:[8] Text()
  692:[32] Text()
  693:[56] Text()
  694:[80] Text()
  695:[104] Text()
  696:[128] Text()
  697:[152] ConstText(_value="12ðŸ˜ŠðŸ™ƒ45") -> "12ðŸ˜ŠðŸ™ƒ45"[152]
  711:[168] AppendText(var[128], v1="12ðŸ˜ŠðŸ™ƒ45"[152])
  714:[152] ClearText(var[80])
  717:[152] ConstText(_value="a") -> "a"[152]
  720:[168] AppendText(var[80], v1="a"[152])
  723:[152] ConstText(_value="[") -> "["[152]
  726:[168] AppendText(var[80], v1="["[152])
  729:[152] ConstInt(val=0) -> 0[152]
  734:[156] ConstTrue() -> true[156]
  735:[157] Text()
  736:[181] ClearText(var[56])
  739:[181] ClearText(var[32])
  742:[181] VarText(var[128]) -> "12ðŸ˜ŠðŸ™ƒ45"[181]
  745:[197] ConstInt(val=2) -> 2[197]
  750:[201] ConstInt(val=1) -> 1[201]
  755:[205] MinSingleInt(v1=1[201]) -> -1[201]
  756:[205] GetTextSub(v1="12ðŸ˜ŠðŸ™ƒ45"[181], from=2[197], till=-1[201]) -> "ðŸ˜ŠðŸ™ƒ4"[181]
  757:[197] VarInt(var[152]) -> 0[197]
  760:[201] ConstInt(val=-2147483648) -> -2147483648[201]
  765:[205] GetTextSub(v1="ðŸ˜ŠðŸ™ƒ4"[181], from=0[197], till=-2147483648[201]) -> "ðŸ˜Š"[181]
  766:[197] AppendText(var[32], v1="ðŸ˜Š"[181])
  769:[181] VarInt(var[152]) -> 0[181]
  772:[185] VarText(var[32]) -> "ðŸ˜Š"[185]
  775:[201] LengthText(v1="ðŸ˜Š"[185]) -> 4[185]
  776:[189] AddInt(v1=0[181], v2=4[185]) -> 4[181]
  777:[185] PutInt(var[152], value=4[181])
  780:[181] VarText(var[32]) -> "ðŸ˜Š"[181]
  783:[197] AppendText(var[56], v1="ðŸ˜Š"[181])
  786:[181] VarText(var[56]) -> "ðŸ˜Š"[181]
  789:[197] ConvBoolFromText(v1="ðŸ˜Š"[181]) -> true[181]
  790:[182] Not(v1=true[181]) -> false[181]
  791:[182] GotoFalseWord(jump=804, if_false=false[181])
  804:[181] VarText(var[56]) -> "ðŸ˜Š"[181]
  807:[197] AppendText(var[157], v1="ðŸ˜Š"[181])
  810:[181] VarBool(var[156]) -> true[181]
  813:[182] GotoFalseWord(jump=823, if_false=true[181])
  816:[181] ConstFalse() -> false[181]
  817:[182] PutBool(var=26, value=false[181])
  820:[181] GotoWord(jump=829)
  829:[181] VarText(var[157]) -> "ðŸ˜Š"[181]
  832:[197] ConstInt(val=0) -> 0[197]
  837:[201] FormatText(var[80], val="ðŸ˜Š"[181], width=0[197], dir=-1, token=32)
  842:[181] FreeText(var[157])
  845:[181] FreeStack(value=0, discard=24)
  849:[157] GotoWord(jump=735)
  735:[157] Text()
  736:[181] ClearText(var[56])
  739:[181] ClearText(var[32])
  742:[181] VarText(var[128]) -> "12ðŸ˜ŠðŸ™ƒ45"[181]
  745:[197] ConstInt(val=2) -> 2[197]
  750:[201] ConstInt(val=1) -> 1[201]
  755:[205] MinSingleInt(v1=1[201]) -> -1[201]
  756:[205] GetTextSub(v1="12ðŸ˜ŠðŸ™ƒ45"[181], from=2[197], till=-1[201]) -> "ðŸ˜ŠðŸ™ƒ4"[181]
  757:[197] VarInt(var[152]) -> 4[197]
  760:[201] ConstInt(val=-2147483648) -> -2147483648[201]
  765:[205] GetTextSub(v1="ðŸ˜ŠðŸ™ƒ4"[181], from=4[197], till=-2147483648[201]) -> "ðŸ™ƒ"[181]
  766:[197] AppendText(var[32], v1="ðŸ™ƒ"[181])
  769:[181] VarInt(var[152]) -> 4[181]
  772:[185] VarText(var[32]) -> "ðŸ™ƒ"[185]
  775:[201] LengthText(v1="ðŸ™ƒ"[185]) -> 4[185]
  776:[189] AddInt(v1=4[181], v2=4[185]) -> 8[181]
  777:[185] PutInt(var[152], value=8[181])
  780:[181] VarText(var[32]) -> "ðŸ™ƒ"[181]
  783:[197] AppendText(var[56], v1="ðŸ™ƒ"[181])
  786:[181] VarText(var[56]) -> "ðŸ™ƒ"[181]
  789:[197] ConvBoolFromText(v1="ðŸ™ƒ"[181]) -> true[181]
  790:[182] Not(v1=true[181]) -> false[181]
  791:[182] GotoFalseWord(jump=804, if_false=false[181])
  804:[181] VarText(var[56]) -> "ðŸ™ƒ"[181]
  807:[197] AppendText(var[157], v1="ðŸ™ƒ"[181])
  810:[181] VarBool(var[156]) -> false[181]
  813:[182] GotoFalseWord(jump=823, if_false=false[181])
  823:[181] ConstText(_value=",") -> ","[181]
  826:[197] AppendText(var[80], v1=","[181])
  829:[181] VarText(var[157]) -> "ðŸ™ƒ"[181]
  832:[197] ConstInt(val=0) -> 0[197]
  837:[201] FormatText(var[80], val="ðŸ™ƒ"[181], width=0[197], dir=-1, token=32)
  842:[181] FreeText(var[157])
  845:[181] FreeStack(value=0, discard=24)
  849:[157] GotoWord(jump=735)
  735:[157] Text()
  736:[181] ClearText(var[56])
  739:[181] ClearText(var[32])
  742:[181] VarText(var[128]) -> "12ðŸ˜ŠðŸ™ƒ45"[181]
  745:[197] ConstInt(val=2) -> 2[197]
  750:[201] ConstInt(val=1) -> 1[201]
  755:[205] MinSingleInt(v1=1[201]) -> -1[201]
  756:[205] GetTextSub(v1="12ðŸ˜ŠðŸ™ƒ45"[181], from=2[197], till=-1[201]) -> "ðŸ˜ŠðŸ™ƒ4"[181]
  757:[197] VarInt(var[152]) -> 8[197]
  760:[201] ConstInt(val=-2147483648) -> -2147483648[201]
  765:[205] GetTextSub(v1="ðŸ˜ŠðŸ™ƒ4"[181], from=8[197], till=-2147483648[201]) -> "4"[181]
  766:[197] AppendText(var[32], v1="4"[181])
  769:[181] VarInt(var[152]) -> 8[181]
  772:[185] VarText(var[32]) -> "4"[185]
  775:[201] LengthText(v1="4"[185]) -> 1[185]
  776:[189] AddInt(v1=8[181], v2=1[185]) -> 9[181]
  777:[185] PutInt(var[152], value=9[181])
  780:[181] VarText(var[32]) -> "4"[181]
  783:[197] AppendText(var[56], v1="4"[181])
  786:[181] VarText(var[56]) -> "4"[181]
  789:[197] ConvBoolFromText(v1="4"[181]) -> true[181]
  790:[182] Not(v1=true[181]) -> false[181]
  791:[182] GotoFalseWord(jump=804, if_false=false[181])
  804:[181] VarText(var[56]) -> "4"[181]
  807:[197] AppendText(var[157], v1="4"[181])
  810:[181] VarBool(var[156]) -> false[181]
  813:[182] GotoFalseWord(jump=823, if_false=false[181])
  823:[181] ConstText(_value=",") -> ","[181]
  826:[197] AppendText(var[80], v1=","[181])
  829:[181] VarText(var[157]) -> "4"[181]
  832:[197] ConstInt(val=0) -> 0[197]
  837:[201] FormatText(var[80], val="4"[181], width=0[197], dir=-1, token=32)
  842:[181] FreeText(var[157])
  845:[181] FreeStack(value=0, discard=24)
  849:[157] GotoWord(jump=735)
  735:[157] Text()
  736:[181] ClearText(var[56])
  739:[181] ClearText(var[32])
  742:[181] VarText(var[128]) -> "12ðŸ˜ŠðŸ™ƒ45"[181]
  745:[197] ConstInt(val=2) -> 2[197]
  750:[201] ConstInt(val=1) -> 1[201]
  755:[205] MinSingleInt(v1=1[201]) -> -1[201]
  756:[205] GetTextSub(v1="12ðŸ˜ŠðŸ™ƒ45"[181], from=2[197], till=-1[201]) -> "ðŸ˜ŠðŸ™ƒ4"[181]
  757:[197] VarInt(var[152]) -> 9[197]
  760:[201] ConstInt(val=-2147483648) -> -2147483648[201]
  765:[205] GetTextSub(v1="ðŸ˜ŠðŸ™ƒ4"[181], from=9[197], till=-2147483648[201]) -> ""[181]
  766:[197] AppendText(var[32], v1=""[181])
  769:[181] VarInt(var[152]) -> 9[181]
  772:[185] VarText(var[32]) -> ""[185]
  775:[201] LengthText(v1=""[185]) -> 0[185]
  776:[189] AddInt(v1=9[181], v2=0[185]) -> 9[181]
  777:[185] PutInt(var[152], value=9[181])
  780:[181] VarText(var[32]) -> ""[181]
  783:[197] AppendText(var[56], v1=""[181])
  786:[181] VarText(var[56]) -> ""[181]
  789:[197] ConvBoolFromText(v1=""[181]) -> false[181]
  790:[182] Not(v1=false[181]) -> true[181]
  791:[182] GotoFalseWord(jump=804, if_false=true[181])
  794:[181] FreeText(var[157])
  797:[181] FreeStack(value=0, discard=24)
  801:[157] GotoWord(jump=852)
  852:[157] ConstText(_value="]") -> "]"[157]
  855:[173] AppendText(var[80], v1="]"[157])
  858:[157] ConstText(_value="b") -> "b"[157]
  861:[173] AppendText(var[80], v1="b"[157])
  864:[157] VarText(var[80]) -> "a[ðŸ˜Š,ðŸ™ƒ,4]b"[157]
  867:[173] FreeStack(value=16, discard=21)
  871:[168] FreeText(var[128])
  874:[168] FreeStack(value=16, discard=40)
  878:[144] AppendText(var[104], v1="a[ðŸ˜Š,ðŸ™ƒ,4]b"[128])
  881:[128] VarText(var[104]) -> "a[ðŸ˜Š,ðŸ™ƒ,4]b"[128]
  884:[144] ConstText(_value="a[ðŸ˜Š,ðŸ™ƒ,4]b") -> "a[ðŸ˜Š,ðŸ™ƒ,4]b"[144]
  901:[160] EqText(v1="a[ðŸ˜Š,ðŸ™ƒ,4]b"[128], v2="a[ðŸ˜Š,ðŸ™ƒ,4]b"[144]) -> true[128]
  902:[129] GotoFalseWord(jump=908, if_false=true[128])
  905:[128] GotoWord(jump=971)
  971:[128] FreeText(var[104])
  974:[128] FreeText(var[80])
  977:[128] FreeText(var[56])
  980:[128] FreeText(var[32])
  983:[128] FreeText(var[8])
  986:[128] Return(ret=4294967295[4], value=0, discard=124)
Finished
