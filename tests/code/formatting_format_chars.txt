pub fn test() {
    test_value = {txt="12ğŸ˜ŠğŸ™ƒ45"; "a{for c in txt[2..-1] {c}}b"};
    assert(
        test_value == "a[ğŸ˜Š,ğŸ™ƒ,4]b",
        "Test failed {test_value} != \"a[ğŸ˜Š,ğŸ™ƒ,4]b\""
    );
}
fn test() {#1 block
  __work_3:text = "";
  __work_2:text = "";
  c:text["txt"] = "";
  __work_1:text = "";
  test_value:text = {#2 block
    txt:text = "12ğŸ˜ŠğŸ™ƒ45";
    {#3 formatting string
      __work_1:text = "a";
      OpAppendText(__work_1, "[");
      c#index:integer = 0i32;
      _first_2:boolean = true;
      loop {#4 iter for loop
        _val_1:text["c"] = {#5 iter for fill
          c:text["txt"] = {#6 for text next
            __work_2:text = OpGetTextSub(OpGetTextSub(txt, 2i32, OpMinSingleInt(1i32)), c#index, -2147483648i32);
            c#index:integer = OpAddInt(c#index, OpLengthText(__work_2));
            __work_2;
          }#6:text["txt"];
          if OpNot(OpConvBoolFromText(c)) break(0) else null;
          {#7 block
            c;
          }#7:text["c"];
        }#5:text["c"];
        if _first_2 _first_2:boolean = false else OpAppendText(__work_1, ",");
        OpFormatText(__work_1, _val_1, 0i32, -1i32, 32i32);
      }#4;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, "b");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a[ğŸ˜Š,ğŸ™ƒ,4]b") null else OpPanic({#8 formatting string
    __work_3:text = "Test failed ";
    OpFormatText(__work_3, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_3, " != "a[ğŸ˜Š,ğŸ™ƒ,4]b"");
    __work_3;
  }#8:text);
}#1

byte-code for format_chars:test()
 655[0]: return-address
 655[4]: Text() var=__work_3[4]:text in 1
 656[28]: Text() var=__work_2[28]:text in 1
 657[52]: Text() var=c[52]:text["txt"] in 1
 658[76]: Text() var=__work_1[76]:text in 1
 659[100]: Text() var=test_value[100]:text in 1
 660[124]: Text() var=txt[124]:text in 2
 661[148]: ConstText(_value="12ğŸ˜ŠğŸ™ƒ45") -> text
 675[164]: AppendText(var[124], v1: text)
 678[148]: ClearText(var[76]) var=__work_1[76]:text in 1
 681[148]: ConstText(_value="a") -> text
 684[164]: AppendText(var[76], v1: text)
 687[148]: ConstText(_value="[") -> text
 690[164]: AppendText(var[76], v1: text)
 693[148]: ConstInt(val=0) -> integer var=c#index[148]:integer in 3
 698[152]: ConstTrue() -> boolean var=_first_2[152]:boolean in 3
 699[153]: Text() var=_val_1[153]:text["c"] in 4
 700[177]: ClearText(var[52]) var=c[52]:text["txt"] in 1
 703[177]: ClearText(var[28]) var=__work_2[28]:text in 1
 706[177]: VarText(var[124]) -> text var=txt[124]:text in 2
 709[193]: ConstInt(val=2) -> integer
 714[197]: ConstInt(val=1) -> integer
 719[201]: MinSingleInt(v1: integer) -> integer
 720[201]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 721[193]: VarInt(var[148]) -> integer var=c#index[148]:integer in 3
 724[197]: ConstInt(val=-2147483648) -> integer
 729[201]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 730[193]: AppendText(var[28], v1: text)
 733[177]: VarInt(var[148]) -> integer var=c#index[148]:integer in 3
 736[181]: VarText(var[28]) -> text var=__work_2[28]:text in 1
 739[197]: LengthText(v1: text) -> integer
 740[185]: AddInt(v1: integer, v2: integer) -> integer
 741[181]: PutInt(var[148], value: integer)
 744[177]: VarText(var[28]) -> text var=__work_2[28]:text in 1
 747[193]: AppendText(var[52], v1: text)
 750[177]: VarText(var[52]) -> text var=c[52]:text["txt"] in 1
 753[193]: ConvBoolFromText(v1: text) -> boolean
 754[178]: Not(v1: boolean) -> boolean
 755[178]: GotoFalseWord(jump=768, if_false: boolean)
 758[177]: FreeText(var[153])
 761[177]: FreeStack(value=0, discard=24)
 765[153]: GotoWord(jump=816)
 768[177]: VarText(var[52]) -> text var=c[52]:text["txt"] in 1
 771[193]: AppendText(var[153], v1: text)
 774[177]: VarBool(var[152]) -> boolean var=_first_2[152]:boolean in 3
 777[178]: GotoFalseWord(jump=787, if_false: boolean)
 780[177]: ConstFalse() -> boolean var=_first_2[152]:boolean in 3
 781[178]: PutBool(var=26, value: boolean)
 784[177]: GotoWord(jump=793)
 787[177]: ConstText(_value=",") -> text
 790[193]: AppendText(var[76], v1: text)
 793[177]: VarText(var[153]) -> text var=_val_1[153]:text["c"] in 4
 796[193]: ConstInt(val=0) -> integer
 801[197]: FormatText(var[76], val: text, width: integer, dir=-1, token=32)
 806[177]: FreeText(var[153])
 809[177]: FreeStack(value=0, discard=24)
 813[153]: GotoWord(jump=699)
 816[153]: ConstText(_value="]") -> text
 819[169]: AppendText(var[76], v1: text)
 822[153]: ConstText(_value="b") -> text
 825[169]: AppendText(var[76], v1: text)
 828[153]: VarText(var[76]) -> text var=__work_1[76]:text in 1
 831[169]: FreeStack(value=16, discard=21) type=text[4]:Base[5]
 835[164]: FreeText(var[124])
 838[164]: FreeStack(value=16, discard=40) type=text[4]:Base[5]
 842[140]: AppendText(var[100], v1: text)
 845[124]: VarText(var[100]) -> text var=test_value[100]:text in 1
 848[140]: ConstText(_value="a[ğŸ˜Š,ğŸ™ƒ,4]b") -> text
 865[156]: EqText(v1: text, v2: text) -> boolean
 866[125]: GotoFalseWord(jump=872, if_false: boolean)
 869[124]: GotoWord(jump=935)
 872[124]: ClearText(var[4]) var=__work_3[4]:text in 1
 875[124]: ConstText(_value="Test failed ") -> text
 889[140]: AppendText(var[4], v1: text)
 892[124]: VarText(var[100]) -> text var=test_value[100]:text in 1
 895[140]: ConstInt(val=0) -> integer
 900[144]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 905[124]: ConstText(_value=" != "a[ğŸ˜Š,ğŸ™ƒ,4]b"") -> text
 928[140]: AppendText(var[4], v1: text)
 931[124]: VarText(var[4]) -> text var=__work_3[4]:text in 1
 934[140]: Panic(message: text)
 935[124]: FreeText(var[100])
 938[124]: FreeText(var[76])
 941[124]: FreeText(var[52])
 944[124]: FreeText(var[28])
 947[124]: FreeText(var[4])
 950[124]: Return(ret=0, value=0, discard=124)

Execute test:
  655:[8] Text()
  656:[32] Text()
  657:[56] Text()
  658:[80] Text()
  659:[104] Text()
  660:[128] Text()
  661:[152] ConstText(_value="12ğŸ˜ŠğŸ™ƒ45") -> "12ğŸ˜ŠğŸ™ƒ45"[152]
  675:[168] AppendText(var[128], v1="12ğŸ˜ŠğŸ™ƒ45"[152])
  678:[152] ClearText(var[80])
  681:[152] ConstText(_value="a") -> "a"[152]
  684:[168] AppendText(var[80], v1="a"[152])
  687:[152] ConstText(_value="[") -> "["[152]
  690:[168] AppendText(var[80], v1="["[152])
  693:[152] ConstInt(val=0) -> 0[152]
  698:[156] ConstTrue() -> true[156]
  699:[157] Text()
  700:[181] ClearText(var[56])
  703:[181] ClearText(var[32])
  706:[181] VarText(var[128]) -> "12ğŸ˜ŠğŸ™ƒ45"[181]
  709:[197] ConstInt(val=2) -> 2[197]
  714:[201] ConstInt(val=1) -> 1[201]
  719:[205] MinSingleInt(v1=1[201]) -> -1[201]
  720:[205] GetTextSub(v1="12ğŸ˜ŠğŸ™ƒ45"[181], from=2[197], till=-1[201]) -> "ğŸ˜ŠğŸ™ƒ4"[181]
  721:[197] VarInt(var[152]) -> 0[197]
  724:[201] ConstInt(val=-2147483648) -> -2147483648[201]
  729:[205] GetTextSub(v1="ğŸ˜ŠğŸ™ƒ4"[181], from=0[197], till=-2147483648[201]) -> "ğŸ˜Š"[181]
  730:[197] AppendText(var[32], v1="ğŸ˜Š"[181])
  733:[181] VarInt(var[152]) -> 0[181]
  736:[185] VarText(var[32]) -> "ğŸ˜Š"[185]
  739:[201] LengthText(v1="ğŸ˜Š"[185]) -> 4[185]
  740:[189] AddInt(v1=0[181], v2=4[185]) -> 4[181]
  741:[185] PutInt(var[152], value=4[181])
  744:[181] VarText(var[32]) -> "ğŸ˜Š"[181]
  747:[197] AppendText(var[56], v1="ğŸ˜Š"[181])
  750:[181] VarText(var[56]) -> "ğŸ˜Š"[181]
  753:[197] ConvBoolFromText(v1="ğŸ˜Š"[181]) -> true[181]
  754:[182] Not(v1=true[181]) -> false[181]
  755:[182] GotoFalseWord(jump=768, if_false=false[181])
  768:[181] VarText(var[56]) -> "ğŸ˜Š"[181]
  771:[197] AppendText(var[157], v1="ğŸ˜Š"[181])
  774:[181] VarBool(var[156]) -> true[181]
  777:[182] GotoFalseWord(jump=787, if_false=true[181])
  780:[181] ConstFalse() -> false[181]
  781:[182] PutBool(var=26, value=false[181])
  784:[181] GotoWord(jump=793)
  793:[181] VarText(var[157]) -> "ğŸ˜Š"[181]
  796:[197] ConstInt(val=0) -> 0[197]
  801:[201] FormatText(var[80], val="ğŸ˜Š"[181], width=0[197], dir=-1, token=32)
  806:[181] FreeText(var[157])
  809:[181] FreeStack(value=0, discard=24)
  813:[157] GotoWord(jump=699)
  699:[157] Text()
  700:[181] ClearText(var[56])
  703:[181] ClearText(var[32])
  706:[181] VarText(var[128]) -> "12ğŸ˜ŠğŸ™ƒ45"[181]
  709:[197] ConstInt(val=2) -> 2[197]
  714:[201] ConstInt(val=1) -> 1[201]
  719:[205] MinSingleInt(v1=1[201]) -> -1[201]
  720:[205] GetTextSub(v1="12ğŸ˜ŠğŸ™ƒ45"[181], from=2[197], till=-1[201]) -> "ğŸ˜ŠğŸ™ƒ4"[181]
  721:[197] VarInt(var[152]) -> 4[197]
  724:[201] ConstInt(val=-2147483648) -> -2147483648[201]
  729:[205] GetTextSub(v1="ğŸ˜ŠğŸ™ƒ4"[181], from=4[197], till=-2147483648[201]) -> "ğŸ™ƒ"[181]
  730:[197] AppendText(var[32], v1="ğŸ™ƒ"[181])
  733:[181] VarInt(var[152]) -> 4[181]
  736:[185] VarText(var[32]) -> "ğŸ™ƒ"[185]
  739:[201] LengthText(v1="ğŸ™ƒ"[185]) -> 4[185]
  740:[189] AddInt(v1=4[181], v2=4[185]) -> 8[181]
  741:[185] PutInt(var[152], value=8[181])
  744:[181] VarText(var[32]) -> "ğŸ™ƒ"[181]
  747:[197] AppendText(var[56], v1="ğŸ™ƒ"[181])
  750:[181] VarText(var[56]) -> "ğŸ™ƒ"[181]
  753:[197] ConvBoolFromText(v1="ğŸ™ƒ"[181]) -> true[181]
  754:[182] Not(v1=true[181]) -> false[181]
  755:[182] GotoFalseWord(jump=768, if_false=false[181])
  768:[181] VarText(var[56]) -> "ğŸ™ƒ"[181]
  771:[197] AppendText(var[157], v1="ğŸ™ƒ"[181])
  774:[181] VarBool(var[156]) -> false[181]
  777:[182] GotoFalseWord(jump=787, if_false=false[181])
  787:[181] ConstText(_value=",") -> ","[181]
  790:[197] AppendText(var[80], v1=","[181])
  793:[181] VarText(var[157]) -> "ğŸ™ƒ"[181]
  796:[197] ConstInt(val=0) -> 0[197]
  801:[201] FormatText(var[80], val="ğŸ™ƒ"[181], width=0[197], dir=-1, token=32)
  806:[181] FreeText(var[157])
  809:[181] FreeStack(value=0, discard=24)
  813:[157] GotoWord(jump=699)
  699:[157] Text()
  700:[181] ClearText(var[56])
  703:[181] ClearText(var[32])
  706:[181] VarText(var[128]) -> "12ğŸ˜ŠğŸ™ƒ45"[181]
  709:[197] ConstInt(val=2) -> 2[197]
  714:[201] ConstInt(val=1) -> 1[201]
  719:[205] MinSingleInt(v1=1[201]) -> -1[201]
  720:[205] GetTextSub(v1="12ğŸ˜ŠğŸ™ƒ45"[181], from=2[197], till=-1[201]) -> "ğŸ˜ŠğŸ™ƒ4"[181]
  721:[197] VarInt(var[152]) -> 8[197]
  724:[201] ConstInt(val=-2147483648) -> -2147483648[201]
  729:[205] GetTextSub(v1="ğŸ˜ŠğŸ™ƒ4"[181], from=8[197], till=-2147483648[201]) -> "4"[181]
  730:[197] AppendText(var[32], v1="4"[181])
  733:[181] VarInt(var[152]) -> 8[181]
  736:[185] VarText(var[32]) -> "4"[185]
  739:[201] LengthText(v1="4"[185]) -> 1[185]
  740:[189] AddInt(v1=8[181], v2=1[185]) -> 9[181]
  741:[185] PutInt(var[152], value=9[181])
  744:[181] VarText(var[32]) -> "4"[181]
  747:[197] AppendText(var[56], v1="4"[181])
  750:[181] VarText(var[56]) -> "4"[181]
  753:[197] ConvBoolFromText(v1="4"[181]) -> true[181]
  754:[182] Not(v1=true[181]) -> false[181]
  755:[182] GotoFalseWord(jump=768, if_false=false[181])
  768:[181] VarText(var[56]) -> "4"[181]
  771:[197] AppendText(var[157], v1="4"[181])
  774:[181] VarBool(var[156]) -> false[181]
  777:[182] GotoFalseWord(jump=787, if_false=false[181])
  787:[181] ConstText(_value=",") -> ","[181]
  790:[197] AppendText(var[80], v1=","[181])
  793:[181] VarText(var[157]) -> "4"[181]
  796:[197] ConstInt(val=0) -> 0[197]
  801:[201] FormatText(var[80], val="4"[181], width=0[197], dir=-1, token=32)
  806:[181] FreeText(var[157])
  809:[181] FreeStack(value=0, discard=24)
  813:[157] GotoWord(jump=699)
  699:[157] Text()
  700:[181] ClearText(var[56])
  703:[181] ClearText(var[32])
  706:[181] VarText(var[128]) -> "12ğŸ˜ŠğŸ™ƒ45"[181]
  709:[197] ConstInt(val=2) -> 2[197]
  714:[201] ConstInt(val=1) -> 1[201]
  719:[205] MinSingleInt(v1=1[201]) -> -1[201]
  720:[205] GetTextSub(v1="12ğŸ˜ŠğŸ™ƒ45"[181], from=2[197], till=-1[201]) -> "ğŸ˜ŠğŸ™ƒ4"[181]
  721:[197] VarInt(var[152]) -> 9[197]
  724:[201] ConstInt(val=-2147483648) -> -2147483648[201]
  729:[205] GetTextSub(v1="ğŸ˜ŠğŸ™ƒ4"[181], from=9[197], till=-2147483648[201]) -> ""[181]
  730:[197] AppendText(var[32], v1=""[181])
  733:[181] VarInt(var[152]) -> 9[181]
  736:[185] VarText(var[32]) -> ""[185]
  739:[201] LengthText(v1=""[185]) -> 0[185]
  740:[189] AddInt(v1=9[181], v2=0[185]) -> 9[181]
  741:[185] PutInt(var[152], value=9[181])
  744:[181] VarText(var[32]) -> ""[181]
  747:[197] AppendText(var[56], v1=""[181])
  750:[181] VarText(var[56]) -> ""[181]
  753:[197] ConvBoolFromText(v1=""[181]) -> false[181]
  754:[182] Not(v1=false[181]) -> true[181]
  755:[182] GotoFalseWord(jump=768, if_false=true[181])
  758:[181] FreeText(var[157])
  761:[181] FreeStack(value=0, discard=24)
  765:[157] GotoWord(jump=816)
  816:[157] ConstText(_value="]") -> "]"[157]
  819:[173] AppendText(var[80], v1="]"[157])
  822:[157] ConstText(_value="b") -> "b"[157]
  825:[173] AppendText(var[80], v1="b"[157])
  828:[157] VarText(var[80]) -> "a[ğŸ˜Š,ğŸ™ƒ,4]b"[157]
  831:[173] FreeStack(value=16, discard=21)
  835:[168] FreeText(var[128])
  838:[168] FreeStack(value=16, discard=40)
  842:[144] AppendText(var[104], v1="a[ğŸ˜Š,ğŸ™ƒ,4]b"[128])
  845:[128] VarText(var[104]) -> "a[ğŸ˜Š,ğŸ™ƒ,4]b"[128]
  848:[144] ConstText(_value="a[ğŸ˜Š,ğŸ™ƒ,4]b") -> "a[ğŸ˜Š,ğŸ™ƒ,4]b"[144]
  865:[160] EqText(v1="a[ğŸ˜Š,ğŸ™ƒ,4]b"[128], v2="a[ğŸ˜Š,ğŸ™ƒ,4]b"[144]) -> true[128]
  866:[129] GotoFalseWord(jump=872, if_false=true[128])
  869:[128] GotoWord(jump=935)
  935:[128] FreeText(var[104])
  938:[128] FreeText(var[80])
  941:[128] FreeText(var[56])
  944:[128] FreeText(var[32])
  947:[128] FreeText(var[8])
  950:[128] Return(ret=4294967295[4], value=0, discard=124)
Finished
