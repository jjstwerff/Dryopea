pub fn test() {
    test_value = {1 + 2 * 3};
    assert(
        test_value == 7,
        "Test failed {test_value} != 7"
    );
}
fn test {#1 block
  let __work_1 = "";
  let test_value = {#2 block
    OpAddInt(1i32, OpMulInt(2i32, 3i32));
  }#2;
  if OpEqInt(test_value, 7i32) null else OpGenPanic({#3 formatting string
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 7");
    __work_1;
  }#3);
}#1

byte-code for expr_multiply:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstInt(val=1) -> integer
 674[32]: ConstInt(val=2) -> integer
 679[36]: ConstInt(val=3) -> integer
 684[40]: MulInt(v1: integer, v2: integer) -> integer
 685[36]: AddInt(v1: integer, v2: integer) -> integer
 686[32]: VarInt(var[28]) -> integer
 689[36]: ConstInt(val=7) -> integer
 694[40]: EqInt(v1: integer, v2: integer) -> boolean
 695[33]: GenGotoFalseWord(jump=701, if_false: boolean)
 698[32]: GenGotoWord(jump=750)
 701[32]: ClearText(var[4])
 704[32]: ConstText(_value="Test failed ") -> text(false, [])
 718[48]: AppendText(var[4], v1: text(false, []))
 721[32]: VarInt(var[28]) -> integer
 724[36]: ConstInt(val=0) -> integer
 729[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 736[32]: ConstText(_value=" != 7") -> text(false, [])
 743[48]: AppendText(var[4], v1: text(false, []))
 746[32]: VarText(var[4]) -> text(false, [])
 749[48]: GenPanic(message: text(false, []))
 750[32]: GenReturn(ret=0, value=0, discard=32)

Execute test:
  668:[8] Text()
  669:[32] ConstInt(val=1) -> 1[32]
  674:[36] ConstInt(val=2) -> 2[36]
  679:[40] ConstInt(val=3) -> 3[40]
  684:[44] MulInt(v1=2[36], v2=3[40]) -> 6[36]
  685:[40] AddInt(v1=1[32], v2=6[36]) -> 7[32]
  686:[36] VarInt(var[32]) -> 7[36]
  689:[40] ConstInt(val=7) -> 7[40]
  694:[44] EqInt(v1=7[36], v2=7[40]) -> true[36]
  695:[37] GenGotoFalseWord(jump=701, if_false=true[36])
  698:[36] GenGotoWord(jump=750)
  750:[36] GenReturn(ret=4294967295[4], value=0, discard=32)
Finished
