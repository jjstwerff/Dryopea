pub fn test() {
    test_value = {1 + 2 * 3};
    assert(
        test_value == 7,
        "Test failed {test_value} != 7"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    OpAddInt(1i32, OpMulInt(2i32, 3i32));
  }#2:integer;
  if OpEqInt(test_value, 7i32) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 7");
    __work_1;
  }#3:text);
}#1

byte-code for expr_multiply:test()
 645[0]: return-address
 645[4]: Text() var=__work_1[4]:text in 1
 646[28]: ConstInt(val=1) -> integer var=test_value[28]:integer in 1
 651[32]: ConstInt(val=2) -> integer
 656[36]: ConstInt(val=3) -> integer
 661[40]: MulInt(v1: integer, v2: integer) -> integer
 662[36]: AddInt(v1: integer, v2: integer) -> integer
 663[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 666[36]: ConstInt(val=7) -> integer
 671[40]: EqInt(v1: integer, v2: integer) -> boolean
 672[33]: GotoFalseWord(jump=678, if_false: boolean)
 675[32]: GotoWord(jump=727)
 678[32]: ClearText(var[4]) var=__work_1[4]:text in 1
 681[32]: ConstText(_value="Test failed ") -> text
 695[48]: AppendText(var[4], v1: text)
 698[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 701[36]: ConstInt(val=0) -> integer
 706[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 713[32]: ConstText(_value=" != 7") -> text
 720[48]: AppendText(var[4], v1: text)
 723[32]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 726[48]: Panic(message: text)
 727[32]: FreeText(var[4])
 730[32]: Return(ret=0, value=0, discard=32)

Execute test:
  645:[8] Text()
  646:[32] ConstInt(val=1) -> 1[32]
  651:[36] ConstInt(val=2) -> 2[36]
  656:[40] ConstInt(val=3) -> 3[40]
  661:[44] MulInt(v1=2[36], v2=3[40]) -> 6[36]
  662:[40] AddInt(v1=1[32], v2=6[36]) -> 7[32]
  663:[36] VarInt(var[32]) -> 7[36]
  666:[40] ConstInt(val=7) -> 7[40]
  671:[44] EqInt(v1=7[36], v2=7[40]) -> true[36]
  672:[37] GotoFalseWord(jump=678, if_false=true[36])
  675:[36] GotoWord(jump=727)
  727:[36] FreeText(var[8])
  730:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
