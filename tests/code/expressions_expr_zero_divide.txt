pub fn test() {
    2 / (3 - 2 - 1);
}
fn test() {#1 block
  drop OpDivInt(2i32, OpMinInt(OpMinInt(3i32, 2i32), 1i32));
}#1

byte-code for expr_zero_divide:test() [1073]
   0[0]: return-address
   0[4]: ConstInt(val=2) -> integer
   5[8]: ConstInt(val=3) -> integer
  10[12]: ConstInt(val=2) -> integer
  15[16]: MinInt(v1: integer, v2: integer) -> integer
  16[12]: ConstInt(val=1) -> integer
  21[16]: MinInt(v1: integer, v2: integer) -> integer
  22[12]: DivInt(v1: integer, v2: integer) -> integer
  23[8]: FreeStack(value=0, discard=4)
  27[4]: Return(ret=0, value=0, discard=4)

