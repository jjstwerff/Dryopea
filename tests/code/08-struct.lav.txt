fn main() {#block(1):void
  __ref_1(1):ref(main_vector<Area>) = null;
  __work_2(1):text = "";
  __work_1(1):text = "";
  OpDatabase(__ref_1(1), 20i32);
  map(1):vector<ref(Area)>["__ref_1"] = OpGetField(__ref_1(1), 4i32, 21i32);
  OpSetInt(__ref_1(1), 4i32, 0i32);
  _elm_1(1):ref(Area)["map"] = OpNewRecord(map(1), 21i32, 65535i32);
  OpSetShort(_elm_1(1), 0i32, 0i32, 0i32);
  OpSetByte(_elm_1(1), 2i32, 0i32, 1i32);
  OpSetByte(_elm_1(1), 3i32, 0i32, 1i32);
  OpSetByte(_elm_1(1), 4i32, 0i32, 1i32);
  OpFinishRecord(map(1), _elm_1(1), 21i32, 65535i32);
  OpAppendCopy(map(1), 16i32, 21i32);
  if OpEqText({#Formatted string(2):text
    __work_1(1):text = "";
    OpFormatDatabase(__work_1(1), OpGetVector(map(1), 5i32, 3i32), 17i32, false);
    __work_1(1);
  }#Formatted string(2):text, "{height:0,terrain:1,water:1,direction:1}") null else OpPanic({#Formatted string(3):text
    __work_2(1):text = "record ";
    OpFormatDatabase(__work_2(1), OpGetVector(map(1), 5i32, 3i32), 17i32, false);
    __work_2(1);
  }#Formatted string(3):text);
  OpFreeRef(__ref_1(1));
  OpFreeText(__work_1(1));
  OpFreeText(__work_2(1));
}#block(1):void

byte-code for tests/suite/08-struct.lav:main() [1119]
   0[4]: return-address
   0[8]: ConvRefFromNull() -> ref(reference) var=__ref_1[8]:ref(main_vector<Area>)
   1[20]: Text() var=__work_2[20]:text
   2[44]: Text() var=__work_1[44]:text
   3[68]: Database(var[8], db_tp=20) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[20]
   8[68]: VarRef(var[8]) -> ref(reference) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[20] var=__ref_1[8]:ref(main_vector<Area>)
  11[80]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=vector<Area>[4]:Vector(17)[21]
  14[80]: VarRef(var[8]) -> ref(reference) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[20] var=__ref_1[8]:ref(main_vector<Area>)
  17[92]: ConstInt(val=0) -> integer
  22[96]: SetInt(v1: ref(reference), fld=4, val: integer)
  25[80]: VarVector(var[68]) -> vector type=vector<Area>[4]:Vector(17)[21] var=map[68]:vector<ref(Area)>["__ref_1"]
  28[92]: NewRecord(data: ref(reference), parent_tp=21, fld=65535) -> ref(reference)
  33[92]: VarRef(var[80]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[17] var=_elm_1[80]:ref(Area)["map"]
  36[104]: ConstInt(val=0) -> integer
  41[108]: SetShort(v1: ref(reference), fld=0, min=0, val: integer)
  46[92]: VarRef(var[80]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[17] var=_elm_1[80]:ref(Area)["map"]
  49[104]: ConstInt(val=1) -> integer
  54[108]: SetByte(v1: ref(reference), fld=2, min=0, val: integer)
  59[92]: VarRef(var[80]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[17] var=_elm_1[80]:ref(Area)["map"]
  62[104]: ConstInt(val=1) -> integer
  67[108]: SetByte(v1: ref(reference), fld=3, min=0, val: integer)
  72[92]: VarRef(var[80]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[17] var=_elm_1[80]:ref(Area)["map"]
  75[104]: ConstInt(val=1) -> integer
  80[108]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  85[92]: VarVector(var[68]) -> vector type=vector<Area>[4]:Vector(17)[21] var=map[68]:vector<ref(Area)>["__ref_1"]
  88[104]: VarRef(var[80]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[17] var=_elm_1[80]:ref(Area)["map"]
  91[116]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=21, fld=65535)
  96[92]: VarVector(var[68]) -> vector type=vector<Area>[4]:Vector(17)[21] var=map[68]:vector<ref(Area)>["__ref_1"]
  99[104]: ConstInt(val=16) -> integer
 104[108]: AppendCopy(data: ref(reference), count: integer, tp=21)
 107[92]: ClearText(var[44]) var=__work_1[44]:text
 110[92]: ConstText(_value="") -> text
 112[108]: AppendText(var[44], v1: text)
 115[92]: VarVector(var[68]) -> vector type=vector<Area>[4]:Vector(17)[21] var=map[68]:vector<ref(Area)>["__ref_1"]
 118[104]: ConstInt(val=3) -> integer
 123[108]: GetVector(r: vector, size=5, index: integer) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[17]
 126[104]: FormatDatabase(var[44], val: ref(reference), db_tp=17, pretty=false)
 132[92]: VarText(var[44]) -> text var=__work_1[44]:text
 135[108]: ConstText(_value="{height:0,terrain:1,water:1,direction:1}") -> text
 177[124]: EqText(v1: text, v2: text) -> boolean
 178[93]: GotoFalseWord(jump=184, if_false: boolean)
 181[92]: GotoWord(jump=220)
 184[92]: ClearText(var[20]) var=__work_2[20]:text
 187[92]: ConstText(_value="record ") -> text
 196[108]: AppendText(var[20], v1: text)
 199[92]: VarVector(var[68]) -> vector type=vector<Area>[4]:Vector(17)[21] var=map[68]:vector<ref(Area)>["__ref_1"]
 202[104]: ConstInt(val=3) -> integer
 207[108]: GetVector(r: vector, size=5, index: integer) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[17]
 210[104]: FormatDatabase(var[20], val: ref(reference), db_tp=17, pretty=false)
 216[92]: VarText(var[20]) -> text var=__work_2[20]:text
 219[108]: Panic(message: text)
 220[92]: VarRef(var[8]) -> ref(reference) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[20] var=__ref_1[8]:ref(main_vector<Area>)
 223[104]: FreeRef(v1: ref(reference))
 224[92]: FreeText(var[44])
 227[92]: FreeText(var[20])
 230[92]: Return(ret=0, value=0, discard=88)

