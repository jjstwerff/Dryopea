fn main() {#1 block
  __ref_1:ref(main_vector<Area>) = null;
  __work_2:text = "";
  __work_1:text = "";
  map:vector<ref(Area)["_elm_2"]>["__ref_1"] = {#2 vector
    OpDatabase(__ref_1, 17i32);
    _vec_1:vector<ref(Area)["_elm_2"]>["__ref_1"] = OpGetField(__ref_1, 4i32, 65535i32);
    OpSetInt(__ref_1, 4i32, 0i32);
    _elm_2:ref(Area)["__ref_1"] = OpNewRecord(_vec_1, 18i32, 65535i32);
    {#3 object
      OpSetShort(_elm_2, 0i32, 0i32, 0i32);
      OpSetByte(_elm_2, 2i32, 0i32, 1i32);
      OpSetByte(_elm_2, 3i32, 0i32, 1i32);
      OpSetByte(_elm_2, 4i32, 0i32, 1i32);
    }#3;
    OpFinishRecord(_vec_1, _elm_2, 18i32, 65535i32);
    OpAppendCopy(_vec_1, 16i32, 18i32);
    _vec_1;
  }#2:vector<ref(Area)["_elm_2"]>["__ref_1"];
  if OpEqText({#4 formatting string
    __work_1:text = "";
    OpFormatDatabase(__work_1, OpGetVector(map, 5i32, 3i32), 14i32, false);
    __work_1;
  }#4:text, "{height:0,terrain:1,water:1,direction:1}") null else OpPanic({#5 formatting string
    __work_2:text = "record ";
    OpFormatDatabase(__work_2, OpGetVector(map, 5i32, 3i32), 14i32, false);
    __work_2;
  }#5:text);
}#1

byte-code for tests/suite/08-struct.lav:main()
   0[0]: return-address
   0[4]: ConvRefFromNull() -> ref(reference) var=__ref_1[4]:ref(main_vector<Area>) in 1
   1[16]: Text() var=__work_2[16]:text in 1
   2[40]: Text() var=__work_1[40]:text in 1
   3[64]: Database(var[4], db_tp=17) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[17] var=map[64]:vector<ref(Area)["_elm_2"]>["__ref_1"] in 1
   8[64]: VarRef(var[4]) -> ref(reference) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[17] var=__ref_1[4]:ref(main_vector<Area>) in 1
  11[76]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=Unknown type(65535)[65535]
  14[76]: VarRef(var[4]) -> ref(reference) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[17] var=__ref_1[4]:ref(main_vector<Area>) in 1
  17[88]: ConstInt(val=0) -> integer
  22[92]: SetInt(v1: ref(reference), fld=4, val: integer)
  25[76]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(14)[18] var=_vec_1[64]:vector<ref(Area)["_elm_2"]>["__ref_1"] in 2
  28[88]: NewRecord(data: ref(reference), parent_tp=18, fld=65535) -> ref(reference)
  33[88]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[14] var=_elm_2[76]:ref(Area)["__ref_1"] in 2
  36[100]: ConstInt(val=0) -> integer
  41[104]: SetShort(v1: ref(reference), fld=0, min=0, val: integer)
  46[88]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[14] var=_elm_2[76]:ref(Area)["__ref_1"] in 2
  49[100]: ConstInt(val=1) -> integer
  54[104]: SetByte(v1: ref(reference), fld=2, min=0, val: integer)
  59[88]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[14] var=_elm_2[76]:ref(Area)["__ref_1"] in 2
  62[100]: ConstInt(val=1) -> integer
  67[104]: SetByte(v1: ref(reference), fld=3, min=0, val: integer)
  72[88]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[14] var=_elm_2[76]:ref(Area)["__ref_1"] in 2
  75[100]: ConstInt(val=1) -> integer
  80[104]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  85[88]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(14)[18] var=_vec_1[64]:vector<ref(Area)["_elm_2"]>["__ref_1"] in 2
  88[100]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[14] var=_elm_2[76]:ref(Area)["__ref_1"] in 2
  91[112]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=65535)
  96[88]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(14)[18] var=_vec_1[64]:vector<ref(Area)["_elm_2"]>["__ref_1"] in 2
  99[100]: ConstInt(val=16) -> integer
 104[104]: AppendCopy(data: ref(reference), count: integer, tp=18)
 107[88]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(14)[18] var=_vec_1[64]:vector<ref(Area)["_elm_2"]>["__ref_1"] in 2
 110[100]: FreeStack(value=12, discard=36) type=vector<text>[4]:Vector(5)[6]
 114[76]: ClearText(var[40]) var=__work_1[40]:text in 1
 117[76]: ConstText(_value="") -> text
 119[92]: AppendText(var[40], v1: text)
 122[76]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(14)[18] var=map[64]:vector<ref(Area)["_elm_2"]>["__ref_1"] in 1
 125[88]: ConstInt(val=3) -> integer
 130[92]: GetVector(r: vector, size=5, index: integer) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[14]
 133[88]: FormatDatabase(var[40], val: ref(reference), db_tp=14, pretty=false)
 139[76]: VarText(var[40]) -> text var=__work_1[40]:text in 1
 142[92]: ConstText(_value="{height:0,terrain:1,water:1,direction:1}") -> text
 184[108]: EqText(v1: text, v2: text) -> boolean
 185[77]: GotoFalseWord(jump=191, if_false: boolean)
 188[76]: GotoWord(jump=227)
 191[76]: ClearText(var[16]) var=__work_2[16]:text in 1
 194[76]: ConstText(_value="record ") -> text
 203[92]: AppendText(var[16], v1: text)
 206[76]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(14)[18] var=map[64]:vector<ref(Area)["_elm_2"]>["__ref_1"] in 1
 209[88]: ConstInt(val=3) -> integer
 214[92]: GetVector(r: vector, size=5, index: integer) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[14]
 217[88]: FormatDatabase(var[16], val: ref(reference), db_tp=14, pretty=false)
 223[76]: VarText(var[16]) -> text var=__work_2[16]:text in 1
 226[92]: Panic(message: text)
 227[76]: VarRef(var[4]) -> ref(reference) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[17] var=__ref_1[4]:ref(main_vector<Area>) in 1
 230[88]: FreeRef(v1: ref(reference))
 231[76]: FreeText(var[40])
 234[76]: FreeText(var[16])
 237[76]: Return(ret=0, value=0, discard=76)

