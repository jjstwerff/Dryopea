fn main() {
  __ref_1:ref(main_vector<Area>) = null;
  __work_2:text = "";
  __work_1:text = "";
  OpDatabase(__ref_1, 18i32);
  map:vector<ref(Area)["_elm_1"]>["__ref_1"] = OpGetField(__ref_1, 4i32, 65535i32);
  OpSetInt(__ref_1, 4i32, 0i32);
  _elm_1:ref(Area)["map"] = OpNewRecord(map, 19i32, 65535i32);
  {
    OpSetShort(_elm_1, 0i32, 0i32, 0i32);
    OpSetByte(_elm_1, 2i32, 0i32, 1i32);
    OpSetByte(_elm_1, 3i32, 0i32, 1i32);
    OpSetByte(_elm_1, 4i32, 0i32, 1i32);
  };
  OpFinishRecord(map, _elm_1, 19i32, 65535i32);
  OpAppendCopy(map, 16i32, 19i32);
  if OpEqText({
    __work_1:text = "";
    OpFormatDatabase(__work_1, OpGetVector(map, 5i32, 3i32), 15i32, false);
    __work_1;
  }, "{height:0,terrain:1,water:1,direction:1}") null else OpPanic({
    __work_2:text = "record ";
    OpFormatDatabase(__work_2, OpGetVector(map, 5i32, 3i32), 15i32, false);
    __work_2;
  });
}

byte-code for tests/suite/08-struct.lav:main() [1050]
   0[0]: return-address
   0[4]: ConvRefFromNull() -> ref(reference) var=__ref_1[4]:ref(main_vector<Area>) in 1
   1[16]: Text() var=__work_2[16]:text in 1
   2[40]: Text() var=__work_1[40]:text in 1
   3[64]: Database(var[4], db_tp=18) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[18]
   8[64]: VarRef(var[4]) -> ref(reference) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[18] var=__ref_1[4]:ref(main_vector<Area>) in 1
  11[76]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=Unknown type(65535)[65535]
  14[76]: VarRef(var[4]) -> ref(reference) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[18] var=__ref_1[4]:ref(main_vector<Area>) in 1
  17[88]: ConstInt(val=0) -> integer
  22[92]: SetInt(v1: ref(reference), fld=4, val: integer)
  25[76]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(15)[19] var=map[64]:vector<ref(Area)["_elm_1"]>["__ref_1"] in 1
  28[88]: NewRecord(data: ref(reference), parent_tp=19, fld=65535) -> ref(reference)
  33[88]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[15] var=_elm_1[76]:ref(Area)["map"] in 1
  36[100]: ConstInt(val=0) -> integer
  41[104]: SetShort(v1: ref(reference), fld=0, min=0, val: integer)
  46[88]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[15] var=_elm_1[76]:ref(Area)["map"] in 1
  49[100]: ConstInt(val=1) -> integer
  54[104]: SetByte(v1: ref(reference), fld=2, min=0, val: integer)
  59[88]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[15] var=_elm_1[76]:ref(Area)["map"] in 1
  62[100]: ConstInt(val=1) -> integer
  67[104]: SetByte(v1: ref(reference), fld=3, min=0, val: integer)
  72[88]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[15] var=_elm_1[76]:ref(Area)["map"] in 1
  75[100]: ConstInt(val=1) -> integer
  80[104]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  85[88]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(15)[19] var=map[64]:vector<ref(Area)["_elm_1"]>["__ref_1"] in 1
  88[100]: VarRef(var[76]) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[15] var=_elm_1[76]:ref(Area)["map"] in 1
  91[112]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=19, fld=65535)
  96[88]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(15)[19] var=map[64]:vector<ref(Area)["_elm_1"]>["__ref_1"] in 1
  99[100]: ConstInt(val=16) -> integer
 104[104]: AppendCopy(data: ref(reference), count: integer, tp=19)
 107[88]: ClearText(var[40]) var=__work_1[40]:text in 1
 110[88]: ConstText(_value="") -> text
 112[104]: AppendText(var[40], v1: text)
 115[88]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(15)[19] var=map[64]:vector<ref(Area)["_elm_1"]>["__ref_1"] in 1
 118[100]: ConstInt(val=3) -> integer
 123[104]: GetVector(r: vector, size=5, index: integer) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[15]
 126[100]: FormatDatabase(var[40], val: ref(reference), db_tp=15, pretty=false)
 132[88]: VarText(var[40]) -> text var=__work_1[40]:text in 1
 135[104]: ConstText(_value="{height:0,terrain:1,water:1,direction:1}") -> text
 177[120]: EqText(v1: text, v2: text) -> boolean
 178[89]: GotoFalseWord(jump=184, if_false: boolean)
 181[88]: GotoWord(jump=220)
 184[88]: ClearText(var[16]) var=__work_2[16]:text in 1
 187[88]: ConstText(_value="record ") -> text
 196[104]: AppendText(var[16], v1: text)
 199[88]: VarVector(var[64]) -> vector type=vector<Area>[4]:Vector(15)[19] var=map[64]:vector<ref(Area)["_elm_1"]>["__ref_1"] in 1
 202[100]: ConstInt(val=3) -> integer
 207[104]: GetVector(r: vector, size=5, index: integer) -> ref(reference) type=Area[5]:{height:short<0,true>[0], terrain:byte<0,true>[2], water:byte<0,true>[3], direction:byte<0,true>[4]}[15]
 210[100]: FormatDatabase(var[16], val: ref(reference), db_tp=15, pretty=false)
 216[88]: VarText(var[16]) -> text var=__work_2[16]:text in 1
 219[104]: Panic(message: text)
 220[88]: FreeText(var[40])
 223[88]: FreeText(var[16])
 226[88]: VarRef(var[4]) -> ref(reference) type=main_vector<Area>[8]:{vector:vector<Area>[4]}[18] var=__ref_1[4]:ref(main_vector<Area>) in 1
 229[100]: FreeRef(v1: ref(reference))
 230[88]: Return(ret=0, value=0, discard=88)

