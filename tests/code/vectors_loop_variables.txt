pub fn test() {
    test_value = {"{for x in 0..10 if x != 0 && x % 3 == 0 {if x#first { x } else {x * 2}}}"};
    assert(
        test_value == "[3,12,18]",
        "Test failed {test_value} != \"[3,12,18]\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "";
      OpAppendText(__work_1, "[");
      x#index:integer = OpConvIntFromNull();
      x#count:integer = 0i32;
      loop {#4 iter for
        _val_1:integer = {#5 iter for loop
          x:integer = {#6 for next
            x#index:integer = if OpNot(OpConvBoolFromInt(x#index)) 0i32 else OpAddInt(x#index, 1i32);
            if OpGeInt(x#index, 10i32) break(0) else null;
            x#index;
          }#6:integer;
          if if OpNeInt(x, 0i32) OpEqInt(OpRemInt(x, 3i32), 0i32) else false null else continue(0);
          {#7 block
            if OpEqInt(x#count, 0i32) {#8 block
              x;
            }#8:integer else {#9 block
              OpMulInt(x, 2i32);
            }#9:integer;
          }#7:integer;
        }#5:integer;
        if OpGtInt(x#count, 0i32) OpAppendText(__work_1, ",") else null;
        x#count:integer = OpAddInt(x#count, 1i32);
        OpFormatInt(__work_1, _val_1, 10i32, 0i32, 32i32, false, false);
      }#4;
      OpAppendText(__work_1, "]");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "[3,12,18]") null else OpPanic({#10 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "[3,12,18]"");
    __work_2;
  }#10:text);
}#1

byte-code for loop_variables:test()
 645[0]: return-address
 645[4]: Text() var=__work_2[4]:text in 1
 646[28]: Text() var=__work_1[28]:text in 1
 647[52]: Text() var=test_value[52]:text in 1
 648[76]: ClearText(var[28]) var=__work_1[28]:text in 1
 651[76]: ConstText(_value="") -> text
 653[92]: AppendText(var[28], v1: text)
 656[76]: ConstText(_value="[") -> text
 659[92]: AppendText(var[28], v1: text)
 662[76]: ConvIntFromNull() -> integer var=x#index[76]:integer in 3
 663[80]: ConstInt(val=0) -> integer var=x#count[80]:integer in 3
 668[84]: VarInt(var[76]) -> integer var=x#index[76]:integer in 3
 671[88]: ConvBoolFromInt(v1: integer) -> boolean
 672[85]: Not(v1: boolean) -> boolean
 673[85]: GotoFalseWord(jump=684, if_false: boolean)
 676[84]: ConstInt(val=0) -> integer
 681[88]: GotoWord(jump=693)
 684[84]: VarInt(var[76]) -> integer var=x#index[76]:integer in 3
 687[88]: ConstInt(val=1) -> integer
 692[92]: AddInt(v1: integer, v2: integer) -> integer
 693[88]: PutInt(var[76], value: integer)
 696[84]: VarInt(var[76]) -> integer var=x#index[76]:integer in 3
 699[88]: ConstInt(val=10) -> integer
 704[92]: GeInt(v1: integer, v2: integer) -> boolean
 705[85]: GotoFalseWord(jump=711, if_false: boolean)
 708[84]: GotoWord(jump=841)
 711[84]: VarInt(var[76]) -> integer var=x#index[76]:integer in 3
 714[88]: VarInt(var[84]) -> integer var=x[84]:integer in 5
 717[92]: ConstInt(val=0) -> integer
 722[96]: NeInt(v1: integer, v2: integer) -> boolean
 723[89]: GotoFalseWord(jump=744, if_false: boolean)
 726[88]: VarInt(var[84]) -> integer var=x[84]:integer in 5
 729[92]: ConstInt(val=3) -> integer
 734[96]: RemInt(v1: integer, v2: integer) -> integer
 735[92]: ConstInt(val=0) -> integer
 740[96]: EqInt(v1: integer, v2: integer) -> boolean
 741[89]: GotoWord(jump=745)
 744[88]: ConstFalse() -> boolean
 745[89]: GotoFalseWord(jump=751, if_false: boolean)
 748[88]: GotoWord(jump=758)
 751[88]: FreeStack(value=0, discard=4)
 755[84]: GotoWord(jump=668)
 758[88]: VarInt(var[80]) -> integer var=x#count[80]:integer in 3
 761[92]: ConstInt(val=0) -> integer
 766[96]: EqInt(v1: integer, v2: integer) -> boolean
 767[89]: GotoFalseWord(jump=776, if_false: boolean)
 770[88]: VarInt(var[84]) -> integer var=x[84]:integer in 5
 773[92]: GotoWord(jump=785)
 776[88]: VarInt(var[84]) -> integer var=x[84]:integer in 5
 779[92]: ConstInt(val=2) -> integer
 784[96]: MulInt(v1: integer, v2: integer) -> integer
 785[92]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 789[88]: VarInt(var[80]) -> integer var=x#count[80]:integer in 3
 792[92]: ConstInt(val=0) -> integer
 797[96]: GtInt(v1: integer, v2: integer) -> boolean
 798[89]: GotoFalseWord(jump=807, if_false: boolean)
 801[88]: ConstText(_value=",") -> text
 804[104]: AppendText(var[28], v1: text)
 807[88]: VarInt(var[80]) -> integer var=x#count[80]:integer in 3
 810[92]: ConstInt(val=1) -> integer
 815[96]: AddInt(v1: integer, v2: integer) -> integer
 816[92]: PutInt(var[80], value: integer)
 819[88]: VarInt(var[84]) -> integer var=_val_1[84]:integer in 4
 822[92]: ConstInt(val=0) -> integer
 827[96]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 834[88]: FreeStack(value=0, discard=4)
 838[84]: GotoWord(jump=668)
 841[84]: ConstText(_value="]") -> text
 844[100]: AppendText(var[28], v1: text)
 847[84]: VarText(var[28]) -> text var=__work_1[28]:text in 1
 850[100]: FreeStack(value=16, discard=24) type=text[4]:Base[5]
 854[92]: AppendText(var[52], v1: text)
 857[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 860[92]: ConstText(_value="[3,12,18]") -> text
 871[108]: EqText(v1: text, v2: text) -> boolean
 872[77]: GotoFalseWord(jump=878, if_false: boolean)
 875[76]: GotoWord(jump=935)
 878[76]: ClearText(var[4]) var=__work_2[4]:text in 1
 881[76]: ConstText(_value="Test failed ") -> text
 895[92]: AppendText(var[4], v1: text)
 898[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 901[92]: ConstInt(val=0) -> integer
 906[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 911[76]: ConstText(_value=" != "[3,12,18]"") -> text
 928[92]: AppendText(var[4], v1: text)
 931[76]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 934[92]: Panic(message: text)
 935[76]: FreeText(var[52])
 938[76]: FreeText(var[28])
 941[76]: FreeText(var[4])
 944[76]: Return(ret=0, value=0, discard=76)

Execute test:
  645:[8] Text()
  646:[32] Text()
  647:[56] Text()
  648:[80] ClearText(var[32])
  651:[80] ConstText(_value="") -> ""[80]
  653:[96] AppendText(var[32], v1=""[80])
  656:[80] ConstText(_value="[") -> "["[80]
  659:[96] AppendText(var[32], v1="["[80])
  662:[80] ConvIntFromNull() -> -2147483648[80]
  663:[84] ConstInt(val=0) -> 0[84]
  668:[88] VarInt(var[80]) -> -2147483648[88]
  671:[92] ConvBoolFromInt(v1=-2147483648[88]) -> false[88]
  672:[89] Not(v1=false[88]) -> true[88]
  673:[89] GotoFalseWord(jump=684, if_false=true[88])
  676:[88] ConstInt(val=0) -> 0[88]
  681:[92] GotoWord(jump=693)
  693:[92] PutInt(var[80], value=0[88])
  696:[88] VarInt(var[80]) -> 0[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=0[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 0[88]
  714:[92] VarInt(var[88]) -> 0[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=0[92], v2=0[96]) -> false[92]
  723:[93] GotoFalseWord(jump=744, if_false=false[92])
  744:[92] ConstFalse() -> false[92]
  745:[93] GotoFalseWord(jump=751, if_false=false[92])
  751:[92] FreeStack(value=0, discard=4)
  755:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 0[88]
  671:[92] ConvBoolFromInt(v1=0[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 0[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=0[88], v2=1[92]) -> 1[88]
  693:[92] PutInt(var[80], value=1[88])
  696:[88] VarInt(var[80]) -> 1[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=1[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 1[88]
  714:[92] VarInt(var[88]) -> 1[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=1[92], v2=0[96]) -> true[92]
  723:[93] GotoFalseWord(jump=744, if_false=true[92])
  726:[92] VarInt(var[88]) -> 1[92]
  729:[96] ConstInt(val=3) -> 3[96]
  734:[100] RemInt(v1=1[92], v2=3[96]) -> 1[92]
  735:[96] ConstInt(val=0) -> 0[96]
  740:[100] EqInt(v1=1[92], v2=0[96]) -> false[92]
  741:[93] GotoWord(jump=745)
  745:[93] GotoFalseWord(jump=751, if_false=false[92])
  751:[92] FreeStack(value=0, discard=4)
  755:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 1[88]
  671:[92] ConvBoolFromInt(v1=1[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 1[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=1[88], v2=1[92]) -> 2[88]
  693:[92] PutInt(var[80], value=2[88])
  696:[88] VarInt(var[80]) -> 2[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=2[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 2[88]
  714:[92] VarInt(var[88]) -> 2[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=2[92], v2=0[96]) -> true[92]
  723:[93] GotoFalseWord(jump=744, if_false=true[92])
  726:[92] VarInt(var[88]) -> 2[92]
  729:[96] ConstInt(val=3) -> 3[96]
  734:[100] RemInt(v1=2[92], v2=3[96]) -> 2[92]
  735:[96] ConstInt(val=0) -> 0[96]
  740:[100] EqInt(v1=2[92], v2=0[96]) -> false[92]
  741:[93] GotoWord(jump=745)
  745:[93] GotoFalseWord(jump=751, if_false=false[92])
  751:[92] FreeStack(value=0, discard=4)
  755:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 2[88]
  671:[92] ConvBoolFromInt(v1=2[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 2[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=2[88], v2=1[92]) -> 3[88]
  693:[92] PutInt(var[80], value=3[88])
  696:[88] VarInt(var[80]) -> 3[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=3[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 3[88]
  714:[92] VarInt(var[88]) -> 3[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=3[92], v2=0[96]) -> true[92]
  723:[93] GotoFalseWord(jump=744, if_false=true[92])
  726:[92] VarInt(var[88]) -> 3[92]
  729:[96] ConstInt(val=3) -> 3[96]
  734:[100] RemInt(v1=3[92], v2=3[96]) -> 0[92]
  735:[96] ConstInt(val=0) -> 0[96]
  740:[100] EqInt(v1=0[92], v2=0[96]) -> true[92]
  741:[93] GotoWord(jump=745)
  745:[93] GotoFalseWord(jump=751, if_false=true[92])
  748:[92] GotoWord(jump=758)
  758:[92] VarInt(var[84]) -> 0[92]
  761:[96] ConstInt(val=0) -> 0[96]
  766:[100] EqInt(v1=0[92], v2=0[96]) -> true[92]
  767:[93] GotoFalseWord(jump=776, if_false=true[92])
  770:[92] VarInt(var[88]) -> 3[92]
  773:[96] GotoWord(jump=785)
  785:[96] FreeStack(value=4, discard=8)
  789:[92] VarInt(var[84]) -> 0[92]
  792:[96] ConstInt(val=0) -> 0[96]
  797:[100] GtInt(v1=0[92], v2=0[96]) -> false[92]
  798:[93] GotoFalseWord(jump=807, if_false=false[92])
  807:[92] VarInt(var[84]) -> 0[92]
  810:[96] ConstInt(val=1) -> 1[96]
  815:[100] AddInt(v1=0[92], v2=1[96]) -> 1[92]
  816:[96] PutInt(var[84], value=1[92])
  819:[92] VarInt(var[88]) -> 3[92]
  822:[96] ConstInt(val=0) -> 0[96]
  827:[100] FormatInt(var[32], val=3[92], radix=10, width=0[96], token=32, plus=false, note=false)
  834:[92] FreeStack(value=0, discard=4)
  838:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 3[88]
  671:[92] ConvBoolFromInt(v1=3[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 3[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=3[88], v2=1[92]) -> 4[88]
  693:[92] PutInt(var[80], value=4[88])
  696:[88] VarInt(var[80]) -> 4[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=4[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 4[88]
  714:[92] VarInt(var[88]) -> 4[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=4[92], v2=0[96]) -> true[92]
  723:[93] GotoFalseWord(jump=744, if_false=true[92])
  726:[92] VarInt(var[88]) -> 4[92]
  729:[96] ConstInt(val=3) -> 3[96]
  734:[100] RemInt(v1=4[92], v2=3[96]) -> 1[92]
  735:[96] ConstInt(val=0) -> 0[96]
  740:[100] EqInt(v1=1[92], v2=0[96]) -> false[92]
  741:[93] GotoWord(jump=745)
  745:[93] GotoFalseWord(jump=751, if_false=false[92])
  751:[92] FreeStack(value=0, discard=4)
  755:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 4[88]
  671:[92] ConvBoolFromInt(v1=4[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 4[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=4[88], v2=1[92]) -> 5[88]
  693:[92] PutInt(var[80], value=5[88])
  696:[88] VarInt(var[80]) -> 5[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=5[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 5[88]
  714:[92] VarInt(var[88]) -> 5[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=5[92], v2=0[96]) -> true[92]
  723:[93] GotoFalseWord(jump=744, if_false=true[92])
  726:[92] VarInt(var[88]) -> 5[92]
  729:[96] ConstInt(val=3) -> 3[96]
  734:[100] RemInt(v1=5[92], v2=3[96]) -> 2[92]
  735:[96] ConstInt(val=0) -> 0[96]
  740:[100] EqInt(v1=2[92], v2=0[96]) -> false[92]
  741:[93] GotoWord(jump=745)
  745:[93] GotoFalseWord(jump=751, if_false=false[92])
  751:[92] FreeStack(value=0, discard=4)
  755:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 5[88]
  671:[92] ConvBoolFromInt(v1=5[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 5[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=5[88], v2=1[92]) -> 6[88]
  693:[92] PutInt(var[80], value=6[88])
  696:[88] VarInt(var[80]) -> 6[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=6[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 6[88]
  714:[92] VarInt(var[88]) -> 6[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=6[92], v2=0[96]) -> true[92]
  723:[93] GotoFalseWord(jump=744, if_false=true[92])
  726:[92] VarInt(var[88]) -> 6[92]
  729:[96] ConstInt(val=3) -> 3[96]
  734:[100] RemInt(v1=6[92], v2=3[96]) -> 0[92]
  735:[96] ConstInt(val=0) -> 0[96]
  740:[100] EqInt(v1=0[92], v2=0[96]) -> true[92]
  741:[93] GotoWord(jump=745)
  745:[93] GotoFalseWord(jump=751, if_false=true[92])
  748:[92] GotoWord(jump=758)
  758:[92] VarInt(var[84]) -> 1[92]
  761:[96] ConstInt(val=0) -> 0[96]
  766:[100] EqInt(v1=1[92], v2=0[96]) -> false[92]
  767:[93] GotoFalseWord(jump=776, if_false=false[92])
  776:[92] VarInt(var[88]) -> 6[92]
  779:[96] ConstInt(val=2) -> 2[96]
  784:[100] MulInt(v1=6[92], v2=2[96]) -> 12[92]
  785:[96] FreeStack(value=4, discard=8)
  789:[92] VarInt(var[84]) -> 1[92]
  792:[96] ConstInt(val=0) -> 0[96]
  797:[100] GtInt(v1=1[92], v2=0[96]) -> true[92]
  798:[93] GotoFalseWord(jump=807, if_false=true[92])
  801:[92] ConstText(_value=",") -> ","[92]
  804:[108] AppendText(var[32], v1=","[92])
  807:[92] VarInt(var[84]) -> 1[92]
  810:[96] ConstInt(val=1) -> 1[96]
  815:[100] AddInt(v1=1[92], v2=1[96]) -> 2[92]
  816:[96] PutInt(var[84], value=2[92])
  819:[92] VarInt(var[88]) -> 12[92]
  822:[96] ConstInt(val=0) -> 0[96]
  827:[100] FormatInt(var[32], val=12[92], radix=10, width=0[96], token=32, plus=false, note=false)
  834:[92] FreeStack(value=0, discard=4)
  838:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 6[88]
  671:[92] ConvBoolFromInt(v1=6[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 6[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=6[88], v2=1[92]) -> 7[88]
  693:[92] PutInt(var[80], value=7[88])
  696:[88] VarInt(var[80]) -> 7[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=7[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 7[88]
  714:[92] VarInt(var[88]) -> 7[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=7[92], v2=0[96]) -> true[92]
  723:[93] GotoFalseWord(jump=744, if_false=true[92])
  726:[92] VarInt(var[88]) -> 7[92]
  729:[96] ConstInt(val=3) -> 3[96]
  734:[100] RemInt(v1=7[92], v2=3[96]) -> 1[92]
  735:[96] ConstInt(val=0) -> 0[96]
  740:[100] EqInt(v1=1[92], v2=0[96]) -> false[92]
  741:[93] GotoWord(jump=745)
  745:[93] GotoFalseWord(jump=751, if_false=false[92])
  751:[92] FreeStack(value=0, discard=4)
  755:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 7[88]
  671:[92] ConvBoolFromInt(v1=7[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 7[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=7[88], v2=1[92]) -> 8[88]
  693:[92] PutInt(var[80], value=8[88])
  696:[88] VarInt(var[80]) -> 8[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=8[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 8[88]
  714:[92] VarInt(var[88]) -> 8[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=8[92], v2=0[96]) -> true[92]
  723:[93] GotoFalseWord(jump=744, if_false=true[92])
  726:[92] VarInt(var[88]) -> 8[92]
  729:[96] ConstInt(val=3) -> 3[96]
  734:[100] RemInt(v1=8[92], v2=3[96]) -> 2[92]
  735:[96] ConstInt(val=0) -> 0[96]
  740:[100] EqInt(v1=2[92], v2=0[96]) -> false[92]
  741:[93] GotoWord(jump=745)
  745:[93] GotoFalseWord(jump=751, if_false=false[92])
  751:[92] FreeStack(value=0, discard=4)
  755:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 8[88]
  671:[92] ConvBoolFromInt(v1=8[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 8[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=8[88], v2=1[92]) -> 9[88]
  693:[92] PutInt(var[80], value=9[88])
  696:[88] VarInt(var[80]) -> 9[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=9[88], v2=10[92]) -> false[88]
  705:[89] GotoFalseWord(jump=711, if_false=false[88])
  711:[88] VarInt(var[80]) -> 9[88]
  714:[92] VarInt(var[88]) -> 9[92]
  717:[96] ConstInt(val=0) -> 0[96]
  722:[100] NeInt(v1=9[92], v2=0[96]) -> true[92]
  723:[93] GotoFalseWord(jump=744, if_false=true[92])
  726:[92] VarInt(var[88]) -> 9[92]
  729:[96] ConstInt(val=3) -> 3[96]
  734:[100] RemInt(v1=9[92], v2=3[96]) -> 0[92]
  735:[96] ConstInt(val=0) -> 0[96]
  740:[100] EqInt(v1=0[92], v2=0[96]) -> true[92]
  741:[93] GotoWord(jump=745)
  745:[93] GotoFalseWord(jump=751, if_false=true[92])
  748:[92] GotoWord(jump=758)
  758:[92] VarInt(var[84]) -> 2[92]
  761:[96] ConstInt(val=0) -> 0[96]
  766:[100] EqInt(v1=2[92], v2=0[96]) -> false[92]
  767:[93] GotoFalseWord(jump=776, if_false=false[92])
  776:[92] VarInt(var[88]) -> 9[92]
  779:[96] ConstInt(val=2) -> 2[96]
  784:[100] MulInt(v1=9[92], v2=2[96]) -> 18[92]
  785:[96] FreeStack(value=4, discard=8)
  789:[92] VarInt(var[84]) -> 2[92]
  792:[96] ConstInt(val=0) -> 0[96]
  797:[100] GtInt(v1=2[92], v2=0[96]) -> true[92]
  798:[93] GotoFalseWord(jump=807, if_false=true[92])
  801:[92] ConstText(_value=",") -> ","[92]
  804:[108] AppendText(var[32], v1=","[92])
  807:[92] VarInt(var[84]) -> 2[92]
  810:[96] ConstInt(val=1) -> 1[96]
  815:[100] AddInt(v1=2[92], v2=1[96]) -> 3[92]
  816:[96] PutInt(var[84], value=3[92])
  819:[92] VarInt(var[88]) -> 18[92]
  822:[96] ConstInt(val=0) -> 0[96]
  827:[100] FormatInt(var[32], val=18[92], radix=10, width=0[96], token=32, plus=false, note=false)
  834:[92] FreeStack(value=0, discard=4)
  838:[88] GotoWord(jump=668)
  668:[88] VarInt(var[80]) -> 9[88]
  671:[92] ConvBoolFromInt(v1=9[88]) -> true[88]
  672:[89] Not(v1=true[88]) -> false[88]
  673:[89] GotoFalseWord(jump=684, if_false=false[88])
  684:[88] VarInt(var[80]) -> 9[88]
  687:[92] ConstInt(val=1) -> 1[92]
  692:[96] AddInt(v1=9[88], v2=1[92]) -> 10[88]
  693:[92] PutInt(var[80], value=10[88])
  696:[88] VarInt(var[80]) -> 10[88]
  699:[92] ConstInt(val=10) -> 10[92]
  704:[96] GeInt(v1=10[88], v2=10[92]) -> true[88]
  705:[89] GotoFalseWord(jump=711, if_false=true[88])
  708:[88] GotoWord(jump=841)
  841:[88] ConstText(_value="]") -> "]"[88]
  844:[104] AppendText(var[32], v1="]"[88])
  847:[88] VarText(var[32]) -> "[3,12,18]"[88]
  850:[104] FreeStack(value=16, discard=24)
  854:[96] AppendText(var[56], v1="[3,12,18]"[80])
  857:[80] VarText(var[56]) -> "[3,12,18]"[80]
  860:[96] ConstText(_value="[3,12,18]") -> "[3,12,18]"[96]
  871:[112] EqText(v1="[3,12,18]"[80], v2="[3,12,18]"[96]) -> true[80]
  872:[81] GotoFalseWord(jump=878, if_false=true[80])
  875:[80] GotoWord(jump=935)
  935:[80] FreeText(var[56])
  938:[80] FreeText(var[32])
  941:[80] FreeText(var[8])
  944:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
