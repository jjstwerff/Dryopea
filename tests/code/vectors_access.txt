pub fn test() {
    test_value = {v=[1, 10, 100]; v[1]};
    assert(
        test_value == 10,
        "Test failed {test_value} != 10"
    );
}
Type 14:vector<integer>[4]:Vector(0)

Type 15:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __ref_1:ref(main_vector<integer>) = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    v:vector<integer>["__ref_1"] = {#3 vector
      OpDatabase(__ref_1, 15i32);
      _vec_1:vector<integer>["__ref_1"] = OpGetField(__ref_1, 4i32, 65535i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 1i32);
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 10i32);
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 100i32);
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _vec_1;
    }#3:vector<integer>["__ref_1"];
    OpGetInt(OpGetVector(v, 4i32, 1i32), 0i32);
  }#2:integer;
  if OpEqInt(test_value, 10i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 10");
    __work_1;
  }#4:text);
}#1

byte-code for access:test() [1073]
   0[0]: return-address
   0[4]: ConvRefFromNull() -> ref(reference) var=__ref_1[4]:ref(main_vector<integer>) in 1
   1[16]: Text() var=__work_1[16]:text in 1
   2[40]: Database(var[4], db_tp=15) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=v[40]:vector<integer>["__ref_1"] in 2
   7[40]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=__ref_1[4]:ref(main_vector<integer>) in 1
  10[52]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=Unknown type(65535)[65535]
  13[52]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=__ref_1[4]:ref(main_vector<integer>) in 1
  16[64]: ConstInt(val=0) -> integer
  21[68]: SetInt(v1: ref(reference), fld=4, val: integer)
  24[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  27[64]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
  32[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  35[76]: ConstInt(val=1) -> integer
  40[80]: SetInt(v1: ref(reference), fld=0, val: integer)
  43[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  46[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  49[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
  54[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  57[76]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
  62[76]: PutRef(var[52], value: ref(reference))
  65[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  68[76]: ConstInt(val=10) -> integer
  73[80]: SetInt(v1: ref(reference), fld=0, val: integer)
  76[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  79[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  82[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
  87[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  90[76]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
  95[76]: PutRef(var[52], value: ref(reference))
  98[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 101[76]: ConstInt(val=100) -> integer
 106[80]: SetInt(v1: ref(reference), fld=0, val: integer)
 109[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 112[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 115[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
 120[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 123[76]: FreeStack(value=12, discard=36) type=vector<text>[4]:Vector(5)[6]
 127[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 130[64]: ConstInt(val=1) -> integer
 135[68]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 138[64]: GetInt(v1: ref(reference), fld=0) -> integer
 141[56]: FreeStack(value=4, discard=16) type=integer[4]:Base[0]
 145[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
 148[48]: ConstInt(val=10) -> integer
 153[52]: EqInt(v1: integer, v2: integer) -> boolean
 154[45]: GotoFalseWord(jump=160, if_false: boolean)
 157[44]: GotoWord(jump=210)
 160[44]: ClearText(var[16]) var=__work_1[16]:text in 1
 163[44]: ConstText(_value="Test failed ") -> text
 177[60]: AppendText(var[16], v1: text)
 180[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
 183[48]: ConstInt(val=0) -> integer
 188[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 195[44]: ConstText(_value=" != 10") -> text
 203[60]: AppendText(var[16], v1: text)
 206[44]: VarText(var[16]) -> text var=__work_1[16]:text in 1
 209[60]: Panic(message: text)
 210[44]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=__ref_1[4]:ref(main_vector<integer>) in 1
 213[56]: FreeRef(v1: ref(reference))
 214[44]: FreeText(var[16])
 217[44]: Return(ret=0, value=0, discard=44)

