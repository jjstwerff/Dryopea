pub fn test() {
    test_value = {v=[1, 10, 100]; v[1]};
    assert(
        test_value == 10,
        "Test failed {test_value} != 10"
    );
}
Type 12:vector<integer>[4]:Vector(0)

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __ref_1:ref(main_vector<integer>) = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    v:vector<integer>["__ref_1"] = {#3 vector
      OpDatabase(__ref_1, 13i32);
      _vec_1:vector<integer>["__ref_1"] = OpGetField(__ref_1, 4i32, 65535i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 12i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 1i32);
      OpFinishRecord(_vec_1, _elm_2, 12i32, 65535i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 12i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 10i32);
      OpFinishRecord(_vec_1, _elm_2, 12i32, 65535i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 12i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 100i32);
      OpFinishRecord(_vec_1, _elm_2, 12i32, 65535i32);
      _vec_1;
    }#3:vector<integer>["__ref_1"];
    OpGetInt(OpGetVector(v, 4i32, 1i32), 0i32);
  }#2:integer;
  if OpEqInt(test_value, 10i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 10");
    __work_1;
  }#4:text);
}#1

byte-code for access:test()
 645[0]: return-address
 645[4]: ConvRefFromNull() -> ref(reference) var=__ref_1[4]:ref(main_vector<integer>) in 1
 646[16]: Text() var=__work_1[16]:text in 1
 647[40]: Database(var[4], db_tp=13) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13] var=v[40]:vector<integer>["__ref_1"] in 2
 652[40]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13] var=__ref_1[4]:ref(main_vector<integer>) in 1
 655[52]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=Unknown type(65535)[65535]
 658[52]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13] var=__ref_1[4]:ref(main_vector<integer>) in 1
 661[64]: ConstInt(val=0) -> integer
 666[68]: SetInt(v1: ref(reference), fld=4, val: integer)
 669[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 672[64]: NewRecord(data: ref(reference), parent_tp=12, fld=65535) -> ref(reference)
 677[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 680[76]: ConstInt(val=1) -> integer
 685[80]: SetInt(v1: ref(reference), fld=0, val: integer)
 688[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 691[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 694[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=12, fld=65535)
 699[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 702[76]: NewRecord(data: ref(reference), parent_tp=12, fld=65535) -> ref(reference)
 707[76]: PutRef(var[52], value: ref(reference))
 710[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 713[76]: ConstInt(val=10) -> integer
 718[80]: SetInt(v1: ref(reference), fld=0, val: integer)
 721[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 724[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 727[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=12, fld=65535)
 732[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 735[76]: NewRecord(data: ref(reference), parent_tp=12, fld=65535) -> ref(reference)
 740[76]: PutRef(var[52], value: ref(reference))
 743[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 746[76]: ConstInt(val=100) -> integer
 751[80]: SetInt(v1: ref(reference), fld=0, val: integer)
 754[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 757[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 760[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=12, fld=65535)
 765[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 768[76]: FreeStack(value=12, discard=36) type=Variable[12]:{name:text[4], value:text[8]}[6]
 772[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12] var=v[40]:vector<integer>["__ref_1"] in 2
 775[64]: ConstInt(val=1) -> integer
 780[68]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 783[64]: GetInt(v1: ref(reference), fld=0) -> integer
 786[56]: FreeStack(value=4, discard=16) type=integer[4]:Base[0]
 790[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
 793[48]: ConstInt(val=10) -> integer
 798[52]: EqInt(v1: integer, v2: integer) -> boolean
 799[45]: GotoFalseWord(jump=805, if_false: boolean)
 802[44]: GotoWord(jump=855)
 805[44]: ClearText(var[16]) var=__work_1[16]:text in 1
 808[44]: ConstText(_value="Test failed ") -> text
 822[60]: AppendText(var[16], v1: text)
 825[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
 828[48]: ConstInt(val=0) -> integer
 833[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 840[44]: ConstText(_value=" != 10") -> text
 848[60]: AppendText(var[16], v1: text)
 851[44]: VarText(var[16]) -> text var=__work_1[16]:text in 1
 854[60]: Panic(message: text)
 855[44]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13] var=__ref_1[4]:ref(main_vector<integer>) in 1
 858[56]: FreeRef(v1: ref(reference))
 859[44]: FreeText(var[16])
 862[44]: Return(ret=0, value=0, discard=44)

Execute test:
  645:[8] ConvRefFromNull() -> ref(1,0,0)[8]
  646:[20] Text()
  647:[44] Database(var[8], db_tp=13)
  652:[44] VarRef(var[8]) -> ref(1,1,0)={}[44]
  655:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  658:[56] VarRef(var[8]) -> ref(1,1,0)={}[56]
  661:[68] ConstInt(val=0) -> 0[68]
  666:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  669:[56] VarVector(var[44]) -> ref(1,1,4)=[][56]
  672:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=12, fld=65535) -> ref(1,9,8)[56]
  677:[68] VarRef(var[56]) -> ref(1,9,8)=false[68]
  680:[80] ConstInt(val=1) -> 1[80]
  685:[84] SetInt(v1=ref(1,9,8)[68], fld=0, val=1[80])
  688:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  691:[80] VarRef(var[56]) -> ref(1,9,8)=true[80]
  694:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,8)[80], parent_tp=12, fld=65535)
  699:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  702:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,12)[68]
  707:[80] PutRef(var[56], value=ref(1,9,12)[68])
  710:[68] VarRef(var[56]) -> ref(1,9,12)=false[68]
  713:[80] ConstInt(val=10) -> 10[80]
  718:[84] SetInt(v1=ref(1,9,12)[68], fld=0, val=10[80])
  721:[68] VarVector(var[44]) -> ref(1,1,4)=[1,10][68]
  724:[80] VarRef(var[56]) -> ref(1,9,12)=true[80]
  727:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,12)[80], parent_tp=12, fld=65535)
  732:[68] VarVector(var[44]) -> ref(1,1,4)=[1,10][68]
  735:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,16)[68]
  740:[80] PutRef(var[56], value=ref(1,9,16)[68])
  743:[68] VarRef(var[56]) -> ref(1,9,16)=false[68]
  746:[80] ConstInt(val=100) -> 100[80]
  751:[84] SetInt(v1=ref(1,9,16)[68], fld=0, val=100[80])
  754:[68] VarVector(var[44]) -> ref(1,1,4)=[1,10,100][68]
  757:[80] VarRef(var[56]) -> ref(1,9,16)=true[80]
  760:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,16)[80], parent_tp=12, fld=65535)
  765:[68] VarVector(var[44]) -> ref(1,1,4)=[1,10,100][68]
  768:[80] FreeStack(value=12, discard=36)
  772:[56] VarVector(var[44]) -> ref(1,1,4)=[1,10,100][56]
  775:[68] ConstInt(val=1) -> 1[68]
  780:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=1[68]) -> ref(1,9,12)=10[56]
  783:[68] GetInt(v1=ref(1,9,12)[56], fld=0) -> 10[56]
  786:[60] FreeStack(value=4, discard=16)
  790:[48] VarInt(var[44]) -> 10[48]
  793:[52] ConstInt(val=10) -> 10[52]
  798:[56] EqInt(v1=10[48], v2=10[52]) -> true[48]
  799:[49] GotoFalseWord(jump=805, if_false=true[48])
  802:[48] GotoWord(jump=855)
  855:[48] VarRef(var[8]) -> ref(1,1,0)={vector:[1,10,100]}[48]
  858:[60] FreeRef(v1=ref(1,1,0)[48])
  859:[48] FreeText(var[20])
  862:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
