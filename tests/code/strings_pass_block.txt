pub fn test() {
    test_value = {s = "12 "; d = s; trim(d)};
    assert(
        test_value == "12",
        "Test failed {test_value} != \"12\""
    );
}
fn test() {#1 block
  __work_1:text = "";
  d:text["s"] = "";
  test_value:text["d"] = {#2 block
    s:text = "12 ";
    d:text["s"] = s;
    _tp_text_trim(d);
  }#2:text["d"];
  if OpEqText(test_value, "12") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "12"");
    __work_1;
  }#3:text);
}#1

byte-code for pass_block:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: Text()
 693[52]: Text()
 694[76]: Text()
 695[100]: ConstText(_value="12 ") -> text
 700[116]: AppendText(var[76], v1: text)
 703[100]: ClearText(var[28])
 706[100]: VarText(var[76]) -> text
 709[116]: AppendText(var[28], v1: text)
 712[100]: VarText(var[28]) -> text
 715[116]: StaticCall(_tp_text_trim)
 718[116]: FreeText(var[76])
 721[116]: FreeStack(value=16, discard=40) type=text[4]:Base[5]
 725[92]: AppendText(var[52], v1: text)
 728[76]: VarText(var[52]) -> text
 731[92]: ConstText(_value="12") -> text
 735[108]: EqText(v1: text, v2: text) -> boolean
 736[77]: GotoFalseWord(jump=742, if_false: boolean)
 739[76]: GotoWord(jump=792)
 742[76]: ClearText(var[4])
 745[76]: ConstText(_value="Test failed ") -> text
 759[92]: AppendText(var[4], v1: text)
 762[76]: VarText(var[52]) -> text
 765[92]: ConstInt(val=0) -> integer
 770[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 775[76]: ConstText(_value=" != "12"") -> text
 785[92]: AppendText(var[4], v1: text)
 788[76]: VarText(var[4]) -> text
 791[92]: Panic(message: text)
 792[76]: FreeText(var[52])
 795[76]: FreeText(var[28])
 798[76]: FreeText(var[4])
 801[76]: Return(ret=0, value=0, discard=76)

Execute test:
  691:[8] Text()
  692:[32] Text()
  693:[56] Text()
  694:[80] Text()
  695:[104] ConstText(_value="12 ") -> "12 "[104]
  700:[120] AppendText(var[80], v1="12 "[104])
  703:[104] ClearText(var[32])
  706:[104] VarText(var[80]) -> "12 "[104]
  709:[120] AppendText(var[32], v1="12 "[104])
  712:[104] VarText(var[32]) -> "12 "[104]
  715:[120] StaticCall(call=6)
  718:[120] FreeText(var[80])
  721:[120] FreeStack(value=16, discard=40)
  725:[96] AppendText(var[56], v1="12"[80])
  728:[80] VarText(var[56]) -> "12"[80]
  731:[96] ConstText(_value="12") -> "12"[96]
  735:[112] EqText(v1="12"[80], v2="12"[96]) -> true[80]
  736:[81] GotoFalseWord(jump=742, if_false=true[80])
  739:[80] GotoWord(jump=792)
  792:[80] FreeText(var[56])
  795:[80] FreeText(var[32])
  798:[80] FreeText(var[8])
  801:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
