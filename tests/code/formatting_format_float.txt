pub fn test() {
    test_value = {"a{1.2:4.2}b{1.34}c{1.4:5}d{334.1:.2}e"};
    assert(
        test_value == "a1.20b1.34c  1.4d334.10e",
        "Test failed {test_value} != \"a1.20b1.34c  1.4d334.10e\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "a";
      OpFormatFloat(__work_1, 1.2f64, 4i32, 2i32);
      OpAppendText(__work_1, "b");
      OpFormatFloat(__work_1, 1.34f64, 0i32, 0i32);
      OpAppendText(__work_1, "c");
      OpFormatFloat(__work_1, 1.4f64, 5i32, 0i32);
      OpAppendText(__work_1, "d");
      OpFormatFloat(__work_1, 334.1f64, 0i32, 2i32);
      OpAppendText(__work_1, "e");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a1.20b1.34c  1.4d334.10e") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "a1.20b1.34c  1.4d334.10e"");
    __work_2;
  }#4:text);
}#1

byte-code for format_float:test()
 655[0]: return-address
 655[4]: Text() var=__work_2[4]:text in 1
 656[28]: Text() var=__work_1[28]:text in 1
 657[52]: Text() var=test_value[52]:text in 1
 658[76]: ClearText(var[28]) var=__work_1[28]:text in 1
 661[76]: ConstText(_value="a") -> text
 664[92]: AppendText(var[28], v1: text)
 667[76]: ConstFloat(val=1.2) -> float
 676[84]: ConstInt(val=4) -> integer
 681[88]: ConstInt(val=2) -> integer
 686[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 689[76]: ConstText(_value="b") -> text
 692[92]: AppendText(var[28], v1: text)
 695[76]: ConstFloat(val=1.34) -> float
 704[84]: ConstInt(val=0) -> integer
 709[88]: ConstInt(val=0) -> integer
 714[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 717[76]: ConstText(_value="c") -> text
 720[92]: AppendText(var[28], v1: text)
 723[76]: ConstFloat(val=1.4) -> float
 732[84]: ConstInt(val=5) -> integer
 737[88]: ConstInt(val=0) -> integer
 742[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 745[76]: ConstText(_value="d") -> text
 748[92]: AppendText(var[28], v1: text)
 751[76]: ConstFloat(val=334.1) -> float
 760[84]: ConstInt(val=0) -> integer
 765[88]: ConstInt(val=2) -> integer
 770[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 773[76]: ConstText(_value="e") -> text
 776[92]: AppendText(var[28], v1: text)
 779[76]: VarText(var[28]) -> text var=__work_1[28]:text in 1
 782[92]: AppendText(var[52], v1: text)
 785[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 788[92]: ConstText(_value="a1.20b1.34c  1.4d334.10e") -> text
 814[108]: EqText(v1: text, v2: text) -> boolean
 815[77]: GotoFalseWord(jump=821, if_false: boolean)
 818[76]: GotoWord(jump=893)
 821[76]: ClearText(var[4]) var=__work_2[4]:text in 1
 824[76]: ConstText(_value="Test failed ") -> text
 838[92]: AppendText(var[4], v1: text)
 841[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 844[92]: ConstInt(val=0) -> integer
 849[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 854[76]: ConstText(_value=" != "a1.20b1.34c  1.4d334.10e"") -> text
 886[92]: AppendText(var[4], v1: text)
 889[76]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 892[92]: Panic(message: text)
 893[76]: FreeText(var[52])
 896[76]: FreeText(var[28])
 899[76]: FreeText(var[4])
 902[76]: Return(ret=0, value=0, discard=76)

Execute test:
  655:[8] Text()
  656:[32] Text()
  657:[56] Text()
  658:[80] ClearText(var[32])
  661:[80] ConstText(_value="a") -> "a"[80]
  664:[96] AppendText(var[32], v1="a"[80])
  667:[80] ConstFloat(val=1.2) -> 1.2[80]
  676:[88] ConstInt(val=4) -> 4[88]
  681:[92] ConstInt(val=2) -> 2[92]
  686:[96] FormatFloat(var[32], val=1.2[80], width=4[88], precision=2[92])
  689:[80] ConstText(_value="b") -> "b"[80]
  692:[96] AppendText(var[32], v1="b"[80])
  695:[80] ConstFloat(val=1.34) -> 1.34[80]
  704:[88] ConstInt(val=0) -> 0[88]
  709:[92] ConstInt(val=0) -> 0[92]
  714:[96] FormatFloat(var[32], val=1.34[80], width=0[88], precision=0[92])
  717:[80] ConstText(_value="c") -> "c"[80]
  720:[96] AppendText(var[32], v1="c"[80])
  723:[80] ConstFloat(val=1.4) -> 1.4[80]
  732:[88] ConstInt(val=5) -> 5[88]
  737:[92] ConstInt(val=0) -> 0[92]
  742:[96] FormatFloat(var[32], val=1.4[80], width=5[88], precision=0[92])
  745:[80] ConstText(_value="d") -> "d"[80]
  748:[96] AppendText(var[32], v1="d"[80])
  751:[80] ConstFloat(val=334.1) -> 334.1[80]
  760:[88] ConstInt(val=0) -> 0[88]
  765:[92] ConstInt(val=2) -> 2[92]
  770:[96] FormatFloat(var[32], val=334.1[80], width=0[88], precision=2[92])
  773:[80] ConstText(_value="e") -> "e"[80]
  776:[96] AppendText(var[32], v1="e"[80])
  779:[80] VarText(var[32]) -> "a1.20b1.34c  1.4d334.10e"[80]
  782:[96] AppendText(var[56], v1="a1.20b1.34c  1.4d334.10e"[80])
  785:[80] VarText(var[56]) -> "a1.20b1.34c  1.4d334.10e"[80]
  788:[96] ConstText(_value="a1.20b1.34c  1.4d334.10e") -> "a1.20b1.34c  1.4d334.10e"[96]
  814:[112] EqText(v1="a1.20b1.34c  1.4d334.10e"[80], v2="a1.20b1.34c  1.4d334.10e"[96]) -> true[80]
  815:[81] GotoFalseWord(jump=821, if_false=true[80])
  818:[80] GotoWord(jump=893)
  893:[80] FreeText(var[56])
  896:[80] FreeText(var[32])
  899:[80] FreeText(var[8])
  902:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
