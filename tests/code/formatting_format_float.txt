pub fn test() {
    test_value = {"a{1.2:4.2}b{1.34}c{1.4:5}d{334.1:.2}e"};
    assert(
        test_value == "a1.20b1.34c  1.4d334.10e",
        "Test failed {test_value} != \"a1.20b1.34c  1.4d334.10e\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "a";
      OpFormatFloat(__work_1, 1.2f64, 4i32, 2i32);
      OpAppendText(__work_1, "b");
      OpFormatFloat(__work_1, 1.34f64, 0i32, 0i32);
      OpAppendText(__work_1, "c");
      OpFormatFloat(__work_1, 1.4f64, 5i32, 0i32);
      OpAppendText(__work_1, "d");
      OpFormatFloat(__work_1, 334.1f64, 0i32, 2i32);
      OpAppendText(__work_1, "e");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a1.20b1.34c  1.4d334.10e") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "a1.20b1.34c  1.4d334.10e"");
    __work_2;
  }#4:text);
}#1

byte-code for format_float:test()
 645[0]: return-address
 645[4]: Text() var=__work_2[4]:text in 1
 646[28]: Text() var=__work_1[28]:text in 1
 647[52]: Text() var=test_value[52]:text in 1
 648[76]: ClearText(var[28]) var=__work_1[28]:text in 1
 651[76]: ConstText(_value="a") -> text
 654[92]: AppendText(var[28], v1: text)
 657[76]: ConstFloat(val=1.2) -> float
 666[84]: ConstInt(val=4) -> integer
 671[88]: ConstInt(val=2) -> integer
 676[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 679[76]: ConstText(_value="b") -> text
 682[92]: AppendText(var[28], v1: text)
 685[76]: ConstFloat(val=1.34) -> float
 694[84]: ConstInt(val=0) -> integer
 699[88]: ConstInt(val=0) -> integer
 704[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 707[76]: ConstText(_value="c") -> text
 710[92]: AppendText(var[28], v1: text)
 713[76]: ConstFloat(val=1.4) -> float
 722[84]: ConstInt(val=5) -> integer
 727[88]: ConstInt(val=0) -> integer
 732[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 735[76]: ConstText(_value="d") -> text
 738[92]: AppendText(var[28], v1: text)
 741[76]: ConstFloat(val=334.1) -> float
 750[84]: ConstInt(val=0) -> integer
 755[88]: ConstInt(val=2) -> integer
 760[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 763[76]: ConstText(_value="e") -> text
 766[92]: AppendText(var[28], v1: text)
 769[76]: VarText(var[28]) -> text var=__work_1[28]:text in 1
 772[92]: AppendText(var[52], v1: text)
 775[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 778[92]: ConstText(_value="a1.20b1.34c  1.4d334.10e") -> text
 804[108]: EqText(v1: text, v2: text) -> boolean
 805[77]: GotoFalseWord(jump=811, if_false: boolean)
 808[76]: GotoWord(jump=883)
 811[76]: ClearText(var[4]) var=__work_2[4]:text in 1
 814[76]: ConstText(_value="Test failed ") -> text
 828[92]: AppendText(var[4], v1: text)
 831[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 834[92]: ConstInt(val=0) -> integer
 839[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 844[76]: ConstText(_value=" != "a1.20b1.34c  1.4d334.10e"") -> text
 876[92]: AppendText(var[4], v1: text)
 879[76]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 882[92]: Panic(message: text)
 883[76]: FreeText(var[52])
 886[76]: FreeText(var[28])
 889[76]: FreeText(var[4])
 892[76]: Return(ret=0, value=0, discard=76)

Execute test:
  645:[8] Text()
  646:[32] Text()
  647:[56] Text()
  648:[80] ClearText(var[32])
  651:[80] ConstText(_value="a") -> "a"[80]
  654:[96] AppendText(var[32], v1="a"[80])
  657:[80] ConstFloat(val=1.2) -> 1.2[80]
  666:[88] ConstInt(val=4) -> 4[88]
  671:[92] ConstInt(val=2) -> 2[92]
  676:[96] FormatFloat(var[32], val=1.2[80], width=4[88], precision=2[92])
  679:[80] ConstText(_value="b") -> "b"[80]
  682:[96] AppendText(var[32], v1="b"[80])
  685:[80] ConstFloat(val=1.34) -> 1.34[80]
  694:[88] ConstInt(val=0) -> 0[88]
  699:[92] ConstInt(val=0) -> 0[92]
  704:[96] FormatFloat(var[32], val=1.34[80], width=0[88], precision=0[92])
  707:[80] ConstText(_value="c") -> "c"[80]
  710:[96] AppendText(var[32], v1="c"[80])
  713:[80] ConstFloat(val=1.4) -> 1.4[80]
  722:[88] ConstInt(val=5) -> 5[88]
  727:[92] ConstInt(val=0) -> 0[92]
  732:[96] FormatFloat(var[32], val=1.4[80], width=5[88], precision=0[92])
  735:[80] ConstText(_value="d") -> "d"[80]
  738:[96] AppendText(var[32], v1="d"[80])
  741:[80] ConstFloat(val=334.1) -> 334.1[80]
  750:[88] ConstInt(val=0) -> 0[88]
  755:[92] ConstInt(val=2) -> 2[92]
  760:[96] FormatFloat(var[32], val=334.1[80], width=0[88], precision=2[92])
  763:[80] ConstText(_value="e") -> "e"[80]
  766:[96] AppendText(var[32], v1="e"[80])
  769:[80] VarText(var[32]) -> "a1.20b1.34c  1.4d334.10e"[80]
  772:[96] AppendText(var[56], v1="a1.20b1.34c  1.4d334.10e"[80])
  775:[80] VarText(var[56]) -> "a1.20b1.34c  1.4d334.10e"[80]
  778:[96] ConstText(_value="a1.20b1.34c  1.4d334.10e") -> "a1.20b1.34c  1.4d334.10e"[96]
  804:[112] EqText(v1="a1.20b1.34c  1.4d334.10e"[80], v2="a1.20b1.34c  1.4d334.10e"[96]) -> true[80]
  805:[81] GotoFalseWord(jump=811, if_false=true[80])
  808:[80] GotoWord(jump=883)
  883:[80] FreeText(var[56])
  886:[80] FreeText(var[32])
  889:[80] FreeText(var[8])
  892:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
