pub fn test() {
    test_value = {"a{1.2:4.2}b{1.34}c{1.4:5}d{334.1:.2}e"};
    assert(
        test_value == "a1.20b1.34c  1.4d334.10e",
        "Test failed {test_value} != \"a1.20b1.34c  1.4d334.10e\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "a";
      OpFormatFloat(__work_1, 1.2f64, 4i32, 2i32);
      OpAppendText(__work_1, "b");
      OpFormatFloat(__work_1, 1.34f64, 0i32, 0i32);
      OpAppendText(__work_1, "c");
      OpFormatFloat(__work_1, 1.4f64, 5i32, 0i32);
      OpAppendText(__work_1, "d");
      OpFormatFloat(__work_1, 334.1f64, 0i32, 2i32);
      OpAppendText(__work_1, "e");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a1.20b1.34c  1.4d334.10e") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "a1.20b1.34c  1.4d334.10e"");
    __work_2;
  }#4:text);
}#1

byte-code for format_float:test()
 682[0]: return-address
 682[4]: Text()
 683[28]: Text()
 684[52]: Text()
 685[76]: ClearText(var[28])
 688[76]: ConstText(_value="a") -> text
 691[92]: AppendText(var[28], v1: text)
 694[76]: ConstFloat(val=1.2) -> float
 703[84]: ConstInt(val=4) -> integer
 708[88]: ConstInt(val=2) -> integer
 713[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 716[76]: ConstText(_value="b") -> text
 719[92]: AppendText(var[28], v1: text)
 722[76]: ConstFloat(val=1.34) -> float
 731[84]: ConstInt(val=0) -> integer
 736[88]: ConstInt(val=0) -> integer
 741[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 744[76]: ConstText(_value="c") -> text
 747[92]: AppendText(var[28], v1: text)
 750[76]: ConstFloat(val=1.4) -> float
 759[84]: ConstInt(val=5) -> integer
 764[88]: ConstInt(val=0) -> integer
 769[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 772[76]: ConstText(_value="d") -> text
 775[92]: AppendText(var[28], v1: text)
 778[76]: ConstFloat(val=334.1) -> float
 787[84]: ConstInt(val=0) -> integer
 792[88]: ConstInt(val=2) -> integer
 797[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 800[76]: ConstText(_value="e") -> text
 803[92]: AppendText(var[28], v1: text)
 806[76]: VarText(var[28]) -> text
 809[92]: AppendText(var[52], v1: text)
 812[76]: VarText(var[52]) -> text
 815[92]: ConstText(_value="a1.20b1.34c  1.4d334.10e") -> text
 841[108]: EqText(v1: text, v2: text) -> boolean
 842[77]: GotoFalseWord(jump=848, if_false: boolean)
 845[76]: GotoWord(jump=920)
 848[76]: ClearText(var[4])
 851[76]: ConstText(_value="Test failed ") -> text
 865[92]: AppendText(var[4], v1: text)
 868[76]: VarText(var[52]) -> text
 871[92]: ConstInt(val=0) -> integer
 876[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 881[76]: ConstText(_value=" != "a1.20b1.34c  1.4d334.10e"") -> text
 913[92]: AppendText(var[4], v1: text)
 916[76]: VarText(var[4]) -> text
 919[92]: Panic(message: text)
 920[76]: Return(ret=0, value=0, discard=76)

Execute test:
  682:[8] Text()
  683:[32] Text()
  684:[56] Text()
  685:[80] ClearText(var[32])
  688:[80] ConstText(_value="a") -> "a"[80]
  691:[96] AppendText(var[32], v1="a"[80])
  694:[80] ConstFloat(val=1.2) -> 1.2[80]
  703:[88] ConstInt(val=4) -> 4[88]
  708:[92] ConstInt(val=2) -> 2[92]
  713:[96] FormatFloat(var[32], val=1.2[80], width=4[88], precision=2[92])
  716:[80] ConstText(_value="b") -> "b"[80]
  719:[96] AppendText(var[32], v1="b"[80])
  722:[80] ConstFloat(val=1.34) -> 1.34[80]
  731:[88] ConstInt(val=0) -> 0[88]
  736:[92] ConstInt(val=0) -> 0[92]
  741:[96] FormatFloat(var[32], val=1.34[80], width=0[88], precision=0[92])
  744:[80] ConstText(_value="c") -> "c"[80]
  747:[96] AppendText(var[32], v1="c"[80])
  750:[80] ConstFloat(val=1.4) -> 1.4[80]
  759:[88] ConstInt(val=5) -> 5[88]
  764:[92] ConstInt(val=0) -> 0[92]
  769:[96] FormatFloat(var[32], val=1.4[80], width=5[88], precision=0[92])
  772:[80] ConstText(_value="d") -> "d"[80]
  775:[96] AppendText(var[32], v1="d"[80])
  778:[80] ConstFloat(val=334.1) -> 334.1[80]
  787:[88] ConstInt(val=0) -> 0[88]
  792:[92] ConstInt(val=2) -> 2[92]
  797:[96] FormatFloat(var[32], val=334.1[80], width=0[88], precision=2[92])
  800:[80] ConstText(_value="e") -> "e"[80]
  803:[96] AppendText(var[32], v1="e"[80])
  806:[80] VarText(var[32]) -> "a1.20b1.34c  1.4d334.10e"[80]
  809:[96] AppendText(var[56], v1="a1.20b1.34c  1.4d334.10e"[80])
  812:[80] VarText(var[56]) -> "a1.20b1.34c  1.4d334.10e"[80]
  815:[96] ConstText(_value="a1.20b1.34c  1.4d334.10e") -> "a1.20b1.34c  1.4d334.10e"[96]
  841:[112] EqText(v1="a1.20b1.34c  1.4d334.10e"[80], v2="a1.20b1.34c  1.4d334.10e"[96]) -> true[80]
  842:[81] GotoFalseWord(jump=848, if_false=true[80])
  845:[80] GotoWord(jump=920)
  920:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
