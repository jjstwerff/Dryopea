pub fn test() {
    test_value = {"a{1.2:4.2}b{1.34}c{1.4:5}d{334.1:.2}e"};
    assert(
        test_value == "a1.20b1.34c  1.4d334.10e",
        "Test failed {test_value} != \"a1.20b1.34c  1.4d334.10e\""
    );
}
fn test() {#1 block
  let __work_2:text = "";
  let __work_1:text = "";
  let test_value:text = {#2 block
    {#3 formatting string
      OpClearText(__work_1);
      OpAppendText(__work_1, "a");
      OpFormatFloat(__work_1, 1.2f64, 4i32, 2i32);
      OpAppendText(__work_1, "b");
      OpFormatFloat(__work_1, 1.34f64, 0i32, 0i32);
      OpAppendText(__work_1, "c");
      OpFormatFloat(__work_1, 1.4f64, 5i32, 0i32);
      OpAppendText(__work_1, "d");
      OpFormatFloat(__work_1, 334.1f64, 0i32, 2i32);
      OpAppendText(__work_1, "e");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a1.20b1.34c  1.4d334.10e") null else OpPanic({#4 formatting string
    OpClearText(__work_2);
    OpAppendText(__work_2, "Test failed ");
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "a1.20b1.34c  1.4d334.10e"");
    __work_2;
  }#4:text);
}#1

byte-code for format_float:test()
 675[0]: return-address
 675[4]: Text()
 676[28]: Text()
 677[52]: Text()
 678[76]: ClearText(var[28])
 681[76]: ConstText(_value="a") -> text
 684[92]: AppendText(var[28], v1: text)
 687[76]: ConstFloat(val=1.2) -> float
 696[84]: ConstInt(val=4) -> integer
 701[88]: ConstInt(val=2) -> integer
 706[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 709[76]: ConstText(_value="b") -> text
 712[92]: AppendText(var[28], v1: text)
 715[76]: ConstFloat(val=1.34) -> float
 724[84]: ConstInt(val=0) -> integer
 729[88]: ConstInt(val=0) -> integer
 734[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 737[76]: ConstText(_value="c") -> text
 740[92]: AppendText(var[28], v1: text)
 743[76]: ConstFloat(val=1.4) -> float
 752[84]: ConstInt(val=5) -> integer
 757[88]: ConstInt(val=0) -> integer
 762[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 765[76]: ConstText(_value="d") -> text
 768[92]: AppendText(var[28], v1: text)
 771[76]: ConstFloat(val=334.1) -> float
 780[84]: ConstInt(val=0) -> integer
 785[88]: ConstInt(val=2) -> integer
 790[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 793[76]: ConstText(_value="e") -> text
 796[92]: AppendText(var[28], v1: text)
 799[76]: VarText(var[28]) -> text
 802[92]: AppendText(var[52], v1: text)
 805[76]: VarText(var[52]) -> text
 808[92]: ConstText(_value="a1.20b1.34c  1.4d334.10e") -> text
 834[108]: EqText(v1: text, v2: text) -> boolean
 835[77]: GotoFalseWord(jump=841, if_false: boolean)
 838[76]: GotoWord(jump=913)
 841[76]: ClearText(var[4])
 844[76]: ConstText(_value="Test failed ") -> text
 858[92]: AppendText(var[4], v1: text)
 861[76]: VarText(var[52]) -> text
 864[92]: ConstInt(val=0) -> integer
 869[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 874[76]: ConstText(_value=" != "a1.20b1.34c  1.4d334.10e"") -> text
 906[92]: AppendText(var[4], v1: text)
 909[76]: VarText(var[4]) -> text
 912[92]: Panic(message: text)
 913[76]: Return(ret=0, value=0, discard=76)

Execute test:
  675:[8] Text()
  676:[32] Text()
  677:[56] Text()
  678:[80] ClearText(var[32])
  681:[80] ConstText(_value="a") -> "a"[80]
  684:[96] AppendText(var[32], v1="a"[80])
  687:[80] ConstFloat(val=1.2) -> 1.2[80]
  696:[88] ConstInt(val=4) -> 4[88]
  701:[92] ConstInt(val=2) -> 2[92]
  706:[96] FormatFloat(var[32], val=1.2[80], width=4[88], precision=2[92])
  709:[80] ConstText(_value="b") -> "b"[80]
  712:[96] AppendText(var[32], v1="b"[80])
  715:[80] ConstFloat(val=1.34) -> 1.34[80]
  724:[88] ConstInt(val=0) -> 0[88]
  729:[92] ConstInt(val=0) -> 0[92]
  734:[96] FormatFloat(var[32], val=1.34[80], width=0[88], precision=0[92])
  737:[80] ConstText(_value="c") -> "c"[80]
  740:[96] AppendText(var[32], v1="c"[80])
  743:[80] ConstFloat(val=1.4) -> 1.4[80]
  752:[88] ConstInt(val=5) -> 5[88]
  757:[92] ConstInt(val=0) -> 0[92]
  762:[96] FormatFloat(var[32], val=1.4[80], width=5[88], precision=0[92])
  765:[80] ConstText(_value="d") -> "d"[80]
  768:[96] AppendText(var[32], v1="d"[80])
  771:[80] ConstFloat(val=334.1) -> 334.1[80]
  780:[88] ConstInt(val=0) -> 0[88]
  785:[92] ConstInt(val=2) -> 2[92]
  790:[96] FormatFloat(var[32], val=334.1[80], width=0[88], precision=2[92])
  793:[80] ConstText(_value="e") -> "e"[80]
  796:[96] AppendText(var[32], v1="e"[80])
  799:[80] VarText(var[32]) -> "a1.20b1.34c  1.4d334.10e"[80]
  802:[96] AppendText(var[56], v1="a1.20b1.34c  1.4d334.10e"[80])
  805:[80] VarText(var[56]) -> "a1.20b1.34c  1.4d334.10e"[80]
  808:[96] ConstText(_value="a1.20b1.34c  1.4d334.10e") -> "a1.20b1.34c  1.4d334.10e"[96]
  834:[112] EqText(v1="a1.20b1.34c  1.4d334.10e"[80], v2="a1.20b1.34c  1.4d334.10e"[96]) -> true[80]
  835:[81] GotoFalseWord(jump=841, if_false=true[80])
  838:[80] GotoWord(jump=913)
  913:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
