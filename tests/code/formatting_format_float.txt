pub fn test() {
    test_value = {"a{1.2:4.2}b{1.34}c{1.4:5}d{334.1:.2}e"};
    assert(
        test_value == "a1.20b1.34c  1.4d334.10e",
        "Test failed {test_value} != \"a1.20b1.34c  1.4d334.10e\""
    );
}
fn test {#1 block
  let __work_2 = "";
  let __work_1 = "";
  let test_value = {#2 block
    {#3 formatting string
      OpClearText(__work_1);
      OpAppendText(__work_1, "a");
      OpFormatFloat(__work_1, 1.2f64, 4i32, 2i32);
      OpAppendText(__work_1, "b");
      OpFormatFloat(__work_1, 1.34f64, 0i32, 0i32);
      OpAppendText(__work_1, "c");
      OpFormatFloat(__work_1, 1.4f64, 5i32, 0i32);
      OpAppendText(__work_1, "d");
      OpFormatFloat(__work_1, 334.1f64, 0i32, 2i32);
      OpAppendText(__work_1, "e");
      __work_1;
    }#3;
  }#2;
  if OpEqText(test_value, "a1.20b1.34c  1.4d334.10e") null else OpGenPanic({#4 formatting string
    OpClearText(__work_2);
    OpAppendText(__work_2, "Test failed ");
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "a1.20b1.34c  1.4d334.10e"");
    __work_2;
  }#4);
}#1

byte-code for format_float:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: Text()
 670[52]: Text()
 671[76]: ClearText(var[28])
 674[76]: ConstText(_value="a") -> text(false, [])
 677[92]: AppendText(var[28], v1: text(false, []))
 680[76]: ConstFloat(val=1.2) -> float
 689[84]: ConstInt(val=4) -> integer
 694[88]: ConstInt(val=2) -> integer
 699[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 702[76]: ConstText(_value="b") -> text(false, [])
 705[92]: AppendText(var[28], v1: text(false, []))
 708[76]: ConstFloat(val=1.34) -> float
 717[84]: ConstInt(val=0) -> integer
 722[88]: ConstInt(val=0) -> integer
 727[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 730[76]: ConstText(_value="c") -> text(false, [])
 733[92]: AppendText(var[28], v1: text(false, []))
 736[76]: ConstFloat(val=1.4) -> float
 745[84]: ConstInt(val=5) -> integer
 750[88]: ConstInt(val=0) -> integer
 755[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 758[76]: ConstText(_value="d") -> text(false, [])
 761[92]: AppendText(var[28], v1: text(false, []))
 764[76]: ConstFloat(val=334.1) -> float
 773[84]: ConstInt(val=0) -> integer
 778[88]: ConstInt(val=2) -> integer
 783[92]: FormatFloat(var[28], val: float, width: integer, precision: integer)
 786[76]: ConstText(_value="e") -> text(false, [])
 789[92]: AppendText(var[28], v1: text(false, []))
 792[76]: VarText(var[28]) -> text(false, [])
 795[92]: AppendText(var[52], v1: text(false, []))
 798[76]: VarText(var[52]) -> text(false, [])
 801[92]: ConstText(_value="a1.20b1.34c  1.4d334.10e") -> text(false, [])
 827[108]: EqText(v1: text(false, []), v2: text(false, [])) -> boolean
 828[77]: GenGotoFalseWord(jump=834, if_false: boolean)
 831[76]: GenGotoWord(jump=906)
 834[76]: ClearText(var[4])
 837[76]: ConstText(_value="Test failed ") -> text(false, [])
 851[92]: AppendText(var[4], v1: text(false, []))
 854[76]: VarText(var[52]) -> text(false, [])
 857[92]: ConstInt(val=0) -> integer
 862[96]: FormatText(var[4], val: text(false, []), width: integer, dir=-1, token=32)
 867[76]: ConstText(_value=" != "a1.20b1.34c  1.4d334.10e"") -> text(false, [])
 899[92]: AppendText(var[4], v1: text(false, []))
 902[76]: VarText(var[4]) -> text(false, [])
 905[92]: GenPanic(message: text(false, []))
 906[76]: GenReturn(ret=0, value=0, discard=76)

Execute test:
  668:[8] Text()
  669:[32] Text()
  670:[56] Text()
  671:[80] ClearText(var[32])
  674:[80] ConstText(_value="a") -> "a"[80]
  677:[96] AppendText(var[32], v1="a"[80])
  680:[80] ConstFloat(val=1.2) -> 1.2[80]
  689:[88] ConstInt(val=4) -> 4[88]
  694:[92] ConstInt(val=2) -> 2[92]
  699:[96] FormatFloat(var[32], val=1.2[80], width=4[88], precision=2[92])
  702:[80] ConstText(_value="b") -> "b"[80]
  705:[96] AppendText(var[32], v1="b"[80])
  708:[80] ConstFloat(val=1.34) -> 1.34[80]
  717:[88] ConstInt(val=0) -> 0[88]
  722:[92] ConstInt(val=0) -> 0[92]
  727:[96] FormatFloat(var[32], val=1.34[80], width=0[88], precision=0[92])
  730:[80] ConstText(_value="c") -> "c"[80]
  733:[96] AppendText(var[32], v1="c"[80])
  736:[80] ConstFloat(val=1.4) -> 1.4[80]
  745:[88] ConstInt(val=5) -> 5[88]
  750:[92] ConstInt(val=0) -> 0[92]
  755:[96] FormatFloat(var[32], val=1.4[80], width=5[88], precision=0[92])
  758:[80] ConstText(_value="d") -> "d"[80]
  761:[96] AppendText(var[32], v1="d"[80])
  764:[80] ConstFloat(val=334.1) -> 334.1[80]
  773:[88] ConstInt(val=0) -> 0[88]
  778:[92] ConstInt(val=2) -> 2[92]
  783:[96] FormatFloat(var[32], val=334.1[80], width=0[88], precision=2[92])
  786:[80] ConstText(_value="e") -> "e"[80]
  789:[96] AppendText(var[32], v1="e"[80])
  792:[80] VarText(var[32]) -> "a1.20b1.34c  1.4d334.10e"[80]
  795:[96] AppendText(var[56], v1="a1.20b1.34c  1.4d334.10e"[80])
  798:[80] VarText(var[56]) -> "a1.20b1.34c  1.4d334.10e"[80]
  801:[96] ConstText(_value="a1.20b1.34c  1.4d334.10e") -> "a1.20b1.34c  1.4d334.10e"[96]
  827:[112] EqText(v1="a1.20b1.34c  1.4d334.10e"[80], v2="a1.20b1.34c  1.4d334.10e"[96]) -> true[80]
  828:[81] GenGotoFalseWord(jump=834, if_false=true[80])
  831:[80] GenGotoWord(jump=906)
  906:[80] GenReturn(ret=4294967295[4], value=0, discard=76)
Finished
