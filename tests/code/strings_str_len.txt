pub fn test() {
    test_value = {a="12345";a.len() * 100 + len("ðŸ˜ƒ") * 10 + len("â™¥")};
    assert(
        test_value == 543,
        "Test failed {test_value} != 543"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    a:text = "12345";
    OpAddInt(OpAddInt(OpMulInt(_tp_text_len(a), 100i32), OpMulInt(_tp_text_len("ðŸ˜ƒ"), 10i32)), _tp_text_len("â™¥"));
  }#2:integer;
  if OpEqInt(test_value, 543i32) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 543");
    __work_1;
  }#3:text);
}#1

byte-code for str_len:test() [1082]
   0[0]: return-address
   0[4]: Text() var=__work_1[4]:text in 1
   1[28]: Text() var=a[28]:text in 2
   2[52]: ConstText(_value="12345") -> text
   9[68]: AppendText(var[28], v1: text)
  12[52]: VarText(var[28]) -> text var=a[28]:text in 2
  15[68]: Call(size=0, to=318)
  22[56]: ConstInt(val=100) -> integer
  27[60]: MulInt(v1: integer, v2: integer) -> integer
  28[56]: ConstText(_value="ðŸ˜ƒ") -> text
  34[72]: Call(size=0, to=318)
  41[60]: ConstInt(val=10) -> integer
  46[64]: MulInt(v1: integer, v2: integer) -> integer
  47[60]: AddInt(v1: integer, v2: integer) -> integer
  48[56]: ConstText(_value="â™¥") -> text
  53[72]: Call(size=0, to=318)
  60[60]: AddInt(v1: integer, v2: integer) -> integer
  61[56]: FreeText(var[28])
  64[56]: FreeStack(value=4, discard=28) type=integer[4]:Base[0]
  68[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
  71[36]: ConstInt(val=543) -> integer
  76[40]: EqInt(v1: integer, v2: integer) -> boolean
  77[33]: GotoFalseWord(jump=83, if_false: boolean)
  80[32]: GotoWord(jump=134)
  83[32]: ClearText(var[4]) var=__work_1[4]:text in 1
  86[32]: ConstText(_value="Test failed ") -> text
 100[48]: AppendText(var[4], v1: text)
 103[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 106[36]: ConstInt(val=0) -> integer
 111[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 118[32]: ConstText(_value=" != 543") -> text
 127[48]: AppendText(var[4], v1: text)
 130[32]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 133[48]: Panic(message: text)
 134[32]: FreeText(var[4])
 137[32]: Return(ret=0, value=0, discard=32)

