pub fn test() {
    test_value = {"123" as long + 2};
    assert(
        test_value == 125l,
        "Test failed {test_value} != 125l"
    );
}
fn test {#1 block
  let __work_1 = "";
  let test_value = {#2 block
    OpAddLong(OpCastLongFromText("123"), OpConvLongFromInt(2i32));
  }#2;
  if OpEqLong(test_value, 125i64) null else OpGenPanic({#3 formatting string
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatLong(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 125l");
    __work_1;
  }#3);
}#1

byte-code for convert_text:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstText(_value="123") -> text(false, [])
 674[44]: CastLongFromText(v1: text(false, [])) -> long
 675[36]: ConstInt(val=2) -> integer
 680[40]: ConvLongFromInt(v1: integer) -> long
 681[44]: AddLong(v1: long, v2: long) -> long
 682[36]: VarLong(var[28]) -> long
 685[44]: ConstLong(val=125) -> long
 694[52]: EqLong(v1: long, v2: long) -> boolean
 695[37]: GenGotoFalseWord(jump=701, if_false: boolean)
 698[36]: GenGotoWord(jump=753)
 701[36]: ClearText(var[4])
 704[36]: ConstText(_value="Test failed ") -> text(false, [])
 718[52]: AppendText(var[4], v1: text(false, []))
 721[36]: VarLong(var[28]) -> long
 724[44]: ConstInt(val=0) -> integer
 729[48]: FormatLong(var[4], val: long, radix=10, width: integer, token=32, plus=false, note=false)
 736[36]: ConstText(_value=" != 125l") -> text(false, [])
 746[52]: AppendText(var[4], v1: text(false, []))
 749[36]: VarText(var[4]) -> text(false, [])
 752[52]: GenPanic(message: text(false, []))
 753[36]: GenReturn(ret=0, value=0, discard=36)

Execute test:
  668:[8] Text()
  669:[32] ConstText(_value="123") -> "123"[32]
  674:[48] CastLongFromText(v1="123"[32]) -> 123[32]
  675:[40] ConstInt(val=2) -> 2[40]
  680:[44] ConvLongFromInt(v1=2[40]) -> 2[40]
  681:[48] AddLong(v1=123[32], v2=2[40]) -> 125[32]
  682:[40] VarLong(var[32]) -> 125[40]
  685:[48] ConstLong(val=125) -> 125[48]
  694:[56] EqLong(v1=125[40], v2=125[48]) -> true[40]
  695:[41] GenGotoFalseWord(jump=701, if_false=true[40])
  698:[40] GenGotoWord(jump=753)
  753:[40] GenReturn(ret=4294967295[4], value=0, discard=36)
Finished
