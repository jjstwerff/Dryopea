enum Val {A, B, C}

pub fn test() {
    test_value = {v=[A,A,B,B]; v[2] as integer};
    assert(
        test_value == 2,
        "Test failed {test_value} != 2"
    );
}
Type 12:Val[1]:Enum(["A", "B", "C"])

Type 13:main_vector<Val>[8]:
    vector:vector<Val>[4]

Type 14:vector<Val>[4]:Vector(12)

fn test() {#1 block
  __ref_1:main_vector<Val> = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    v:vector<Val> = {#3 vector
      OpDatabase(__ref_1, 13i32);
      _vec_2:vector<Val> = OpGetField(__ref_1, 4i32, 65535i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 14i32, 65535i32);
      OpSetEnum(_elm_1, 0i32, 1u8(12));
      OpFinishRecord(_vec_2, _elm_1, 14i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 14i32, 65535i32);
      OpSetEnum(_elm_1, 0i32, 1u8(12));
      OpFinishRecord(_vec_2, _elm_1, 14i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 14i32, 65535i32);
      OpSetEnum(_elm_1, 0i32, 2u8(12));
      OpFinishRecord(_vec_2, _elm_1, 14i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 14i32, 65535i32);
      OpSetEnum(_elm_1, 0i32, 2u8(12));
      OpFinishRecord(_vec_2, _elm_1, 14i32, 65535i32);
      _vec_2;
    }#3:vector<Val>;
    OpCastIntFromEnum(OpGetEnum(OpGetVector(v, 1i32, 2i32), 0i32));
  }#2:integer;
  if OpEqInt(test_value, 2i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 2");
    __work_1;
  }#4:text);
}#1

byte-code for enum_vector:test()
 691[0]: return-address
 691[4]: ConvRefFromNull() -> reference
 692[16]: Text()
 693[40]: Database(var[4], db_tp=13) type=main_vector<Val>[8]:{vector:vector<Val>[4]}[13]
 698[40]: VarRef(var[4]) -> reference type=main_vector<Val>[8]:{vector:vector<Val>[4]}[13]
 701[52]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 704[52]: VarRef(var[4]) -> reference type=main_vector<Val>[8]:{vector:vector<Val>[4]}[13]
 707[64]: ConstInt(val=0) -> integer
 712[68]: SetInt(v1: reference, fld=4, val: integer)
 715[52]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 718[64]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 723[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 726[76]: ConstEnum(val=1) -> enumerate type=Val[1]:Enum(["A", "B", "C"])[12]
 728[77]: SetEnum(v1: reference, fld=0, val: enumerate)
 731[64]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 734[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 737[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 742[64]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 745[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 750[76]: PutRef(var[52], value: reference)
 753[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 756[76]: ConstEnum(val=1) -> enumerate type=Val[1]:Enum(["A", "B", "C"])[12]
 758[77]: SetEnum(v1: reference, fld=0, val: enumerate)
 761[64]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 764[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 767[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 772[64]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 775[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 780[76]: PutRef(var[52], value: reference)
 783[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 786[76]: ConstEnum(val=2) -> enumerate type=Val[1]:Enum(["A", "B", "C"])[12]
 788[77]: SetEnum(v1: reference, fld=0, val: enumerate)
 791[64]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 794[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 797[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 802[64]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 805[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 810[76]: PutRef(var[52], value: reference)
 813[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 816[76]: ConstEnum(val=2) -> enumerate type=Val[1]:Enum(["A", "B", "C"])[12]
 818[77]: SetEnum(v1: reference, fld=0, val: enumerate)
 821[64]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 824[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 827[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 832[64]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 835[76]: FreeStack(value=12, discard=36) type=Variable[12]:{name:text[4], value:text[8]}[6]
 839[52]: VarVector(var[40]) -> vector type=vector<Val>[4]:Vector(12)[14]
 842[64]: ConstInt(val=2) -> integer
 847[68]: GetVector(r: vector, size=1, index: integer) -> reference type=Val[1]:Enum(["A", "B", "C"])[12]
 850[64]: GetEnum(v1: reference, fld=0) -> enumerate
 853[53]: CastIntFromEnum(v1: enumerate) -> integer
 854[56]: FreeStack(value=4, discard=16) type=integer[4]:Base[0]
 858[44]: VarInt(var[40]) -> integer
 861[48]: ConstInt(val=2) -> integer
 866[52]: EqInt(v1: integer, v2: integer) -> boolean
 867[45]: GotoFalseWord(jump=873, if_false: boolean)
 870[44]: GotoWord(jump=922)
 873[44]: ClearText(var[16])
 876[44]: ConstText(_value="Test failed ") -> text
 890[60]: AppendText(var[16], v1: text)
 893[44]: VarInt(var[40]) -> integer
 896[48]: ConstInt(val=0) -> integer
 901[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 908[44]: ConstText(_value=" != 2") -> text
 915[60]: AppendText(var[16], v1: text)
 918[44]: VarText(var[16]) -> text
 921[60]: Panic(message: text)
 922[44]: FreeText(var[16])
 925[44]: Return(ret=0, value=0, discard=44)

Execute test:
  691:[8] ConvRefFromNull() -> ref(65535,0,0)[8]
  692:[20] Text()
  693:[44] Database(var[8], db_tp=13)
  698:[44] VarRef(var[8]) -> ref(1,1,0)={}[44]
  701:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  704:[56] VarRef(var[8]) -> ref(1,1,0)={}[56]
  707:[68] ConstInt(val=0) -> 0[68]
  712:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  715:[56] VarVector(var[44]) -> ref(1,1,4)=[][56]
  718:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=14, fld=65535) -> ref(1,9,8)[56]
  723:[68] VarRef(var[56]) -> ref(1,9,8)=false[68]
  726:[80] ConstEnum(val=1) -> A(1)[80]
  728:[81] SetEnum(v1=ref(1,9,8)[68], fld=0, val=1[80])
  731:[68] VarVector(var[44]) -> ref(1,1,4)=[A][68]
  734:[80] VarRef(var[56]) -> ref(1,9,8)=true[80]
  737:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,8)[80], parent_tp=14, fld=65535)
  742:[68] VarVector(var[44]) -> ref(1,1,4)=[A][68]
  745:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=14, fld=65535) -> ref(1,9,9)[68]
  750:[80] PutRef(var[56], value=ref(1,9,9)[68])
  753:[68] VarRef(var[56]) -> ref(1,9,9)=false[68]
  756:[80] ConstEnum(val=1) -> A(1)[80]
  758:[81] SetEnum(v1=ref(1,9,9)[68], fld=0, val=1[80])
  761:[68] VarVector(var[44]) -> ref(1,1,4)=[A,A][68]
  764:[80] VarRef(var[56]) -> ref(1,9,9)=true[80]
  767:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,9)[80], parent_tp=14, fld=65535)
  772:[68] VarVector(var[44]) -> ref(1,1,4)=[A,A][68]
  775:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=14, fld=65535) -> ref(1,9,10)[68]
  780:[80] PutRef(var[56], value=ref(1,9,10)[68])
  783:[68] VarRef(var[56]) -> ref(1,9,10)=false[68]
  786:[80] ConstEnum(val=2) -> B(2)[80]
  788:[81] SetEnum(v1=ref(1,9,10)[68], fld=0, val=2[80])
  791:[68] VarVector(var[44]) -> ref(1,1,4)=[A,A,B][68]
  794:[80] VarRef(var[56]) -> ref(1,9,10)=true[80]
  797:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,10)[80], parent_tp=14, fld=65535)
  802:[68] VarVector(var[44]) -> ref(1,1,4)=[A,A,B][68]
  805:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=14, fld=65535) -> ref(1,9,11)[68]
  810:[80] PutRef(var[56], value=ref(1,9,11)[68])
  813:[68] VarRef(var[56]) -> ref(1,9,11)=false[68]
  816:[80] ConstEnum(val=2) -> B(2)[80]
  818:[81] SetEnum(v1=ref(1,9,11)[68], fld=0, val=2[80])
  821:[68] VarVector(var[44]) -> ref(1,1,4)=[A,A,B,B][68]
  824:[80] VarRef(var[56]) -> ref(1,9,11)=true[80]
  827:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,11)[80], parent_tp=14, fld=65535)
  832:[68] VarVector(var[44]) -> ref(1,1,4)=[A,A,B,B][68]
  835:[80] FreeStack(value=12, discard=36)
  839:[56] VarVector(var[44]) -> ref(1,1,4)=[A,A,B,B][56]
  842:[68] ConstInt(val=2) -> 2[68]
  847:[72] GetVector(r=ref(1,1,4)=true[56], size=1, index=2[68]) -> ref(1,9,10)=B[56]
  850:[68] GetEnum(v1=ref(1,9,10)[56], fld=0) -> unknown(2)(2)[56]
  853:[57] CastIntFromEnum(v1=2[56]) -> 2[56]
  854:[60] FreeStack(value=4, discard=16)
  858:[48] VarInt(var[44]) -> 2[48]
  861:[52] ConstInt(val=2) -> 2[52]
  866:[56] EqInt(v1=2[48], v2=2[52]) -> true[48]
  867:[49] GotoFalseWord(jump=873, if_false=true[48])
  870:[48] GotoWord(jump=922)
  922:[48] FreeText(var[20])
  925:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
