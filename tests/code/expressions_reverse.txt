pub fn test() {
    test_value = {b = 0; for a in rev(0..6) { b=b*10+a }; b};
    assert(
        test_value == 543210,
        "Test failed {test_value} != 543210"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    b:integer = 0i32;
    {#3 for
      a#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        a:integer = {#5 for next
          if OpNot(OpConvBoolFromInt(a#index)) a#index:integer = 6i32 else null;
          a#index:integer = OpMinInt(a#index, 1i32);
          if OpLtInt(a#index, 0i32) break(0) else null;
          a#index;
        }#5:integer;
        {#6 block
          b:integer = OpAddInt(OpMulInt(b, 10i32), a);
        }#6;
      }#4;
    }#3;
    b;
  }#2:integer;
  if OpEqInt(test_value, 543210i32) null else OpPanic({#7 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 543210");
    __work_1;
  }#7:text);
}#1

byte-code for reverse:test()
 655[0]: return-address
 655[4]: Text() var=__work_1[4]:text in 1
 656[28]: ConstInt(val=0) -> integer var=b[28]:integer in 2
 661[32]: ConvIntFromNull() -> integer var=a#index[32]:integer in 3
 662[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 665[40]: ConvBoolFromInt(v1: integer) -> boolean
 666[37]: Not(v1: boolean) -> boolean
 667[37]: GotoFalseWord(jump=678, if_false: boolean)
 670[36]: ConstInt(val=6) -> integer var=a#index[32]:integer in 3
 675[40]: PutInt(var[32], value: integer)
 678[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 681[40]: ConstInt(val=1) -> integer
 686[44]: MinInt(v1: integer, v2: integer) -> integer
 687[40]: PutInt(var[32], value: integer)
 690[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 693[40]: ConstInt(val=0) -> integer
 698[44]: LtInt(v1: integer, v2: integer) -> boolean
 699[37]: GotoFalseWord(jump=705, if_false: boolean)
 702[36]: GotoWord(jump=731)
 705[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 708[40]: VarInt(var[28]) -> integer var=b[28]:integer in 2
 711[44]: ConstInt(val=10) -> integer
 716[48]: MulInt(v1: integer, v2: integer) -> integer
 717[44]: VarInt(var[36]) -> integer var=a[36]:integer in 4
 720[48]: AddInt(v1: integer, v2: integer) -> integer
 721[44]: PutInt(var[28], value: integer)
 724[40]: FreeStack(value=0, discard=4)
 728[36]: GotoWord(jump=662)
 731[36]: FreeStack(value=0, discard=4)
 735[32]: VarInt(var[28]) -> integer var=b[28]:integer in 2
 738[36]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 742[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 745[36]: ConstInt(val=543210) -> integer
 750[40]: EqInt(v1: integer, v2: integer) -> boolean
 751[33]: GotoFalseWord(jump=757, if_false: boolean)
 754[32]: GotoWord(jump=811)
 757[32]: ClearText(var[4]) var=__work_1[4]:text in 1
 760[32]: ConstText(_value="Test failed ") -> text
 774[48]: AppendText(var[4], v1: text)
 777[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 780[36]: ConstInt(val=0) -> integer
 785[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 792[32]: ConstText(_value=" != 543210") -> text
 804[48]: AppendText(var[4], v1: text)
 807[32]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 810[48]: Panic(message: text)
 811[32]: FreeText(var[4])
 814[32]: Return(ret=0, value=0, discard=32)

Execute test:
  655:[8] Text()
  656:[32] ConstInt(val=0) -> 0[32]
  661:[36] ConvIntFromNull() -> -2147483648[36]
  662:[40] VarInt(var[36]) -> -2147483648[40]
  665:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  666:[41] Not(v1=false[40]) -> true[40]
  667:[41] GotoFalseWord(jump=678, if_false=true[40])
  670:[40] ConstInt(val=6) -> 6[40]
  675:[44] PutInt(var[36], value=6[40])
  678:[40] VarInt(var[36]) -> 6[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] MinInt(v1=6[40], v2=1[44]) -> 5[40]
  687:[44] PutInt(var[36], value=5[40])
  690:[40] VarInt(var[36]) -> 5[40]
  693:[44] ConstInt(val=0) -> 0[44]
  698:[48] LtInt(v1=5[40], v2=0[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 5[40]
  708:[44] VarInt(var[32]) -> 0[44]
  711:[48] ConstInt(val=10) -> 10[48]
  716:[52] MulInt(v1=0[44], v2=10[48]) -> 0[44]
  717:[48] VarInt(var[40]) -> 5[48]
  720:[52] AddInt(v1=0[44], v2=5[48]) -> 5[44]
  721:[48] PutInt(var[32], value=5[44])
  724:[44] FreeStack(value=0, discard=4)
  728:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 5[40]
  665:[44] ConvBoolFromInt(v1=5[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 5[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] MinInt(v1=5[40], v2=1[44]) -> 4[40]
  687:[44] PutInt(var[36], value=4[40])
  690:[40] VarInt(var[36]) -> 4[40]
  693:[44] ConstInt(val=0) -> 0[44]
  698:[48] LtInt(v1=4[40], v2=0[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 4[40]
  708:[44] VarInt(var[32]) -> 5[44]
  711:[48] ConstInt(val=10) -> 10[48]
  716:[52] MulInt(v1=5[44], v2=10[48]) -> 50[44]
  717:[48] VarInt(var[40]) -> 4[48]
  720:[52] AddInt(v1=50[44], v2=4[48]) -> 54[44]
  721:[48] PutInt(var[32], value=54[44])
  724:[44] FreeStack(value=0, discard=4)
  728:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 4[40]
  665:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 4[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] MinInt(v1=4[40], v2=1[44]) -> 3[40]
  687:[44] PutInt(var[36], value=3[40])
  690:[40] VarInt(var[36]) -> 3[40]
  693:[44] ConstInt(val=0) -> 0[44]
  698:[48] LtInt(v1=3[40], v2=0[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 3[40]
  708:[44] VarInt(var[32]) -> 54[44]
  711:[48] ConstInt(val=10) -> 10[48]
  716:[52] MulInt(v1=54[44], v2=10[48]) -> 540[44]
  717:[48] VarInt(var[40]) -> 3[48]
  720:[52] AddInt(v1=540[44], v2=3[48]) -> 543[44]
  721:[48] PutInt(var[32], value=543[44])
  724:[44] FreeStack(value=0, discard=4)
  728:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 3[40]
  665:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 3[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] MinInt(v1=3[40], v2=1[44]) -> 2[40]
  687:[44] PutInt(var[36], value=2[40])
  690:[40] VarInt(var[36]) -> 2[40]
  693:[44] ConstInt(val=0) -> 0[44]
  698:[48] LtInt(v1=2[40], v2=0[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 2[40]
  708:[44] VarInt(var[32]) -> 543[44]
  711:[48] ConstInt(val=10) -> 10[48]
  716:[52] MulInt(v1=543[44], v2=10[48]) -> 5430[44]
  717:[48] VarInt(var[40]) -> 2[48]
  720:[52] AddInt(v1=5430[44], v2=2[48]) -> 5432[44]
  721:[48] PutInt(var[32], value=5432[44])
  724:[44] FreeStack(value=0, discard=4)
  728:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 2[40]
  665:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 2[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] MinInt(v1=2[40], v2=1[44]) -> 1[40]
  687:[44] PutInt(var[36], value=1[40])
  690:[40] VarInt(var[36]) -> 1[40]
  693:[44] ConstInt(val=0) -> 0[44]
  698:[48] LtInt(v1=1[40], v2=0[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 1[40]
  708:[44] VarInt(var[32]) -> 5432[44]
  711:[48] ConstInt(val=10) -> 10[48]
  716:[52] MulInt(v1=5432[44], v2=10[48]) -> 54320[44]
  717:[48] VarInt(var[40]) -> 1[48]
  720:[52] AddInt(v1=54320[44], v2=1[48]) -> 54321[44]
  721:[48] PutInt(var[32], value=54321[44])
  724:[44] FreeStack(value=0, discard=4)
  728:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 1[40]
  665:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 1[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] MinInt(v1=1[40], v2=1[44]) -> 0[40]
  687:[44] PutInt(var[36], value=0[40])
  690:[40] VarInt(var[36]) -> 0[40]
  693:[44] ConstInt(val=0) -> 0[44]
  698:[48] LtInt(v1=0[40], v2=0[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 0[40]
  708:[44] VarInt(var[32]) -> 54321[44]
  711:[48] ConstInt(val=10) -> 10[48]
  716:[52] MulInt(v1=54321[44], v2=10[48]) -> 543210[44]
  717:[48] VarInt(var[40]) -> 0[48]
  720:[52] AddInt(v1=543210[44], v2=0[48]) -> 543210[44]
  721:[48] PutInt(var[32], value=543210[44])
  724:[44] FreeStack(value=0, discard=4)
  728:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 0[40]
  665:[44] ConvBoolFromInt(v1=0[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 0[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] MinInt(v1=0[40], v2=1[44]) -> -1[40]
  687:[44] PutInt(var[36], value=-1[40])
  690:[40] VarInt(var[36]) -> -1[40]
  693:[44] ConstInt(val=0) -> 0[44]
  698:[48] LtInt(v1=-1[40], v2=0[44]) -> true[40]
  699:[41] GotoFalseWord(jump=705, if_false=true[40])
  702:[40] GotoWord(jump=731)
  731:[40] FreeStack(value=0, discard=4)
  735:[36] VarInt(var[32]) -> 543210[36]
  738:[40] FreeStack(value=4, discard=8)
  742:[36] VarInt(var[32]) -> 543210[36]
  745:[40] ConstInt(val=543210) -> 543210[40]
  750:[44] EqInt(v1=543210[36], v2=543210[40]) -> true[36]
  751:[37] GotoFalseWord(jump=757, if_false=true[36])
  754:[36] GotoWord(jump=811)
  811:[36] FreeText(var[8])
  814:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
