pub fn test() {
    test_value = {log(4.0^5, 2)};
    assert(
        test_value == 10,
        "Test failed {test_value} != 10"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:float = {#2 block
    _tp_float_log(OpPowFloat(4f64, OpConvFloatFromInt(5i32)), OpConvFloatFromInt(2i32));
  }#2:float;
  if OpEqFloat(test_value, OpConvFloatFromInt(10i32)) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatFloat(__work_1, test_value, 0i32, 0i32);
    OpAppendText(__work_1, " != 10");
    __work_1;
  }#3:text);
}#1

byte-code for exponents:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: ConstFloat(val=4) -> float
 701[36]: ConstInt(val=5) -> integer
 706[40]: ConvFloatFromInt(v1: integer) -> float
 707[44]: PowFloat(v1: float, v2: float) -> float
 708[36]: ConstInt(val=2) -> integer
 713[40]: ConvFloatFromInt(v1: integer) -> float
 714[44]: Call(size=0, to=292)
 721[36]: VarFloat(var[28]) -> float
 724[44]: ConstInt(val=10) -> integer
 729[48]: ConvFloatFromInt(v1: integer) -> float
 730[52]: EqFloat(v1: float, v2: float) -> boolean
 731[37]: GotoFalseWord(jump=737, if_false: boolean)
 734[36]: GotoWord(jump=788)
 737[36]: ClearText(var[4])
 740[36]: ConstText(_value="Test failed ") -> text
 754[52]: AppendText(var[4], v1: text)
 757[36]: VarFloat(var[28]) -> float
 760[44]: ConstInt(val=0) -> integer
 765[48]: ConstInt(val=0) -> integer
 770[52]: FormatFloat(var[4], val: float, width: integer, precision: integer)
 773[36]: ConstText(_value=" != 10") -> text
 781[52]: AppendText(var[4], v1: text)
 784[36]: VarText(var[4]) -> text
 787[52]: Panic(message: text)
 788[36]: FreeText(var[4])
 791[36]: Return(ret=0, value=0, discard=36)

Execute test:
  691:[8] Text()
  692:[32] ConstFloat(val=4) -> 4[32]
  701:[40] ConstInt(val=5) -> 5[40]
  706:[44] ConvFloatFromInt(v1=5[40]) -> 5[40]
  707:[48] PowFloat(v1=4[32], v2=5[40]) -> 1024[32]
  708:[40] ConstInt(val=2) -> 2[40]
  713:[44] ConvFloatFromInt(v1=2[40]) -> 2[40]
  714:[48] Call(size=0, to=292)
  292:[52] VarFloat(var[32]) -> 1024[52]
  295:[60] VarFloat(var[40]) -> 2[60]
  298:[68] MathLogFloat(v1=1024[52], v2=2[60]) -> 10[52]
  299:[60] Return(ret=721[48], value=8, discard=28) -> 10[32]
  721:[40] VarFloat(var[32]) -> 10[40]
  724:[48] ConstInt(val=10) -> 10[48]
  729:[52] ConvFloatFromInt(v1=10[48]) -> 10[48]
  730:[56] EqFloat(v1=10[40], v2=10[48]) -> true[40]
  731:[41] GotoFalseWord(jump=737, if_false=true[40])
  734:[40] GotoWord(jump=788)
  788:[40] FreeText(var[8])
  791:[40] Return(ret=4294967295[4], value=0, discard=36)
Finished
