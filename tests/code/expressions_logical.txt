Test code:
pub fn test() {
    test_value = {(1 << 8) - 3 & 127};
    assert(
        test_value == 125,
        "Test failed {test_value} != 125"
    );
}

fn test {
  let test_value = {
    OpLandInt(OpMinInt(OpSLeftInt(1i32, 8i32), 3i32), 127i32);
  };
  if OpEqInt(test_value, 125i32) {null} else {OpGenPanic({
    let append_7 = "Test failed ";
    OpFormatInt(append_7, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_7, " != 125");
    append_7;
  })};
}

byte-code for logical:test()
 664[0]: return-address
 664[4]: ConstInt(val=1) -> integer
 669[8]: ConstInt(val=8) -> integer
 674[12]: SLeftInt(v1: integer, v2: integer) -> integer
 675[8]: ConstInt(val=3) -> integer
 680[12]: MinInt(v1: integer, v2: integer) -> integer
 681[8]: ConstInt(val=127) -> integer
 686[12]: LandInt(v1: integer, v2: integer) -> integer
 687[8]: VarInt(var[4]) -> integer
 690[12]: ConstInt(val=125) -> integer
 695[16]: EqInt(v1: integer, v2: integer) -> boolean
 696[9]: GenGotoFalseWord(jump=702, if_false: boolean)
 699[8]: GenGotoWord(jump=755)
 702[8]: Text()
 703[32]: ConstText(_value="Test failed ") -> text
 717[48]: AppendText(var[8], v1: text)
 720[32]: VarInt(var[4]) -> integer
 723[36]: ConstInt(val=0) -> integer
 728[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 735[32]: ConstText(_value=" != 125") -> text
 744[48]: AppendText(var[8], v1: text)
 747[32]: VarText(var[8]) -> text
 750[48]: GenFreeStack(value=16, discard=24)
 754[24]: GenPanic(message: text)
 755[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
  664:[4] ConstInt(val=1) -> 1[4]
  669:[8] ConstInt(val=8) -> 8[8]
  674:[12] SLeftInt(v1=1[4], v2=8[8]) -> 256[4]
  675:[8] ConstInt(val=3) -> 3[8]
  680:[12] MinInt(v1=256[4], v2=3[8]) -> 253[4]
  681:[8] ConstInt(val=127) -> 127[8]
  686:[12] LandInt(v1=253[4], v2=127[8]) -> 125[4]
  687:[8] VarInt(var[4]) -> 125[8]
  690:[12] ConstInt(val=125) -> 125[12]
  695:[16] EqInt(v1=125[8], v2=125[12]) -> true[8]
  696:[9] GenGotoFalseWord(jump=702, if_false=true[8])
  699:[8] GenGotoWord(jump=755)
  755:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
