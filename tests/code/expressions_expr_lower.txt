Test code:
pub fn test() {
    test_value = {2 * 2 < 3};
    assert(
        test_value == false,
        "Test failed {test_value} != false"
    );
}

fn test {
  let __work_1 = "";
  let test_value = {
    OpLtInt(OpMulInt(2i32, 2i32), 3i32);
  };
  if OpEqBool(test_value, false) {null} else {OpGenPanic({
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatBool(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != false");
    __work_1;
  })};
}

byte-code for expr_lower:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstText(_value="") -> text(false)
 671[44]: AppendText(var[4], v1: text(false))
 674[28]: ConstInt(val=2) -> integer
 679[32]: ConstInt(val=2) -> integer
 684[36]: MulInt(v1: integer, v2: integer) -> integer
 685[32]: ConstInt(val=3) -> integer
 690[36]: LtInt(v1: integer, v2: integer) -> boolean
 691[29]: VarBool(var[28]) -> boolean
 694[30]: ConstFalse() -> boolean
 695[31]: EqBool(v1: boolean, v2: boolean) -> boolean
 696[30]: GenGotoFalseWord(jump=702, if_false: boolean)
 699[29]: GenGotoWord(jump=753)
 702[29]: ClearText(var[4])
 705[29]: ConstText(_value="Test failed ") -> text(false)
 719[45]: AppendText(var[4], v1: text(false))
 722[29]: VarBool(var[28]) -> boolean
 725[30]: ConstInt(val=0) -> integer
 730[34]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 735[29]: ConstText(_value=" != false") -> text(false)
 746[45]: AppendText(var[4], v1: text(false))
 749[29]: VarText(var[4]) -> text(false)
 752[45]: GenPanic(message: text(false))
 753[29]: GenReturn(ret=0, value=0, discard=29)

Execute test:
  668:[8] Text()
  669:[32] ConstText(_value="") -> ""[32]
  671:[48] AppendText(var[8], v1=""[32])
  674:[32] ConstInt(val=2) -> 2[32]
  679:[36] ConstInt(val=2) -> 2[36]
  684:[40] MulInt(v1=2[32], v2=2[36]) -> 4[32]
  685:[36] ConstInt(val=3) -> 3[36]
  690:[40] LtInt(v1=4[32], v2=3[36]) -> false[32]
  691:[33] VarBool(var[32]) -> false[33]
  694:[34] ConstFalse() -> false[34]
  695:[35] EqBool(v1=false[33], v2=false[34]) -> true[33]
  696:[34] GenGotoFalseWord(jump=702, if_false=true[33])
  699:[33] GenGotoWord(jump=753)
  753:[33] GenReturn(ret=4294967295[4], value=0, discard=29)
Finished
