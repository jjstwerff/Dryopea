pub fn test() {
    test_value = {b = 0; for a in rev(1..=6) { b=b*10+a }; b};
    assert(
        test_value == 654321,
        "Test failed {test_value} != 654321"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    b:integer = 0i32;
    {#3 for
      a#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        a:integer = {#5 for next
          a#index:integer = if OpNot(OpConvBoolFromInt(a#index)) 6i32 else OpMinInt(a#index, 1i32);
          if OpLtInt(a#index, 1i32) break(0) else null;
          a#index;
        }#5:integer;
        {#6 block
          b:integer = OpAddInt(OpMulInt(b, 10i32), a);
        }#6;
      }#4;
    }#3;
    b;
  }#2:integer;
  if OpEqInt(test_value, 654321i32) null else OpPanic({#7 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 654321");
    __work_1;
  }#7:text);
}#1

byte-code for reverse_loop:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: ConstInt(val=0) -> integer
 697[32]: ConvIntFromNull() -> integer
 698[36]: VarInt(var[32]) -> integer
 701[40]: ConvBoolFromInt(v1: integer) -> boolean
 702[37]: Not(v1: boolean) -> boolean
 703[37]: GotoFalseWord(jump=714, if_false: boolean)
 706[36]: ConstInt(val=6) -> integer
 711[40]: GotoWord(jump=723)
 714[36]: VarInt(var[32]) -> integer
 717[40]: ConstInt(val=1) -> integer
 722[44]: MinInt(v1: integer, v2: integer) -> integer
 723[40]: PutInt(var[32], value: integer)
 726[36]: VarInt(var[32]) -> integer
 729[40]: ConstInt(val=1) -> integer
 734[44]: LtInt(v1: integer, v2: integer) -> boolean
 735[37]: GotoFalseWord(jump=741, if_false: boolean)
 738[36]: GotoWord(jump=767)
 741[36]: VarInt(var[32]) -> integer
 744[40]: VarInt(var[28]) -> integer
 747[44]: ConstInt(val=10) -> integer
 752[48]: MulInt(v1: integer, v2: integer) -> integer
 753[44]: VarInt(var[36]) -> integer
 756[48]: AddInt(v1: integer, v2: integer) -> integer
 757[44]: PutInt(var[28], value: integer)
 760[40]: FreeStack(value=0, discard=4)
 764[36]: GotoWord(jump=698)
 767[36]: FreeStack(value=0, discard=4)
 771[32]: VarInt(var[28]) -> integer
 774[36]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 778[32]: VarInt(var[28]) -> integer
 781[36]: ConstInt(val=654321) -> integer
 786[40]: EqInt(v1: integer, v2: integer) -> boolean
 787[33]: GotoFalseWord(jump=793, if_false: boolean)
 790[32]: GotoWord(jump=847)
 793[32]: ClearText(var[4])
 796[32]: ConstText(_value="Test failed ") -> text
 810[48]: AppendText(var[4], v1: text)
 813[32]: VarInt(var[28]) -> integer
 816[36]: ConstInt(val=0) -> integer
 821[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 828[32]: ConstText(_value=" != 654321") -> text
 840[48]: AppendText(var[4], v1: text)
 843[32]: VarText(var[4]) -> text
 846[48]: Panic(message: text)
 847[32]: FreeText(var[4])
 850[32]: Return(ret=0, value=0, discard=32)

Execute test:
  691:[8] Text()
  692:[32] ConstInt(val=0) -> 0[32]
  697:[36] ConvIntFromNull() -> -2147483648[36]
  698:[40] VarInt(var[36]) -> -2147483648[40]
  701:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  702:[41] Not(v1=false[40]) -> true[40]
  703:[41] GotoFalseWord(jump=714, if_false=true[40])
  706:[40] ConstInt(val=6) -> 6[40]
  711:[44] GotoWord(jump=723)
  723:[44] PutInt(var[36], value=6[40])
  726:[40] VarInt(var[36]) -> 6[40]
  729:[44] ConstInt(val=1) -> 1[44]
  734:[48] LtInt(v1=6[40], v2=1[44]) -> false[40]
  735:[41] GotoFalseWord(jump=741, if_false=false[40])
  741:[40] VarInt(var[36]) -> 6[40]
  744:[44] VarInt(var[32]) -> 0[44]
  747:[48] ConstInt(val=10) -> 10[48]
  752:[52] MulInt(v1=0[44], v2=10[48]) -> 0[44]
  753:[48] VarInt(var[40]) -> 6[48]
  756:[52] AddInt(v1=0[44], v2=6[48]) -> 6[44]
  757:[48] PutInt(var[32], value=6[44])
  760:[44] FreeStack(value=0, discard=4)
  764:[40] GotoWord(jump=698)
  698:[40] VarInt(var[36]) -> 6[40]
  701:[44] ConvBoolFromInt(v1=6[40]) -> true[40]
  702:[41] Not(v1=true[40]) -> false[40]
  703:[41] GotoFalseWord(jump=714, if_false=false[40])
  714:[40] VarInt(var[36]) -> 6[40]
  717:[44] ConstInt(val=1) -> 1[44]
  722:[48] MinInt(v1=6[40], v2=1[44]) -> 5[40]
  723:[44] PutInt(var[36], value=5[40])
  726:[40] VarInt(var[36]) -> 5[40]
  729:[44] ConstInt(val=1) -> 1[44]
  734:[48] LtInt(v1=5[40], v2=1[44]) -> false[40]
  735:[41] GotoFalseWord(jump=741, if_false=false[40])
  741:[40] VarInt(var[36]) -> 5[40]
  744:[44] VarInt(var[32]) -> 6[44]
  747:[48] ConstInt(val=10) -> 10[48]
  752:[52] MulInt(v1=6[44], v2=10[48]) -> 60[44]
  753:[48] VarInt(var[40]) -> 5[48]
  756:[52] AddInt(v1=60[44], v2=5[48]) -> 65[44]
  757:[48] PutInt(var[32], value=65[44])
  760:[44] FreeStack(value=0, discard=4)
  764:[40] GotoWord(jump=698)
  698:[40] VarInt(var[36]) -> 5[40]
  701:[44] ConvBoolFromInt(v1=5[40]) -> true[40]
  702:[41] Not(v1=true[40]) -> false[40]
  703:[41] GotoFalseWord(jump=714, if_false=false[40])
  714:[40] VarInt(var[36]) -> 5[40]
  717:[44] ConstInt(val=1) -> 1[44]
  722:[48] MinInt(v1=5[40], v2=1[44]) -> 4[40]
  723:[44] PutInt(var[36], value=4[40])
  726:[40] VarInt(var[36]) -> 4[40]
  729:[44] ConstInt(val=1) -> 1[44]
  734:[48] LtInt(v1=4[40], v2=1[44]) -> false[40]
  735:[41] GotoFalseWord(jump=741, if_false=false[40])
  741:[40] VarInt(var[36]) -> 4[40]
  744:[44] VarInt(var[32]) -> 65[44]
  747:[48] ConstInt(val=10) -> 10[48]
  752:[52] MulInt(v1=65[44], v2=10[48]) -> 650[44]
  753:[48] VarInt(var[40]) -> 4[48]
  756:[52] AddInt(v1=650[44], v2=4[48]) -> 654[44]
  757:[48] PutInt(var[32], value=654[44])
  760:[44] FreeStack(value=0, discard=4)
  764:[40] GotoWord(jump=698)
  698:[40] VarInt(var[36]) -> 4[40]
  701:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
  702:[41] Not(v1=true[40]) -> false[40]
  703:[41] GotoFalseWord(jump=714, if_false=false[40])
  714:[40] VarInt(var[36]) -> 4[40]
  717:[44] ConstInt(val=1) -> 1[44]
  722:[48] MinInt(v1=4[40], v2=1[44]) -> 3[40]
  723:[44] PutInt(var[36], value=3[40])
  726:[40] VarInt(var[36]) -> 3[40]
  729:[44] ConstInt(val=1) -> 1[44]
  734:[48] LtInt(v1=3[40], v2=1[44]) -> false[40]
  735:[41] GotoFalseWord(jump=741, if_false=false[40])
  741:[40] VarInt(var[36]) -> 3[40]
  744:[44] VarInt(var[32]) -> 654[44]
  747:[48] ConstInt(val=10) -> 10[48]
  752:[52] MulInt(v1=654[44], v2=10[48]) -> 6540[44]
  753:[48] VarInt(var[40]) -> 3[48]
  756:[52] AddInt(v1=6540[44], v2=3[48]) -> 6543[44]
  757:[48] PutInt(var[32], value=6543[44])
  760:[44] FreeStack(value=0, discard=4)
  764:[40] GotoWord(jump=698)
  698:[40] VarInt(var[36]) -> 3[40]
  701:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
  702:[41] Not(v1=true[40]) -> false[40]
  703:[41] GotoFalseWord(jump=714, if_false=false[40])
  714:[40] VarInt(var[36]) -> 3[40]
  717:[44] ConstInt(val=1) -> 1[44]
  722:[48] MinInt(v1=3[40], v2=1[44]) -> 2[40]
  723:[44] PutInt(var[36], value=2[40])
  726:[40] VarInt(var[36]) -> 2[40]
  729:[44] ConstInt(val=1) -> 1[44]
  734:[48] LtInt(v1=2[40], v2=1[44]) -> false[40]
  735:[41] GotoFalseWord(jump=741, if_false=false[40])
  741:[40] VarInt(var[36]) -> 2[40]
  744:[44] VarInt(var[32]) -> 6543[44]
  747:[48] ConstInt(val=10) -> 10[48]
  752:[52] MulInt(v1=6543[44], v2=10[48]) -> 65430[44]
  753:[48] VarInt(var[40]) -> 2[48]
  756:[52] AddInt(v1=65430[44], v2=2[48]) -> 65432[44]
  757:[48] PutInt(var[32], value=65432[44])
  760:[44] FreeStack(value=0, discard=4)
  764:[40] GotoWord(jump=698)
  698:[40] VarInt(var[36]) -> 2[40]
  701:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
  702:[41] Not(v1=true[40]) -> false[40]
  703:[41] GotoFalseWord(jump=714, if_false=false[40])
  714:[40] VarInt(var[36]) -> 2[40]
  717:[44] ConstInt(val=1) -> 1[44]
  722:[48] MinInt(v1=2[40], v2=1[44]) -> 1[40]
  723:[44] PutInt(var[36], value=1[40])
  726:[40] VarInt(var[36]) -> 1[40]
  729:[44] ConstInt(val=1) -> 1[44]
  734:[48] LtInt(v1=1[40], v2=1[44]) -> false[40]
  735:[41] GotoFalseWord(jump=741, if_false=false[40])
  741:[40] VarInt(var[36]) -> 1[40]
  744:[44] VarInt(var[32]) -> 65432[44]
  747:[48] ConstInt(val=10) -> 10[48]
  752:[52] MulInt(v1=65432[44], v2=10[48]) -> 654320[44]
  753:[48] VarInt(var[40]) -> 1[48]
  756:[52] AddInt(v1=654320[44], v2=1[48]) -> 654321[44]
  757:[48] PutInt(var[32], value=654321[44])
  760:[44] FreeStack(value=0, discard=4)
  764:[40] GotoWord(jump=698)
  698:[40] VarInt(var[36]) -> 1[40]
  701:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  702:[41] Not(v1=true[40]) -> false[40]
  703:[41] GotoFalseWord(jump=714, if_false=false[40])
  714:[40] VarInt(var[36]) -> 1[40]
  717:[44] ConstInt(val=1) -> 1[44]
  722:[48] MinInt(v1=1[40], v2=1[44]) -> 0[40]
  723:[44] PutInt(var[36], value=0[40])
  726:[40] VarInt(var[36]) -> 0[40]
  729:[44] ConstInt(val=1) -> 1[44]
  734:[48] LtInt(v1=0[40], v2=1[44]) -> true[40]
  735:[41] GotoFalseWord(jump=741, if_false=true[40])
  738:[40] GotoWord(jump=767)
  767:[40] FreeStack(value=0, discard=4)
  771:[36] VarInt(var[32]) -> 654321[36]
  774:[40] FreeStack(value=4, discard=8)
  778:[36] VarInt(var[32]) -> 654321[36]
  781:[40] ConstInt(val=654321) -> 654321[40]
  786:[44] EqInt(v1=654321[36], v2=654321[40]) -> true[36]
  787:[37] GotoFalseWord(jump=793, if_false=true[36])
  790:[36] GotoWord(jump=847)
  847:[36] FreeText(var[8])
  850:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
