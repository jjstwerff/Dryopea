pub fn test() {
    test_value = {b = 0; for a in rev(1..=6) { b=b*10+a }; b};
    assert(
        test_value == 654321,
        "Test failed {test_value} != 654321"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    b:integer = 0i32;
    {#3 for
      a#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        a:integer = {#5 for next
          a#index:integer = if OpNot(OpConvBoolFromInt(a#index)) 6i32 else OpMinInt(a#index, 1i32);
          if OpLtInt(a#index, 1i32) break(0) else null;
          a#index;
        }#5:integer;
        {#6 block
          b:integer = OpAddInt(OpMulInt(b, 10i32), a);
        }#6;
      }#4;
    }#3;
    b;
  }#2:integer;
  if OpEqInt(test_value, 654321i32) null else OpPanic({#7 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 654321");
    __work_1;
  }#7:text);
}#1

byte-code for reverse_loop:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: ConstInt(val=0) -> integer
 698[32]: ConvIntFromNull() -> integer
 699[36]: VarInt(var[32]) -> integer
 702[40]: ConvBoolFromInt(v1: integer) -> boolean
 703[37]: Not(v1: boolean) -> boolean
 704[37]: GotoFalseWord(jump=715, if_false: boolean)
 707[36]: ConstInt(val=6) -> integer
 712[40]: GotoWord(jump=724)
 715[36]: VarInt(var[32]) -> integer
 718[40]: ConstInt(val=1) -> integer
 723[44]: MinInt(v1: integer, v2: integer) -> integer
 724[40]: PutInt(var[32], value: integer)
 727[36]: VarInt(var[32]) -> integer
 730[40]: ConstInt(val=1) -> integer
 735[44]: LtInt(v1: integer, v2: integer) -> boolean
 736[37]: GotoFalseWord(jump=742, if_false: boolean)
 739[36]: GotoWord(jump=768)
 742[36]: VarInt(var[32]) -> integer
 745[40]: VarInt(var[28]) -> integer
 748[44]: ConstInt(val=10) -> integer
 753[48]: MulInt(v1: integer, v2: integer) -> integer
 754[44]: VarInt(var[36]) -> integer
 757[48]: AddInt(v1: integer, v2: integer) -> integer
 758[44]: PutInt(var[28], value: integer)
 761[40]: FreeStack(value=0, discard=4)
 765[36]: GotoWord(jump=699)
 768[36]: FreeStack(value=0, discard=4)
 772[32]: VarInt(var[28]) -> integer
 775[36]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 779[32]: VarInt(var[28]) -> integer
 782[36]: ConstInt(val=654321) -> integer
 787[40]: EqInt(v1: integer, v2: integer) -> boolean
 788[33]: GotoFalseWord(jump=794, if_false: boolean)
 791[32]: GotoWord(jump=848)
 794[32]: ClearText(var[4])
 797[32]: ConstText(_value="Test failed ") -> text
 811[48]: AppendText(var[4], v1: text)
 814[32]: VarInt(var[28]) -> integer
 817[36]: ConstInt(val=0) -> integer
 822[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 829[32]: ConstText(_value=" != 654321") -> text
 841[48]: AppendText(var[4], v1: text)
 844[32]: VarText(var[4]) -> text
 847[48]: Panic(message: text)
 848[32]: FreeText(var[4])
 851[32]: Return(ret=0, value=0, discard=32)

Execute test:
  692:[8] Text()
  693:[32] ConstInt(val=0) -> 0[32]
  698:[36] ConvIntFromNull() -> -2147483648[36]
  699:[40] VarInt(var[36]) -> -2147483648[40]
  702:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  703:[41] Not(v1=false[40]) -> true[40]
  704:[41] GotoFalseWord(jump=715, if_false=true[40])
  707:[40] ConstInt(val=6) -> 6[40]
  712:[44] GotoWord(jump=724)
  724:[44] PutInt(var[36], value=6[40])
  727:[40] VarInt(var[36]) -> 6[40]
  730:[44] ConstInt(val=1) -> 1[44]
  735:[48] LtInt(v1=6[40], v2=1[44]) -> false[40]
  736:[41] GotoFalseWord(jump=742, if_false=false[40])
  742:[40] VarInt(var[36]) -> 6[40]
  745:[44] VarInt(var[32]) -> 0[44]
  748:[48] ConstInt(val=10) -> 10[48]
  753:[52] MulInt(v1=0[44], v2=10[48]) -> 0[44]
  754:[48] VarInt(var[40]) -> 6[48]
  757:[52] AddInt(v1=0[44], v2=6[48]) -> 6[44]
  758:[48] PutInt(var[32], value=6[44])
  761:[44] FreeStack(value=0, discard=4)
  765:[40] GotoWord(jump=699)
  699:[40] VarInt(var[36]) -> 6[40]
  702:[44] ConvBoolFromInt(v1=6[40]) -> true[40]
  703:[41] Not(v1=true[40]) -> false[40]
  704:[41] GotoFalseWord(jump=715, if_false=false[40])
  715:[40] VarInt(var[36]) -> 6[40]
  718:[44] ConstInt(val=1) -> 1[44]
  723:[48] MinInt(v1=6[40], v2=1[44]) -> 5[40]
  724:[44] PutInt(var[36], value=5[40])
  727:[40] VarInt(var[36]) -> 5[40]
  730:[44] ConstInt(val=1) -> 1[44]
  735:[48] LtInt(v1=5[40], v2=1[44]) -> false[40]
  736:[41] GotoFalseWord(jump=742, if_false=false[40])
  742:[40] VarInt(var[36]) -> 5[40]
  745:[44] VarInt(var[32]) -> 6[44]
  748:[48] ConstInt(val=10) -> 10[48]
  753:[52] MulInt(v1=6[44], v2=10[48]) -> 60[44]
  754:[48] VarInt(var[40]) -> 5[48]
  757:[52] AddInt(v1=60[44], v2=5[48]) -> 65[44]
  758:[48] PutInt(var[32], value=65[44])
  761:[44] FreeStack(value=0, discard=4)
  765:[40] GotoWord(jump=699)
  699:[40] VarInt(var[36]) -> 5[40]
  702:[44] ConvBoolFromInt(v1=5[40]) -> true[40]
  703:[41] Not(v1=true[40]) -> false[40]
  704:[41] GotoFalseWord(jump=715, if_false=false[40])
  715:[40] VarInt(var[36]) -> 5[40]
  718:[44] ConstInt(val=1) -> 1[44]
  723:[48] MinInt(v1=5[40], v2=1[44]) -> 4[40]
  724:[44] PutInt(var[36], value=4[40])
  727:[40] VarInt(var[36]) -> 4[40]
  730:[44] ConstInt(val=1) -> 1[44]
  735:[48] LtInt(v1=4[40], v2=1[44]) -> false[40]
  736:[41] GotoFalseWord(jump=742, if_false=false[40])
  742:[40] VarInt(var[36]) -> 4[40]
  745:[44] VarInt(var[32]) -> 65[44]
  748:[48] ConstInt(val=10) -> 10[48]
  753:[52] MulInt(v1=65[44], v2=10[48]) -> 650[44]
  754:[48] VarInt(var[40]) -> 4[48]
  757:[52] AddInt(v1=650[44], v2=4[48]) -> 654[44]
  758:[48] PutInt(var[32], value=654[44])
  761:[44] FreeStack(value=0, discard=4)
  765:[40] GotoWord(jump=699)
  699:[40] VarInt(var[36]) -> 4[40]
  702:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
  703:[41] Not(v1=true[40]) -> false[40]
  704:[41] GotoFalseWord(jump=715, if_false=false[40])
  715:[40] VarInt(var[36]) -> 4[40]
  718:[44] ConstInt(val=1) -> 1[44]
  723:[48] MinInt(v1=4[40], v2=1[44]) -> 3[40]
  724:[44] PutInt(var[36], value=3[40])
  727:[40] VarInt(var[36]) -> 3[40]
  730:[44] ConstInt(val=1) -> 1[44]
  735:[48] LtInt(v1=3[40], v2=1[44]) -> false[40]
  736:[41] GotoFalseWord(jump=742, if_false=false[40])
  742:[40] VarInt(var[36]) -> 3[40]
  745:[44] VarInt(var[32]) -> 654[44]
  748:[48] ConstInt(val=10) -> 10[48]
  753:[52] MulInt(v1=654[44], v2=10[48]) -> 6540[44]
  754:[48] VarInt(var[40]) -> 3[48]
  757:[52] AddInt(v1=6540[44], v2=3[48]) -> 6543[44]
  758:[48] PutInt(var[32], value=6543[44])
  761:[44] FreeStack(value=0, discard=4)
  765:[40] GotoWord(jump=699)
  699:[40] VarInt(var[36]) -> 3[40]
  702:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
  703:[41] Not(v1=true[40]) -> false[40]
  704:[41] GotoFalseWord(jump=715, if_false=false[40])
  715:[40] VarInt(var[36]) -> 3[40]
  718:[44] ConstInt(val=1) -> 1[44]
  723:[48] MinInt(v1=3[40], v2=1[44]) -> 2[40]
  724:[44] PutInt(var[36], value=2[40])
  727:[40] VarInt(var[36]) -> 2[40]
  730:[44] ConstInt(val=1) -> 1[44]
  735:[48] LtInt(v1=2[40], v2=1[44]) -> false[40]
  736:[41] GotoFalseWord(jump=742, if_false=false[40])
  742:[40] VarInt(var[36]) -> 2[40]
  745:[44] VarInt(var[32]) -> 6543[44]
  748:[48] ConstInt(val=10) -> 10[48]
  753:[52] MulInt(v1=6543[44], v2=10[48]) -> 65430[44]
  754:[48] VarInt(var[40]) -> 2[48]
  757:[52] AddInt(v1=65430[44], v2=2[48]) -> 65432[44]
  758:[48] PutInt(var[32], value=65432[44])
  761:[44] FreeStack(value=0, discard=4)
  765:[40] GotoWord(jump=699)
  699:[40] VarInt(var[36]) -> 2[40]
  702:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
  703:[41] Not(v1=true[40]) -> false[40]
  704:[41] GotoFalseWord(jump=715, if_false=false[40])
  715:[40] VarInt(var[36]) -> 2[40]
  718:[44] ConstInt(val=1) -> 1[44]
  723:[48] MinInt(v1=2[40], v2=1[44]) -> 1[40]
  724:[44] PutInt(var[36], value=1[40])
  727:[40] VarInt(var[36]) -> 1[40]
  730:[44] ConstInt(val=1) -> 1[44]
  735:[48] LtInt(v1=1[40], v2=1[44]) -> false[40]
  736:[41] GotoFalseWord(jump=742, if_false=false[40])
  742:[40] VarInt(var[36]) -> 1[40]
  745:[44] VarInt(var[32]) -> 65432[44]
  748:[48] ConstInt(val=10) -> 10[48]
  753:[52] MulInt(v1=65432[44], v2=10[48]) -> 654320[44]
  754:[48] VarInt(var[40]) -> 1[48]
  757:[52] AddInt(v1=654320[44], v2=1[48]) -> 654321[44]
  758:[48] PutInt(var[32], value=654321[44])
  761:[44] FreeStack(value=0, discard=4)
  765:[40] GotoWord(jump=699)
  699:[40] VarInt(var[36]) -> 1[40]
  702:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  703:[41] Not(v1=true[40]) -> false[40]
  704:[41] GotoFalseWord(jump=715, if_false=false[40])
  715:[40] VarInt(var[36]) -> 1[40]
  718:[44] ConstInt(val=1) -> 1[44]
  723:[48] MinInt(v1=1[40], v2=1[44]) -> 0[40]
  724:[44] PutInt(var[36], value=0[40])
  727:[40] VarInt(var[36]) -> 0[40]
  730:[44] ConstInt(val=1) -> 1[44]
  735:[48] LtInt(v1=0[40], v2=1[44]) -> true[40]
  736:[41] GotoFalseWord(jump=742, if_false=true[40])
  739:[40] GotoWord(jump=768)
  768:[40] FreeStack(value=0, discard=4)
  772:[36] VarInt(var[32]) -> 654321[36]
  775:[40] FreeStack(value=4, discard=8)
  779:[36] VarInt(var[32]) -> 654321[36]
  782:[40] ConstInt(val=654321) -> 654321[40]
  787:[44] EqInt(v1=654321[36], v2=654321[40]) -> true[36]
  788:[37] GotoFalseWord(jump=794, if_false=true[36])
  791:[36] GotoWord(jump=848)
  848:[36] FreeText(var[8])
  851:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
