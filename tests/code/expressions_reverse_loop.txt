pub fn test() {
    test_value = {b = 0; for a in rev(1..=6) { b=b*10+a }; b};
    assert(
        test_value == 654321,
        "Test failed {test_value} != 654321"
    );
}
fn test() {#block_1:void
  __work_1:text(1) = "";
  test_value:integer(1) = {#block_2:integer
    b:integer(2) = 0i32;
    {#For block_3:void
      a#index:integer(3) = OpConvIntFromNull();
      loop {#For loop_4
        a:integer(4) = {#Iter range_5:integer
          a#index:integer(3) = if OpNot(OpConvBoolFromInt(a#index)) 6i32 else OpMinInt(a#index, 1i32);
          if OpLtInt(a#index, 1i32) break(0) else null;
          a#index;
        }#Iter range_5:integer;
        {#block_6:void
          b:integer(2) = OpAddInt(OpMulInt(b, 10i32), a);
        }#block_6:void;
      }#For loop_4;
    }#For block_3:void;
    b;
  }#block_2:integer;
  if OpEqInt(test_value, 654321i32) null else OpPanic({#Formatted string_7:text
    __work_1:text(1) = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 654321");
    __work_1;
  }#Formatted string_7:text);
  OpFreeText(__work_1);
}#block_1:void

byte-code for reverse_loop:test() [1168]
   0[4]: return-address
   0[8]: Text() var=__work_1[8]:text
   1[32]: ConstInt(val=0) -> integer var=b[32]:integer
   6[36]: ConvIntFromNull() -> integer var=a#index[36]:integer
   7[40]: VarInt(var[36]) -> integer var=a#index[36]:integer
  10[44]: ConvBoolFromInt(v1: integer) -> boolean
  11[41]: Not(v1: boolean) -> boolean
  12[41]: GotoFalseWord(jump=23, if_false: boolean)
  15[40]: ConstInt(val=6) -> integer
  20[44]: GotoWord(jump=32)
  23[40]: VarInt(var[36]) -> integer var=a#index[36]:integer
  26[44]: ConstInt(val=1) -> integer
  31[48]: MinInt(v1: integer, v2: integer) -> integer
  32[44]: PutInt(var[36], value: integer)
  35[40]: VarInt(var[36]) -> integer var=a#index[36]:integer
  38[44]: ConstInt(val=1) -> integer
  43[48]: LtInt(v1: integer, v2: integer) -> boolean
  44[41]: GotoFalseWord(jump=50, if_false: boolean)
  47[40]: GotoWord(jump=76)
  50[40]: VarInt(var[36]) -> integer var=a#index[36]:integer
  53[44]: VarInt(var[32]) -> integer var=b[32]:integer
  56[48]: ConstInt(val=10) -> integer
  61[52]: MulInt(v1: integer, v2: integer) -> integer
  62[48]: VarInt(var[40]) -> integer var=a[40]:integer
  65[52]: AddInt(v1: integer, v2: integer) -> integer
  66[48]: PutInt(var[32], value: integer)
  69[44]: FreeStack(value=0, discard=4)
  73[40]: GotoWord(jump=7)
  76[40]: FreeStack(value=0, discard=4)
  80[36]: VarInt(var[32]) -> integer var=b[32]:integer
  83[40]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
  87[36]: VarInt(var[32]) -> integer var=test_value[32]:integer
  90[40]: ConstInt(val=654321) -> integer
  95[44]: EqInt(v1: integer, v2: integer) -> boolean
  96[37]: GotoFalseWord(jump=102, if_false: boolean)
  99[36]: GotoWord(jump=156)
 102[36]: ClearText(var[8]) var=__work_1[8]:text
 105[36]: ConstText(_value="Test failed ") -> text
 119[52]: AppendText(var[8], v1: text)
 122[36]: VarInt(var[32]) -> integer var=test_value[32]:integer
 125[40]: ConstInt(val=0) -> integer
 130[44]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 137[36]: ConstText(_value=" != 654321") -> text
 149[52]: AppendText(var[8], v1: text)
 152[36]: VarText(var[8]) -> text var=__work_1[8]:text
 155[52]: Panic(message: text)
 156[36]: FreeText(var[8])
 159[36]: Return(ret=0, value=0, discard=32)

Execute test:
    0:[8] Text()
    1:[32] ConstInt(val=0) -> 0[32]
    6:[36] ConvIntFromNull() -> -2147483648[36]
    7:[40] VarInt(var[36]) -> -2147483648[40]
   10:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
   11:[41] Not(v1=false[40]) -> true[40]
   12:[41] GotoFalseWord(jump=1191, if_false=true[40])
   15:[40] ConstInt(val=6) -> 6[40]
   20:[44] GotoWord(jump=1200)
   32:[44] PutInt(var[36], value=6[40])
   35:[40] VarInt(var[36]) -> 6[40]
   38:[44] ConstInt(val=1) -> 1[44]
   43:[48] LtInt(v1=6[40], v2=1[44]) -> false[40]
   44:[41] GotoFalseWord(jump=1218, if_false=false[40])
   50:[40] VarInt(var[36]) -> 6[40]
   53:[44] VarInt(var[32]) -> 0[44]
   56:[48] ConstInt(val=10) -> 10[48]
   61:[52] MulInt(v1=0[44], v2=10[48]) -> 0[44]
   62:[48] VarInt(var[40]) -> 6[48]
   65:[52] AddInt(v1=0[44], v2=6[48]) -> 6[44]
   66:[48] PutInt(var[32], value=6[44])
   69:[44] FreeStack(value=0, discard=4)
   73:[40] GotoWord(jump=1175)
    7:[40] VarInt(var[36]) -> 6[40]
   10:[44] ConvBoolFromInt(v1=6[40]) -> true[40]
   11:[41] Not(v1=true[40]) -> false[40]
   12:[41] GotoFalseWord(jump=1191, if_false=false[40])
   23:[40] VarInt(var[36]) -> 6[40]
   26:[44] ConstInt(val=1) -> 1[44]
   31:[48] MinInt(v1=6[40], v2=1[44]) -> 5[40]
   32:[44] PutInt(var[36], value=5[40])
   35:[40] VarInt(var[36]) -> 5[40]
   38:[44] ConstInt(val=1) -> 1[44]
   43:[48] LtInt(v1=5[40], v2=1[44]) -> false[40]
   44:[41] GotoFalseWord(jump=1218, if_false=false[40])
   50:[40] VarInt(var[36]) -> 5[40]
   53:[44] VarInt(var[32]) -> 6[44]
   56:[48] ConstInt(val=10) -> 10[48]
   61:[52] MulInt(v1=6[44], v2=10[48]) -> 60[44]
   62:[48] VarInt(var[40]) -> 5[48]
   65:[52] AddInt(v1=60[44], v2=5[48]) -> 65[44]
   66:[48] PutInt(var[32], value=65[44])
   69:[44] FreeStack(value=0, discard=4)
   73:[40] GotoWord(jump=1175)
    7:[40] VarInt(var[36]) -> 5[40]
   10:[44] ConvBoolFromInt(v1=5[40]) -> true[40]
   11:[41] Not(v1=true[40]) -> false[40]
   12:[41] GotoFalseWord(jump=1191, if_false=false[40])
   23:[40] VarInt(var[36]) -> 5[40]
   26:[44] ConstInt(val=1) -> 1[44]
   31:[48] MinInt(v1=5[40], v2=1[44]) -> 4[40]
   32:[44] PutInt(var[36], value=4[40])
   35:[40] VarInt(var[36]) -> 4[40]
   38:[44] ConstInt(val=1) -> 1[44]
   43:[48] LtInt(v1=4[40], v2=1[44]) -> false[40]
   44:[41] GotoFalseWord(jump=1218, if_false=false[40])
   50:[40] VarInt(var[36]) -> 4[40]
   53:[44] VarInt(var[32]) -> 65[44]
   56:[48] ConstInt(val=10) -> 10[48]
   61:[52] MulInt(v1=65[44], v2=10[48]) -> 650[44]
   62:[48] VarInt(var[40]) -> 4[48]
   65:[52] AddInt(v1=650[44], v2=4[48]) -> 654[44]
   66:[48] PutInt(var[32], value=654[44])
   69:[44] FreeStack(value=0, discard=4)
   73:[40] GotoWord(jump=1175)
    7:[40] VarInt(var[36]) -> 4[40]
   10:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
   11:[41] Not(v1=true[40]) -> false[40]
   12:[41] GotoFalseWord(jump=1191, if_false=false[40])
   23:[40] VarInt(var[36]) -> 4[40]
   26:[44] ConstInt(val=1) -> 1[44]
   31:[48] MinInt(v1=4[40], v2=1[44]) -> 3[40]
   32:[44] PutInt(var[36], value=3[40])
   35:[40] VarInt(var[36]) -> 3[40]
   38:[44] ConstInt(val=1) -> 1[44]
   43:[48] LtInt(v1=3[40], v2=1[44]) -> false[40]
   44:[41] GotoFalseWord(jump=1218, if_false=false[40])
   50:[40] VarInt(var[36]) -> 3[40]
   53:[44] VarInt(var[32]) -> 654[44]
   56:[48] ConstInt(val=10) -> 10[48]
   61:[52] MulInt(v1=654[44], v2=10[48]) -> 6540[44]
   62:[48] VarInt(var[40]) -> 3[48]
   65:[52] AddInt(v1=6540[44], v2=3[48]) -> 6543[44]
   66:[48] PutInt(var[32], value=6543[44])
   69:[44] FreeStack(value=0, discard=4)
   73:[40] GotoWord(jump=1175)
    7:[40] VarInt(var[36]) -> 3[40]
   10:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
   11:[41] Not(v1=true[40]) -> false[40]
   12:[41] GotoFalseWord(jump=1191, if_false=false[40])
   23:[40] VarInt(var[36]) -> 3[40]
   26:[44] ConstInt(val=1) -> 1[44]
   31:[48] MinInt(v1=3[40], v2=1[44]) -> 2[40]
   32:[44] PutInt(var[36], value=2[40])
   35:[40] VarInt(var[36]) -> 2[40]
   38:[44] ConstInt(val=1) -> 1[44]
   43:[48] LtInt(v1=2[40], v2=1[44]) -> false[40]
   44:[41] GotoFalseWord(jump=1218, if_false=false[40])
   50:[40] VarInt(var[36]) -> 2[40]
   53:[44] VarInt(var[32]) -> 6543[44]
   56:[48] ConstInt(val=10) -> 10[48]
   61:[52] MulInt(v1=6543[44], v2=10[48]) -> 65430[44]
   62:[48] VarInt(var[40]) -> 2[48]
   65:[52] AddInt(v1=65430[44], v2=2[48]) -> 65432[44]
   66:[48] PutInt(var[32], value=65432[44])
   69:[44] FreeStack(value=0, discard=4)
   73:[40] GotoWord(jump=1175)
    7:[40] VarInt(var[36]) -> 2[40]
   10:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
   11:[41] Not(v1=true[40]) -> false[40]
   12:[41] GotoFalseWord(jump=1191, if_false=false[40])
   23:[40] VarInt(var[36]) -> 2[40]
   26:[44] ConstInt(val=1) -> 1[44]
   31:[48] MinInt(v1=2[40], v2=1[44]) -> 1[40]
   32:[44] PutInt(var[36], value=1[40])
   35:[40] VarInt(var[36]) -> 1[40]
   38:[44] ConstInt(val=1) -> 1[44]
   43:[48] LtInt(v1=1[40], v2=1[44]) -> false[40]
   44:[41] GotoFalseWord(jump=1218, if_false=false[40])
   50:[40] VarInt(var[36]) -> 1[40]
   53:[44] VarInt(var[32]) -> 65432[44]
   56:[48] ConstInt(val=10) -> 10[48]
   61:[52] MulInt(v1=65432[44], v2=10[48]) -> 654320[44]
   62:[48] VarInt(var[40]) -> 1[48]
   65:[52] AddInt(v1=654320[44], v2=1[48]) -> 654321[44]
   66:[48] PutInt(var[32], value=654321[44])
   69:[44] FreeStack(value=0, discard=4)
   73:[40] GotoWord(jump=1175)
    7:[40] VarInt(var[36]) -> 1[40]
   10:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
   11:[41] Not(v1=true[40]) -> false[40]
   12:[41] GotoFalseWord(jump=1191, if_false=false[40])
   23:[40] VarInt(var[36]) -> 1[40]
   26:[44] ConstInt(val=1) -> 1[44]
   31:[48] MinInt(v1=1[40], v2=1[44]) -> 0[40]
   32:[44] PutInt(var[36], value=0[40])
   35:[40] VarInt(var[36]) -> 0[40]
   38:[44] ConstInt(val=1) -> 1[44]
   43:[48] LtInt(v1=0[40], v2=1[44]) -> true[40]
   44:[41] GotoFalseWord(jump=1218, if_false=true[40])
   47:[40] GotoWord(jump=1244)
   76:[40] FreeStack(value=0, discard=4)
   80:[36] VarInt(var[32]) -> 654321[36]
   83:[40] FreeStack(value=4, discard=8)
   87:[36] VarInt(var[32]) -> 654321[36]
   90:[40] ConstInt(val=654321) -> 654321[40]
   95:[44] EqInt(v1=654321[36], v2=654321[40]) -> true[36]
   96:[37] GotoFalseWord(jump=1270, if_false=true[36])
   99:[36] GotoWord(jump=1324)
  156:[36] FreeText(var[8])
  159:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
