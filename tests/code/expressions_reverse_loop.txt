pub fn test() {
    test_value = {b = 0; for a in rev(1..=6) { b=b*10+a }; b};
    assert(
        test_value == 654321,
        "Test failed {test_value} != 654321"
    );
}
fn test() {#1 block
  let __work_1:text = "";
  let test_value:integer = {#2 block
    let b:integer = 0i32;
    {#3 for
      let a#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        let a:integer = {#5 for next
          a#index = if OpNot(OpConvBoolFromInt(a#index)) 6i32 else OpMinInt(a#index, 1i32);
          if OpLtInt(a#index, 1i32) break(0) else null;
          a#index;
        }#5:integer;
        {#6 block
          b = OpAddInt(OpMulInt(b, 10i32), a);
        }#6;
      }#4;
    }#3;
    b;
  }#2:integer;
  if OpEqInt(test_value, 654321i32) null else OpPanic({#7 formatting string
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 654321");
    __work_1;
  }#7:text);
}#1

byte-code for reverse_loop:test()
 675[0]: return-address
 675[4]: Text()
 676[28]: ConstInt(val=0) -> integer
 681[32]: ConvIntFromNull() -> integer
 682[36]: VarInt(var[32]) -> integer
 685[40]: ConvBoolFromInt(v1: integer) -> boolean
 686[37]: Not(v1: boolean) -> boolean
 687[37]: GotoFalseWord(jump=698, if_false: boolean)
 690[36]: ConstInt(val=6) -> integer
 695[40]: GotoWord(jump=707)
 698[36]: VarInt(var[32]) -> integer
 701[40]: ConstInt(val=1) -> integer
 706[44]: MinInt(v1: integer, v2: integer) -> integer
 707[40]: PutInt(var[32], value: integer)
 710[36]: VarInt(var[32]) -> integer
 713[40]: ConstInt(val=1) -> integer
 718[44]: LtInt(v1: integer, v2: integer) -> boolean
 719[37]: GotoFalseWord(jump=725, if_false: boolean)
 722[36]: GotoWord(jump=751)
 725[36]: VarInt(var[32]) -> integer
 728[40]: VarInt(var[28]) -> integer
 731[44]: ConstInt(val=10) -> integer
 736[48]: MulInt(v1: integer, v2: integer) -> integer
 737[44]: VarInt(var[36]) -> integer
 740[48]: AddInt(v1: integer, v2: integer) -> integer
 741[44]: PutInt(var[28], value: integer)
 744[40]: FreeStack(value=0, discard=4)
 748[36]: GotoWord(jump=682)
 751[36]: FreeStack(value=0, discard=4)
 755[32]: VarInt(var[28]) -> integer
 758[36]: FreeStack(value=4, discard=4) type=integer[4]:Base[0]
 762[32]: VarInt(var[28]) -> integer
 765[36]: ConstInt(val=654321) -> integer
 770[40]: EqInt(v1: integer, v2: integer) -> boolean
 771[33]: GotoFalseWord(jump=777, if_false: boolean)
 774[32]: GotoWord(jump=831)
 777[32]: ClearText(var[4])
 780[32]: ConstText(_value="Test failed ") -> text
 794[48]: AppendText(var[4], v1: text)
 797[32]: VarInt(var[28]) -> integer
 800[36]: ConstInt(val=0) -> integer
 805[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 812[32]: ConstText(_value=" != 654321") -> text
 824[48]: AppendText(var[4], v1: text)
 827[32]: VarText(var[4]) -> text
 830[48]: Panic(message: text)
 831[32]: Return(ret=0, value=0, discard=32)

Execute test:
  675:[8] Text()
  676:[32] ConstInt(val=0) -> 0[32]
  681:[36] ConvIntFromNull() -> -2147483648[36]
  682:[40] VarInt(var[36]) -> -2147483648[40]
  685:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  686:[41] Not(v1=false[40]) -> true[40]
  687:[41] GotoFalseWord(jump=698, if_false=true[40])
  690:[40] ConstInt(val=6) -> 6[40]
  695:[44] GotoWord(jump=707)
  707:[44] PutInt(var[36], value=6[40])
  710:[40] VarInt(var[36]) -> 6[40]
  713:[44] ConstInt(val=1) -> 1[44]
  718:[48] LtInt(v1=6[40], v2=1[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 6[40]
  728:[44] VarInt(var[32]) -> 0[44]
  731:[48] ConstInt(val=10) -> 10[48]
  736:[52] MulInt(v1=0[44], v2=10[48]) -> 0[44]
  737:[48] VarInt(var[40]) -> 6[48]
  740:[52] AddInt(v1=0[44], v2=6[48]) -> 6[44]
  741:[48] PutInt(var[32], value=6[44])
  744:[44] FreeStack(value=0, discard=4)
  748:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 6[40]
  685:[44] ConvBoolFromInt(v1=6[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 6[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] MinInt(v1=6[40], v2=1[44]) -> 5[40]
  707:[44] PutInt(var[36], value=5[40])
  710:[40] VarInt(var[36]) -> 5[40]
  713:[44] ConstInt(val=1) -> 1[44]
  718:[48] LtInt(v1=5[40], v2=1[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 5[40]
  728:[44] VarInt(var[32]) -> 6[44]
  731:[48] ConstInt(val=10) -> 10[48]
  736:[52] MulInt(v1=6[44], v2=10[48]) -> 60[44]
  737:[48] VarInt(var[40]) -> 5[48]
  740:[52] AddInt(v1=60[44], v2=5[48]) -> 65[44]
  741:[48] PutInt(var[32], value=65[44])
  744:[44] FreeStack(value=0, discard=4)
  748:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 5[40]
  685:[44] ConvBoolFromInt(v1=5[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 5[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] MinInt(v1=5[40], v2=1[44]) -> 4[40]
  707:[44] PutInt(var[36], value=4[40])
  710:[40] VarInt(var[36]) -> 4[40]
  713:[44] ConstInt(val=1) -> 1[44]
  718:[48] LtInt(v1=4[40], v2=1[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 4[40]
  728:[44] VarInt(var[32]) -> 65[44]
  731:[48] ConstInt(val=10) -> 10[48]
  736:[52] MulInt(v1=65[44], v2=10[48]) -> 650[44]
  737:[48] VarInt(var[40]) -> 4[48]
  740:[52] AddInt(v1=650[44], v2=4[48]) -> 654[44]
  741:[48] PutInt(var[32], value=654[44])
  744:[44] FreeStack(value=0, discard=4)
  748:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 4[40]
  685:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 4[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] MinInt(v1=4[40], v2=1[44]) -> 3[40]
  707:[44] PutInt(var[36], value=3[40])
  710:[40] VarInt(var[36]) -> 3[40]
  713:[44] ConstInt(val=1) -> 1[44]
  718:[48] LtInt(v1=3[40], v2=1[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 3[40]
  728:[44] VarInt(var[32]) -> 654[44]
  731:[48] ConstInt(val=10) -> 10[48]
  736:[52] MulInt(v1=654[44], v2=10[48]) -> 6540[44]
  737:[48] VarInt(var[40]) -> 3[48]
  740:[52] AddInt(v1=6540[44], v2=3[48]) -> 6543[44]
  741:[48] PutInt(var[32], value=6543[44])
  744:[44] FreeStack(value=0, discard=4)
  748:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 3[40]
  685:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 3[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] MinInt(v1=3[40], v2=1[44]) -> 2[40]
  707:[44] PutInt(var[36], value=2[40])
  710:[40] VarInt(var[36]) -> 2[40]
  713:[44] ConstInt(val=1) -> 1[44]
  718:[48] LtInt(v1=2[40], v2=1[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 2[40]
  728:[44] VarInt(var[32]) -> 6543[44]
  731:[48] ConstInt(val=10) -> 10[48]
  736:[52] MulInt(v1=6543[44], v2=10[48]) -> 65430[44]
  737:[48] VarInt(var[40]) -> 2[48]
  740:[52] AddInt(v1=65430[44], v2=2[48]) -> 65432[44]
  741:[48] PutInt(var[32], value=65432[44])
  744:[44] FreeStack(value=0, discard=4)
  748:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 2[40]
  685:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 2[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] MinInt(v1=2[40], v2=1[44]) -> 1[40]
  707:[44] PutInt(var[36], value=1[40])
  710:[40] VarInt(var[36]) -> 1[40]
  713:[44] ConstInt(val=1) -> 1[44]
  718:[48] LtInt(v1=1[40], v2=1[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 1[40]
  728:[44] VarInt(var[32]) -> 65432[44]
  731:[48] ConstInt(val=10) -> 10[48]
  736:[52] MulInt(v1=65432[44], v2=10[48]) -> 654320[44]
  737:[48] VarInt(var[40]) -> 1[48]
  740:[52] AddInt(v1=654320[44], v2=1[48]) -> 654321[44]
  741:[48] PutInt(var[32], value=654321[44])
  744:[44] FreeStack(value=0, discard=4)
  748:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 1[40]
  685:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 1[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] MinInt(v1=1[40], v2=1[44]) -> 0[40]
  707:[44] PutInt(var[36], value=0[40])
  710:[40] VarInt(var[36]) -> 0[40]
  713:[44] ConstInt(val=1) -> 1[44]
  718:[48] LtInt(v1=0[40], v2=1[44]) -> true[40]
  719:[41] GotoFalseWord(jump=725, if_false=true[40])
  722:[40] GotoWord(jump=751)
  751:[40] FreeStack(value=0, discard=4)
  755:[36] VarInt(var[32]) -> 654321[36]
  758:[40] FreeStack(value=4, discard=4)
  762:[36] VarInt(var[32]) -> 654321[36]
  765:[40] ConstInt(val=654321) -> 654321[40]
  770:[44] EqInt(v1=654321[36], v2=654321[40]) -> true[36]
  771:[37] GotoFalseWord(jump=777, if_false=true[36])
  774:[36] GotoWord(jump=831)
  831:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
