pub fn test() {
    test_value = {a="12345";a[1..len(a)-1]};
    assert(
        test_value == "234",
        "Test failed {test_value} != \"234\""
    );
}
fn test() {#1 block
  __work_1:text = "";
  a:text = "";
  test_value:text["a"] = {#2 block
    a:text = "12345";
    OpGetTextSub(a, 1i32, OpMinInt(_tp_text_len(a), 1i32));
  }#2:text["a"];
  if OpEqText(test_value, "234") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "234"");
    __work_1;
  }#3:text);
}#1

byte-code for sub_str:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: Text()
 694[52]: Text()
 695[76]: ClearText(var[28])
 698[76]: ConstText(_value="12345") -> text
 705[92]: AppendText(var[28], v1: text)
 708[76]: VarText(var[28]) -> text
 711[92]: ConstInt(val=1) -> integer
 716[96]: VarText(var[28]) -> text
 719[112]: Call(size=0, to=318)
 726[100]: ConstInt(val=1) -> integer
 731[104]: MinInt(v1: integer, v2: integer) -> integer
 732[100]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 733[92]: AppendText(var[52], v1: text)
 736[76]: VarText(var[52]) -> text
 739[92]: ConstText(_value="234") -> text
 744[108]: EqText(v1: text, v2: text) -> boolean
 745[77]: GotoFalseWord(jump=751, if_false: boolean)
 748[76]: GotoWord(jump=802)
 751[76]: ClearText(var[4])
 754[76]: ConstText(_value="Test failed ") -> text
 768[92]: AppendText(var[4], v1: text)
 771[76]: VarText(var[52]) -> text
 774[92]: ConstInt(val=0) -> integer
 779[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 784[76]: ConstText(_value=" != "234"") -> text
 795[92]: AppendText(var[4], v1: text)
 798[76]: VarText(var[4]) -> text
 801[92]: Panic(message: text)
 802[76]: Return(ret=0, value=0, discard=76)

Execute test:
  692:[8] Text()
  693:[32] Text()
  694:[56] Text()
  695:[80] ClearText(var[32])
  698:[80] ConstText(_value="12345") -> "12345"[80]
  705:[96] AppendText(var[32], v1="12345"[80])
  708:[80] VarText(var[32]) -> "12345"[80]
  711:[96] ConstInt(val=1) -> 1[96]
  716:[100] VarText(var[32]) -> "12345"[100]
  719:[116] Call(size=0, to=318)
  318:[120] ArgText(var[100]) -> "12345"[120]
  321:[136] LengthText(v1="12345"[120]) -> 5[120]
  322:[124] Return(ret=726[116], value=4, discard=24) -> 5[100]
  726:[104] ConstInt(val=1) -> 1[104]
  731:[108] MinInt(v1=5[100], v2=1[104]) -> 4[100]
  732:[104] GetTextSub(v1="12345"[80], from=1[96], till=4[100]) -> "234"[80]
  733:[96] AppendText(var[56], v1="234"[80])
  736:[80] VarText(var[56]) -> "234"[80]
  739:[96] ConstText(_value="234") -> "234"[96]
  744:[112] EqText(v1="234"[80], v2="234"[96]) -> true[80]
  745:[81] GotoFalseWord(jump=751, if_false=true[80])
  748:[80] GotoWord(jump=802)
  802:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
