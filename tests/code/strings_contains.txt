pub fn test() {
    test_value = {t = "longer"; v = "a longer text"; v.contains("a {t}")};
    assert(
        test_value == true,
        "Test failed {test_value} != true"
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:boolean = {#2 block
    t:text = "longer";
    v:text = "a longer text";
    _tp_text_contains(v, {#3 formatting string
      __work_1:text = "a ";
      OpFormatText(__work_1, t, 0i32, -1i32, 32i32);
      __work_1;
    }#3:text);
  }#2:boolean;
  if OpEqBool(test_value, true) null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatBool(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != true");
    __work_2;
  }#4:text);
}#1

byte-code for contains:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: Text()
 694[52]: Text()
 695[76]: ConstText(_value="longer") -> text
 703[92]: AppendText(var[52], v1: text)
 706[76]: Text()
 707[100]: ConstText(_value="a longer text") -> text
 722[116]: AppendText(var[76], v1: text)
 725[100]: VarText(var[76]) -> text
 728[116]: ClearText(var[28])
 731[116]: ConstText(_value="a ") -> text
 735[132]: AppendText(var[28], v1: text)
 738[116]: VarText(var[52]) -> text
 741[132]: ConstInt(val=0) -> integer
 746[136]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
 751[116]: VarText(var[28]) -> text
 754[132]: StaticCall(_tp_text_contains)
 757[101]: FreeStack(value=1, discard=49) type=boolean[1]:Base[4]
 761[53]: VarBool(var[52]) -> boolean
 764[54]: ConstTrue() -> boolean
 765[55]: EqBool(v1: boolean, v2: boolean) -> boolean
 766[54]: GotoFalseWord(jump=772, if_false: boolean)
 769[53]: GotoWord(jump=822)
 772[53]: ClearText(var[4])
 775[53]: ConstText(_value="Test failed ") -> text
 789[69]: AppendText(var[4], v1: text)
 792[53]: VarBool(var[52]) -> boolean
 795[54]: ConstInt(val=0) -> integer
 800[58]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 805[53]: ConstText(_value=" != true") -> text
 815[69]: AppendText(var[4], v1: text)
 818[53]: VarText(var[4]) -> text
 821[69]: Panic(message: text)
 822[53]: Return(ret=0, value=0, discard=53)

Execute test:
  692:[8] Text()
  693:[32] Text()
  694:[56] Text()
  695:[80] ConstText(_value="longer") -> "longer"[80]
  703:[96] AppendText(var[56], v1="longer"[80])
  706:[80] Text()
  707:[104] ConstText(_value="a longer text") -> "a longer text"[104]
  722:[120] AppendText(var[80], v1="a longer text"[104])
  725:[104] VarText(var[80]) -> "a longer text"[104]
  728:[120] ClearText(var[32])
  731:[120] ConstText(_value="a ") -> "a "[120]
  735:[136] AppendText(var[32], v1="a "[120])
  738:[120] VarText(var[56]) -> "longer"[120]
  741:[136] ConstInt(val=0) -> 0[136]
  746:[140] FormatText(var[32], val="longer"[120], width=0[136], dir=-1, token=32)
  751:[120] VarText(var[32]) -> "a longer"[120]
  754:[136] StaticCall(call=10)
  757:[105] FreeStack(value=1, discard=49)
  761:[57] VarBool(var[56]) -> true[57]
  764:[58] ConstTrue() -> true[58]
  765:[59] EqBool(v1=true[57], v2=true[58]) -> true[57]
  766:[58] GotoFalseWord(jump=772, if_false=true[57])
  769:[57] GotoWord(jump=822)
  822:[57] Return(ret=4294967295[4], value=0, discard=53)
Finished
