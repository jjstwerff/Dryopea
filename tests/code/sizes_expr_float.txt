pub fn test() {
    test_value = {a = 1.1; sizeof(float) + 10 * sizeof(a)};
    assert(
        test_value == 88,
        "Test failed {test_value} != 88"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    a:float = 1.1f64;
    OpAddInt(8i32, OpMulInt(10i32, 8i32));
  }#2:integer;
  if OpEqInt(test_value, 88i32) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 88");
    __work_1;
  }#3:text);
}#1

byte-code for expr_float:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: ConstFloat(val=1.1) -> float
 702[36]: ConstInt(val=8) -> integer
 707[40]: ConstInt(val=10) -> integer
 712[44]: ConstInt(val=8) -> integer
 717[48]: MulInt(v1: integer, v2: integer) -> integer
 718[44]: AddInt(v1: integer, v2: integer) -> integer
 719[40]: FreeStack(value=4, discard=12) type=integer[4]:Base[0]
 723[32]: VarInt(var[28]) -> integer
 726[36]: ConstInt(val=88) -> integer
 731[40]: EqInt(v1: integer, v2: integer) -> boolean
 732[33]: GotoFalseWord(jump=738, if_false: boolean)
 735[32]: GotoWord(jump=788)
 738[32]: ClearText(var[4])
 741[32]: ConstText(_value="Test failed ") -> text
 755[48]: AppendText(var[4], v1: text)
 758[32]: VarInt(var[28]) -> integer
 761[36]: ConstInt(val=0) -> integer
 766[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 773[32]: ConstText(_value=" != 88") -> text
 781[48]: AppendText(var[4], v1: text)
 784[32]: VarText(var[4]) -> text
 787[48]: Panic(message: text)
 788[32]: FreeText(var[4])
 791[32]: Return(ret=0, value=0, discard=32)

Execute test:
  692:[8] Text()
  693:[32] ConstFloat(val=1.1) -> 1.1[32]
  702:[40] ConstInt(val=8) -> 8[40]
  707:[44] ConstInt(val=10) -> 10[44]
  712:[48] ConstInt(val=8) -> 8[48]
  717:[52] MulInt(v1=10[44], v2=8[48]) -> 80[44]
  718:[48] AddInt(v1=8[40], v2=80[44]) -> 88[40]
  719:[44] FreeStack(value=4, discard=12)
  723:[36] VarInt(var[32]) -> 88[36]
  726:[40] ConstInt(val=88) -> 88[40]
  731:[44] EqInt(v1=88[36], v2=88[40]) -> true[36]
  732:[37] GotoFalseWord(jump=738, if_false=true[36])
  735:[36] GotoWord(jump=788)
  788:[36] FreeText(var[8])
  791:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
