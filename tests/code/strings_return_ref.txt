fn return_ref() -> text {
    a = "12345";
    return a[0..4];
}

pub fn test() {
    test_value = {return_ref()};
    assert(
        test_value == "1234",
        "Test failed {test_value} != \"1234\""
    );
}
fn return_ref(a:&text) -> text["a"] {#1 block
  OpClearRefText(OpVarRef(a));
  OpAppendRefText(OpVarRef(a), 0i32, "12345");
  return OpGetTextSub(OpGetRefText(OpVarRef(a), 0i32), 0i32, 4i32);
}#1

byte-code for return_ref:return_ref(a: &text[0]) -> text["a"]
 645[12]: return-address
 645[16]: VarRef(var[0]) -> ref(reference)
 648[28]: ClearRefText(r: ref(reference))
 649[16]: VarRef(var[0]) -> ref(reference)
 652[28]: ConstText(_value="12345") -> text
 659[44]: AppendRefText(r: ref(reference), fld=0, v1: text)
 662[16]: VarRef(var[0]) -> ref(reference)
 665[28]: GetRefText(r: ref(reference), fld=0) -> text["a"]
 668[32]: ConstInt(val=0) -> integer
 673[36]: ConstInt(val=4) -> integer
 678[40]: GetTextSub(v1: text, from: integer, till: integer) -> text["a"]
 679[32]: Return(ret=12, value=16, discard=32) type=text[4]:Base[5]

fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text["test_value"] = "";
  test_value:text["test_value"] = {#2 block
    return_ref({#3 default ref
      OpCreateRef(__work_1);
    }#3:ref(reference)["__work_1"]);
  }#2:text["test_value"];
  if OpEqText(test_value, "1234") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "1234"");
    __work_2;
  }#4:text);
}#1

byte-code for return_ref:test()
 685[0]: return-address
 685[4]: Text() var=__work_2[4]:text in 1
 686[28]: Text() var=__work_1[28]:text in 1
 687[52]: Text() var=test_value[52]:text["test_value"] in 1
 688[76]: ClearText(var[52]) var=test_value[52]:text["test_value"] in 1
 691[76]: CreateRef(var[28]) -> ref(reference)
 694[88]: Call(size=0, to=645)
 701[92]: AppendText(var[52], v1: text)
 704[76]: VarText(var[52]) -> text var=test_value[52]:text["test_value"] in 1
 707[92]: ConstText(_value="1234") -> text
 713[108]: EqText(v1: text, v2: text) -> boolean
 714[77]: GotoFalseWord(jump=720, if_false: boolean)
 717[76]: GotoWord(jump=772)
 720[76]: ClearText(var[4]) var=__work_2[4]:text in 1
 723[76]: ConstText(_value="Test failed ") -> text
 737[92]: AppendText(var[4], v1: text)
 740[76]: VarText(var[52]) -> text var=test_value[52]:text["test_value"] in 1
 743[92]: ConstInt(val=0) -> integer
 748[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 753[76]: ConstText(_value=" != "1234"") -> text
 765[92]: AppendText(var[4], v1: text)
 768[76]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 771[92]: Panic(message: text)
 772[76]: FreeText(var[52])
 775[76]: FreeText(var[28])
 778[76]: FreeText(var[4])
 781[76]: Return(ret=0, value=0, discard=76)

Execute test:
  685:[8] Text()
  686:[32] Text()
  687:[56] Text()
  688:[80] ClearText(var[56])
  691:[80] CreateRef(var[32]) -> ref(0,1,32)[80]
  694:[92] Call(size=0, to=645)
  645:[96] VarRef(var[80]) -> ref(0,1,32)[96]
  648:[108] ClearRefText(r=ref(0,1,32)[96])
  649:[96] VarRef(var[80]) -> ref(0,1,32)[96]
  652:[108] ConstText(_value="12345") -> "12345"[108]
  659:[124] AppendRefText(r=ref(0,1,32)[96], fld=0, v1="12345"[108])
  660:[96] Goto(jump=-17001)
  662:[96] VarRef(var[80]) -> ref(0,1,32)[96]
  665:[108] GetRefText(r=ref(0,1,32)[96], fld=0) -> "12345"[96]
  666:[112] Goto(jump=4253)
  668:[112] ConstInt(val=0) -> 0[112]
  673:[116] ConstInt(val=4) -> 4[116]
  678:[120] GetTextSub(v1="12345"[96], from=0[112], till=4[116]) -> "1234"[96]
  679:[112] Return(ret=701[92], value=16, discard=32) -> "1234"[80]
  701:[96] AppendText(var[56], v1="1234"[80])
  704:[80] VarText(var[56]) -> "1234"[80]
  707:[96] ConstText(_value="1234") -> "1234"[96]
  713:[112] EqText(v1="1234"[80], v2="1234"[96]) -> true[80]
  714:[81] GotoFalseWord(jump=720, if_false=true[80])
  717:[80] GotoWord(jump=772)
  772:[80] FreeText(var[56])
  775:[80] FreeText(var[32])
  778:[80] FreeText(var[8])
  781:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
