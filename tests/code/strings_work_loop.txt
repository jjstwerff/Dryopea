pub fn test() {
    test_value = {a = 0; for t in 1..4 { a += "0{t}0" as integer }; a};
    assert(
        test_value == 60,
        "Test failed {test_value} != 60"
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:integer = {#2 block
    a:integer = 0i32;
    {#3 for
      t#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        t:integer = {#5 for next
          t#index:integer = if OpNot(OpConvBoolFromInt(t#index)) 1i32 else OpAddInt(t#index, 1i32);
          if OpGeInt(t#index, 4i32) break(0) else null;
          t#index;
        }#5:integer;
        {#6 block
          a:integer = OpAddInt(a, OpCastIntFromText({#7 formatting string
            __work_1:text = "0";
            OpFormatInt(__work_1, t, 10i32, 0i32, 32i32, false, false);
            OpAppendText(__work_1, "0");
            __work_1;
          }#7:text));
        }#6;
      }#4;
    }#3;
    a;
  }#2:integer;
  if OpEqInt(test_value, 60i32) null else OpPanic({#8 formatting string
    __work_2:text = "Test failed ";
    OpFormatInt(__work_2, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_2, " != 60");
    __work_2;
  }#8:text);
}#1

byte-code for work_loop:test()
 645[0]: return-address
 645[4]: Text() var=__work_2[4]:text in 1
 646[28]: Text() var=__work_1[28]:text in 1
 647[52]: ConstInt(val=0) -> integer var=a[52]:integer in 2
 652[56]: ConvIntFromNull() -> integer var=t#index[56]:integer in 3
 653[60]: VarInt(var[56]) -> integer var=t#index[56]:integer in 3
 656[64]: ConvBoolFromInt(v1: integer) -> boolean
 657[61]: Not(v1: boolean) -> boolean
 658[61]: GotoFalseWord(jump=669, if_false: boolean)
 661[60]: ConstInt(val=1) -> integer
 666[64]: GotoWord(jump=678)
 669[60]: VarInt(var[56]) -> integer var=t#index[56]:integer in 3
 672[64]: ConstInt(val=1) -> integer
 677[68]: AddInt(v1: integer, v2: integer) -> integer
 678[64]: PutInt(var[56], value: integer)
 681[60]: VarInt(var[56]) -> integer var=t#index[56]:integer in 3
 684[64]: ConstInt(val=4) -> integer
 689[68]: GeInt(v1: integer, v2: integer) -> boolean
 690[61]: GotoFalseWord(jump=696, if_false: boolean)
 693[60]: GotoWord(jump=747)
 696[60]: VarInt(var[56]) -> integer var=t#index[56]:integer in 3
 699[64]: VarInt(var[52]) -> integer var=a[52]:integer in 2
 702[68]: ClearText(var[28]) var=__work_1[28]:text in 1
 705[68]: ConstText(_value="0") -> text
 708[84]: AppendText(var[28], v1: text)
 711[68]: VarInt(var[60]) -> integer var=t[60]:integer in 4
 714[72]: ConstInt(val=0) -> integer
 719[76]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 726[68]: ConstText(_value="0") -> text
 729[84]: AppendText(var[28], v1: text)
 732[68]: VarText(var[28]) -> text var=__work_1[28]:text in 1
 735[84]: CastIntFromText(v1: text) -> integer
 736[72]: AddInt(v1: integer, v2: integer) -> integer
 737[68]: PutInt(var[52], value: integer)
 740[64]: FreeStack(value=0, discard=4)
 744[60]: GotoWord(jump=653)
 747[60]: FreeStack(value=0, discard=4)
 751[56]: VarInt(var[52]) -> integer var=a[52]:integer in 2
 754[60]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 758[56]: VarInt(var[52]) -> integer var=test_value[52]:integer in 1
 761[60]: ConstInt(val=60) -> integer
 766[64]: EqInt(v1: integer, v2: integer) -> boolean
 767[57]: GotoFalseWord(jump=773, if_false: boolean)
 770[56]: GotoWord(jump=823)
 773[56]: ClearText(var[4]) var=__work_2[4]:text in 1
 776[56]: ConstText(_value="Test failed ") -> text
 790[72]: AppendText(var[4], v1: text)
 793[56]: VarInt(var[52]) -> integer var=test_value[52]:integer in 1
 796[60]: ConstInt(val=0) -> integer
 801[64]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 808[56]: ConstText(_value=" != 60") -> text
 816[72]: AppendText(var[4], v1: text)
 819[56]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 822[72]: Panic(message: text)
 823[56]: FreeText(var[28])
 826[56]: FreeText(var[4])
 829[56]: Return(ret=0, value=0, discard=56)

Execute test:
  645:[8] Text()
  646:[32] Text()
  647:[56] ConstInt(val=0) -> 0[56]
  652:[60] ConvIntFromNull() -> -2147483648[60]
  653:[64] VarInt(var[60]) -> -2147483648[64]
  656:[68] ConvBoolFromInt(v1=-2147483648[64]) -> false[64]
  657:[65] Not(v1=false[64]) -> true[64]
  658:[65] GotoFalseWord(jump=669, if_false=true[64])
  661:[64] ConstInt(val=1) -> 1[64]
  666:[68] GotoWord(jump=678)
  678:[68] PutInt(var[60], value=1[64])
  681:[64] VarInt(var[60]) -> 1[64]
  684:[68] ConstInt(val=4) -> 4[68]
  689:[72] GeInt(v1=1[64], v2=4[68]) -> false[64]
  690:[65] GotoFalseWord(jump=696, if_false=false[64])
  696:[64] VarInt(var[60]) -> 1[64]
  699:[68] VarInt(var[56]) -> 0[68]
  702:[72] ClearText(var[32])
  705:[72] ConstText(_value="0") -> "0"[72]
  708:[88] AppendText(var[32], v1="0"[72])
  711:[72] VarInt(var[64]) -> 1[72]
  714:[76] ConstInt(val=0) -> 0[76]
  719:[80] FormatInt(var[32], val=1[72], radix=10, width=0[76], token=32, plus=false, note=false)
  726:[72] ConstText(_value="0") -> "0"[72]
  729:[88] AppendText(var[32], v1="0"[72])
  732:[72] VarText(var[32]) -> "010"[72]
  735:[88] CastIntFromText(v1="010"[72]) -> 10[72]
  736:[76] AddInt(v1=0[68], v2=10[72]) -> 10[68]
  737:[72] PutInt(var[56], value=10[68])
  740:[68] FreeStack(value=0, discard=4)
  744:[64] GotoWord(jump=653)
  653:[64] VarInt(var[60]) -> 1[64]
  656:[68] ConvBoolFromInt(v1=1[64]) -> true[64]
  657:[65] Not(v1=true[64]) -> false[64]
  658:[65] GotoFalseWord(jump=669, if_false=false[64])
  669:[64] VarInt(var[60]) -> 1[64]
  672:[68] ConstInt(val=1) -> 1[68]
  677:[72] AddInt(v1=1[64], v2=1[68]) -> 2[64]
  678:[68] PutInt(var[60], value=2[64])
  681:[64] VarInt(var[60]) -> 2[64]
  684:[68] ConstInt(val=4) -> 4[68]
  689:[72] GeInt(v1=2[64], v2=4[68]) -> false[64]
  690:[65] GotoFalseWord(jump=696, if_false=false[64])
  696:[64] VarInt(var[60]) -> 2[64]
  699:[68] VarInt(var[56]) -> 10[68]
  702:[72] ClearText(var[32])
  705:[72] ConstText(_value="0") -> "0"[72]
  708:[88] AppendText(var[32], v1="0"[72])
  711:[72] VarInt(var[64]) -> 2[72]
  714:[76] ConstInt(val=0) -> 0[76]
  719:[80] FormatInt(var[32], val=2[72], radix=10, width=0[76], token=32, plus=false, note=false)
  726:[72] ConstText(_value="0") -> "0"[72]
  729:[88] AppendText(var[32], v1="0"[72])
  732:[72] VarText(var[32]) -> "020"[72]
  735:[88] CastIntFromText(v1="020"[72]) -> 20[72]
  736:[76] AddInt(v1=10[68], v2=20[72]) -> 30[68]
  737:[72] PutInt(var[56], value=30[68])
  740:[68] FreeStack(value=0, discard=4)
  744:[64] GotoWord(jump=653)
  653:[64] VarInt(var[60]) -> 2[64]
  656:[68] ConvBoolFromInt(v1=2[64]) -> true[64]
  657:[65] Not(v1=true[64]) -> false[64]
  658:[65] GotoFalseWord(jump=669, if_false=false[64])
  669:[64] VarInt(var[60]) -> 2[64]
  672:[68] ConstInt(val=1) -> 1[68]
  677:[72] AddInt(v1=2[64], v2=1[68]) -> 3[64]
  678:[68] PutInt(var[60], value=3[64])
  681:[64] VarInt(var[60]) -> 3[64]
  684:[68] ConstInt(val=4) -> 4[68]
  689:[72] GeInt(v1=3[64], v2=4[68]) -> false[64]
  690:[65] GotoFalseWord(jump=696, if_false=false[64])
  696:[64] VarInt(var[60]) -> 3[64]
  699:[68] VarInt(var[56]) -> 30[68]
  702:[72] ClearText(var[32])
  705:[72] ConstText(_value="0") -> "0"[72]
  708:[88] AppendText(var[32], v1="0"[72])
  711:[72] VarInt(var[64]) -> 3[72]
  714:[76] ConstInt(val=0) -> 0[76]
  719:[80] FormatInt(var[32], val=3[72], radix=10, width=0[76], token=32, plus=false, note=false)
  726:[72] ConstText(_value="0") -> "0"[72]
  729:[88] AppendText(var[32], v1="0"[72])
  732:[72] VarText(var[32]) -> "030"[72]
  735:[88] CastIntFromText(v1="030"[72]) -> 30[72]
  736:[76] AddInt(v1=30[68], v2=30[72]) -> 60[68]
  737:[72] PutInt(var[56], value=60[68])
  740:[68] FreeStack(value=0, discard=4)
  744:[64] GotoWord(jump=653)
  653:[64] VarInt(var[60]) -> 3[64]
  656:[68] ConvBoolFromInt(v1=3[64]) -> true[64]
  657:[65] Not(v1=true[64]) -> false[64]
  658:[65] GotoFalseWord(jump=669, if_false=false[64])
  669:[64] VarInt(var[60]) -> 3[64]
  672:[68] ConstInt(val=1) -> 1[68]
  677:[72] AddInt(v1=3[64], v2=1[68]) -> 4[64]
  678:[68] PutInt(var[60], value=4[64])
  681:[64] VarInt(var[60]) -> 4[64]
  684:[68] ConstInt(val=4) -> 4[68]
  689:[72] GeInt(v1=4[64], v2=4[68]) -> true[64]
  690:[65] GotoFalseWord(jump=696, if_false=true[64])
  693:[64] GotoWord(jump=747)
  747:[64] FreeStack(value=0, discard=4)
  751:[60] VarInt(var[56]) -> 60[60]
  754:[64] FreeStack(value=4, discard=8)
  758:[60] VarInt(var[56]) -> 60[60]
  761:[64] ConstInt(val=60) -> 60[64]
  766:[68] EqInt(v1=60[60], v2=60[64]) -> true[60]
  767:[61] GotoFalseWord(jump=773, if_false=true[60])
  770:[60] GotoWord(jump=823)
  823:[60] FreeText(var[32])
  826:[60] FreeText(var[8])
  829:[60] Return(ret=4294967295[4], value=0, discard=56)
Finished
