pub fn test() {
    test_value = {a = 0; for t in 1..4 { a += "0{t}0" as integer }; a};
    assert(
        test_value == 60,
        "Test failed {test_value} != 60"
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:integer = {#2 block
    a:integer = 0i32;
    {#3 for
      t#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        t:integer = {#5 for next
          t#index:integer = if OpNot(OpConvBoolFromInt(t#index)) 1i32 else OpAddInt(t#index, 1i32);
          if OpGeInt(t#index, 4i32) break(0) else null;
          t#index;
        }#5:integer;
        {#6 block
          a:integer = OpAddInt(a, OpCastIntFromText({#7 formatting string
            __work_1:text = "0";
            OpFormatInt(__work_1, t, 10i32, 0i32, 32i32, false, false);
            OpAppendText(__work_1, "0");
            __work_1;
          }#7:text));
        }#6;
      }#4;
    }#3;
    a;
  }#2:integer;
  if OpEqInt(test_value, 60i32) null else OpPanic({#8 formatting string
    __work_2:text = "Test failed ";
    OpFormatInt(__work_2, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_2, " != 60");
    __work_2;
  }#8:text);
}#1

byte-code for work_loop:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: Text()
 693[52]: ConstInt(val=0) -> integer
 698[56]: ConvIntFromNull() -> integer
 699[60]: VarInt(var[56]) -> integer
 702[64]: ConvBoolFromInt(v1: integer) -> boolean
 703[61]: Not(v1: boolean) -> boolean
 704[61]: GotoFalseWord(jump=715, if_false: boolean)
 707[60]: ConstInt(val=1) -> integer
 712[64]: GotoWord(jump=724)
 715[60]: VarInt(var[56]) -> integer
 718[64]: ConstInt(val=1) -> integer
 723[68]: AddInt(v1: integer, v2: integer) -> integer
 724[64]: PutInt(var[56], value: integer)
 727[60]: VarInt(var[56]) -> integer
 730[64]: ConstInt(val=4) -> integer
 735[68]: GeInt(v1: integer, v2: integer) -> boolean
 736[61]: GotoFalseWord(jump=742, if_false: boolean)
 739[60]: GotoWord(jump=793)
 742[60]: VarInt(var[56]) -> integer
 745[64]: VarInt(var[52]) -> integer
 748[68]: ClearText(var[28])
 751[68]: ConstText(_value="0") -> text
 754[84]: AppendText(var[28], v1: text)
 757[68]: VarInt(var[60]) -> integer
 760[72]: ConstInt(val=0) -> integer
 765[76]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 772[68]: ConstText(_value="0") -> text
 775[84]: AppendText(var[28], v1: text)
 778[68]: VarText(var[28]) -> text
 781[84]: CastIntFromText(v1: text) -> integer
 782[72]: AddInt(v1: integer, v2: integer) -> integer
 783[68]: PutInt(var[52], value: integer)
 786[64]: FreeStack(value=0, discard=4)
 790[60]: GotoWord(jump=699)
 793[60]: FreeStack(value=0, discard=4)
 797[56]: VarInt(var[52]) -> integer
 800[60]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 804[56]: VarInt(var[52]) -> integer
 807[60]: ConstInt(val=60) -> integer
 812[64]: EqInt(v1: integer, v2: integer) -> boolean
 813[57]: GotoFalseWord(jump=819, if_false: boolean)
 816[56]: GotoWord(jump=869)
 819[56]: ClearText(var[4])
 822[56]: ConstText(_value="Test failed ") -> text
 836[72]: AppendText(var[4], v1: text)
 839[56]: VarInt(var[52]) -> integer
 842[60]: ConstInt(val=0) -> integer
 847[64]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 854[56]: ConstText(_value=" != 60") -> text
 862[72]: AppendText(var[4], v1: text)
 865[56]: VarText(var[4]) -> text
 868[72]: Panic(message: text)
 869[56]: FreeText(var[28])
 872[56]: FreeText(var[4])
 875[56]: Return(ret=0, value=0, discard=56)

Execute test:
  691:[8] Text()
  692:[32] Text()
  693:[56] ConstInt(val=0) -> 0[56]
  698:[60] ConvIntFromNull() -> -2147483648[60]
  699:[64] VarInt(var[60]) -> -2147483648[64]
  702:[68] ConvBoolFromInt(v1=-2147483648[64]) -> false[64]
  703:[65] Not(v1=false[64]) -> true[64]
  704:[65] GotoFalseWord(jump=715, if_false=true[64])
  707:[64] ConstInt(val=1) -> 1[64]
  712:[68] GotoWord(jump=724)
  724:[68] PutInt(var[60], value=1[64])
  727:[64] VarInt(var[60]) -> 1[64]
  730:[68] ConstInt(val=4) -> 4[68]
  735:[72] GeInt(v1=1[64], v2=4[68]) -> false[64]
  736:[65] GotoFalseWord(jump=742, if_false=false[64])
  742:[64] VarInt(var[60]) -> 1[64]
  745:[68] VarInt(var[56]) -> 0[68]
  748:[72] ClearText(var[32])
  751:[72] ConstText(_value="0") -> "0"[72]
  754:[88] AppendText(var[32], v1="0"[72])
  757:[72] VarInt(var[64]) -> 1[72]
  760:[76] ConstInt(val=0) -> 0[76]
  765:[80] FormatInt(var[32], val=1[72], radix=10, width=0[76], token=32, plus=false, note=false)
  772:[72] ConstText(_value="0") -> "0"[72]
  775:[88] AppendText(var[32], v1="0"[72])
  778:[72] VarText(var[32]) -> "010"[72]
  781:[88] CastIntFromText(v1="010"[72]) -> 10[72]
  782:[76] AddInt(v1=0[68], v2=10[72]) -> 10[68]
  783:[72] PutInt(var[56], value=10[68])
  786:[68] FreeStack(value=0, discard=4)
  790:[64] GotoWord(jump=699)
  699:[64] VarInt(var[60]) -> 1[64]
  702:[68] ConvBoolFromInt(v1=1[64]) -> true[64]
  703:[65] Not(v1=true[64]) -> false[64]
  704:[65] GotoFalseWord(jump=715, if_false=false[64])
  715:[64] VarInt(var[60]) -> 1[64]
  718:[68] ConstInt(val=1) -> 1[68]
  723:[72] AddInt(v1=1[64], v2=1[68]) -> 2[64]
  724:[68] PutInt(var[60], value=2[64])
  727:[64] VarInt(var[60]) -> 2[64]
  730:[68] ConstInt(val=4) -> 4[68]
  735:[72] GeInt(v1=2[64], v2=4[68]) -> false[64]
  736:[65] GotoFalseWord(jump=742, if_false=false[64])
  742:[64] VarInt(var[60]) -> 2[64]
  745:[68] VarInt(var[56]) -> 10[68]
  748:[72] ClearText(var[32])
  751:[72] ConstText(_value="0") -> "0"[72]
  754:[88] AppendText(var[32], v1="0"[72])
  757:[72] VarInt(var[64]) -> 2[72]
  760:[76] ConstInt(val=0) -> 0[76]
  765:[80] FormatInt(var[32], val=2[72], radix=10, width=0[76], token=32, plus=false, note=false)
  772:[72] ConstText(_value="0") -> "0"[72]
  775:[88] AppendText(var[32], v1="0"[72])
  778:[72] VarText(var[32]) -> "020"[72]
  781:[88] CastIntFromText(v1="020"[72]) -> 20[72]
  782:[76] AddInt(v1=10[68], v2=20[72]) -> 30[68]
  783:[72] PutInt(var[56], value=30[68])
  786:[68] FreeStack(value=0, discard=4)
  790:[64] GotoWord(jump=699)
  699:[64] VarInt(var[60]) -> 2[64]
  702:[68] ConvBoolFromInt(v1=2[64]) -> true[64]
  703:[65] Not(v1=true[64]) -> false[64]
  704:[65] GotoFalseWord(jump=715, if_false=false[64])
  715:[64] VarInt(var[60]) -> 2[64]
  718:[68] ConstInt(val=1) -> 1[68]
  723:[72] AddInt(v1=2[64], v2=1[68]) -> 3[64]
  724:[68] PutInt(var[60], value=3[64])
  727:[64] VarInt(var[60]) -> 3[64]
  730:[68] ConstInt(val=4) -> 4[68]
  735:[72] GeInt(v1=3[64], v2=4[68]) -> false[64]
  736:[65] GotoFalseWord(jump=742, if_false=false[64])
  742:[64] VarInt(var[60]) -> 3[64]
  745:[68] VarInt(var[56]) -> 30[68]
  748:[72] ClearText(var[32])
  751:[72] ConstText(_value="0") -> "0"[72]
  754:[88] AppendText(var[32], v1="0"[72])
  757:[72] VarInt(var[64]) -> 3[72]
  760:[76] ConstInt(val=0) -> 0[76]
  765:[80] FormatInt(var[32], val=3[72], radix=10, width=0[76], token=32, plus=false, note=false)
  772:[72] ConstText(_value="0") -> "0"[72]
  775:[88] AppendText(var[32], v1="0"[72])
  778:[72] VarText(var[32]) -> "030"[72]
  781:[88] CastIntFromText(v1="030"[72]) -> 30[72]
  782:[76] AddInt(v1=30[68], v2=30[72]) -> 60[68]
  783:[72] PutInt(var[56], value=60[68])
  786:[68] FreeStack(value=0, discard=4)
  790:[64] GotoWord(jump=699)
  699:[64] VarInt(var[60]) -> 3[64]
  702:[68] ConvBoolFromInt(v1=3[64]) -> true[64]
  703:[65] Not(v1=true[64]) -> false[64]
  704:[65] GotoFalseWord(jump=715, if_false=false[64])
  715:[64] VarInt(var[60]) -> 3[64]
  718:[68] ConstInt(val=1) -> 1[68]
  723:[72] AddInt(v1=3[64], v2=1[68]) -> 4[64]
  724:[68] PutInt(var[60], value=4[64])
  727:[64] VarInt(var[60]) -> 4[64]
  730:[68] ConstInt(val=4) -> 4[68]
  735:[72] GeInt(v1=4[64], v2=4[68]) -> true[64]
  736:[65] GotoFalseWord(jump=742, if_false=true[64])
  739:[64] GotoWord(jump=793)
  793:[64] FreeStack(value=0, discard=4)
  797:[60] VarInt(var[56]) -> 60[60]
  800:[64] FreeStack(value=4, discard=8)
  804:[60] VarInt(var[56]) -> 60[60]
  807:[64] ConstInt(val=60) -> 60[64]
  812:[68] EqInt(v1=60[60], v2=60[64]) -> true[60]
  813:[61] GotoFalseWord(jump=819, if_false=true[60])
  816:[60] GotoWord(jump=869)
  869:[60] FreeText(var[32])
  872:[60] FreeText(var[8])
  875:[60] Return(ret=4294967295[4], value=0, discard=56)
Finished
