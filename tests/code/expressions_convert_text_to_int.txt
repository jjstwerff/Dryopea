pub fn test() {
    test_value = {"123" as integer + 2};
    assert(
        test_value == 125,
        "Test failed {test_value} != 125"
    );
}
fn test() {#block_1:void
  __work_1:text(1) = "";
  test_value:integer(1) = {#block_2:integer
    OpAddInt(OpCastIntFromText("123"), 2i32);
  }#block_2:integer;
  if OpEqInt(test_value, 125i32) null else OpPanic({#Formatted string_3:text
    __work_1:text(1) = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 125");
    __work_1;
  }#Formatted string_3:text);
  OpFreeText(__work_1);
}#block_1:void

byte-code for convert_text_to_int:test() [1168]
   0[4]: return-address
   0[8]: Text() var=__work_1[8]:text
   1[32]: ConstText(_value="123") -> text var=test_value[32]:integer
   6[48]: CastIntFromText(v1: text) -> integer
   7[36]: ConstInt(val=2) -> integer
  12[40]: AddInt(v1: integer, v2: integer) -> integer
  13[36]: VarInt(var[32]) -> integer var=test_value[32]:integer
  16[40]: ConstInt(val=125) -> integer
  21[44]: EqInt(v1: integer, v2: integer) -> boolean
  22[37]: GotoFalseWord(jump=28, if_false: boolean)
  25[36]: GotoWord(jump=79)
  28[36]: ClearText(var[8]) var=__work_1[8]:text
  31[36]: ConstText(_value="Test failed ") -> text
  45[52]: AppendText(var[8], v1: text)
  48[36]: VarInt(var[32]) -> integer var=test_value[32]:integer
  51[40]: ConstInt(val=0) -> integer
  56[44]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
  63[36]: ConstText(_value=" != 125") -> text
  72[52]: AppendText(var[8], v1: text)
  75[36]: VarText(var[8]) -> text var=__work_1[8]:text
  78[52]: Panic(message: text)
  79[36]: FreeText(var[8])
  82[36]: Return(ret=0, value=0, discard=32)

Execute test:
    0:[8] Text()
    1:[32] ConstText(_value="123") -> "123"[32]
    6:[48] CastIntFromText(v1="123"[32]) -> 123[32]
    7:[36] ConstInt(val=2) -> 2[36]
   12:[40] AddInt(v1=123[32], v2=2[36]) -> 125[32]
   13:[36] VarInt(var[32]) -> 125[36]
   16:[40] ConstInt(val=125) -> 125[40]
   21:[44] EqInt(v1=125[36], v2=125[40]) -> true[36]
   22:[37] GotoFalseWord(jump=1196, if_false=true[36])
   25:[36] GotoWord(jump=1247)
   79:[36] FreeText(var[8])
   82:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
