Test code:
pub fn test() {
    test_value = {a="12345";a[2..]};
    assert(
        test_value == "345",
        "Test failed {test_value} != \"345\""
    );
}

fn test {
  let test_value = {
    let a = "12345";
    OpGetTextSub(a, 2i32, 2147483647i32);
  };
  if OpEqText(test_value, "345") {null} else {OpGenPanic({
    let append_9 = "Test failed ";
    OpFormatText(append_9, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_9, " != "345"");
    append_9;
  })};
}

byte-code for sub_open:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: Text()
 670[52]: ConstText(_value="12345") -> text
 677[68]: AppendText(var[28], v1: text)
 680[52]: VarText(var[28]) -> text
 683[68]: ConstInt(val=2) -> integer
 688[72]: ConstInt(val=2147483647) -> integer
 693[76]: GetTextSub(v1: text, from: integer, till: integer) -> text
 694[68]: GenFreeStack(value=16, discard=24)
 698[44]: AppendText(var[4], v1: text)
 701[28]: VarText(var[4]) -> text
 704[44]: ConstText(_value="345") -> text
 709[60]: EqText(v1: text, v2: text) -> boolean
 710[29]: GenGotoFalseWord(jump=716, if_false: boolean)
 713[28]: GenGotoWord(jump=769)
 716[28]: Text()
 717[52]: ConstText(_value="Test failed ") -> text
 731[68]: AppendText(var[28], v1: text)
 734[52]: VarText(var[4]) -> text
 737[68]: ConstInt(val=0) -> integer
 742[72]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
 747[52]: ConstText(_value=" != "345"") -> text
 758[68]: AppendText(var[28], v1: text)
 761[52]: VarText(var[28]) -> text
 764[68]: GenFreeStack(value=16, discard=24)
 768[44]: GenPanic(message: text)
 769[28]: GenReturn(ret=0, value=0, discard=28)

Execute test:
  668:[4] Text()
  669:[28] Text()
  670:[52] ConstText(_value="12345") -> "12345"[52]
  677:[68] AppendText(var[28], v1="12345"[52])
  680:[52] VarText(var[28]) -> "12345"[52]
  683:[68] ConstInt(val=2) -> 2[68]
  688:[72] ConstInt(val=2147483647) -> 2147483647[72]
  693:[76] GetTextSub(v1="12345"[52], from=2[68], till=2147483647[72]) -> "345"[52]
  694:[68] GenFreeStack(value=16, discard=24)
  698:[44] AppendText(var[4], v1="345"[28])
  701:[28] VarText(var[4]) -> "345"[28]
  704:[44] ConstText(_value="345") -> "345"[44]
  709:[60] EqText(v1="345"[28], v2="345"[44]) -> true[28]
  710:[29] GenGotoFalseWord(jump=716, if_false=true[28])
  713:[28] GenGotoWord(jump=769)
  769:[28] GenReturn(ret=4294967295[0], value=0, discard=28)
Finished
