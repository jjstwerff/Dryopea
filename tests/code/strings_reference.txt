fn add(a: &text, b: text=" world!") {
    a += b;
}

pub fn test() {
    test_value = {v = "Hello"; add(v); v};
    assert(
        test_value == "Hello world!",
        "Test failed {test_value} != \"Hello world!\""
    );
}
fn add(a:refvar(text([])), b:text) {#1 block
  OpAppendRefText(OpVarRef(a), 0i32, b);
}#1

byte-code for reference:add(a: refvar(text([]))[0], b: text[12])
 675[28]: return-address
 675[32]: VarRef(var[0]) -> reference
 678[44]: ArgText(var[12]) -> text
 681[60]: AppendRefText(r: reference, fld=0, v1: text)
 684[32]: Return(ret=28, value=0, discard=32)

fn test() {#1 block
  __work_1:text = "";
  test_value:text["v"] = {#2 block
    v:text = "Hello";
    add(OpCreateRef(v), " world!");
    v;
  }#2:text["v"];
  if OpEqText(test_value, "Hello world!") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "Hello world!"");
    __work_1;
  }#3:text);
}#1

byte-code for reference:test()
 690[0]: return-address
 690[4]: Text()
 691[28]: Text()
 692[52]: Text()
 693[76]: ConstText(_value="Hello") -> text
 700[92]: AppendText(var[52], v1: text)
 703[76]: CreateRef(var[52]) -> reference
 706[88]: ConstText(_value=" world!") -> text
 715[104]: Call(size=0, to=675)
 722[76]: VarText(var[52]) -> text
 725[92]: FreeStack(value=16, discard=24) type=text[4]:Base[5]
 729[68]: AppendText(var[28], v1: text)
 732[52]: VarText(var[28]) -> text
 735[68]: ConstText(_value="Hello world!") -> text
 749[84]: EqText(v1: text, v2: text) -> boolean
 750[53]: GotoFalseWord(jump=756, if_false: boolean)
 753[52]: GotoWord(jump=816)
 756[52]: ClearText(var[4])
 759[52]: ConstText(_value="Test failed ") -> text
 773[68]: AppendText(var[4], v1: text)
 776[52]: VarText(var[28]) -> text
 779[68]: ConstInt(val=0) -> integer
 784[72]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 789[52]: ConstText(_value=" != "Hello world!"") -> text
 809[68]: AppendText(var[4], v1: text)
 812[52]: VarText(var[4]) -> text
 815[68]: Panic(message: text)
 816[52]: Return(ret=0, value=0, discard=52)

Execute test:
  690:[8] Text()
  691:[32] Text()
  692:[56] Text()
  693:[80] ConstText(_value="Hello") -> "Hello"[80]
  700:[96] AppendText(var[56], v1="Hello"[80])
  703:[80] CreateRef(var[56]) -> ref(0,1,56)[80]
  706:[92] ConstText(_value=" world!") -> " world!"[92]
  715:[108] Call(size=0, to=675)
  675:[112] VarRef(var[80]) -> ref(0,1,56)[112]
  678:[124] ArgText(var[92]) -> " world!"[124]
  681:[140] AppendRefText(r=ref(0,1,56)[112], fld=0, v1=" world!"[124])
  682:[112] Goto(jump=2221)
  684:[112] Return(ret=722[108], value=0, discard=32)
  722:[80] VarText(var[56]) -> "Hello world!"[80]
  725:[96] FreeStack(value=16, discard=24)
  729:[72] AppendText(var[32], v1="Hello world!"[56])
  732:[56] VarText(var[32]) -> "Hello world!"[56]
  735:[72] ConstText(_value="Hello world!") -> "Hello world!"[72]
  749:[88] EqText(v1="Hello world!"[56], v2="Hello world!"[72]) -> true[56]
  750:[57] GotoFalseWord(jump=756, if_false=true[56])
  753:[56] GotoWord(jump=816)
  816:[56] Return(ret=4294967295[4], value=0, discard=52)
Finished
