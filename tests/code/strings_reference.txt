fn add(a: &text, b: text=" world!") {
    a += b;
}

pub fn test() {
    test_value = {v = "Hello"; add(v); v};
    assert(
        test_value == "Hello world!",
        "Test failed {test_value} != \"Hello world!\""
    );
}
fn add(a:&text, b:text) {#1 block
  OpAppendRefText(OpVarRef(a), 0i32, b);
}#1

byte-code for reference:add(a: &text[0], b: text[12]) [1082]
   0[28]: return-address
   0[32]: VarRef(var[0]) -> ref(reference)
   3[44]: ArgText(var[12]) -> text var=b[12]:text in 0
   6[60]: AppendRefText(r: ref(reference), fld=0, v1: text)
   9[32]: Return(ret=28, value=0, discard=32)

fn test() {#1 block
  __work_1:text = "";
  v:text = "";
  test_value:text["v"] = {#2 block
    v:text = "Hello";
    add(OpCreateRef(v), " world!");
    v;
  }#2:text["v"];
  if OpEqText(test_value, "Hello world!") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "Hello world!"");
    __work_1;
  }#3:text);
}#1

byte-code for reference:test() [1097]
   0[0]: return-address
   0[4]: Text() var=__work_1[4]:text in 1
   1[28]: Text() var=v[28]:text in 1
   2[52]: Text() var=test_value[52]:text["v"] in 1
   3[76]: ClearText(var[28]) var=v[28]:text in 1
   6[76]: ConstText(_value="Hello") -> text
  13[92]: AppendText(var[28], v1: text)
  16[76]: CreateRef(var[28]) -> ref(reference)
  19[88]: ConstText(_value=" world!") -> text
  28[104]: Call(size=0, to=1082)
  35[76]: VarText(var[28]) -> text var=v[28]:text in 1
  38[92]: AppendText(var[52], v1: text)
  41[76]: VarText(var[52]) -> text var=test_value[52]:text["v"] in 1
  44[92]: ConstText(_value="Hello world!") -> text
  58[108]: EqText(v1: text, v2: text) -> boolean
  59[77]: GotoFalseWord(jump=65, if_false: boolean)
  62[76]: GotoWord(jump=125)
  65[76]: ClearText(var[4]) var=__work_1[4]:text in 1
  68[76]: ConstText(_value="Test failed ") -> text
  82[92]: AppendText(var[4], v1: text)
  85[76]: VarText(var[52]) -> text var=test_value[52]:text["v"] in 1
  88[92]: ConstInt(val=0) -> integer
  93[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
  98[76]: ConstText(_value=" != "Hello world!"") -> text
 118[92]: AppendText(var[4], v1: text)
 121[76]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 124[92]: Panic(message: text)
 125[76]: FreeText(var[52])
 128[76]: FreeText(var[28])
 131[76]: FreeText(var[4])
 134[76]: Return(ret=0, value=0, discard=76)

