fn add(a: &text, b: text=" world!") {
    a += b;
}

pub fn test() {
    test_value = {v = "Hello"; add(v); v};
    assert(
        test_value == "Hello world!",
        "Test failed {test_value} != \"Hello world!\""
    );
}
fn add(a:&text, b:text) {#1 block
  OpAppendRefText(OpVarRef(a), 0i32, b);
}#1

byte-code for reference:add(a: &text[0], b: text[12])
 692[28]: return-address
 692[32]: VarRef(var[0]) -> reference
 695[44]: ArgText(var[12]) -> text
 698[60]: AppendRefText(r: reference, fld=0, v1: text)
 701[32]: Return(ret=28, value=0, discard=32)

fn test() {#1 block
  __work_1:text = "";
  v:text = "";
  test_value:text["v"] = {#2 block
    v:text = "Hello";
    add(OpCreateRef(v), " world!");
    v;
  }#2:text["v"];
  if OpEqText(test_value, "Hello world!") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "Hello world!"");
    __work_1;
  }#3:text);
}#1

byte-code for reference:test()
 707[0]: return-address
 707[4]: Text()
 708[28]: Text()
 709[52]: Text()
 710[76]: ClearText(var[28])
 713[76]: ConstText(_value="Hello") -> text
 720[92]: AppendText(var[28], v1: text)
 723[76]: CreateRef(var[28]) -> reference
 726[88]: ConstText(_value=" world!") -> text
 735[104]: Call(size=0, to=692)
 742[76]: VarText(var[28]) -> text
 745[92]: AppendText(var[52], v1: text)
 748[76]: VarText(var[52]) -> text
 751[92]: ConstText(_value="Hello world!") -> text
 765[108]: EqText(v1: text, v2: text) -> boolean
 766[77]: GotoFalseWord(jump=772, if_false: boolean)
 769[76]: GotoWord(jump=832)
 772[76]: ClearText(var[4])
 775[76]: ConstText(_value="Test failed ") -> text
 789[92]: AppendText(var[4], v1: text)
 792[76]: VarText(var[52]) -> text
 795[92]: ConstInt(val=0) -> integer
 800[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 805[76]: ConstText(_value=" != "Hello world!"") -> text
 825[92]: AppendText(var[4], v1: text)
 828[76]: VarText(var[4]) -> text
 831[92]: Panic(message: text)
 832[76]: FreeText(var[52])
 835[76]: FreeText(var[28])
 838[76]: FreeText(var[4])
 841[76]: Return(ret=0, value=0, discard=76)

Execute test:
  707:[8] Text()
  708:[32] Text()
  709:[56] Text()
  710:[80] ClearText(var[32])
  713:[80] ConstText(_value="Hello") -> "Hello"[80]
  720:[96] AppendText(var[32], v1="Hello"[80])
  723:[80] CreateRef(var[32]) -> ref(0,1,32)[80]
  726:[92] ConstText(_value=" world!") -> " world!"[92]
  735:[108] Call(size=0, to=692)
  692:[112] VarRef(var[80]) -> ref(0,1,32)[112]
  695:[124] ArgText(var[92]) -> " world!"[124]
  698:[140] AppendRefText(r=ref(0,1,32)[112], fld=0, v1=" world!"[124])
  699:[112] Goto(jump=2238)
  701:[112] Return(ret=742[108], value=0, discard=32)
  742:[80] VarText(var[32]) -> "Hello world!"[80]
  745:[96] AppendText(var[56], v1="Hello world!"[80])
  748:[80] VarText(var[56]) -> "Hello world!"[80]
  751:[96] ConstText(_value="Hello world!") -> "Hello world!"[96]
  765:[112] EqText(v1="Hello world!"[80], v2="Hello world!"[96]) -> true[80]
  766:[81] GotoFalseWord(jump=772, if_false=true[80])
  769:[80] GotoWord(jump=832)
  832:[80] FreeText(var[56])
  835:[80] FreeText(var[32])
  838:[80] FreeText(var[8])
  841:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
