fn main() {#1 block
  __ref_1:ref(main_vector<integer>) = null;
  __work_4:text = "";
  __work_3:text = "";
  __work_2:text = "";
  __work_1:text = "";
  x:vector<integer>["__ref_1"] = {#2 vector
    OpDatabase(__ref_1, 16i32);
    _vec_1:vector<integer>["__ref_1"] = OpGetField(__ref_1, 4i32, 65535i32);
    OpSetInt(__ref_1, 4i32, 0i32);
    _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 15i32, 65535i32);
    OpSetInt(_elm_2, 0i32, 1i32);
    OpFinishRecord(_vec_1, _elm_2, 15i32, 65535i32);
    _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 15i32, 65535i32);
    OpSetInt(_elm_2, 0i32, 3i32);
    OpFinishRecord(_vec_1, _elm_2, 15i32, 65535i32);
    _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 15i32, 65535i32);
    OpSetInt(_elm_2, 0i32, 6i32);
    OpFinishRecord(_vec_1, _elm_2, 15i32, 65535i32);
    _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 15i32, 65535i32);
    OpSetInt(_elm_2, 0i32, 9i32);
    OpFinishRecord(_vec_1, _elm_2, 15i32, 65535i32);
    _vec_1;
  }#2:vector<integer>["__ref_1"];
  b:text = "";
  {#3 for
    v#count:integer = 0i32;
    _vector_3:vector<integer>["x"] = x;
    v#index:integer = -1i32;
    loop {#4 for loop
      v:integer = {#5 iter next
        v#index:integer = OpAddInt(v#index, 1i32);
        OpGetInt(OpGetVector(_vector_3, 4i32, v#index), 0i32);
      }#5:integer;
      if OpNot(OpConvBoolFromInt(v)) break(0) else null;
      {#6 block
        if OpNot(OpEqInt(v#count, 0i32)) {#7 block
          OpAppendText(b, " ");
        }#7 else null;
        OpAppendText(b, {#8 formatting string
          __work_1:text = "";
          OpFormatInt(__work_1, v#index, 10i32, 0i32, 32i32, false, false);
          OpAppendText(__work_1, ":");
          OpFormatInt(__work_1, v, 10i32, 0i32, 32i32, false, false);
          __work_1;
        }#8:text);
      }#6;
      v#count:integer = OpAddInt(v#count, 1i32);
    }#4;
  }#3;
  if OpEqText(b, "0:1 1:3 2:6 3:9") null else OpPanic({#9 formatting string
    __work_2:text = "result ";
    OpFormatText(__work_2, b, 0i32, -1i32, 32i32);
    __work_2;
  }#9:text);
  {#10 vector
    _elm_4:ref(boolean)["x"] = OpNewRecord(x, 15i32, 65535i32);
    OpSetInt(_elm_4, 0i32, 12i32);
    OpFinishRecord(x, _elm_4, 15i32, 65535i32);
    _elm_4:ref(boolean)["x"] = OpNewRecord(x, 15i32, 65535i32);
    OpSetInt(_elm_4, 0i32, 14i32);
    OpFinishRecord(x, _elm_4, 15i32, 65535i32);
    _elm_4:ref(boolean)["x"] = OpNewRecord(x, 15i32, 65535i32);
    OpSetInt(_elm_4, 0i32, 15i32);
    OpFinishRecord(x, _elm_4, 15i32, 65535i32);
  }#10;
  {#11 for
    _vector_5:vector<integer>["x"] = x;
    v#index:integer = -1i32;
    loop {#12 for loop
      v:integer = {#13 iter next
        v#index:integer = OpAddInt(v#index, 1i32);
        OpGetInt(OpGetVector(_vector_5, 4i32, v#index), 0i32);
      }#13:integer;
      if OpNot(OpConvBoolFromInt(v)) break(0) else null;
      if OpNeInt(OpRemInt(v, 3i32), 0i32) null else continue(0);
      {#14 block
        OpRemove(v#index, _vector_5, 0i32, 0i32);
      }#14;
    }#12;
  }#11;
  if OpEqText({#15 formatting string
    __work_3:text = "";
    OpFormatDatabase(__work_3, x, 15i32, false);
    __work_3;
  }#15:text, "[3,6,9,12,15]") null else OpPanic({#16 formatting string
    __work_4:text = "result ";
    OpFormatDatabase(__work_4, x, 15i32, false);
    __work_4;
  }#16:text);
}#1

byte-code for tests/suite/07-vector.lav:main() [1067]
   0[0]: return-address
   0[4]: ConvRefFromNull() -> ref(reference) var=__ref_1[4]:ref(main_vector<integer>) in 1
   1[16]: Text() var=__work_4[16]:text in 1
   2[40]: Text() var=__work_3[40]:text in 1
   3[64]: Text() var=__work_2[64]:text in 1
   4[88]: Text() var=__work_1[88]:text in 1
   5[112]: Database(var[4], db_tp=16) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[16] var=x[112]:vector<integer>["__ref_1"] in 1
  10[112]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[16] var=__ref_1[4]:ref(main_vector<integer>) in 1
  13[124]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=Unknown type(65535)[65535]
  16[124]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[16] var=__ref_1[4]:ref(main_vector<integer>) in 1
  19[136]: ConstInt(val=0) -> integer
  24[140]: SetInt(v1: ref(reference), fld=4, val: integer)
  27[124]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vec_1[112]:vector<integer>["__ref_1"] in 2
  30[136]: NewRecord(data: ref(reference), parent_tp=15, fld=65535) -> ref(reference)
  35[136]: VarRef(var[124]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[124]:ref(boolean)["__ref_1"] in 2
  38[148]: ConstInt(val=1) -> integer
  43[152]: SetInt(v1: ref(reference), fld=0, val: integer)
  46[136]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vec_1[112]:vector<integer>["__ref_1"] in 2
  49[148]: VarRef(var[124]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[124]:ref(boolean)["__ref_1"] in 2
  52[160]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=15, fld=65535)
  57[136]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vec_1[112]:vector<integer>["__ref_1"] in 2
  60[148]: NewRecord(data: ref(reference), parent_tp=15, fld=65535) -> ref(reference)
  65[148]: PutRef(var[124], value: ref(reference))
  68[136]: VarRef(var[124]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[124]:ref(boolean)["__ref_1"] in 2
  71[148]: ConstInt(val=3) -> integer
  76[152]: SetInt(v1: ref(reference), fld=0, val: integer)
  79[136]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vec_1[112]:vector<integer>["__ref_1"] in 2
  82[148]: VarRef(var[124]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[124]:ref(boolean)["__ref_1"] in 2
  85[160]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=15, fld=65535)
  90[136]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vec_1[112]:vector<integer>["__ref_1"] in 2
  93[148]: NewRecord(data: ref(reference), parent_tp=15, fld=65535) -> ref(reference)
  98[148]: PutRef(var[124], value: ref(reference))
 101[136]: VarRef(var[124]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[124]:ref(boolean)["__ref_1"] in 2
 104[148]: ConstInt(val=6) -> integer
 109[152]: SetInt(v1: ref(reference), fld=0, val: integer)
 112[136]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vec_1[112]:vector<integer>["__ref_1"] in 2
 115[148]: VarRef(var[124]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[124]:ref(boolean)["__ref_1"] in 2
 118[160]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=15, fld=65535)
 123[136]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vec_1[112]:vector<integer>["__ref_1"] in 2
 126[148]: NewRecord(data: ref(reference), parent_tp=15, fld=65535) -> ref(reference)
 131[148]: PutRef(var[124], value: ref(reference))
 134[136]: VarRef(var[124]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[124]:ref(boolean)["__ref_1"] in 2
 137[148]: ConstInt(val=9) -> integer
 142[152]: SetInt(v1: ref(reference), fld=0, val: integer)
 145[136]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vec_1[112]:vector<integer>["__ref_1"] in 2
 148[148]: VarRef(var[124]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[124]:ref(boolean)["__ref_1"] in 2
 151[160]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=15, fld=65535)
 156[136]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vec_1[112]:vector<integer>["__ref_1"] in 2
 159[148]: FreeStack(value=12, discard=36) type=vector<text>[4]:Vector(5)[7]
 163[124]: Text() var=b[124]:text in 1
 164[148]: ConstInt(val=0) -> integer var=v#count[148]:integer in 3
 169[152]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 172[164]: ConstInt(val=-1) -> integer var=v#index[164]:integer in 3
 177[168]: VarInt(var[164]) -> integer var=v#index[164]:integer in 3
 180[172]: ConstInt(val=1) -> integer
 185[176]: AddInt(v1: integer, v2: integer) -> integer
 186[172]: PutInt(var[164], value: integer)
 189[168]: VarVector(var[152]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vector_3[152]:vector<integer>["x"] in 3
 192[180]: VarInt(var[164]) -> integer var=v#index[164]:integer in 3
 195[184]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 198[180]: GetInt(v1: ref(reference), fld=0) -> integer
 201[172]: VarInt(var[168]) -> integer var=v[168]:integer in 4
 204[176]: ConvBoolFromInt(v1: integer) -> boolean
 205[173]: Not(v1: boolean) -> boolean
 206[173]: GotoFalseWord(jump=216, if_false: boolean)
 209[172]: FreeStack(value=0, discard=4)
 213[168]: GotoWord(jump=304)
 216[172]: VarInt(var[148]) -> integer var=v#count[148]:integer in 3
 219[176]: ConstInt(val=0) -> integer
 224[180]: EqInt(v1: integer, v2: integer) -> boolean
 225[173]: Not(v1: boolean) -> boolean
 226[173]: GotoFalseWord(jump=235, if_false: boolean)
 229[172]: ConstText(_value=" ") -> text
 232[188]: AppendText(var[124], v1: text)
 235[172]: ClearText(var[88]) var=__work_1[88]:text in 1
 238[172]: ConstText(_value="") -> text
 240[188]: AppendText(var[88], v1: text)
 243[172]: VarInt(var[164]) -> integer var=v#index[164]:integer in 3
 246[176]: ConstInt(val=0) -> integer
 251[180]: FormatInt(var[88], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 258[172]: ConstText(_value=":") -> text
 261[188]: AppendText(var[88], v1: text)
 264[172]: VarInt(var[168]) -> integer var=v[168]:integer in 4
 267[176]: ConstInt(val=0) -> integer
 272[180]: FormatInt(var[88], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 279[172]: VarText(var[88]) -> text var=__work_1[88]:text in 1
 282[188]: AppendText(var[124], v1: text)
 285[172]: VarInt(var[148]) -> integer var=v#count[148]:integer in 3
 288[176]: ConstInt(val=1) -> integer
 293[180]: AddInt(v1: integer, v2: integer) -> integer
 294[176]: PutInt(var[148], value: integer)
 297[172]: FreeStack(value=0, discard=4)
 301[168]: GotoWord(jump=177)
 304[168]: FreeStack(value=0, discard=20)
 308[148]: VarText(var[124]) -> text var=b[124]:text in 1
 311[164]: ConstText(_value="0:1 1:3 2:6 3:9") -> text
 328[180]: EqText(v1: text, v2: text) -> boolean
 329[149]: GotoFalseWord(jump=335, if_false: boolean)
 332[148]: GotoWord(jump=367)
 335[148]: ClearText(var[64]) var=__work_2[64]:text in 1
 338[148]: ConstText(_value="result ") -> text
 347[164]: AppendText(var[64], v1: text)
 350[148]: VarText(var[124]) -> text var=b[124]:text in 1
 353[164]: ConstInt(val=0) -> integer
 358[168]: FormatText(var[64], val: text, width: integer, dir=-1, token=32)
 363[148]: VarText(var[64]) -> text var=__work_2[64]:text in 1
 366[164]: Panic(message: text)
 367[148]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 370[160]: NewRecord(data: ref(reference), parent_tp=15, fld=65535) -> ref(reference)
 375[160]: VarRef(var[148]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_4[148]:ref(boolean)["x"] in 10
 378[172]: ConstInt(val=12) -> integer
 383[176]: SetInt(v1: ref(reference), fld=0, val: integer)
 386[160]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 389[172]: VarRef(var[148]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_4[148]:ref(boolean)["x"] in 10
 392[184]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=15, fld=65535)
 397[160]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 400[172]: NewRecord(data: ref(reference), parent_tp=15, fld=65535) -> ref(reference)
 405[172]: PutRef(var[148], value: ref(reference))
 408[160]: VarRef(var[148]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_4[148]:ref(boolean)["x"] in 10
 411[172]: ConstInt(val=14) -> integer
 416[176]: SetInt(v1: ref(reference), fld=0, val: integer)
 419[160]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 422[172]: VarRef(var[148]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_4[148]:ref(boolean)["x"] in 10
 425[184]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=15, fld=65535)
 430[160]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 433[172]: NewRecord(data: ref(reference), parent_tp=15, fld=65535) -> ref(reference)
 438[172]: PutRef(var[148], value: ref(reference))
 441[160]: VarRef(var[148]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_4[148]:ref(boolean)["x"] in 10
 444[172]: ConstInt(val=15) -> integer
 449[176]: SetInt(v1: ref(reference), fld=0, val: integer)
 452[160]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 455[172]: VarRef(var[148]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_4[148]:ref(boolean)["x"] in 10
 458[184]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=15, fld=65535)
 463[160]: FreeStack(value=0, discard=12)
 467[148]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 470[160]: ConstInt(val=-1) -> integer var=v#index[160]:integer in 11
 475[164]: VarInt(var[160]) -> integer var=v#index[160]:integer in 11
 478[168]: ConstInt(val=1) -> integer
 483[172]: AddInt(v1: integer, v2: integer) -> integer
 484[168]: PutInt(var[160], value: integer)
 487[164]: VarVector(var[148]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vector_5[148]:vector<integer>["x"] in 11
 490[176]: VarInt(var[160]) -> integer var=v#index[160]:integer in 11
 493[180]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 496[176]: GetInt(v1: ref(reference), fld=0) -> integer
 499[168]: VarInt(var[164]) -> integer var=v[164]:integer in 12
 502[172]: ConvBoolFromInt(v1: integer) -> boolean
 503[169]: Not(v1: boolean) -> boolean
 504[169]: GotoFalseWord(jump=514, if_false: boolean)
 507[168]: FreeStack(value=0, discard=4)
 511[164]: GotoWord(jump=558)
 514[168]: VarInt(var[164]) -> integer var=v[164]:integer in 12
 517[172]: ConstInt(val=3) -> integer
 522[176]: RemInt(v1: integer, v2: integer) -> integer
 523[172]: ConstInt(val=0) -> integer
 528[176]: NeInt(v1: integer, v2: integer) -> boolean
 529[169]: GotoFalseWord(jump=535, if_false: boolean)
 532[168]: GotoWord(jump=542)
 535[168]: FreeStack(value=0, discard=4)
 539[164]: GotoWord(jump=475)
 542[168]: VarVector(var[148]) -> vector type=vector<integer>[4]:Vector(0)[15] var=_vector_5[148]:vector<integer>["x"] in 11
 545[180]: Remove(state_var=20, data: ref(reference), on=0, tp=0)
 551[168]: FreeStack(value=0, discard=4)
 555[164]: GotoWord(jump=475)
 558[164]: FreeStack(value=0, discard=16)
 562[148]: ClearText(var[40]) var=__work_3[40]:text in 1
 565[148]: ConstText(_value="") -> text
 567[164]: AppendText(var[40], v1: text)
 570[148]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 573[160]: FormatDatabase(var[40], val: ref(reference), db_tp=15, pretty=false)
 579[148]: VarText(var[40]) -> text var=__work_3[40]:text in 1
 582[164]: ConstText(_value="[3,6,9,12,15]") -> text
 597[180]: EqText(v1: text, v2: text) -> boolean
 598[149]: GotoFalseWord(jump=604, if_false: boolean)
 601[148]: GotoWord(jump=632)
 604[148]: ClearText(var[16]) var=__work_4[16]:text in 1
 607[148]: ConstText(_value="result ") -> text
 616[164]: AppendText(var[16], v1: text)
 619[148]: VarVector(var[112]) -> vector type=vector<integer>[4]:Vector(0)[15] var=x[112]:vector<integer>["__ref_1"] in 1
 622[160]: FormatDatabase(var[16], val: ref(reference), db_tp=15, pretty=false)
 628[148]: VarText(var[16]) -> text var=__work_4[16]:text in 1
 631[164]: Panic(message: text)
 632[148]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[16] var=__ref_1[4]:ref(main_vector<integer>) in 1
 635[160]: FreeRef(v1: ref(reference))
 636[148]: FreeText(var[124])
 639[148]: FreeText(var[88])
 642[148]: FreeText(var[64])
 645[148]: FreeText(var[40])
 648[148]: FreeText(var[16])
 651[148]: Return(ret=0, value=0, discard=148)

