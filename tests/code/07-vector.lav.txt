fn main() {#block(1):void
  __ref_1(1):ref(main_vector<integer>) = null;
  __work_4(1):text = "";
  __work_3(1):text = "";
  __work_2(1):text = "";
  __work_1(1):text = "";
  OpDatabase(__ref_1(1), 18i32);
  x(1):vector<integer>["__ref_1"] = OpGetField(__ref_1(1), 4i32, 17i32);
  OpSetInt(__ref_1(1), 4i32, 0i32);
  _elm_1(1):ref(boolean)["x"] = OpNewRecord(x(1), 17i32, 65535i32);
  OpSetInt(_elm_1(1), 0i32, 1i32);
  OpFinishRecord(x(1), _elm_1(1), 17i32, 65535i32);
  _elm_1(1):ref(boolean)["x"] = OpNewRecord(x(1), 17i32, 65535i32);
  OpSetInt(_elm_1(1), 0i32, 3i32);
  OpFinishRecord(x(1), _elm_1(1), 17i32, 65535i32);
  _elm_1(1):ref(boolean)["x"] = OpNewRecord(x(1), 17i32, 65535i32);
  OpSetInt(_elm_1(1), 0i32, 6i32);
  OpFinishRecord(x(1), _elm_1(1), 17i32, 65535i32);
  _elm_1(1):ref(boolean)["x"] = OpNewRecord(x(1), 17i32, 65535i32);
  OpSetInt(_elm_1(1), 0i32, 9i32);
  OpFinishRecord(x(1), _elm_1(1), 17i32, 65535i32);
  b(1):text = "";
  {#For block(2):void
    v#count(2):integer = 0i32;
    _vector_2(2):vector<integer>["x"] = x(1);
    v#index(2):integer = -1i32;
    loop {#For loop_3
      v(3):integer = {#iter next(4):integer
        v#index(2):integer = OpAddInt(v#index(2), 1i32);
        OpGetInt(OpGetVector(_vector_2(2), 4i32, v#index(2)), 0i32);
      }#iter next(4):integer;
      if OpNot(OpConvBoolFromInt(v(3))) {#break(5):void
        break(0);
      }#break(5):void else null;
      {#block(6):void
        if OpNot(OpEqInt(v#count(2), 0i32)) {#block(7):void
          OpAppendText(b(1), " ");
        }#block(7):void else null;
        OpAppendText(b(1), {#Formatted string(8):text
          __work_1(1):text = "";
          OpFormatInt(__work_1(1), v#index(2), 10i32, 0i32, 32i32, false, false);
          OpAppendText(__work_1(1), ":");
          OpFormatInt(__work_1(1), v(3), 10i32, 0i32, 32i32, false, false);
          __work_1(1);
        }#Formatted string(8):text);
      }#block(6):void;
      v#count(2):integer = OpAddInt(v#count(2), 1i32);
    }#For loop_3;
  }#For block(2):void;
  if OpEqText(b(1), "0:1 1:3 2:6 3:9") null else OpPanic({#Formatted string(9):text
    __work_2(1):text = "result ";
    OpFormatText(__work_2(1), b(1), 0i32, -1i32, 32i32);
    __work_2(1);
  }#Formatted string(9):text);
  _elm_3(1):ref(boolean)["x"] = OpNewRecord(x(1), 17i32, 65535i32);
  OpSetInt(_elm_3(1), 0i32, 12i32);
  OpFinishRecord(x(1), _elm_3(1), 17i32, 65535i32);
  _elm_3(1):ref(boolean)["x"] = OpNewRecord(x(1), 17i32, 65535i32);
  OpSetInt(_elm_3(1), 0i32, 14i32);
  OpFinishRecord(x(1), _elm_3(1), 17i32, 65535i32);
  _elm_3(1):ref(boolean)["x"] = OpNewRecord(x(1), 17i32, 65535i32);
  OpSetInt(_elm_3(1), 0i32, 15i32);
  OpFinishRecord(x(1), _elm_3(1), 17i32, 65535i32);
  {#For block(10):void
    _vector_4(10):vector<integer>["x"] = x(1);
    v#index(10):integer = -1i32;
    loop {#For loop_11
      v(11):integer = {#iter next(12):integer
        v#index(10):integer = OpAddInt(v#index(10), 1i32);
        OpGetInt(OpGetVector(_vector_4(10), 4i32, v#index(10)), 0i32);
      }#iter next(12):integer;
      if OpNot(OpConvBoolFromInt(v(11))) {#break(13):void
        break(0);
      }#break(13):void else null;
      if OpNeInt(OpRemInt(v(11), 3i32), 0i32) null else continue(0);
      {#block(14):void
        OpRemove(v#index(10), _vector_4(10), 0i32, 0i32);
      }#block(14):void;
    }#For loop_11;
  }#For block(10):void;
  if OpEqText({#Formatted string(15):text
    __work_3(1):text = "";
    OpFormatDatabase(__work_3(1), x(1), 17i32, false);
    __work_3(1);
  }#Formatted string(15):text, "[3,6,9,12,15]") null else OpPanic({#Formatted string(16):text
    __work_4(1):text = "result ";
    OpFormatDatabase(__work_4(1), x(1), 17i32, false);
    __work_4(1);
  }#Formatted string(16):text);
  OpFreeRef(__ref_1(1));
  OpFreeText(b(1));
  OpFreeText(__work_1(1));
  OpFreeText(__work_2(1));
  OpFreeText(__work_3(1));
  OpFreeText(__work_4(1));
}#block(1):void

byte-code for tests/suite/07-vector.lav:main() [1119]
   0[4]: return-address
   0[8]: ConvRefFromNull() -> ref(reference) var=__ref_1[8]:ref(main_vector<integer>)
   1[20]: Text() var=__work_4[20]:text
   2[44]: Text() var=__work_3[44]:text
   3[68]: Text() var=__work_2[68]:text
   4[92]: Text() var=__work_1[92]:text
   5[116]: Database(var[8], db_tp=18) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18]
  10[116]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_1[8]:ref(main_vector<integer>)
  13[128]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=vector<integer>[4]:Vector(0)[17]
  16[128]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_1[8]:ref(main_vector<integer>)
  19[140]: ConstInt(val=0) -> integer
  24[144]: SetInt(v1: ref(reference), fld=4, val: integer)
  27[128]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
  30[140]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
  35[140]: VarRef(var[128]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[128]:ref(boolean)["x"]
  38[152]: ConstInt(val=1) -> integer
  43[156]: SetInt(v1: ref(reference), fld=0, val: integer)
  46[140]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
  49[152]: VarRef(var[128]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[128]:ref(boolean)["x"]
  52[164]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
  57[140]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
  60[152]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
  65[152]: PutRef(var[128], value: ref(reference))
  68[140]: VarRef(var[128]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[128]:ref(boolean)["x"]
  71[152]: ConstInt(val=3) -> integer
  76[156]: SetInt(v1: ref(reference), fld=0, val: integer)
  79[140]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
  82[152]: VarRef(var[128]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[128]:ref(boolean)["x"]
  85[164]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
  90[140]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
  93[152]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
  98[152]: PutRef(var[128], value: ref(reference))
 101[140]: VarRef(var[128]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[128]:ref(boolean)["x"]
 104[152]: ConstInt(val=6) -> integer
 109[156]: SetInt(v1: ref(reference), fld=0, val: integer)
 112[140]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 115[152]: VarRef(var[128]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[128]:ref(boolean)["x"]
 118[164]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 123[140]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 126[152]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
 131[152]: PutRef(var[128], value: ref(reference))
 134[140]: VarRef(var[128]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[128]:ref(boolean)["x"]
 137[152]: ConstInt(val=9) -> integer
 142[156]: SetInt(v1: ref(reference), fld=0, val: integer)
 145[140]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 148[152]: VarRef(var[128]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_1[128]:ref(boolean)["x"]
 151[164]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 156[140]: Text() var=b[140]:text
 157[164]: ConstInt(val=0) -> integer var=v#count[164]:integer
 162[168]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 165[180]: ConstInt(val=-1) -> integer var=v#index[180]:integer
 170[184]: VarInt(var[180]) -> integer var=v#index[180]:integer
 173[188]: ConstInt(val=1) -> integer
 178[192]: AddInt(v1: integer, v2: integer) -> integer
 179[188]: PutInt(var[180], value: integer)
 182[184]: VarVector(var[168]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vector_2[168]:vector<integer>["x"]
 185[196]: VarInt(var[180]) -> integer var=v#index[180]:integer
 188[200]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 191[196]: GetInt(v1: ref(reference), fld=0) -> integer
 194[188]: VarInt(var[184]) -> integer var=v[184]:integer
 197[192]: ConvBoolFromInt(v1: integer) -> boolean
 198[189]: Not(v1: boolean) -> boolean
 199[189]: GotoFalseWord(jump=209, if_false: boolean)
 202[188]: FreeStack(value=0, discard=4)
 206[184]: GotoWord(jump=297)
 209[188]: VarInt(var[164]) -> integer var=v#count[164]:integer
 212[192]: ConstInt(val=0) -> integer
 217[196]: EqInt(v1: integer, v2: integer) -> boolean
 218[189]: Not(v1: boolean) -> boolean
 219[189]: GotoFalseWord(jump=228, if_false: boolean)
 222[188]: ConstText(_value=" ") -> text
 225[204]: AppendText(var[140], v1: text)
 228[188]: ClearText(var[92]) var=__work_1[92]:text
 231[188]: ConstText(_value="") -> text
 233[204]: AppendText(var[92], v1: text)
 236[188]: VarInt(var[180]) -> integer var=v#index[180]:integer
 239[192]: ConstInt(val=0) -> integer
 244[196]: FormatInt(var[92], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 251[188]: ConstText(_value=":") -> text
 254[204]: AppendText(var[92], v1: text)
 257[188]: VarInt(var[184]) -> integer var=v[184]:integer
 260[192]: ConstInt(val=0) -> integer
 265[196]: FormatInt(var[92], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 272[188]: VarText(var[92]) -> text var=__work_1[92]:text
 275[204]: AppendText(var[140], v1: text)
 278[188]: VarInt(var[164]) -> integer var=v#count[164]:integer
 281[192]: ConstInt(val=1) -> integer
 286[196]: AddInt(v1: integer, v2: integer) -> integer
 287[192]: PutInt(var[164], value: integer)
 290[188]: FreeStack(value=0, discard=4)
 294[184]: GotoWord(jump=170)
 297[184]: FreeStack(value=0, discard=20)
 301[164]: VarText(var[140]) -> text var=b[140]:text
 304[180]: ConstText(_value="0:1 1:3 2:6 3:9") -> text
 321[196]: EqText(v1: text, v2: text) -> boolean
 322[165]: GotoFalseWord(jump=328, if_false: boolean)
 325[164]: GotoWord(jump=360)
 328[164]: ClearText(var[68]) var=__work_2[68]:text
 331[164]: ConstText(_value="result ") -> text
 340[180]: AppendText(var[68], v1: text)
 343[164]: VarText(var[140]) -> text var=b[140]:text
 346[180]: ConstInt(val=0) -> integer
 351[184]: FormatText(var[68], val: text, width: integer, dir=-1, token=32)
 356[164]: VarText(var[68]) -> text var=__work_2[68]:text
 359[180]: Panic(message: text)
 360[164]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 363[176]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
 368[176]: VarRef(var[164]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_3[164]:ref(boolean)["x"]
 371[188]: ConstInt(val=12) -> integer
 376[192]: SetInt(v1: ref(reference), fld=0, val: integer)
 379[176]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 382[188]: VarRef(var[164]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_3[164]:ref(boolean)["x"]
 385[200]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 390[176]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 393[188]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
 398[188]: PutRef(var[164], value: ref(reference))
 401[176]: VarRef(var[164]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_3[164]:ref(boolean)["x"]
 404[188]: ConstInt(val=14) -> integer
 409[192]: SetInt(v1: ref(reference), fld=0, val: integer)
 412[176]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 415[188]: VarRef(var[164]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_3[164]:ref(boolean)["x"]
 418[200]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 423[176]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 426[188]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
 431[188]: PutRef(var[164], value: ref(reference))
 434[176]: VarRef(var[164]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_3[164]:ref(boolean)["x"]
 437[188]: ConstInt(val=15) -> integer
 442[192]: SetInt(v1: ref(reference), fld=0, val: integer)
 445[176]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 448[188]: VarRef(var[164]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_3[164]:ref(boolean)["x"]
 451[200]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 456[176]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 459[188]: ConstInt(val=-1) -> integer var=v#index[188]:integer
 464[192]: VarInt(var[188]) -> integer var=v#index[188]:integer
 467[196]: ConstInt(val=1) -> integer
 472[200]: AddInt(v1: integer, v2: integer) -> integer
 473[196]: PutInt(var[188], value: integer)
 476[192]: VarVector(var[176]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vector_4[176]:vector<integer>["x"]
 479[204]: VarInt(var[188]) -> integer var=v#index[188]:integer
 482[208]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 485[204]: GetInt(v1: ref(reference), fld=0) -> integer
 488[196]: VarInt(var[192]) -> integer var=v[192]:integer
 491[200]: ConvBoolFromInt(v1: integer) -> boolean
 492[197]: Not(v1: boolean) -> boolean
 493[197]: GotoFalseWord(jump=503, if_false: boolean)
 496[196]: FreeStack(value=0, discard=4)
 500[192]: GotoWord(jump=547)
 503[196]: VarInt(var[192]) -> integer var=v[192]:integer
 506[200]: ConstInt(val=3) -> integer
 511[204]: RemInt(v1: integer, v2: integer) -> integer
 512[200]: ConstInt(val=0) -> integer
 517[204]: NeInt(v1: integer, v2: integer) -> boolean
 518[197]: GotoFalseWord(jump=524, if_false: boolean)
 521[196]: GotoWord(jump=531)
 524[196]: FreeStack(value=0, discard=4)
 528[192]: GotoWord(jump=464)
 531[196]: VarVector(var[176]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vector_4[176]:vector<integer>["x"]
 534[208]: Remove(state_var=20, data: ref(reference), on=0, tp=0)
 540[196]: FreeStack(value=0, discard=4)
 544[192]: GotoWord(jump=464)
 547[192]: FreeStack(value=0, discard=16)
 551[176]: ClearText(var[44]) var=__work_3[44]:text
 554[176]: ConstText(_value="") -> text
 556[192]: AppendText(var[44], v1: text)
 559[176]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 562[188]: FormatDatabase(var[44], val: ref(reference), db_tp=17, pretty=false)
 568[176]: VarText(var[44]) -> text var=__work_3[44]:text
 571[192]: ConstText(_value="[3,6,9,12,15]") -> text
 586[208]: EqText(v1: text, v2: text) -> boolean
 587[177]: GotoFalseWord(jump=593, if_false: boolean)
 590[176]: GotoWord(jump=621)
 593[176]: ClearText(var[20]) var=__work_4[20]:text
 596[176]: ConstText(_value="result ") -> text
 605[192]: AppendText(var[20], v1: text)
 608[176]: VarVector(var[116]) -> vector type=vector<integer>[4]:Vector(0)[17] var=x[116]:vector<integer>["__ref_1"]
 611[188]: FormatDatabase(var[20], val: ref(reference), db_tp=17, pretty=false)
 617[176]: VarText(var[20]) -> text var=__work_4[20]:text
 620[192]: Panic(message: text)
 621[176]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_1[8]:ref(main_vector<integer>)
 624[188]: FreeRef(v1: ref(reference))
 625[176]: FreeText(var[140])
 628[176]: FreeText(var[92])
 631[176]: FreeText(var[68])
 634[176]: FreeText(var[44])
 637[176]: FreeText(var[20])
 640[176]: Return(ret=0, value=0, discard=172)

