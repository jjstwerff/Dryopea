fn add(a: text, b: &text="var") -> text {
    b += "_" + a;
    b
}

pub fn test() {
    test_value = {add("1234")};
    assert(
        test_value == "var_1234",
        "Test failed {test_value} != \"var_1234\""
    );
}
fn add(a:text, b:&text) -> text {#1 block
  OpAppendRefText(OpVarRef(b), 0i32, "_");
  OpAppendRefText(OpVarRef(b), 0i32, a);
  b;
}#1:&text

byte-code for default_ref:add(a: text[0], b: &text[16]) -> text
 691[28]: return-address
 691[32]: VarRef(var[16]) -> reference
 694[44]: ConstText(_value="_") -> text
 697[60]: AppendRefText(r: reference, fld=0, v1: text)
 700[32]: VarRef(var[16]) -> reference
 703[44]: ArgText(var[0]) -> text
 706[60]: AppendRefText(r: reference, fld=0, v1: text)
 709[32]: VarRef(var[16]) -> reference
 712[44]: GetRefText(r: reference, fld=0) -> text["a"]
 715[48]: Return(ret=28, value=16, discard=48) type=text[4]:Base[5]

fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    add("1234", {#3 default ref
      OpAppendText(__work_1, "var");
      OpCreateRef(__work_1);
    }#3:reference["__work_1"]);
  }#2:text;
  if OpEqText(test_value, "var_1234") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "var_1234"");
    __work_2;
  }#4:text);
}#1

byte-code for default_ref:test()
 721[0]: return-address
 721[4]: Text()
 722[28]: Text()
 723[52]: Text()
 724[76]: ConstText(_value="1234") -> text
 730[92]: ConstText(_value="var") -> text
 735[108]: AppendText(var[28], v1: text)
 738[92]: CreateRef(var[28]) -> reference
 741[104]: Call(size=0, to=691)
 748[92]: AppendText(var[52], v1: text)
 751[76]: VarText(var[52]) -> text
 754[92]: ConstText(_value="var_1234") -> text
 764[108]: EqText(v1: text, v2: text) -> boolean
 765[77]: GotoFalseWord(jump=771, if_false: boolean)
 768[76]: GotoWord(jump=827)
 771[76]: ClearText(var[4])
 774[76]: ConstText(_value="Test failed ") -> text
 788[92]: AppendText(var[4], v1: text)
 791[76]: VarText(var[52]) -> text
 794[92]: ConstInt(val=0) -> integer
 799[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 804[76]: ConstText(_value=" != "var_1234"") -> text
 820[92]: AppendText(var[4], v1: text)
 823[76]: VarText(var[4]) -> text
 826[92]: Panic(message: text)
 827[76]: FreeText(var[52])
 830[76]: FreeText(var[28])
 833[76]: FreeText(var[4])
 836[76]: Return(ret=0, value=0, discard=76)

Execute test:
  721:[8] Text()
  722:[32] Text()
  723:[56] Text()
  724:[80] ConstText(_value="1234") -> "1234"[80]
  730:[96] ConstText(_value="var") -> "var"[96]
  735:[112] AppendText(var[32], v1="var"[96])
  738:[96] CreateRef(var[32]) -> ref(0,1,32)[96]
  741:[108] Call(size=0, to=691)
  691:[112] VarRef(var[96]) -> ref(0,1,32)[112]
  694:[124] ConstText(_value="_") -> "_"[124]
  697:[140] AppendRefText(r=ref(0,1,32)[112], fld=0, v1="_"[124])
  698:[112] Goto(jump=-17219)
  700:[112] VarRef(var[96]) -> ref(0,1,32)[112]
  703:[124] ArgText(var[80]) -> "1234"[124]
  706:[140] AppendRefText(r=ref(0,1,32)[112], fld=0, v1="1234"[124])
  707:[112] Goto(jump=-17210)
  709:[112] VarRef(var[96]) -> ref(0,1,32)[112]
  712:[124] GetRefText(r=ref(0,1,32)[112], fld=0) -> "var_1234"[112]
  713:[128] Goto(jump=2252)
  715:[128] Return(ret=748[108], value=16, discard=48) -> "var_1234"[80]
  748:[96] AppendText(var[56], v1="var_1234"[80])
  751:[80] VarText(var[56]) -> "var_1234"[80]
  754:[96] ConstText(_value="var_1234") -> "var_1234"[96]
  764:[112] EqText(v1="var_1234"[80], v2="var_1234"[96]) -> true[80]
  765:[81] GotoFalseWord(jump=771, if_false=true[80])
  768:[80] GotoWord(jump=827)
  827:[80] FreeText(var[56])
  830:[80] FreeText(var[32])
  833:[80] FreeText(var[8])
  836:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
