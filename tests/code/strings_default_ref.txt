fn add(a: text, b: &text="var") -> text {
    b += "_" + a;
    b
}

pub fn test() {
    test_value = {add("1234")};
    assert(
        test_value == "var_1234",
        "Test failed {test_value} != \"var_1234\""
    );
}
fn add(a:text, b:refvar(text([]))) -> text {#1 block
  OpAppendRefText(OpVarRef(b), 0i32, "_");
  OpAppendRefText(OpVarRef(b), 0i32, a);
  b;
}#1:refvar(text([]))

byte-code for default_ref:add(a: text[0], b: refvar(text([]))[16]) -> text
 675[28]: return-address
 675[32]: VarRef(var[16]) -> reference
 678[44]: ConstText(_value="_") -> text
 681[60]: AppendRefText(r: reference, fld=0, v1: text)
 684[32]: VarRef(var[16]) -> reference
 687[44]: ArgText(var[0]) -> text
 690[60]: AppendRefText(r: reference, fld=0, v1: text)
 693[32]: VarRef(var[16]) -> reference
 696[44]: GetRefText(r: reference, fld=0) -> text["a"]
 699[48]: Return(ret=28, value=16, discard=48) type=text[4]:Base[5]

fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    add("1234", {#3 default ref
      OpAppendText(__work_1, "var");
      OpCreateRef(__work_1);
    }#3:reference["__work_1"]);
  }#2:text;
  if OpEqText(test_value, "var_1234") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "var_1234"");
    __work_2;
  }#4:text);
}#1

byte-code for default_ref:test()
 705[0]: return-address
 705[4]: Text()
 706[28]: Text()
 707[52]: Text()
 708[76]: ConstText(_value="1234") -> text
 714[92]: ConstText(_value="var") -> text
 719[108]: AppendText(var[28], v1: text)
 722[92]: CreateRef(var[28]) -> reference
 725[104]: Call(size=0, to=675)
 732[92]: AppendText(var[52], v1: text)
 735[76]: VarText(var[52]) -> text
 738[92]: ConstText(_value="var_1234") -> text
 748[108]: EqText(v1: text, v2: text) -> boolean
 749[77]: GotoFalseWord(jump=755, if_false: boolean)
 752[76]: GotoWord(jump=811)
 755[76]: ClearText(var[4])
 758[76]: ConstText(_value="Test failed ") -> text
 772[92]: AppendText(var[4], v1: text)
 775[76]: VarText(var[52]) -> text
 778[92]: ConstInt(val=0) -> integer
 783[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 788[76]: ConstText(_value=" != "var_1234"") -> text
 804[92]: AppendText(var[4], v1: text)
 807[76]: VarText(var[4]) -> text
 810[92]: Panic(message: text)
 811[76]: Return(ret=0, value=0, discard=76)

Execute test:
  705:[8] Text()
  706:[32] Text()
  707:[56] Text()
  708:[80] ConstText(_value="1234") -> "1234"[80]
  714:[96] ConstText(_value="var") -> "var"[96]
  719:[112] AppendText(var[32], v1="var"[96])
  722:[96] CreateRef(var[32]) -> ref(0,1,32)[96]
  725:[108] Call(size=0, to=675)
  675:[112] VarRef(var[96]) -> ref(0,1,32)[112]
  678:[124] ConstText(_value="_") -> "_"[124]
  681:[140] AppendRefText(r=ref(0,1,32)[112], fld=0, v1="_"[124])
  682:[112] Goto(jump=-17235)
  684:[112] VarRef(var[96]) -> ref(0,1,32)[112]
  687:[124] ArgText(var[80]) -> "1234"[124]
  690:[140] AppendRefText(r=ref(0,1,32)[112], fld=0, v1="1234"[124])
  691:[112] Goto(jump=-17226)
  693:[112] VarRef(var[96]) -> ref(0,1,32)[112]
  696:[124] GetRefText(r=ref(0,1,32)[112], fld=0) -> "var_1234"[112]
  697:[128] Goto(jump=2236)
  699:[128] Return(ret=732[108], value=16, discard=48) -> "var_1234"[80]
  732:[96] AppendText(var[56], v1="var_1234"[80])
  735:[80] VarText(var[56]) -> "var_1234"[80]
  738:[96] ConstText(_value="var_1234") -> "var_1234"[96]
  748:[112] EqText(v1="var_1234"[80], v2="var_1234"[96]) -> true[80]
  749:[81] GotoFalseWord(jump=755, if_false=true[80])
  752:[80] GotoWord(jump=811)
  811:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
