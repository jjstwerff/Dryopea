fn _tp_integer_abs(both:integer) -> integer {#1 block
  OpAbsInt(both);
}#1:integer

fn _tp_long_abs(both:long) -> long {#1 block
  OpAbsLong(both);
}#1:long

fn _tp_single_abs(both:single) -> single {#1 block
  OpAbsSingle(both);
}#1:single

fn _tp_single_cos(both:single) -> single {#1 block
  OpMathCosSingle(both);
}#1:single

fn _tp_single_sin(both:single) -> single {#1 block
  OpMathSinSingle(both);
}#1:single

fn _tp_single_tan(both:single) -> single {#1 block
  OpMathTanSingle(both);
}#1:single

fn _tp_single_acos(both:single) -> single {#1 block
  OpMathAcosSingle(both);
}#1:single

fn _tp_single_asin(both:single) -> single {#1 block
  OpMathAsinSingle(both);
}#1:single

fn _tp_single_atan(both:single) -> single {#1 block
  OpMathAtanSingle(both);
}#1:single

fn _tp_single_atan2(both:single, v2:single) -> single {#1 block
  OpMathAtan2Single(both, v2);
}#1:single

fn _tp_single_ceil(both:single) -> single {#1 block
  OpMathCeilSingle(both);
}#1:single

fn _tp_single_floor(both:single) -> single {#1 block
  OpMathFloorSingle(both);
}#1:single

fn _tp_single_round(both:single) -> single {#1 block
  OpMathRoundSingle(both);
}#1:single

fn _tp_single_sqrt(both:single) -> single {#1 block
  OpMathSqrtSingle(both);
}#1:single

fn _tp_single_log(both:single, v2:single) -> single {#1 block
  OpMathLogSingle(both, v2);
}#1:single

fn _tp_single_pow(both:single, v2:single) -> single {#1 block
  OpPowSingle(both, v2);
}#1:single

fn _tp_float_abs(both:float) -> float {#1 block
  OpAbsFloat(both);
}#1:float

fn PI() -> float OpMathPiFloat()

fn E() -> float OpMathEFloat()

fn _tp_float_cos(both:float) -> float {#1 block
  OpMathCosFloat(both);
}#1:float

fn _tp_float_sin(both:float) -> float {#1 block
  OpMathSinFloat(both);
}#1:float

fn _tp_float_tan(both:float) -> float {#1 block
  OpMathTanFloat(both);
}#1:float

fn _tp_float_acos(both:float) -> float {#1 block
  OpMathAcosFloat(both);
}#1:float

fn _tp_float_asin(both:float) -> float {#1 block
  OpMathAsinFloat(both);
}#1:float

fn _tp_float_atan(both:float) -> float {#1 block
  OpMathAtanFloat(both);
}#1:float

fn _tp_float_atan2(both:float, v2:float) -> float {#1 block
  OpMathAtan2Float(both, v2);
}#1:float

fn _tp_float_ceil(both:float) -> float {#1 block
  OpMathCeilFloat(both);
}#1:float

fn _tp_float_floor(both:float) -> float {#1 block
  OpMathFloorFloat(both);
}#1:float

fn _tp_float_round(both:float) -> float {#1 block
  OpMathRoundFloat(both);
}#1:float

fn _tp_float_sqrt(both:float) -> float {#1 block
  OpMathSqrtFloat(both);
}#1:float

fn _tp_float_log(both:float, v2:float) -> float {#1 block
  OpMathLogFloat(both, v2);
}#1:float

fn _tp_float_pow(both:float, v2:float) -> float {#1 block
  OpPowFloat(both, v2);
}#1:float

fn _tp_text_len(both:text) -> integer {#1 block
  OpLengthText(both);
}#1:integer

fn _tp_vector_len(both:vector) -> integer {#1 block
  OpLengthVector(both);
}#1:integer

fn print(v1:text) {#1 block
  OpPrint(v1);
}#1

