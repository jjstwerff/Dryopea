fn sum(v: vector<integer>) -> integer { t = 0; for i in v { t += i }; t}

pub fn test() {
    test_value = {sum([1, 2, 3, 4, 5])};
    assert(
        test_value == 15,
        "Test failed {test_value} != 15"
    );
}
Type 12:vector<integer>[4]:Vector(0)

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn sum(v:vector<integer>) -> integer {#1 block
  t:integer = 0i32;
  {#2 for
    i#index:integer = 0i32;
    loop {#3 for loop
      i:integer = if OpGeInt(i#index, OpLengthVector(v)) OpConvIntFromNull() else {#4 iter next
        _res_1:integer = OpGetInt(OpGetVector(v, 4i32, i#index), 0i32);
        i#index:integer = OpAddInt(i#index, 1i32);
        _res_1;
      }#4:integer;
      if OpNot(OpConvBoolFromInt(i)) break(0) else null;
      {#5 block
        t:integer = OpAddInt(t, i);
      }#5;
    }#3;
  }#2;
  t;
}#1:integer

byte-code for sum_vector:sum(v: vector<integer>[0]) -> integer
 692[12]: return-address
 692[16]: ConstInt(val=0) -> integer
 697[20]: ConstInt(val=0) -> integer
 702[24]: VarInt(var[20]) -> integer
 705[28]: VarVector(var[0]) -> vector type=vector<integer>[4]:Vector(0)[12]
 708[40]: LengthVector(r: vector) -> integer
 709[32]: GeInt(v1: integer, v2: integer) -> boolean
 710[25]: GotoFalseWord(jump=717, if_false: boolean)
 713[24]: ConvIntFromNull() -> integer
 714[28]: GotoWord(jump=748)
 717[24]: VarVector(var[0]) -> vector type=vector<integer>[4]:Vector(0)[12]
 720[36]: VarInt(var[20]) -> integer
 723[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 726[36]: GetInt(v1: reference, fld=0) -> integer
 729[28]: VarInt(var[20]) -> integer
 732[32]: ConstInt(val=1) -> integer
 737[36]: AddInt(v1: integer, v2: integer) -> integer
 738[32]: PutInt(var[20], value: integer)
 741[28]: VarInt(var[24]) -> integer
 744[32]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 748[28]: VarInt(var[24]) -> integer
 751[32]: ConvBoolFromInt(v1: integer) -> boolean
 752[29]: Not(v1: boolean) -> boolean
 753[29]: GotoFalseWord(jump=763, if_false: boolean)
 756[28]: FreeStack(value=0, discard=4)
 760[24]: GotoWord(jump=780)
 763[28]: VarInt(var[16]) -> integer
 766[32]: VarInt(var[24]) -> integer
 769[36]: AddInt(v1: integer, v2: integer) -> integer
 770[32]: PutInt(var[16], value: integer)
 773[28]: FreeStack(value=0, discard=4)
 777[24]: GotoWord(jump=702)
 780[24]: FreeStack(value=0, discard=4)
 784[20]: VarInt(var[16]) -> integer
 787[24]: Return(ret=12, value=4, discard=24) type=integer[4]:Base[0]

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    sum({#3 vector
      _db_3:main_vector<integer> = OpDatabase(4i32, 13i32);
      _vec_2:vector<integer> = OpGetField(_db_3, 4i32, 65535i32);
      OpSetInt(_db_3, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 3i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 4i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 5i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _vec_2;
    }#3:vector<integer>);
  }#2:integer;
  if OpEqInt(test_value, 15i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 15");
    __work_1;
  }#4:text);
}#1

byte-code for sum_vector:test()
 793[0]: return-address
 793[4]: Text()
 794[28]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 799[40]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 802[52]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 805[52]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 808[64]: ConstInt(val=0) -> integer
 813[68]: SetInt(v1: reference, fld=4, val: integer)
 816[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 819[64]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 824[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 827[76]: ConstInt(val=1) -> integer
 832[80]: SetInt(v1: reference, fld=0, val: integer)
 835[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 838[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 841[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 846[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 849[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 854[76]: PutRef(var[52], value: reference)
 857[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 860[76]: ConstInt(val=2) -> integer
 865[80]: SetInt(v1: reference, fld=0, val: integer)
 868[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 871[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 874[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 879[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 882[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 887[76]: PutRef(var[52], value: reference)
 890[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 893[76]: ConstInt(val=3) -> integer
 898[80]: SetInt(v1: reference, fld=0, val: integer)
 901[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 904[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 907[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 912[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 915[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 920[76]: PutRef(var[52], value: reference)
 923[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 926[76]: ConstInt(val=4) -> integer
 931[80]: SetInt(v1: reference, fld=0, val: integer)
 934[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 937[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 940[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 945[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 948[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 953[76]: PutRef(var[52], value: reference)
 956[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 959[76]: ConstInt(val=5) -> integer
 964[80]: SetInt(v1: reference, fld=0, val: integer)
 967[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 970[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 973[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 978[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 981[76]: FreeStack(value=12, discard=48) type=Variable[12]:{name:text[4], value:text[8]}[6]
 985[40]: Call(size=0, to=692)
 992[32]: VarInt(var[28]) -> integer
 995[36]: ConstInt(val=15) -> integer
1000[40]: EqInt(v1: integer, v2: integer) -> boolean
1001[33]: GotoFalseWord(jump=1007, if_false: boolean)
1004[32]: GotoWord(jump=1057)
1007[32]: ClearText(var[4])
1010[32]: ConstText(_value="Test failed ") -> text
1024[48]: AppendText(var[4], v1: text)
1027[32]: VarInt(var[28]) -> integer
1030[36]: ConstInt(val=0) -> integer
1035[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1042[32]: ConstText(_value=" != 15") -> text
1050[48]: AppendText(var[4], v1: text)
1053[32]: VarText(var[4]) -> text
1056[48]: Panic(message: text)
1057[32]: FreeText(var[4])
1060[32]: Return(ret=0, value=0, discard=32)

Execute test:
  793:[8] Text()
  794:[32] Database(size=4, db_tp=13) -> ref(1,1,0)={}[32]
  799:[44] VarRef(var[32]) -> ref(1,1,0)={}[44]
  802:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  805:[56] VarRef(var[32]) -> ref(1,1,0)={}[56]
  808:[68] ConstInt(val=0) -> 0[68]
  813:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  816:[56] VarVector(var[44]) -> ref(1,1,4)=[][56]
  819:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=12, fld=65535) -> ref(1,5,8)[56]
  824:[68] VarRef(var[56]) -> ref(1,5,8)=false[68]
  827:[80] ConstInt(val=1) -> 1[80]
  832:[84] SetInt(v1=ref(1,5,8)[68], fld=0, val=1[80])
  835:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  838:[80] VarRef(var[56]) -> ref(1,5,8)=true[80]
  841:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,8)[80], parent_tp=12, fld=65535)
  846:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  849:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,5,12)[68]
  854:[80] PutRef(var[56], value=ref(1,5,12)[68])
  857:[68] VarRef(var[56]) -> ref(1,5,12)=false[68]
  860:[80] ConstInt(val=2) -> 2[80]
  865:[84] SetInt(v1=ref(1,5,12)[68], fld=0, val=2[80])
  868:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  871:[80] VarRef(var[56]) -> ref(1,5,12)=true[80]
  874:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,12)[80], parent_tp=12, fld=65535)
  879:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  882:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,5,16)[68]
  887:[80] PutRef(var[56], value=ref(1,5,16)[68])
  890:[68] VarRef(var[56]) -> ref(1,5,16)=false[68]
  893:[80] ConstInt(val=3) -> 3[80]
  898:[84] SetInt(v1=ref(1,5,16)[68], fld=0, val=3[80])
  901:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3][68]
  904:[80] VarRef(var[56]) -> ref(1,5,16)=true[80]
  907:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,16)[80], parent_tp=12, fld=65535)
  912:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3][68]
  915:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,5,20)[68]
  920:[80] PutRef(var[56], value=ref(1,5,20)[68])
  923:[68] VarRef(var[56]) -> ref(1,5,20)=false[68]
  926:[80] ConstInt(val=4) -> 4[80]
  931:[84] SetInt(v1=ref(1,5,20)[68], fld=0, val=4[80])
  934:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  937:[80] VarRef(var[56]) -> ref(1,5,20)=true[80]
  940:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,20)[80], parent_tp=12, fld=65535)
  945:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  948:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,5,24)[68]
  953:[80] PutRef(var[56], value=ref(1,5,24)[68])
  956:[68] VarRef(var[56]) -> ref(1,5,24)=false[68]
  959:[80] ConstInt(val=5) -> 5[80]
  964:[84] SetInt(v1=ref(1,5,24)[68], fld=0, val=5[80])
  967:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  970:[80] VarRef(var[56]) -> ref(1,5,24)=true[80]
  973:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,24)[80], parent_tp=12, fld=65535)
  978:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  981:[80] FreeStack(value=12, discard=48)
  985:[44] Call(size=0, to=692)
  692:[48] ConstInt(val=0) -> 0[48]
  697:[52] ConstInt(val=0) -> 0[52]
  702:[56] VarInt(var[52]) -> 0[56]
  705:[60] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][60]
  708:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  709:[64] GeInt(v1=0[56], v2=5[60]) -> false[56]
  710:[57] GotoFalseWord(jump=717, if_false=false[56])
  717:[56] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][56]
  720:[68] VarInt(var[52]) -> 0[68]
  723:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=0[68]) -> ref(1,5,8)=1[56]
  726:[68] GetInt(v1=ref(1,5,8)[56], fld=0) -> 1[56]
  729:[60] VarInt(var[52]) -> 0[60]
  732:[64] ConstInt(val=1) -> 1[64]
  737:[68] AddInt(v1=0[60], v2=1[64]) -> 1[60]
  738:[64] PutInt(var[52], value=1[60])
  741:[60] VarInt(var[56]) -> 1[60]
  744:[64] FreeStack(value=4, discard=8)
  748:[60] VarInt(var[56]) -> 1[60]
  751:[64] ConvBoolFromInt(v1=1[60]) -> true[60]
  752:[61] Not(v1=true[60]) -> false[60]
  753:[61] GotoFalseWord(jump=763, if_false=false[60])
  763:[60] VarInt(var[48]) -> 0[60]
  766:[64] VarInt(var[56]) -> 1[64]
  769:[68] AddInt(v1=0[60], v2=1[64]) -> 1[60]
  770:[64] PutInt(var[48], value=1[60])
  773:[60] FreeStack(value=0, discard=4)
  777:[56] GotoWord(jump=702)
  702:[56] VarInt(var[52]) -> 1[56]
  705:[60] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][60]
  708:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  709:[64] GeInt(v1=1[56], v2=5[60]) -> false[56]
  710:[57] GotoFalseWord(jump=717, if_false=false[56])
  717:[56] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][56]
  720:[68] VarInt(var[52]) -> 1[68]
  723:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=1[68]) -> ref(1,5,12)=2[56]
  726:[68] GetInt(v1=ref(1,5,12)[56], fld=0) -> 2[56]
  729:[60] VarInt(var[52]) -> 1[60]
  732:[64] ConstInt(val=1) -> 1[64]
  737:[68] AddInt(v1=1[60], v2=1[64]) -> 2[60]
  738:[64] PutInt(var[52], value=2[60])
  741:[60] VarInt(var[56]) -> 2[60]
  744:[64] FreeStack(value=4, discard=8)
  748:[60] VarInt(var[56]) -> 2[60]
  751:[64] ConvBoolFromInt(v1=2[60]) -> true[60]
  752:[61] Not(v1=true[60]) -> false[60]
  753:[61] GotoFalseWord(jump=763, if_false=false[60])
  763:[60] VarInt(var[48]) -> 1[60]
  766:[64] VarInt(var[56]) -> 2[64]
  769:[68] AddInt(v1=1[60], v2=2[64]) -> 3[60]
  770:[64] PutInt(var[48], value=3[60])
  773:[60] FreeStack(value=0, discard=4)
  777:[56] GotoWord(jump=702)
  702:[56] VarInt(var[52]) -> 2[56]
  705:[60] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][60]
  708:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  709:[64] GeInt(v1=2[56], v2=5[60]) -> false[56]
  710:[57] GotoFalseWord(jump=717, if_false=false[56])
  717:[56] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][56]
  720:[68] VarInt(var[52]) -> 2[68]
  723:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=2[68]) -> ref(1,5,16)=3[56]
  726:[68] GetInt(v1=ref(1,5,16)[56], fld=0) -> 3[56]
  729:[60] VarInt(var[52]) -> 2[60]
  732:[64] ConstInt(val=1) -> 1[64]
  737:[68] AddInt(v1=2[60], v2=1[64]) -> 3[60]
  738:[64] PutInt(var[52], value=3[60])
  741:[60] VarInt(var[56]) -> 3[60]
  744:[64] FreeStack(value=4, discard=8)
  748:[60] VarInt(var[56]) -> 3[60]
  751:[64] ConvBoolFromInt(v1=3[60]) -> true[60]
  752:[61] Not(v1=true[60]) -> false[60]
  753:[61] GotoFalseWord(jump=763, if_false=false[60])
  763:[60] VarInt(var[48]) -> 3[60]
  766:[64] VarInt(var[56]) -> 3[64]
  769:[68] AddInt(v1=3[60], v2=3[64]) -> 6[60]
  770:[64] PutInt(var[48], value=6[60])
  773:[60] FreeStack(value=0, discard=4)
  777:[56] GotoWord(jump=702)
  702:[56] VarInt(var[52]) -> 3[56]
  705:[60] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][60]
  708:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  709:[64] GeInt(v1=3[56], v2=5[60]) -> false[56]
  710:[57] GotoFalseWord(jump=717, if_false=false[56])
  717:[56] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][56]
  720:[68] VarInt(var[52]) -> 3[68]
  723:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=3[68]) -> ref(1,5,20)=4[56]
  726:[68] GetInt(v1=ref(1,5,20)[56], fld=0) -> 4[56]
  729:[60] VarInt(var[52]) -> 3[60]
  732:[64] ConstInt(val=1) -> 1[64]
  737:[68] AddInt(v1=3[60], v2=1[64]) -> 4[60]
  738:[64] PutInt(var[52], value=4[60])
  741:[60] VarInt(var[56]) -> 4[60]
  744:[64] FreeStack(value=4, discard=8)
  748:[60] VarInt(var[56]) -> 4[60]
  751:[64] ConvBoolFromInt(v1=4[60]) -> true[60]
  752:[61] Not(v1=true[60]) -> false[60]
  753:[61] GotoFalseWord(jump=763, if_false=false[60])
  763:[60] VarInt(var[48]) -> 6[60]
  766:[64] VarInt(var[56]) -> 4[64]
  769:[68] AddInt(v1=6[60], v2=4[64]) -> 10[60]
  770:[64] PutInt(var[48], value=10[60])
  773:[60] FreeStack(value=0, discard=4)
  777:[56] GotoWord(jump=702)
  702:[56] VarInt(var[52]) -> 4[56]
  705:[60] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][60]
  708:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  709:[64] GeInt(v1=4[56], v2=5[60]) -> false[56]
  710:[57] GotoFalseWord(jump=717, if_false=false[56])
  717:[56] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][56]
  720:[68] VarInt(var[52]) -> 4[68]
  723:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=4[68]) -> ref(1,5,24)=5[56]
  726:[68] GetInt(v1=ref(1,5,24)[56], fld=0) -> 5[56]
  729:[60] VarInt(var[52]) -> 4[60]
  732:[64] ConstInt(val=1) -> 1[64]
  737:[68] AddInt(v1=4[60], v2=1[64]) -> 5[60]
  738:[64] PutInt(var[52], value=5[60])
  741:[60] VarInt(var[56]) -> 5[60]
  744:[64] FreeStack(value=4, discard=8)
  748:[60] VarInt(var[56]) -> 5[60]
  751:[64] ConvBoolFromInt(v1=5[60]) -> true[60]
  752:[61] Not(v1=true[60]) -> false[60]
  753:[61] GotoFalseWord(jump=763, if_false=false[60])
  763:[60] VarInt(var[48]) -> 10[60]
  766:[64] VarInt(var[56]) -> 5[64]
  769:[68] AddInt(v1=10[60], v2=5[64]) -> 15[60]
  770:[64] PutInt(var[48], value=15[60])
  773:[60] FreeStack(value=0, discard=4)
  777:[56] GotoWord(jump=702)
  702:[56] VarInt(var[52]) -> 5[56]
  705:[60] VarVector(var[32]) -> ref(1,1,4)=[1,2,3,4,5][60]
  708:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  709:[64] GeInt(v1=5[56], v2=5[60]) -> true[56]
  710:[57] GotoFalseWord(jump=717, if_false=true[56])
  713:[56] ConvIntFromNull() -> -2147483648[56]
  714:[60] GotoWord(jump=748)
  748:[60] VarInt(var[56]) -> -2147483648[60]
  751:[64] ConvBoolFromInt(v1=-2147483648[60]) -> false[60]
  752:[61] Not(v1=false[60]) -> true[60]
  753:[61] GotoFalseWord(jump=763, if_false=true[60])
  756:[60] FreeStack(value=0, discard=4)
  760:[56] GotoWord(jump=780)
  780:[56] FreeStack(value=0, discard=4)
  784:[52] VarInt(var[48]) -> 15[52]
  787:[56] Return(ret=992[44], value=4, discard=24) -> 15[32]
  992:[36] VarInt(var[32]) -> 15[36]
  995:[40] ConstInt(val=15) -> 15[40]
 1000:[44] EqInt(v1=15[36], v2=15[40]) -> true[36]
 1001:[37] GotoFalseWord(jump=1007, if_false=true[36])
 1004:[36] GotoWord(jump=1057)
 1057:[36] FreeText(var[8])
 1060:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
