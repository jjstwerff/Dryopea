fn sum(v: vector<integer>) -> integer { t = 0; for i in v { t += i }; t}

pub fn test() {
    test_value = {sum([1, 2, 3, 4, 5])};
    assert(
        test_value == 15,
        "Test failed {test_value} != 15"
    );
}
Type 12:vector<integer>[4]:Vector(0)

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn sum(v:vector<integer>) -> integer {#1 block
  t:integer = 0i32;
  {#2 for
    i#index:integer = 0i32;
    loop {#3 for loop
      i:integer = if OpGeInt(i#index, OpLengthVector(v)) OpConvIntFromNull() else {#4 iter next
        _res_1:integer = OpGetInt(OpGetVector(v, 4i32, i#index), 0i32);
        i#index:integer = OpAddInt(i#index, 1i32);
        _res_1;
      }#4:integer;
      if OpNot(OpConvBoolFromInt(i)) break(0) else null;
      {#5 block
        t:integer = OpAddInt(t, i);
      }#5;
    }#3;
  }#2;
  t;
}#1:integer

byte-code for sum_vector:sum(v: vector<integer>[0]) -> integer
 691[12]: return-address
 691[16]: ConstInt(val=0) -> integer
 696[20]: ConstInt(val=0) -> integer
 701[24]: VarInt(var[20]) -> integer
 704[28]: VarVector(var[0]) -> vector type=vector<integer>[4]:Vector(0)[12]
 707[40]: LengthVector(r: vector) -> integer
 708[32]: GeInt(v1: integer, v2: integer) -> boolean
 709[25]: GotoFalseWord(jump=716, if_false: boolean)
 712[24]: ConvIntFromNull() -> integer
 713[28]: GotoWord(jump=747)
 716[24]: VarVector(var[0]) -> vector type=vector<integer>[4]:Vector(0)[12]
 719[36]: VarInt(var[20]) -> integer
 722[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 725[36]: GetInt(v1: reference, fld=0) -> integer
 728[28]: VarInt(var[20]) -> integer
 731[32]: ConstInt(val=1) -> integer
 736[36]: AddInt(v1: integer, v2: integer) -> integer
 737[32]: PutInt(var[20], value: integer)
 740[28]: VarInt(var[24]) -> integer
 743[32]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 747[28]: VarInt(var[24]) -> integer
 750[32]: ConvBoolFromInt(v1: integer) -> boolean
 751[29]: Not(v1: boolean) -> boolean
 752[29]: GotoFalseWord(jump=762, if_false: boolean)
 755[28]: FreeStack(value=0, discard=4)
 759[24]: GotoWord(jump=779)
 762[28]: VarInt(var[16]) -> integer
 765[32]: VarInt(var[24]) -> integer
 768[36]: AddInt(v1: integer, v2: integer) -> integer
 769[32]: PutInt(var[16], value: integer)
 772[28]: FreeStack(value=0, discard=4)
 776[24]: GotoWord(jump=701)
 779[24]: FreeStack(value=0, discard=4)
 783[20]: VarInt(var[16]) -> integer
 786[24]: Return(ret=12, value=4, discard=24) type=integer[4]:Base[0]

fn test() {#1 block
  __ref_1:main_vector<integer> = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    sum({#3 vector
      OpDatabase(__ref_1, 13i32);
      _vec_2:vector<integer> = OpGetField(__ref_1, 4i32, 65535i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 3i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 4i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 5i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _vec_2;
    }#3:vector<integer>);
  }#2:integer;
  if OpEqInt(test_value, 15i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 15");
    __work_1;
  }#4:text);
}#1

byte-code for sum_vector:test()
 792[0]: return-address
 792[4]: ConvRefFromNull() -> reference
 793[16]: Text()
 794[40]: Database(var[4], db_tp=13) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 799[40]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 802[52]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 805[52]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 808[64]: ConstInt(val=0) -> integer
 813[68]: SetInt(v1: reference, fld=4, val: integer)
 816[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 819[64]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 824[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 827[76]: ConstInt(val=1) -> integer
 832[80]: SetInt(v1: reference, fld=0, val: integer)
 835[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 838[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 841[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 846[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 849[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 854[76]: PutRef(var[52], value: reference)
 857[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 860[76]: ConstInt(val=2) -> integer
 865[80]: SetInt(v1: reference, fld=0, val: integer)
 868[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 871[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 874[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 879[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 882[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 887[76]: PutRef(var[52], value: reference)
 890[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 893[76]: ConstInt(val=3) -> integer
 898[80]: SetInt(v1: reference, fld=0, val: integer)
 901[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 904[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 907[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 912[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 915[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 920[76]: PutRef(var[52], value: reference)
 923[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 926[76]: ConstInt(val=4) -> integer
 931[80]: SetInt(v1: reference, fld=0, val: integer)
 934[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 937[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 940[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 945[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 948[76]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 953[76]: PutRef(var[52], value: reference)
 956[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 959[76]: ConstInt(val=5) -> integer
 964[80]: SetInt(v1: reference, fld=0, val: integer)
 967[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 970[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 973[88]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 978[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[12]
 981[76]: FreeStack(value=12, discard=36) type=Variable[12]:{name:text[4], value:text[8]}[6]
 985[52]: Call(size=0, to=691)
 992[44]: VarInt(var[40]) -> integer
 995[48]: ConstInt(val=15) -> integer
1000[52]: EqInt(v1: integer, v2: integer) -> boolean
1001[45]: GotoFalseWord(jump=1007, if_false: boolean)
1004[44]: GotoWord(jump=1057)
1007[44]: ClearText(var[16])
1010[44]: ConstText(_value="Test failed ") -> text
1024[60]: AppendText(var[16], v1: text)
1027[44]: VarInt(var[40]) -> integer
1030[48]: ConstInt(val=0) -> integer
1035[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1042[44]: ConstText(_value=" != 15") -> text
1050[60]: AppendText(var[16], v1: text)
1053[44]: VarText(var[16]) -> text
1056[60]: Panic(message: text)
1057[44]: FreeText(var[16])
1060[44]: Return(ret=0, value=0, discard=44)

Execute test:
  792:[8] ConvRefFromNull() -> ref(65535,0,0)[8]
  793:[20] Text()
  794:[44] Database(var[8], db_tp=13)
  799:[44] VarRef(var[8]) -> ref(1,1,0)={}[44]
  802:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  805:[56] VarRef(var[8]) -> ref(1,1,0)={}[56]
  808:[68] ConstInt(val=0) -> 0[68]
  813:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  816:[56] VarVector(var[44]) -> ref(1,1,4)=[][56]
  819:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=12, fld=65535) -> ref(1,9,8)[56]
  824:[68] VarRef(var[56]) -> ref(1,9,8)=false[68]
  827:[80] ConstInt(val=1) -> 1[80]
  832:[84] SetInt(v1=ref(1,9,8)[68], fld=0, val=1[80])
  835:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  838:[80] VarRef(var[56]) -> ref(1,9,8)=true[80]
  841:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,8)[80], parent_tp=12, fld=65535)
  846:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  849:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,12)[68]
  854:[80] PutRef(var[56], value=ref(1,9,12)[68])
  857:[68] VarRef(var[56]) -> ref(1,9,12)=false[68]
  860:[80] ConstInt(val=2) -> 2[80]
  865:[84] SetInt(v1=ref(1,9,12)[68], fld=0, val=2[80])
  868:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  871:[80] VarRef(var[56]) -> ref(1,9,12)=true[80]
  874:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,12)[80], parent_tp=12, fld=65535)
  879:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  882:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,16)[68]
  887:[80] PutRef(var[56], value=ref(1,9,16)[68])
  890:[68] VarRef(var[56]) -> ref(1,9,16)=false[68]
  893:[80] ConstInt(val=3) -> 3[80]
  898:[84] SetInt(v1=ref(1,9,16)[68], fld=0, val=3[80])
  901:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3][68]
  904:[80] VarRef(var[56]) -> ref(1,9,16)=true[80]
  907:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,16)[80], parent_tp=12, fld=65535)
  912:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3][68]
  915:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,20)[68]
  920:[80] PutRef(var[56], value=ref(1,9,20)[68])
  923:[68] VarRef(var[56]) -> ref(1,9,20)=false[68]
  926:[80] ConstInt(val=4) -> 4[80]
  931:[84] SetInt(v1=ref(1,9,20)[68], fld=0, val=4[80])
  934:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  937:[80] VarRef(var[56]) -> ref(1,9,20)=true[80]
  940:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,20)[80], parent_tp=12, fld=65535)
  945:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  948:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=12, fld=65535) -> ref(1,9,24)[68]
  953:[80] PutRef(var[56], value=ref(1,9,24)[68])
  956:[68] VarRef(var[56]) -> ref(1,9,24)=false[68]
  959:[80] ConstInt(val=5) -> 5[80]
  964:[84] SetInt(v1=ref(1,9,24)[68], fld=0, val=5[80])
  967:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  970:[80] VarRef(var[56]) -> ref(1,9,24)=true[80]
  973:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,24)[80], parent_tp=12, fld=65535)
  978:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  981:[80] FreeStack(value=12, discard=36)
  985:[56] Call(size=0, to=691)
  691:[60] ConstInt(val=0) -> 0[60]
  696:[64] ConstInt(val=0) -> 0[64]
  701:[68] VarInt(var[64]) -> 0[68]
  704:[72] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][72]
  707:[84] LengthVector(r=ref(1,1,4)=true[72]) -> 5[72]
  708:[76] GeInt(v1=0[68], v2=5[72]) -> false[68]
  709:[69] GotoFalseWord(jump=716, if_false=false[68])
  716:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  719:[80] VarInt(var[64]) -> 0[80]
  722:[84] GetVector(r=ref(1,1,4)=true[68], size=4, index=0[80]) -> ref(1,9,8)=1[68]
  725:[80] GetInt(v1=ref(1,9,8)[68], fld=0) -> 1[68]
  728:[72] VarInt(var[64]) -> 0[72]
  731:[76] ConstInt(val=1) -> 1[76]
  736:[80] AddInt(v1=0[72], v2=1[76]) -> 1[72]
  737:[76] PutInt(var[64], value=1[72])
  740:[72] VarInt(var[68]) -> 1[72]
  743:[76] FreeStack(value=4, discard=8)
  747:[72] VarInt(var[68]) -> 1[72]
  750:[76] ConvBoolFromInt(v1=1[72]) -> true[72]
  751:[73] Not(v1=true[72]) -> false[72]
  752:[73] GotoFalseWord(jump=762, if_false=false[72])
  762:[72] VarInt(var[60]) -> 0[72]
  765:[76] VarInt(var[68]) -> 1[76]
  768:[80] AddInt(v1=0[72], v2=1[76]) -> 1[72]
  769:[76] PutInt(var[60], value=1[72])
  772:[72] FreeStack(value=0, discard=4)
  776:[68] GotoWord(jump=701)
  701:[68] VarInt(var[64]) -> 1[68]
  704:[72] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][72]
  707:[84] LengthVector(r=ref(1,1,4)=true[72]) -> 5[72]
  708:[76] GeInt(v1=1[68], v2=5[72]) -> false[68]
  709:[69] GotoFalseWord(jump=716, if_false=false[68])
  716:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  719:[80] VarInt(var[64]) -> 1[80]
  722:[84] GetVector(r=ref(1,1,4)=true[68], size=4, index=1[80]) -> ref(1,9,12)=2[68]
  725:[80] GetInt(v1=ref(1,9,12)[68], fld=0) -> 2[68]
  728:[72] VarInt(var[64]) -> 1[72]
  731:[76] ConstInt(val=1) -> 1[76]
  736:[80] AddInt(v1=1[72], v2=1[76]) -> 2[72]
  737:[76] PutInt(var[64], value=2[72])
  740:[72] VarInt(var[68]) -> 2[72]
  743:[76] FreeStack(value=4, discard=8)
  747:[72] VarInt(var[68]) -> 2[72]
  750:[76] ConvBoolFromInt(v1=2[72]) -> true[72]
  751:[73] Not(v1=true[72]) -> false[72]
  752:[73] GotoFalseWord(jump=762, if_false=false[72])
  762:[72] VarInt(var[60]) -> 1[72]
  765:[76] VarInt(var[68]) -> 2[76]
  768:[80] AddInt(v1=1[72], v2=2[76]) -> 3[72]
  769:[76] PutInt(var[60], value=3[72])
  772:[72] FreeStack(value=0, discard=4)
  776:[68] GotoWord(jump=701)
  701:[68] VarInt(var[64]) -> 2[68]
  704:[72] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][72]
  707:[84] LengthVector(r=ref(1,1,4)=true[72]) -> 5[72]
  708:[76] GeInt(v1=2[68], v2=5[72]) -> false[68]
  709:[69] GotoFalseWord(jump=716, if_false=false[68])
  716:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  719:[80] VarInt(var[64]) -> 2[80]
  722:[84] GetVector(r=ref(1,1,4)=true[68], size=4, index=2[80]) -> ref(1,9,16)=3[68]
  725:[80] GetInt(v1=ref(1,9,16)[68], fld=0) -> 3[68]
  728:[72] VarInt(var[64]) -> 2[72]
  731:[76] ConstInt(val=1) -> 1[76]
  736:[80] AddInt(v1=2[72], v2=1[76]) -> 3[72]
  737:[76] PutInt(var[64], value=3[72])
  740:[72] VarInt(var[68]) -> 3[72]
  743:[76] FreeStack(value=4, discard=8)
  747:[72] VarInt(var[68]) -> 3[72]
  750:[76] ConvBoolFromInt(v1=3[72]) -> true[72]
  751:[73] Not(v1=true[72]) -> false[72]
  752:[73] GotoFalseWord(jump=762, if_false=false[72])
  762:[72] VarInt(var[60]) -> 3[72]
  765:[76] VarInt(var[68]) -> 3[76]
  768:[80] AddInt(v1=3[72], v2=3[76]) -> 6[72]
  769:[76] PutInt(var[60], value=6[72])
  772:[72] FreeStack(value=0, discard=4)
  776:[68] GotoWord(jump=701)
  701:[68] VarInt(var[64]) -> 3[68]
  704:[72] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][72]
  707:[84] LengthVector(r=ref(1,1,4)=true[72]) -> 5[72]
  708:[76] GeInt(v1=3[68], v2=5[72]) -> false[68]
  709:[69] GotoFalseWord(jump=716, if_false=false[68])
  716:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  719:[80] VarInt(var[64]) -> 3[80]
  722:[84] GetVector(r=ref(1,1,4)=true[68], size=4, index=3[80]) -> ref(1,9,20)=4[68]
  725:[80] GetInt(v1=ref(1,9,20)[68], fld=0) -> 4[68]
  728:[72] VarInt(var[64]) -> 3[72]
  731:[76] ConstInt(val=1) -> 1[76]
  736:[80] AddInt(v1=3[72], v2=1[76]) -> 4[72]
  737:[76] PutInt(var[64], value=4[72])
  740:[72] VarInt(var[68]) -> 4[72]
  743:[76] FreeStack(value=4, discard=8)
  747:[72] VarInt(var[68]) -> 4[72]
  750:[76] ConvBoolFromInt(v1=4[72]) -> true[72]
  751:[73] Not(v1=true[72]) -> false[72]
  752:[73] GotoFalseWord(jump=762, if_false=false[72])
  762:[72] VarInt(var[60]) -> 6[72]
  765:[76] VarInt(var[68]) -> 4[76]
  768:[80] AddInt(v1=6[72], v2=4[76]) -> 10[72]
  769:[76] PutInt(var[60], value=10[72])
  772:[72] FreeStack(value=0, discard=4)
  776:[68] GotoWord(jump=701)
  701:[68] VarInt(var[64]) -> 4[68]
  704:[72] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][72]
  707:[84] LengthVector(r=ref(1,1,4)=true[72]) -> 5[72]
  708:[76] GeInt(v1=4[68], v2=5[72]) -> false[68]
  709:[69] GotoFalseWord(jump=716, if_false=false[68])
  716:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  719:[80] VarInt(var[64]) -> 4[80]
  722:[84] GetVector(r=ref(1,1,4)=true[68], size=4, index=4[80]) -> ref(1,9,24)=5[68]
  725:[80] GetInt(v1=ref(1,9,24)[68], fld=0) -> 5[68]
  728:[72] VarInt(var[64]) -> 4[72]
  731:[76] ConstInt(val=1) -> 1[76]
  736:[80] AddInt(v1=4[72], v2=1[76]) -> 5[72]
  737:[76] PutInt(var[64], value=5[72])
  740:[72] VarInt(var[68]) -> 5[72]
  743:[76] FreeStack(value=4, discard=8)
  747:[72] VarInt(var[68]) -> 5[72]
  750:[76] ConvBoolFromInt(v1=5[72]) -> true[72]
  751:[73] Not(v1=true[72]) -> false[72]
  752:[73] GotoFalseWord(jump=762, if_false=false[72])
  762:[72] VarInt(var[60]) -> 10[72]
  765:[76] VarInt(var[68]) -> 5[76]
  768:[80] AddInt(v1=10[72], v2=5[76]) -> 15[72]
  769:[76] PutInt(var[60], value=15[72])
  772:[72] FreeStack(value=0, discard=4)
  776:[68] GotoWord(jump=701)
  701:[68] VarInt(var[64]) -> 5[68]
  704:[72] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][72]
  707:[84] LengthVector(r=ref(1,1,4)=true[72]) -> 5[72]
  708:[76] GeInt(v1=5[68], v2=5[72]) -> true[68]
  709:[69] GotoFalseWord(jump=716, if_false=true[68])
  712:[68] ConvIntFromNull() -> -2147483648[68]
  713:[72] GotoWord(jump=747)
  747:[72] VarInt(var[68]) -> -2147483648[72]
  750:[76] ConvBoolFromInt(v1=-2147483648[72]) -> false[72]
  751:[73] Not(v1=false[72]) -> true[72]
  752:[73] GotoFalseWord(jump=762, if_false=true[72])
  755:[72] FreeStack(value=0, discard=4)
  759:[68] GotoWord(jump=779)
  779:[68] FreeStack(value=0, discard=4)
  783:[64] VarInt(var[60]) -> 15[64]
  786:[68] Return(ret=992[56], value=4, discard=24) -> 15[44]
  992:[48] VarInt(var[44]) -> 15[48]
  995:[52] ConstInt(val=15) -> 15[52]
 1000:[56] EqInt(v1=15[48], v2=15[52]) -> true[48]
 1001:[49] GotoFalseWord(jump=1007, if_false=true[48])
 1004:[48] GotoWord(jump=1057)
 1057:[48] FreeText(var[20])
 1060:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
