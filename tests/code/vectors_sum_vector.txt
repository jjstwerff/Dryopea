fn sum(v: vector<integer>) -> integer { t = 0; for i in v { t += i }; t}

pub fn test() {
    test_value = {sum([1, 2, 3, 4, 5])};
    assert(
        test_value == 15,
        "Test failed {test_value} != 15"
    );
}
Type 17:vector<integer>[4]:Vector(0)

Type 18:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn sum(v:vector<integer>) -> integer {#block(1):integer
  t(1):integer = 0i32;
  {#For block(2):void
    _vector_1(2):vector<integer>["v"] = v(0);
    i#index(2):integer = -1i32;
    loop {#For loop_3
      i(3):integer = {#iter next(4):integer
        i#index(2):integer = OpAddInt(i#index(2), 1i32);
        OpGetInt(OpGetVector(_vector_1(2), 4i32, i#index(2)), 0i32);
      }#iter next(4):integer;
      if OpNot(OpConvBoolFromInt(i(3))) {#break(5):void
        break(0);
      }#break(5):void else null;
      {#block(6):void
        t(1):integer = OpAddInt(t(1), i(3));
      }#block(6):void;
    }#For loop_3;
  }#For block(2):void;
  t(1);
}#block(1):integer

byte-code for sum_vector:sum(v: vector<integer>[4]) [1119] -> integer
   0[16]: return-address
   0[20]: ConstInt(val=0) -> integer var=t[20]:integer
   5[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[17] var=v[4]:vector<integer>
   8[36]: ConstInt(val=-1) -> integer var=i#index[36]:integer
  13[40]: VarInt(var[36]) -> integer var=i#index[36]:integer
  16[44]: ConstInt(val=1) -> integer
  21[48]: AddInt(v1: integer, v2: integer) -> integer
  22[44]: PutInt(var[36], value: integer)
  25[40]: VarVector(var[24]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vector_1[24]:vector<integer>["v"]
  28[52]: VarInt(var[36]) -> integer var=i#index[36]:integer
  31[56]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
  34[52]: GetInt(v1: ref(reference), fld=0) -> integer
  37[44]: VarInt(var[40]) -> integer var=i[40]:integer
  40[48]: ConvBoolFromInt(v1: integer) -> boolean
  41[45]: Not(v1: boolean) -> boolean
  42[45]: GotoFalseWord(jump=52, if_false: boolean)
  45[44]: FreeStack(value=0, discard=4)
  49[40]: GotoWord(jump=69)
  52[44]: VarInt(var[20]) -> integer var=t[20]:integer
  55[48]: VarInt(var[40]) -> integer var=i[40]:integer
  58[52]: AddInt(v1: integer, v2: integer) -> integer
  59[48]: PutInt(var[20], value: integer)
  62[44]: FreeStack(value=0, discard=4)
  66[40]: GotoWord(jump=13)
  69[40]: FreeStack(value=0, discard=16)
  73[24]: VarInt(var[20]) -> integer var=t[20]:integer
  76[28]: Return(ret=12, value=4, discard=24) type=integer[4]:Base[0]

fn test() {#block(1):void
  __ref_1(1):ref(main_vector<integer>) = null;
  __work_1(1):text = "";
  test_value(1):integer = {#block(2):integer
    sum({#Vector(3):vector<integer>
      OpDatabase(__ref_1(1), 18i32);
      _vec_1(3):vector<integer>["__ref_1"] = OpGetField(__ref_1(1), 4i32, 17i32);
      OpSetInt(__ref_1(1), 4i32, 0i32);
      _elm_2(3):ref(boolean)["_vec_1"] = OpNewRecord(_vec_1(3), 17i32, 65535i32);
      OpSetInt(_elm_2(3), 0i32, 1i32);
      OpFinishRecord(_vec_1(3), _elm_2(3), 17i32, 65535i32);
      _elm_2(3):ref(boolean)["_vec_1"] = OpNewRecord(_vec_1(3), 17i32, 65535i32);
      OpSetInt(_elm_2(3), 0i32, 2i32);
      OpFinishRecord(_vec_1(3), _elm_2(3), 17i32, 65535i32);
      _elm_2(3):ref(boolean)["_vec_1"] = OpNewRecord(_vec_1(3), 17i32, 65535i32);
      OpSetInt(_elm_2(3), 0i32, 3i32);
      OpFinishRecord(_vec_1(3), _elm_2(3), 17i32, 65535i32);
      _elm_2(3):ref(boolean)["_vec_1"] = OpNewRecord(_vec_1(3), 17i32, 65535i32);
      OpSetInt(_elm_2(3), 0i32, 4i32);
      OpFinishRecord(_vec_1(3), _elm_2(3), 17i32, 65535i32);
      _elm_2(3):ref(boolean)["_vec_1"] = OpNewRecord(_vec_1(3), 17i32, 65535i32);
      OpSetInt(_elm_2(3), 0i32, 5i32);
      OpFinishRecord(_vec_1(3), _elm_2(3), 17i32, 65535i32);
      _vec_1(3);
    }#Vector(3):vector<integer>);
  }#block(2):integer;
  if OpEqInt(test_value(1), 15i32) null else OpPanic({#Formatted string(4):text
    __work_1(1):text = "Test failed ";
    OpFormatInt(__work_1(1), test_value(1), 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1(1), " != 15");
    __work_1(1);
  }#Formatted string(4):text);
  OpFreeText(__work_1(1));
  OpFreeRef(__ref_1(1));
}#block(1):void

byte-code for sum_vector:test() [1201]
   0[4]: return-address
   0[8]: ConvRefFromNull() -> ref(reference) var=__ref_1[8]:ref(main_vector<integer>)
   1[20]: Text() var=__work_1[20]:text
   2[44]: Database(var[8], db_tp=18) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=test_value[44]:integer
   7[44]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_1[8]:ref(main_vector<integer>)
  10[56]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=vector<integer>[4]:Vector(0)[17]
  13[56]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_1[8]:ref(main_vector<integer>)
  16[68]: ConstInt(val=0) -> integer
  21[72]: SetInt(v1: ref(reference), fld=4, val: integer)
  24[56]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
  27[68]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
  32[68]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
  35[80]: ConstInt(val=1) -> integer
  40[84]: SetInt(v1: ref(reference), fld=0, val: integer)
  43[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
  46[80]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
  49[92]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
  54[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
  57[80]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
  62[80]: PutRef(var[56], value: ref(reference))
  65[68]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
  68[80]: ConstInt(val=2) -> integer
  73[84]: SetInt(v1: ref(reference), fld=0, val: integer)
  76[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
  79[80]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
  82[92]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
  87[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
  90[80]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
  95[80]: PutRef(var[56], value: ref(reference))
  98[68]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
 101[80]: ConstInt(val=3) -> integer
 106[84]: SetInt(v1: ref(reference), fld=0, val: integer)
 109[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
 112[80]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
 115[92]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 120[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
 123[80]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
 128[80]: PutRef(var[56], value: ref(reference))
 131[68]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
 134[80]: ConstInt(val=4) -> integer
 139[84]: SetInt(v1: ref(reference), fld=0, val: integer)
 142[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
 145[80]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
 148[92]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 153[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
 156[80]: NewRecord(data: ref(reference), parent_tp=17, fld=65535) -> ref(reference)
 161[80]: PutRef(var[56], value: ref(reference))
 164[68]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
 167[80]: ConstInt(val=5) -> integer
 172[84]: SetInt(v1: ref(reference), fld=0, val: integer)
 175[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
 178[80]: VarRef(var[56]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[56]:ref(boolean)["_vec_1"]
 181[92]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=17, fld=65535)
 186[68]: VarVector(var[44]) -> vector type=vector<integer>[4]:Vector(0)[17] var=_vec_1[44]:vector<integer>["__ref_1"]
 189[80]: FreeStack(value=12, discard=36)
 193[56]: Call(size=0, to=1119)
 200[48]: VarInt(var[44]) -> integer var=test_value[44]:integer
 203[52]: ConstInt(val=15) -> integer
 208[56]: EqInt(v1: integer, v2: integer) -> boolean
 209[49]: GotoFalseWord(jump=215, if_false: boolean)
 212[48]: GotoWord(jump=265)
 215[48]: ClearText(var[20]) var=__work_1[20]:text
 218[48]: ConstText(_value="Test failed ") -> text
 232[64]: AppendText(var[20], v1: text)
 235[48]: VarInt(var[44]) -> integer var=test_value[44]:integer
 238[52]: ConstInt(val=0) -> integer
 243[56]: FormatInt(var[20], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 250[48]: ConstText(_value=" != 15") -> text
 258[64]: AppendText(var[20], v1: text)
 261[48]: VarText(var[20]) -> text var=__work_1[20]:text
 264[64]: Panic(message: text)
 265[48]: FreeText(var[20])
 268[48]: VarRef(var[8]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[18] var=__ref_1[8]:ref(main_vector<integer>)
 271[60]: FreeRef(v1: ref(reference))
 272[48]: Return(ret=0, value=0, discard=44)

Execute test:
    0:[8] ConvRefFromNull() -> ref(1,0,0)[8]
    1:[20] Text()
    2:[44] Database(var[8], db_tp=18)
    7:[44] VarRef(var[8]) -> ref(1,1,0)={}[44]
   10:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)=[][44]
   13:[56] VarRef(var[8]) -> ref(1,1,0)={}[56]
   16:[68] ConstInt(val=0) -> 0[68]
   21:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
   24:[56] VarVector(var[44]) -> ref(1,1,4)=[][56]
   27:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=17, fld=65535) -> ref(1,9,8)[56]
   32:[68] VarRef(var[56]) -> ref(1,9,8)=false[68]
   35:[80] ConstInt(val=1) -> 1[80]
   40:[84] SetInt(v1=ref(1,9,8)[68], fld=0, val=1[80])
   43:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
   46:[80] VarRef(var[56]) -> ref(1,9,8)=true[80]
   49:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,8)[80], parent_tp=17, fld=65535)
   54:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
   57:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=17, fld=65535) -> ref(1,9,12)[68]
   62:[80] PutRef(var[56], value=ref(1,9,12)[68])
   65:[68] VarRef(var[56]) -> ref(1,9,12)=false[68]
   68:[80] ConstInt(val=2) -> 2[80]
   73:[84] SetInt(v1=ref(1,9,12)[68], fld=0, val=2[80])
   76:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
   79:[80] VarRef(var[56]) -> ref(1,9,12)=true[80]
   82:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,12)[80], parent_tp=17, fld=65535)
   87:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
   90:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=17, fld=65535) -> ref(1,9,16)[68]
   95:[80] PutRef(var[56], value=ref(1,9,16)[68])
   98:[68] VarRef(var[56]) -> ref(1,9,16)=false[68]
  101:[80] ConstInt(val=3) -> 3[80]
  106:[84] SetInt(v1=ref(1,9,16)[68], fld=0, val=3[80])
  109:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3][68]
  112:[80] VarRef(var[56]) -> ref(1,9,16)=true[80]
  115:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,16)[80], parent_tp=17, fld=65535)
  120:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3][68]
  123:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=17, fld=65535) -> ref(1,9,20)[68]
  128:[80] PutRef(var[56], value=ref(1,9,20)[68])
  131:[68] VarRef(var[56]) -> ref(1,9,20)=false[68]
  134:[80] ConstInt(val=4) -> 4[80]
  139:[84] SetInt(v1=ref(1,9,20)[68], fld=0, val=4[80])
  142:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  145:[80] VarRef(var[56]) -> ref(1,9,20)=true[80]
  148:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,20)[80], parent_tp=17, fld=65535)
  153:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4][68]
  156:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=17, fld=65535) -> ref(1,9,24)[68]
  161:[80] PutRef(var[56], value=ref(1,9,24)[68])
  164:[68] VarRef(var[56]) -> ref(1,9,24)=false[68]
  167:[80] ConstInt(val=5) -> 5[80]
  172:[84] SetInt(v1=ref(1,9,24)[68], fld=0, val=5[80])
  175:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  178:[80] VarRef(var[56]) -> ref(1,9,24)=true[80]
  181:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,9,24)[80], parent_tp=17, fld=65535)
  186:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][68]
  189:[80] FreeStack(value=12, discard=36)
  193:[56] Call(size=0, to=1119)
 1119:[60] ConstInt(val=0) -> 0[60]
 1124:[64] VarVector(var[44]) -> ref(1,1,4)=[1,2,3,4,5][64]
 1127:[76] ConstInt(val=-1) -> -1[76]
 1132:[80] VarInt(var[76]) -> -1[80]
 1135:[84] ConstInt(val=1) -> 1[84]
 1140:[88] AddInt(v1=-1[80], v2=1[84]) -> 0[80]
 1141:[84] PutInt(var[76], value=0[80])
 1144:[80] VarVector(var[64]) -> ref(1,1,4)=[1,2,3,4,5][80]
 1147:[92] VarInt(var[76]) -> 0[92]
 1150:[96] GetVector(r=ref(1,1,4)[80], size=4, index=0[92]) -> ref(1,9,8)=1[80]
 1153:[92] GetInt(v1=ref(1,9,8)[80], fld=0) -> 1[80]
 1156:[84] VarInt(var[80]) -> 1[84]
 1159:[88] ConvBoolFromInt(v1=1[84]) -> true[84]
 1160:[85] Not(v1=true[84]) -> false[84]
 1161:[85] GotoFalseWord(jump=1171, if_false=false[84])
 1171:[84] VarInt(var[60]) -> 0[84]
 1174:[88] VarInt(var[80]) -> 1[88]
 1177:[92] AddInt(v1=0[84], v2=1[88]) -> 1[84]
 1178:[88] PutInt(var[60], value=1[84])
 1181:[84] FreeStack(value=0, discard=4)
 1185:[80] GotoWord(jump=1132)
 1132:[80] VarInt(var[76]) -> 0[80]
 1135:[84] ConstInt(val=1) -> 1[84]
 1140:[88] AddInt(v1=0[80], v2=1[84]) -> 1[80]
 1141:[84] PutInt(var[76], value=1[80])
 1144:[80] VarVector(var[64]) -> ref(1,1,4)=[1,2,3,4,5][80]
 1147:[92] VarInt(var[76]) -> 1[92]
 1150:[96] GetVector(r=ref(1,1,4)[80], size=4, index=1[92]) -> ref(1,9,12)=2[80]
 1153:[92] GetInt(v1=ref(1,9,12)[80], fld=0) -> 2[80]
 1156:[84] VarInt(var[80]) -> 2[84]
 1159:[88] ConvBoolFromInt(v1=2[84]) -> true[84]
 1160:[85] Not(v1=true[84]) -> false[84]
 1161:[85] GotoFalseWord(jump=1171, if_false=false[84])
 1171:[84] VarInt(var[60]) -> 1[84]
 1174:[88] VarInt(var[80]) -> 2[88]
 1177:[92] AddInt(v1=1[84], v2=2[88]) -> 3[84]
 1178:[88] PutInt(var[60], value=3[84])
 1181:[84] FreeStack(value=0, discard=4)
 1185:[80] GotoWord(jump=1132)
 1132:[80] VarInt(var[76]) -> 1[80]
 1135:[84] ConstInt(val=1) -> 1[84]
 1140:[88] AddInt(v1=1[80], v2=1[84]) -> 2[80]
 1141:[84] PutInt(var[76], value=2[80])
 1144:[80] VarVector(var[64]) -> ref(1,1,4)=[1,2,3,4,5][80]
 1147:[92] VarInt(var[76]) -> 2[92]
 1150:[96] GetVector(r=ref(1,1,4)[80], size=4, index=2[92]) -> ref(1,9,16)=3[80]
 1153:[92] GetInt(v1=ref(1,9,16)[80], fld=0) -> 3[80]
 1156:[84] VarInt(var[80]) -> 3[84]
 1159:[88] ConvBoolFromInt(v1=3[84]) -> true[84]
 1160:[85] Not(v1=true[84]) -> false[84]
 1161:[85] GotoFalseWord(jump=1171, if_false=false[84])
 1171:[84] VarInt(var[60]) -> 3[84]
 1174:[88] VarInt(var[80]) -> 3[88]
 1177:[92] AddInt(v1=3[84], v2=3[88]) -> 6[84]
 1178:[88] PutInt(var[60], value=6[84])
 1181:[84] FreeStack(value=0, discard=4)
 1185:[80] GotoWord(jump=1132)
 1132:[80] VarInt(var[76]) -> 2[80]
 1135:[84] ConstInt(val=1) -> 1[84]
 1140:[88] AddInt(v1=2[80], v2=1[84]) -> 3[80]
 1141:[84] PutInt(var[76], value=3[80])
 1144:[80] VarVector(var[64]) -> ref(1,1,4)=[1,2,3,4,5][80]
 1147:[92] VarInt(var[76]) -> 3[92]
 1150:[96] GetVector(r=ref(1,1,4)[80], size=4, index=3[92]) -> ref(1,9,20)=4[80]
 1153:[92] GetInt(v1=ref(1,9,20)[80], fld=0) -> 4[80]
 1156:[84] VarInt(var[80]) -> 4[84]
 1159:[88] ConvBoolFromInt(v1=4[84]) -> true[84]
 1160:[85] Not(v1=true[84]) -> false[84]
 1161:[85] GotoFalseWord(jump=1171, if_false=false[84])
 1171:[84] VarInt(var[60]) -> 6[84]
 1174:[88] VarInt(var[80]) -> 4[88]
 1177:[92] AddInt(v1=6[84], v2=4[88]) -> 10[84]
 1178:[88] PutInt(var[60], value=10[84])
 1181:[84] FreeStack(value=0, discard=4)
 1185:[80] GotoWord(jump=1132)
 1132:[80] VarInt(var[76]) -> 3[80]
 1135:[84] ConstInt(val=1) -> 1[84]
 1140:[88] AddInt(v1=3[80], v2=1[84]) -> 4[80]
 1141:[84] PutInt(var[76], value=4[80])
 1144:[80] VarVector(var[64]) -> ref(1,1,4)=[1,2,3,4,5][80]
 1147:[92] VarInt(var[76]) -> 4[92]
 1150:[96] GetVector(r=ref(1,1,4)[80], size=4, index=4[92]) -> ref(1,9,24)=5[80]
 1153:[92] GetInt(v1=ref(1,9,24)[80], fld=0) -> 5[80]
 1156:[84] VarInt(var[80]) -> 5[84]
 1159:[88] ConvBoolFromInt(v1=5[84]) -> true[84]
 1160:[85] Not(v1=true[84]) -> false[84]
 1161:[85] GotoFalseWord(jump=1171, if_false=false[84])
 1171:[84] VarInt(var[60]) -> 10[84]
 1174:[88] VarInt(var[80]) -> 5[88]
 1177:[92] AddInt(v1=10[84], v2=5[88]) -> 15[84]
 1178:[88] PutInt(var[60], value=15[84])
 1181:[84] FreeStack(value=0, discard=4)
 1185:[80] GotoWord(jump=1132)
 1132:[80] VarInt(var[76]) -> 4[80]
 1135:[84] ConstInt(val=1) -> 1[84]
 1140:[88] AddInt(v1=4[80], v2=1[84]) -> 5[80]
 1141:[84] PutInt(var[76], value=5[80])
 1144:[80] VarVector(var[64]) -> ref(1,1,4)=[1,2,3,4,5][80]
 1147:[92] VarInt(var[76]) -> 5[92]
 1150:[96] GetVector(r=ref(1,1,4)[80], size=4, index=5[92]) -> ref(1,0,0)=null[80]
 1153:[92] GetInt(v1=ref(1,0,0)[80], fld=0) -> -2147483648[80]
 1156:[84] VarInt(var[80]) -> -2147483648[84]
 1159:[88] ConvBoolFromInt(v1=-2147483648[84]) -> false[84]
 1160:[85] Not(v1=false[84]) -> true[84]
 1161:[85] GotoFalseWord(jump=1171, if_false=true[84])
 1164:[84] FreeStack(value=0, discard=4)
 1168:[80] GotoWord(jump=1188)
 1188:[80] FreeStack(value=0, discard=16)
 1192:[64] VarInt(var[60]) -> 15[64]
 1195:[68] Return(ret=1401[56], value=4, discard=24) -> 15[44]
  200:[48] VarInt(var[44]) -> 15[48]
  203:[52] ConstInt(val=15) -> 15[52]
  208:[56] EqInt(v1=15[48], v2=15[52]) -> true[48]
  209:[49] GotoFalseWord(jump=215, if_false=true[48])
  212:[48] GotoWord(jump=265)
  265:[48] FreeText(var[20])
  268:[48] VarRef(var[8]) -> ref(1,1,0)={vector:[1,2,3,4,5]}[48]
  271:[60] FreeRef(v1=ref(1,1,0)[48])
  272:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
