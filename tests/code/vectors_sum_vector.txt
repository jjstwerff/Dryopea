Test code:
fn sum(v: vector<integer>) -> integer { t = 0; for i in v { t += i }; t}

pub fn test() {
    test_value = {sum([1, 2, 3, 4, 5])};
    assert(
        test_value == 15,
        "Test failed {test_value} != 15"
    );
}

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

Type 14:vector<integer>[4]:Vector(0)

fn sum {
  let t = 0i32;
  {
    let i#index = 0i32;
    loop {
      let i = if OpGeInt(i#index, OpLengthVector(v)) {{
        OpConvIntFromNull();
      }} else {{
        let res_10 = OpGetInt(OpGetVector(v, 4i32, i#index), 0i32);
        i#index = OpAddInt(i#index, 1i32);
        res_10;
      }};
      if OpNot(OpConvBoolFromInt(i)) {break(0)} else {null};
      {
        t = OpAddInt(t, i);
      };
    };
  };
  t;
}

byte-code for sum_vector:sum(v: vector<integer>[0]) -> integer
 668[12]: return-address
 668[16]: ConstInt(val=0) -> integer
 673[20]: ConstInt(val=0) -> integer
 678[24]: VarInt(var[20]) -> integer
 681[28]: VarVector(var[0]) -> vector type=vector<integer>[4]:Vector(0)[14]
 684[40]: LengthVector(r: vector) -> integer
 685[32]: GeInt(v1: integer, v2: integer) -> boolean
 686[25]: GenGotoFalseWord(jump=693, if_false: boolean)
 689[24]: ConvIntFromNull() -> integer
 690[28]: GenGotoWord(jump=724)
 693[24]: VarVector(var[0]) -> vector type=vector<integer>[4]:Vector(0)[14]
 696[36]: VarInt(var[20]) -> integer
 699[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 702[36]: GetInt(v1: reference, fld=0) -> integer
 705[28]: VarInt(var[20]) -> integer
 708[32]: ConstInt(val=1) -> integer
 713[36]: AddInt(v1: integer, v2: integer) -> integer
 714[32]: PutInt(var[20], value: integer)
 717[28]: VarInt(var[24]) -> integer
 720[32]: GenFreeStack(value=4, discard=4)
 724[28]: VarInt(var[24]) -> integer
 727[32]: ConvBoolFromInt(v1: integer) -> boolean
 728[29]: Not(v1: boolean) -> boolean
 729[29]: GenGotoFalseWord(jump=739, if_false: boolean)
 732[28]: GenFreeStack(value=0, discard=4)
 736[24]: GenGotoWord(jump=756)
 739[28]: VarInt(var[16]) -> integer
 742[32]: VarInt(var[24]) -> integer
 745[36]: AddInt(v1: integer, v2: integer) -> integer
 746[32]: PutInt(var[16], value: integer)
 749[28]: GenFreeStack(value=0, discard=4)
 753[24]: GenGotoWord(jump=678)
 756[24]: GenFreeStack(value=0, discard=4)
 760[20]: VarInt(var[16]) -> integer
 763[24]: GenReturn(ret=12, value=4, discard=24)

fn test {
  let test_value = {
    sum({
      let db_11 = OpDatabase(4i32, 13i32);
      let vec_10 = OpGetField(db_11, 4i32, 14i32);
      OpSetInt(db_11, 4i32, 0i32);
      let elm_9 = OpNewRecord(vec_10, 14i32, 65535i32);
      OpSetInt(elm_9, 0i32, 1i32);
      OpFinishRecord(vec_10, elm_9, 14i32, 65535i32);
      elm_9 = OpNewRecord(vec_10, 14i32, 65535i32);
      OpSetInt(elm_9, 0i32, 2i32);
      OpFinishRecord(vec_10, elm_9, 14i32, 65535i32);
      elm_9 = OpNewRecord(vec_10, 14i32, 65535i32);
      OpSetInt(elm_9, 0i32, 3i32);
      OpFinishRecord(vec_10, elm_9, 14i32, 65535i32);
      elm_9 = OpNewRecord(vec_10, 14i32, 65535i32);
      OpSetInt(elm_9, 0i32, 4i32);
      OpFinishRecord(vec_10, elm_9, 14i32, 65535i32);
      elm_9 = OpNewRecord(vec_10, 14i32, 65535i32);
      OpSetInt(elm_9, 0i32, 5i32);
      OpFinishRecord(vec_10, elm_9, 14i32, 65535i32);
      vec_10;
    });
  };
  if OpEqInt(test_value, 15i32) {null} else {OpGenPanic({
    let append_12 = "Test failed ";
    OpFormatInt(append_12, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_12, " != 15");
    append_12;
  })};
}

byte-code for sum_vector:test()
 769[0]: return-address
 769[4]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 774[16]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 777[28]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[14]
 780[28]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 783[40]: ConstInt(val=0) -> integer
 788[44]: SetInt(v1: reference, fld=4, val: integer)
 791[28]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 794[40]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 799[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 802[52]: ConstInt(val=1) -> integer
 807[56]: SetInt(v1: reference, fld=0, val: integer)
 810[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 813[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 816[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 821[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 824[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 829[52]: PutRef(var[28], value: reference)
 832[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 835[52]: ConstInt(val=2) -> integer
 840[56]: SetInt(v1: reference, fld=0, val: integer)
 843[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 846[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 849[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 854[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 857[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 862[52]: PutRef(var[28], value: reference)
 865[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 868[52]: ConstInt(val=3) -> integer
 873[56]: SetInt(v1: reference, fld=0, val: integer)
 876[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 879[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 882[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 887[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 890[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 895[52]: PutRef(var[28], value: reference)
 898[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 901[52]: ConstInt(val=4) -> integer
 906[56]: SetInt(v1: reference, fld=0, val: integer)
 909[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 912[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 915[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 920[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 923[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 928[52]: PutRef(var[28], value: reference)
 931[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 934[52]: ConstInt(val=5) -> integer
 939[56]: SetInt(v1: reference, fld=0, val: integer)
 942[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 945[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 948[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 953[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 956[52]: GenFreeStack(value=12, discard=36)
 960[16]: GenCall(size=0, to=668)
 967[8]: VarInt(var[4]) -> integer
 970[12]: ConstInt(val=15) -> integer
 975[16]: EqInt(v1: integer, v2: integer) -> boolean
 976[9]: GenGotoFalseWord(jump=982, if_false: boolean)
 979[8]: GenGotoWord(jump=1034)
 982[8]: Text()
 983[32]: ConstText(_value="Test failed ") -> text
 997[48]: AppendText(var[8], v1: text)
1000[32]: VarInt(var[4]) -> integer
1003[36]: ConstInt(val=0) -> integer
1008[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1015[32]: ConstText(_value=" != 15") -> text
1023[48]: AppendText(var[8], v1: text)
1026[32]: VarText(var[8]) -> text
1029[48]: GenFreeStack(value=16, discard=24)
1033[24]: GenPanic(message: text)
1034[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
  769:[4] Database(size=4, db_tp=13) -> ref(1,1,0)={}[4]
  774:[16] VarRef(var[4]) -> ref(1,1,0)={}[16]
  777:[28] GetField(v1=ref(1,1,0)[16], fld=4) -> ref(1,1,4)=[][16]
  780:[28] VarRef(var[4]) -> ref(1,1,0)={}[28]
  783:[40] ConstInt(val=0) -> 0[40]
  788:[44] SetInt(v1=ref(1,1,0)[28], fld=4, val=0[40])
  791:[28] VarVector(var[16]) -> ref(1,1,4)=[][28]
  794:[40] NewRecord(data=ref(1,1,4)[28], parent_tp=14, fld=65535) -> ref(1,5,8)[28]
  799:[40] VarRef(var[28]) -> ref(1,5,8)=false[40]
  802:[52] ConstInt(val=1) -> 1[52]
  807:[56] SetInt(v1=ref(1,5,8)[40], fld=0, val=1[52])
  810:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  813:[52] VarRef(var[28]) -> ref(1,5,8)=true[52]
  816:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,8)[52], parent_tp=14, fld=65535)
  821:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  824:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,12)[40]
  829:[52] PutRef(var[28], value=ref(1,5,12)[40])
  832:[40] VarRef(var[28]) -> ref(1,5,12)=false[40]
  835:[52] ConstInt(val=2) -> 2[52]
  840:[56] SetInt(v1=ref(1,5,12)[40], fld=0, val=2[52])
  843:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  846:[52] VarRef(var[28]) -> ref(1,5,12)=true[52]
  849:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,12)[52], parent_tp=14, fld=65535)
  854:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  857:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,16)[40]
  862:[52] PutRef(var[28], value=ref(1,5,16)[40])
  865:[40] VarRef(var[28]) -> ref(1,5,16)=false[40]
  868:[52] ConstInt(val=3) -> 3[52]
  873:[56] SetInt(v1=ref(1,5,16)[40], fld=0, val=3[52])
  876:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3][40]
  879:[52] VarRef(var[28]) -> ref(1,5,16)=true[52]
  882:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,16)[52], parent_tp=14, fld=65535)
  887:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3][40]
  890:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,20)[40]
  895:[52] PutRef(var[28], value=ref(1,5,20)[40])
  898:[40] VarRef(var[28]) -> ref(1,5,20)=false[40]
  901:[52] ConstInt(val=4) -> 4[52]
  906:[56] SetInt(v1=ref(1,5,20)[40], fld=0, val=4[52])
  909:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3,4][40]
  912:[52] VarRef(var[28]) -> ref(1,5,20)=true[52]
  915:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,20)[52], parent_tp=14, fld=65535)
  920:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3,4][40]
  923:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,24)[40]
  928:[52] PutRef(var[28], value=ref(1,5,24)[40])
  931:[40] VarRef(var[28]) -> ref(1,5,24)=false[40]
  934:[52] ConstInt(val=5) -> 5[52]
  939:[56] SetInt(v1=ref(1,5,24)[40], fld=0, val=5[52])
  942:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3,4,5][40]
  945:[52] VarRef(var[28]) -> ref(1,5,24)=true[52]
  948:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,24)[52], parent_tp=14, fld=65535)
  953:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,3,4,5][40]
  956:[52] GenFreeStack(value=12, discard=36)
  960:[16] GenCall(size=0, to=668)
  668:[20] ConstInt(val=0) -> 0[20]
  673:[24] ConstInt(val=0) -> 0[24]
  678:[28] VarInt(var[24]) -> 0[28]
  681:[32] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][32]
  684:[44] LengthVector(r=ref(1,1,4)=true[32]) -> 5[32]
  685:[36] GeInt(v1=0[28], v2=5[32]) -> false[28]
  686:[29] GenGotoFalseWord(jump=693, if_false=false[28])
  693:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][28]
  696:[40] VarInt(var[24]) -> 0[40]
  699:[44] GetVector(r=ref(1,1,4)=true[28], size=4, index=0[40]) -> ref(1,5,8)=1[28]
  702:[40] GetInt(v1=ref(1,5,8)[28], fld=0) -> 1[28]
  705:[32] VarInt(var[24]) -> 0[32]
  708:[36] ConstInt(val=1) -> 1[36]
  713:[40] AddInt(v1=0[32], v2=1[36]) -> 1[32]
  714:[36] PutInt(var[24], value=1[32])
  717:[32] VarInt(var[28]) -> 1[32]
  720:[36] GenFreeStack(value=4, discard=4)
  724:[32] VarInt(var[28]) -> 1[32]
  727:[36] ConvBoolFromInt(v1=1[32]) -> true[32]
  728:[33] Not(v1=true[32]) -> false[32]
  729:[33] GenGotoFalseWord(jump=739, if_false=false[32])
  739:[32] VarInt(var[20]) -> 0[32]
  742:[36] VarInt(var[28]) -> 1[36]
  745:[40] AddInt(v1=0[32], v2=1[36]) -> 1[32]
  746:[36] PutInt(var[20], value=1[32])
  749:[32] GenFreeStack(value=0, discard=4)
  753:[28] GenGotoWord(jump=678)
  678:[28] VarInt(var[24]) -> 1[28]
  681:[32] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][32]
  684:[44] LengthVector(r=ref(1,1,4)=true[32]) -> 5[32]
  685:[36] GeInt(v1=1[28], v2=5[32]) -> false[28]
  686:[29] GenGotoFalseWord(jump=693, if_false=false[28])
  693:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][28]
  696:[40] VarInt(var[24]) -> 1[40]
  699:[44] GetVector(r=ref(1,1,4)=true[28], size=4, index=1[40]) -> ref(1,5,12)=2[28]
  702:[40] GetInt(v1=ref(1,5,12)[28], fld=0) -> 2[28]
  705:[32] VarInt(var[24]) -> 1[32]
  708:[36] ConstInt(val=1) -> 1[36]
  713:[40] AddInt(v1=1[32], v2=1[36]) -> 2[32]
  714:[36] PutInt(var[24], value=2[32])
  717:[32] VarInt(var[28]) -> 2[32]
  720:[36] GenFreeStack(value=4, discard=4)
  724:[32] VarInt(var[28]) -> 2[32]
  727:[36] ConvBoolFromInt(v1=2[32]) -> true[32]
  728:[33] Not(v1=true[32]) -> false[32]
  729:[33] GenGotoFalseWord(jump=739, if_false=false[32])
  739:[32] VarInt(var[20]) -> 1[32]
  742:[36] VarInt(var[28]) -> 2[36]
  745:[40] AddInt(v1=1[32], v2=2[36]) -> 3[32]
  746:[36] PutInt(var[20], value=3[32])
  749:[32] GenFreeStack(value=0, discard=4)
  753:[28] GenGotoWord(jump=678)
  678:[28] VarInt(var[24]) -> 2[28]
  681:[32] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][32]
  684:[44] LengthVector(r=ref(1,1,4)=true[32]) -> 5[32]
  685:[36] GeInt(v1=2[28], v2=5[32]) -> false[28]
  686:[29] GenGotoFalseWord(jump=693, if_false=false[28])
  693:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][28]
  696:[40] VarInt(var[24]) -> 2[40]
  699:[44] GetVector(r=ref(1,1,4)=true[28], size=4, index=2[40]) -> ref(1,5,16)=3[28]
  702:[40] GetInt(v1=ref(1,5,16)[28], fld=0) -> 3[28]
  705:[32] VarInt(var[24]) -> 2[32]
  708:[36] ConstInt(val=1) -> 1[36]
  713:[40] AddInt(v1=2[32], v2=1[36]) -> 3[32]
  714:[36] PutInt(var[24], value=3[32])
  717:[32] VarInt(var[28]) -> 3[32]
  720:[36] GenFreeStack(value=4, discard=4)
  724:[32] VarInt(var[28]) -> 3[32]
  727:[36] ConvBoolFromInt(v1=3[32]) -> true[32]
  728:[33] Not(v1=true[32]) -> false[32]
  729:[33] GenGotoFalseWord(jump=739, if_false=false[32])
  739:[32] VarInt(var[20]) -> 3[32]
  742:[36] VarInt(var[28]) -> 3[36]
  745:[40] AddInt(v1=3[32], v2=3[36]) -> 6[32]
  746:[36] PutInt(var[20], value=6[32])
  749:[32] GenFreeStack(value=0, discard=4)
  753:[28] GenGotoWord(jump=678)
  678:[28] VarInt(var[24]) -> 3[28]
  681:[32] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][32]
  684:[44] LengthVector(r=ref(1,1,4)=true[32]) -> 5[32]
  685:[36] GeInt(v1=3[28], v2=5[32]) -> false[28]
  686:[29] GenGotoFalseWord(jump=693, if_false=false[28])
  693:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][28]
  696:[40] VarInt(var[24]) -> 3[40]
  699:[44] GetVector(r=ref(1,1,4)=true[28], size=4, index=3[40]) -> ref(1,5,20)=4[28]
  702:[40] GetInt(v1=ref(1,5,20)[28], fld=0) -> 4[28]
  705:[32] VarInt(var[24]) -> 3[32]
  708:[36] ConstInt(val=1) -> 1[36]
  713:[40] AddInt(v1=3[32], v2=1[36]) -> 4[32]
  714:[36] PutInt(var[24], value=4[32])
  717:[32] VarInt(var[28]) -> 4[32]
  720:[36] GenFreeStack(value=4, discard=4)
  724:[32] VarInt(var[28]) -> 4[32]
  727:[36] ConvBoolFromInt(v1=4[32]) -> true[32]
  728:[33] Not(v1=true[32]) -> false[32]
  729:[33] GenGotoFalseWord(jump=739, if_false=false[32])
  739:[32] VarInt(var[20]) -> 6[32]
  742:[36] VarInt(var[28]) -> 4[36]
  745:[40] AddInt(v1=6[32], v2=4[36]) -> 10[32]
  746:[36] PutInt(var[20], value=10[32])
  749:[32] GenFreeStack(value=0, discard=4)
  753:[28] GenGotoWord(jump=678)
  678:[28] VarInt(var[24]) -> 4[28]
  681:[32] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][32]
  684:[44] LengthVector(r=ref(1,1,4)=true[32]) -> 5[32]
  685:[36] GeInt(v1=4[28], v2=5[32]) -> false[28]
  686:[29] GenGotoFalseWord(jump=693, if_false=false[28])
  693:[28] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][28]
  696:[40] VarInt(var[24]) -> 4[40]
  699:[44] GetVector(r=ref(1,1,4)=true[28], size=4, index=4[40]) -> ref(1,5,24)=5[28]
  702:[40] GetInt(v1=ref(1,5,24)[28], fld=0) -> 5[28]
  705:[32] VarInt(var[24]) -> 4[32]
  708:[36] ConstInt(val=1) -> 1[36]
  713:[40] AddInt(v1=4[32], v2=1[36]) -> 5[32]
  714:[36] PutInt(var[24], value=5[32])
  717:[32] VarInt(var[28]) -> 5[32]
  720:[36] GenFreeStack(value=4, discard=4)
  724:[32] VarInt(var[28]) -> 5[32]
  727:[36] ConvBoolFromInt(v1=5[32]) -> true[32]
  728:[33] Not(v1=true[32]) -> false[32]
  729:[33] GenGotoFalseWord(jump=739, if_false=false[32])
  739:[32] VarInt(var[20]) -> 10[32]
  742:[36] VarInt(var[28]) -> 5[36]
  745:[40] AddInt(v1=10[32], v2=5[36]) -> 15[32]
  746:[36] PutInt(var[20], value=15[32])
  749:[32] GenFreeStack(value=0, discard=4)
  753:[28] GenGotoWord(jump=678)
  678:[28] VarInt(var[24]) -> 5[28]
  681:[32] VarVector(var[4]) -> ref(1,1,4)=[1,2,3,4,5][32]
  684:[44] LengthVector(r=ref(1,1,4)=true[32]) -> 5[32]
  685:[36] GeInt(v1=5[28], v2=5[32]) -> true[28]
  686:[29] GenGotoFalseWord(jump=693, if_false=true[28])
  689:[28] ConvIntFromNull() -> -2147483648[28]
  690:[32] GenGotoWord(jump=724)
  724:[32] VarInt(var[28]) -> -2147483648[32]
  727:[36] ConvBoolFromInt(v1=-2147483648[32]) -> false[32]
  728:[33] Not(v1=false[32]) -> true[32]
  729:[33] GenGotoFalseWord(jump=739, if_false=true[32])
  732:[32] GenFreeStack(value=0, discard=4)
  736:[28] GenGotoWord(jump=756)
  756:[28] GenFreeStack(value=0, discard=4)
  760:[24] VarInt(var[20]) -> 15[24]
  763:[28] GenReturn(ret=967[16], value=4, discard=24)
  967:[8] VarInt(var[4]) -> 15[8]
  970:[12] ConstInt(val=15) -> 15[12]
  975:[16] EqInt(v1=15[8], v2=15[12]) -> true[8]
  976:[9] GenGotoFalseWord(jump=982, if_false=true[8])
  979:[8] GenGotoWord(jump=1034)
 1034:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
