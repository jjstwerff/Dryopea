fn sum(v: vector<integer>) -> integer { t = 0; for i in v { t += i }; t}

pub fn test() {
    test_value = {sum([1, 2, 3, 4, 5])};
    assert(
        test_value == 15,
        "Test failed {test_value} != 15"
    );
}
Type 11:vector<integer>[4]:Vector(0)

Type 12:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn sum(v:vector<integer>#[]) -> integer {#1 block
  t:integer = 0i32;
  {#2 for
    i#index:integer = 0i32;
    loop {#3 for loop
      i:integer = if OpGeInt(i#index, OpLengthVector(v)) OpConvIntFromNull() else {#4 iter next
        _res_1:integer = OpGetInt(OpGetVector(v, 4i32, i#index), 0i32);
        i#index:integer = OpAddInt(i#index, 1i32);
        _res_1;
      }#4:integer;
      if OpNot(OpConvBoolFromInt(i)) break(0) else null;
      {#5 block
        t:integer = OpAddInt(t, i);
      }#5;
    }#3;
  }#2;
  t;
}#1:integer

byte-code for sum_vector:sum(v: vector<integer>#[][0]) -> integer
 682[12]: return-address
 682[16]: ConstInt(val=0) -> integer
 687[20]: ConstInt(val=0) -> integer
 692[24]: VarInt(var[20]) -> integer
 695[28]: VarVector(var[0]) -> vector#[] type=Unknown type(65535)[65535]
 698[40]: LengthVector(r: vector#[]) -> integer
 699[32]: GeInt(v1: integer, v2: integer) -> boolean
 700[25]: GotoFalseWord(jump=707, if_false: boolean)
 703[24]: ConvIntFromNull() -> integer
 704[28]: GotoWord(jump=738)
 707[24]: VarVector(var[0]) -> vector#[] type=Unknown type(65535)[65535]
 710[36]: VarInt(var[20]) -> integer
 713[40]: GetVector(r: vector#[], size=4, index: integer) -> reference type=integer[4]:Base[0]
 716[36]: GetInt(v1: reference, fld=0) -> integer
 719[28]: VarInt(var[20]) -> integer
 722[32]: ConstInt(val=1) -> integer
 727[36]: AddInt(v1: integer, v2: integer) -> integer
 728[32]: PutInt(var[20], value: integer)
 731[28]: VarInt(var[24]) -> integer
 734[32]: FreeStack(value=4, discard=4) type=integer[4]:Base[0]
 738[28]: VarInt(var[24]) -> integer
 741[32]: ConvBoolFromInt(v1: integer) -> boolean
 742[29]: Not(v1: boolean) -> boolean
 743[29]: GotoFalseWord(jump=753, if_false: boolean)
 746[28]: FreeStack(value=0, discard=4)
 750[24]: GotoWord(jump=770)
 753[28]: VarInt(var[16]) -> integer
 756[32]: VarInt(var[24]) -> integer
 759[36]: AddInt(v1: integer, v2: integer) -> integer
 760[32]: PutInt(var[16], value: integer)
 763[28]: FreeStack(value=0, discard=4)
 767[24]: GotoWord(jump=692)
 770[24]: FreeStack(value=0, discard=4)
 774[20]: VarInt(var[16]) -> integer
 777[24]: Return(ret=12, value=4, discard=24) type=integer[4]:Base[0]

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    sum({#3 vector
      _db_3:main_vector<integer> = OpDatabase(4i32, 12i32);
      _vec_2:vector<integer>#[] = OpGetField(_db_3, 4i32, 65535i32);
      OpSetInt(_db_3, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 3i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 4i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 5i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _vec_2;
    }#3:vector<integer>#[]);
  }#2:integer;
  if OpEqInt(test_value, 15i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 15");
    __work_1;
  }#4:text);
}#1

byte-code for sum_vector:test()
 783[0]: return-address
 783[4]: Text()
 784[28]: Database(size=4, db_tp=12) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 789[40]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 792[52]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 795[52]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 798[64]: ConstInt(val=0) -> integer
 803[68]: SetInt(v1: reference, fld=4, val: integer)
 806[52]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 809[64]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 814[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 817[76]: ConstInt(val=1) -> integer
 822[80]: SetInt(v1: reference, fld=0, val: integer)
 825[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 828[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 831[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 836[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 839[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 844[76]: PutRef(var[52], value: reference)
 847[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 850[76]: ConstInt(val=2) -> integer
 855[80]: SetInt(v1: reference, fld=0, val: integer)
 858[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 861[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 864[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 869[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 872[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 877[76]: PutRef(var[52], value: reference)
 880[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 883[76]: ConstInt(val=3) -> integer
 888[80]: SetInt(v1: reference, fld=0, val: integer)
 891[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 894[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 897[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 902[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 905[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 910[76]: PutRef(var[52], value: reference)
 913[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 916[76]: ConstInt(val=4) -> integer
 921[80]: SetInt(v1: reference, fld=0, val: integer)
 924[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 927[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 930[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 935[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 938[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 943[76]: PutRef(var[52], value: reference)
 946[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 949[76]: ConstInt(val=5) -> integer
 954[80]: SetInt(v1: reference, fld=0, val: integer)
 957[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 960[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 963[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 968[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 971[76]: FreeStack(value=12, discard=36) type=Pixel[3]:{r:byte[0], g:byte[1], b:byte[2]}[6]
 975[40]: Call(size=0, to=682)
 982[32]: VarInt(var[28]) -> integer
 985[36]: ConstInt(val=15) -> integer
 990[40]: EqInt(v1: integer, v2: integer) -> boolean
 991[33]: GotoFalseWord(jump=997, if_false: boolean)
 994[32]: GotoWord(jump=1047)
 997[32]: ClearText(var[4])
1000[32]: ConstText(_value="Test failed ") -> text
1014[48]: AppendText(var[4], v1: text)
1017[32]: VarInt(var[28]) -> integer
1020[36]: ConstInt(val=0) -> integer
1025[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1032[32]: ConstText(_value=" != 15") -> text
1040[48]: AppendText(var[4], v1: text)
1043[32]: VarText(var[4]) -> text
1046[48]: Panic(message: text)
1047[32]: Return(ret=0, value=0, discard=32)

Execute test:
  783:[8] Text()
  784:[32] Database(size=4, db_tp=12) -> ref(1,1,0)={}[32]
  789:[44] VarRef(var[32]) -> ref(1,1,0)={}[44]
  792:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  795:[56] VarRef(var[32]) -> ref(1,1,0)={}[56]
  798:[68] ConstInt(val=0) -> 0[68]
  803:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  806:[56] VarVector(var[44]) -> ref(1,1,4)[56]
  809:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=11, fld=65535) -> ref(1,5,8)[56]
  814:[68] VarRef(var[56]) -> ref(1,5,8)=false[68]
  817:[80] ConstInt(val=1) -> 1[80]
  822:[84] SetInt(v1=ref(1,5,8)[68], fld=0, val=1[80])
  825:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  828:[80] VarRef(var[56]) -> ref(1,5,8)=true[80]
  831:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,8)[80], parent_tp=11, fld=65535)
  836:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  839:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,12)[68]
  844:[80] PutRef(var[56], value=ref(1,5,12)[68])
  847:[68] VarRef(var[56]) -> ref(1,5,12)=false[68]
  850:[80] ConstInt(val=2) -> 2[80]
  855:[84] SetInt(v1=ref(1,5,12)[68], fld=0, val=2[80])
  858:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  861:[80] VarRef(var[56]) -> ref(1,5,12)=true[80]
  864:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,12)[80], parent_tp=11, fld=65535)
  869:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  872:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,16)[68]
  877:[80] PutRef(var[56], value=ref(1,5,16)[68])
  880:[68] VarRef(var[56]) -> ref(1,5,16)=false[68]
  883:[80] ConstInt(val=3) -> 3[80]
  888:[84] SetInt(v1=ref(1,5,16)[68], fld=0, val=3[80])
  891:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  894:[80] VarRef(var[56]) -> ref(1,5,16)=true[80]
  897:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,16)[80], parent_tp=11, fld=65535)
  902:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  905:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,20)[68]
  910:[80] PutRef(var[56], value=ref(1,5,20)[68])
  913:[68] VarRef(var[56]) -> ref(1,5,20)=false[68]
  916:[80] ConstInt(val=4) -> 4[80]
  921:[84] SetInt(v1=ref(1,5,20)[68], fld=0, val=4[80])
  924:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  927:[80] VarRef(var[56]) -> ref(1,5,20)=true[80]
  930:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,20)[80], parent_tp=11, fld=65535)
  935:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  938:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,24)[68]
  943:[80] PutRef(var[56], value=ref(1,5,24)[68])
  946:[68] VarRef(var[56]) -> ref(1,5,24)=false[68]
  949:[80] ConstInt(val=5) -> 5[80]
  954:[84] SetInt(v1=ref(1,5,24)[68], fld=0, val=5[80])
  957:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  960:[80] VarRef(var[56]) -> ref(1,5,24)=true[80]
  963:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,24)[80], parent_tp=11, fld=65535)
  968:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  971:[80] FreeStack(value=12, discard=36)
  975:[44] Call(size=0, to=682)
  682:[48] ConstInt(val=0) -> 0[48]
  687:[52] ConstInt(val=0) -> 0[52]
  692:[56] VarInt(var[52]) -> 0[56]
  695:[60] VarVector(var[32]) -> ref(1,1,4)[60]
  698:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  699:[64] GeInt(v1=0[56], v2=5[60]) -> false[56]
  700:[57] GotoFalseWord(jump=707, if_false=false[56])
  707:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  710:[68] VarInt(var[52]) -> 0[68]
  713:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=0[68]) -> ref(1,5,8)=1[56]
  716:[68] GetInt(v1=ref(1,5,8)[56], fld=0) -> 1[56]
  719:[60] VarInt(var[52]) -> 0[60]
  722:[64] ConstInt(val=1) -> 1[64]
  727:[68] AddInt(v1=0[60], v2=1[64]) -> 1[60]
  728:[64] PutInt(var[52], value=1[60])
  731:[60] VarInt(var[56]) -> 1[60]
  734:[64] FreeStack(value=4, discard=4)
  738:[60] VarInt(var[56]) -> 1[60]
  741:[64] ConvBoolFromInt(v1=1[60]) -> true[60]
  742:[61] Not(v1=true[60]) -> false[60]
  743:[61] GotoFalseWord(jump=753, if_false=false[60])
  753:[60] VarInt(var[48]) -> 0[60]
  756:[64] VarInt(var[56]) -> 1[64]
  759:[68] AddInt(v1=0[60], v2=1[64]) -> 1[60]
  760:[64] PutInt(var[48], value=1[60])
  763:[60] FreeStack(value=0, discard=4)
  767:[56] GotoWord(jump=692)
  692:[56] VarInt(var[52]) -> 1[56]
  695:[60] VarVector(var[32]) -> ref(1,1,4)[60]
  698:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  699:[64] GeInt(v1=1[56], v2=5[60]) -> false[56]
  700:[57] GotoFalseWord(jump=707, if_false=false[56])
  707:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  710:[68] VarInt(var[52]) -> 1[68]
  713:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=1[68]) -> ref(1,5,12)=2[56]
  716:[68] GetInt(v1=ref(1,5,12)[56], fld=0) -> 2[56]
  719:[60] VarInt(var[52]) -> 1[60]
  722:[64] ConstInt(val=1) -> 1[64]
  727:[68] AddInt(v1=1[60], v2=1[64]) -> 2[60]
  728:[64] PutInt(var[52], value=2[60])
  731:[60] VarInt(var[56]) -> 2[60]
  734:[64] FreeStack(value=4, discard=4)
  738:[60] VarInt(var[56]) -> 2[60]
  741:[64] ConvBoolFromInt(v1=2[60]) -> true[60]
  742:[61] Not(v1=true[60]) -> false[60]
  743:[61] GotoFalseWord(jump=753, if_false=false[60])
  753:[60] VarInt(var[48]) -> 1[60]
  756:[64] VarInt(var[56]) -> 2[64]
  759:[68] AddInt(v1=1[60], v2=2[64]) -> 3[60]
  760:[64] PutInt(var[48], value=3[60])
  763:[60] FreeStack(value=0, discard=4)
  767:[56] GotoWord(jump=692)
  692:[56] VarInt(var[52]) -> 2[56]
  695:[60] VarVector(var[32]) -> ref(1,1,4)[60]
  698:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  699:[64] GeInt(v1=2[56], v2=5[60]) -> false[56]
  700:[57] GotoFalseWord(jump=707, if_false=false[56])
  707:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  710:[68] VarInt(var[52]) -> 2[68]
  713:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=2[68]) -> ref(1,5,16)=3[56]
  716:[68] GetInt(v1=ref(1,5,16)[56], fld=0) -> 3[56]
  719:[60] VarInt(var[52]) -> 2[60]
  722:[64] ConstInt(val=1) -> 1[64]
  727:[68] AddInt(v1=2[60], v2=1[64]) -> 3[60]
  728:[64] PutInt(var[52], value=3[60])
  731:[60] VarInt(var[56]) -> 3[60]
  734:[64] FreeStack(value=4, discard=4)
  738:[60] VarInt(var[56]) -> 3[60]
  741:[64] ConvBoolFromInt(v1=3[60]) -> true[60]
  742:[61] Not(v1=true[60]) -> false[60]
  743:[61] GotoFalseWord(jump=753, if_false=false[60])
  753:[60] VarInt(var[48]) -> 3[60]
  756:[64] VarInt(var[56]) -> 3[64]
  759:[68] AddInt(v1=3[60], v2=3[64]) -> 6[60]
  760:[64] PutInt(var[48], value=6[60])
  763:[60] FreeStack(value=0, discard=4)
  767:[56] GotoWord(jump=692)
  692:[56] VarInt(var[52]) -> 3[56]
  695:[60] VarVector(var[32]) -> ref(1,1,4)[60]
  698:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  699:[64] GeInt(v1=3[56], v2=5[60]) -> false[56]
  700:[57] GotoFalseWord(jump=707, if_false=false[56])
  707:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  710:[68] VarInt(var[52]) -> 3[68]
  713:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=3[68]) -> ref(1,5,20)=4[56]
  716:[68] GetInt(v1=ref(1,5,20)[56], fld=0) -> 4[56]
  719:[60] VarInt(var[52]) -> 3[60]
  722:[64] ConstInt(val=1) -> 1[64]
  727:[68] AddInt(v1=3[60], v2=1[64]) -> 4[60]
  728:[64] PutInt(var[52], value=4[60])
  731:[60] VarInt(var[56]) -> 4[60]
  734:[64] FreeStack(value=4, discard=4)
  738:[60] VarInt(var[56]) -> 4[60]
  741:[64] ConvBoolFromInt(v1=4[60]) -> true[60]
  742:[61] Not(v1=true[60]) -> false[60]
  743:[61] GotoFalseWord(jump=753, if_false=false[60])
  753:[60] VarInt(var[48]) -> 6[60]
  756:[64] VarInt(var[56]) -> 4[64]
  759:[68] AddInt(v1=6[60], v2=4[64]) -> 10[60]
  760:[64] PutInt(var[48], value=10[60])
  763:[60] FreeStack(value=0, discard=4)
  767:[56] GotoWord(jump=692)
  692:[56] VarInt(var[52]) -> 4[56]
  695:[60] VarVector(var[32]) -> ref(1,1,4)[60]
  698:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  699:[64] GeInt(v1=4[56], v2=5[60]) -> false[56]
  700:[57] GotoFalseWord(jump=707, if_false=false[56])
  707:[56] VarVector(var[32]) -> ref(1,1,4)[56]
  710:[68] VarInt(var[52]) -> 4[68]
  713:[72] GetVector(r=ref(1,1,4)=true[56], size=4, index=4[68]) -> ref(1,5,24)=5[56]
  716:[68] GetInt(v1=ref(1,5,24)[56], fld=0) -> 5[56]
  719:[60] VarInt(var[52]) -> 4[60]
  722:[64] ConstInt(val=1) -> 1[64]
  727:[68] AddInt(v1=4[60], v2=1[64]) -> 5[60]
  728:[64] PutInt(var[52], value=5[60])
  731:[60] VarInt(var[56]) -> 5[60]
  734:[64] FreeStack(value=4, discard=4)
  738:[60] VarInt(var[56]) -> 5[60]
  741:[64] ConvBoolFromInt(v1=5[60]) -> true[60]
  742:[61] Not(v1=true[60]) -> false[60]
  743:[61] GotoFalseWord(jump=753, if_false=false[60])
  753:[60] VarInt(var[48]) -> 10[60]
  756:[64] VarInt(var[56]) -> 5[64]
  759:[68] AddInt(v1=10[60], v2=5[64]) -> 15[60]
  760:[64] PutInt(var[48], value=15[60])
  763:[60] FreeStack(value=0, discard=4)
  767:[56] GotoWord(jump=692)
  692:[56] VarInt(var[52]) -> 5[56]
  695:[60] VarVector(var[32]) -> ref(1,1,4)[60]
  698:[72] LengthVector(r=ref(1,1,4)=true[60]) -> 5[60]
  699:[64] GeInt(v1=5[56], v2=5[60]) -> true[56]
  700:[57] GotoFalseWord(jump=707, if_false=true[56])
  703:[56] ConvIntFromNull() -> -2147483648[56]
  704:[60] GotoWord(jump=738)
  738:[60] VarInt(var[56]) -> -2147483648[60]
  741:[64] ConvBoolFromInt(v1=-2147483648[60]) -> false[60]
  742:[61] Not(v1=false[60]) -> true[60]
  743:[61] GotoFalseWord(jump=753, if_false=true[60])
  746:[60] FreeStack(value=0, discard=4)
  750:[56] GotoWord(jump=770)
  770:[56] FreeStack(value=0, discard=4)
  774:[52] VarInt(var[48]) -> 15[52]
  777:[56] Return(ret=982[44], value=4, discard=24) -> 15[32]
  982:[36] VarInt(var[32]) -> 15[36]
  985:[40] ConstInt(val=15) -> 15[40]
  990:[44] EqInt(v1=15[36], v2=15[40]) -> true[36]
  991:[37] GotoFalseWord(jump=997, if_false=true[36])
  994:[36] GotoWord(jump=1047)
 1047:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
