struct S {a: integer, b: long, c: En}
enum En {V1, V2}

pub fn test() {
    test_value = {sizeof(S)};
    assert(
        test_value == 17,
        "Test failed {test_value} != 17"
    );
}
Type 17:En[1]:Enum(["V1", "V2"])

Type 18:S[17]:
    a:integer[4]
    b:long[8]
    c:En[16]

fn test() {#block_1:void
  __work_1:text(1) = "";
  test_value:integer(1) = {#block_2:integer
    17i32;
  }#block_2:integer;
  if OpEqInt(test_value, 17i32) null else OpPanic({#Formatted string_3:text
    __work_1:text(1) = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 17");
    __work_1;
  }#Formatted string_3:text);
  OpFreeText(__work_1);
}#block_1:void

byte-code for expr_struct:test() [1168]
   0[4]: return-address
   0[8]: Text() var=__work_1[8]:text
   1[32]: ConstInt(val=17) -> integer var=test_value[32]:integer
   6[36]: VarInt(var[32]) -> integer var=test_value[32]:integer
   9[40]: ConstInt(val=17) -> integer
  14[44]: EqInt(v1: integer, v2: integer) -> boolean
  15[37]: GotoFalseWord(jump=21, if_false: boolean)
  18[36]: GotoWord(jump=71)
  21[36]: ClearText(var[8]) var=__work_1[8]:text
  24[36]: ConstText(_value="Test failed ") -> text
  38[52]: AppendText(var[8], v1: text)
  41[36]: VarInt(var[32]) -> integer var=test_value[32]:integer
  44[40]: ConstInt(val=0) -> integer
  49[44]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
  56[36]: ConstText(_value=" != 17") -> text
  64[52]: AppendText(var[8], v1: text)
  67[36]: VarText(var[8]) -> text var=__work_1[8]:text
  70[52]: Panic(message: text)
  71[36]: FreeText(var[8])
  74[36]: Return(ret=0, value=0, discard=32)

Execute test:
    0:[8] Text()
    1:[32] ConstInt(val=17) -> 17[32]
    6:[36] VarInt(var[32]) -> 17[36]
    9:[40] ConstInt(val=17) -> 17[40]
   14:[44] EqInt(v1=17[36], v2=17[40]) -> true[36]
   15:[37] GotoFalseWord(jump=1189, if_false=true[36])
   18:[36] GotoWord(jump=1239)
   71:[36] FreeText(var[8])
   74:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
