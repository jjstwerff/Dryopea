Test code:
pub fn test() {
    test_value = {a="12ðŸ˜ŠðŸ™ƒ45";a[1..7]};
    assert(
        test_value == "2ðŸ˜ŠðŸ™ƒ",
        "Test failed {test_value} != \"2ðŸ˜ŠðŸ™ƒ\""
    );
}

fn test {
  let test_value = {
    let a = "12ðŸ˜ŠðŸ™ƒ45";
    OpGetTextSub(a, 1i32, 7i32);
  };
  if OpEqText(test_value, "2ðŸ˜ŠðŸ™ƒ") {null} else {OpGenPanic({
    let append_9 = "Test failed ";
    OpFormatText(append_9, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_9, " != "2ðŸ˜ŠðŸ™ƒ"");
    append_9;
  })};
}

byte-code for sub_utf8:test()
 664[0]: return-address
 664[4]: Text()
 665[28]: Text()
 666[52]: ConstText(_value="12ðŸ˜ŠðŸ™ƒ45") -> text
 680[68]: AppendText(var[28], v1: text)
 683[52]: VarText(var[28]) -> text
 686[68]: ConstInt(val=1) -> integer
 691[72]: ConstInt(val=7) -> integer
 696[76]: GetTextSub(v1: text, from: integer, till: integer) -> text
 697[68]: GenFreeStack(value=16, discard=24)
 701[44]: AppendText(var[4], v1: text)
 704[28]: VarText(var[4]) -> text
 707[44]: ConstText(_value="2ðŸ˜ŠðŸ™ƒ") -> text
 718[60]: EqText(v1: text, v2: text) -> boolean
 719[29]: GenGotoFalseWord(jump=725, if_false: boolean)
 722[28]: GenGotoWord(jump=784)
 725[28]: Text()
 726[52]: ConstText(_value="Test failed ") -> text
 740[68]: AppendText(var[28], v1: text)
 743[52]: VarText(var[4]) -> text
 746[68]: ConstInt(val=0) -> integer
 751[72]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
 756[52]: ConstText(_value=" != "2ðŸ˜ŠðŸ™ƒ"") -> text
 773[68]: AppendText(var[28], v1: text)
 776[52]: VarText(var[28]) -> text
 779[68]: GenFreeStack(value=16, discard=24)
 783[44]: GenPanic(message: text)
 784[28]: GenReturn(ret=0, value=0, discard=28)

Execute test:
  664:[4] Text()
  665:[28] Text()
  666:[52] ConstText(_value="12ðŸ˜ŠðŸ™ƒ45") -> "12ðŸ˜ŠðŸ™ƒ45"[52]
  680:[68] AppendText(var[28], v1="12ðŸ˜ŠðŸ™ƒ45"[52])
  683:[52] VarText(var[28]) -> "12ðŸ˜ŠðŸ™ƒ45"[52]
  686:[68] ConstInt(val=1) -> 1[68]
  691:[72] ConstInt(val=7) -> 7[72]
  696:[76] GetTextSub(v1="12ðŸ˜ŠðŸ™ƒ45"[52], from=1[68], till=7[72]) -> "2ðŸ˜ŠðŸ™ƒ"[52]
  697:[68] GenFreeStack(value=16, discard=24)
  701:[44] AppendText(var[4], v1="2ðŸ˜ŠðŸ™ƒ"[28])
  704:[28] VarText(var[4]) -> "2ðŸ˜ŠðŸ™ƒ"[28]
  707:[44] ConstText(_value="2ðŸ˜ŠðŸ™ƒ") -> "2ðŸ˜ŠðŸ™ƒ"[44]
  718:[60] EqText(v1="2ðŸ˜ŠðŸ™ƒ"[28], v2="2ðŸ˜ŠðŸ™ƒ"[44]) -> true[28]
  719:[29] GenGotoFalseWord(jump=725, if_false=true[28])
  722:[28] GenGotoWord(jump=784)
  784:[28] GenReturn(ret=4294967295[0], value=0, discard=28)
Finished
