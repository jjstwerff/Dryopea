Test code:
pub fn test() {
    test_value = {a="12ðŸ˜ŠðŸ™ƒ45";a[1..7]};
    assert(
        test_value == "2ðŸ˜ŠðŸ™ƒ",
        "Test failed {test_value} != \"2ðŸ˜ŠðŸ™ƒ\""
    );
}

fn test {
  let test_value = {
    let a = "12ðŸ˜ŠðŸ™ƒ45";
    OpGetTextSub(a, 1i32, 7i32);
  };
  if OpEqText(test_value, "2ðŸ˜ŠðŸ™ƒ") {null} else {OpGenPanic({
    let append_9 = "Test failed ";
    OpFormatText(append_9, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_9, " != "2ðŸ˜ŠðŸ™ƒ"");
    append_9;
  })};
}

byte-code for sub_utf8:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: Text()
 670[52]: ConstText(_value="12ðŸ˜ŠðŸ™ƒ45") -> text
 684[68]: AppendText(var[28], v1: text)
 687[52]: VarText(var[28]) -> text
 690[68]: ConstInt(val=1) -> integer
 695[72]: ConstInt(val=7) -> integer
 700[76]: GetTextSub(v1: text, from: integer, till: integer) -> text
 701[68]: GenFreeStack(value=16, discard=24)
 705[44]: AppendText(var[4], v1: text)
 708[28]: VarText(var[4]) -> text
 711[44]: ConstText(_value="2ðŸ˜ŠðŸ™ƒ") -> text
 722[60]: EqText(v1: text, v2: text) -> boolean
 723[29]: GenGotoFalseWord(jump=729, if_false: boolean)
 726[28]: GenGotoWord(jump=788)
 729[28]: Text()
 730[52]: ConstText(_value="Test failed ") -> text
 744[68]: AppendText(var[28], v1: text)
 747[52]: VarText(var[4]) -> text
 750[68]: ConstInt(val=0) -> integer
 755[72]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
 760[52]: ConstText(_value=" != "2ðŸ˜ŠðŸ™ƒ"") -> text
 777[68]: AppendText(var[28], v1: text)
 780[52]: VarText(var[28]) -> text
 783[68]: GenFreeStack(value=16, discard=24)
 787[44]: GenPanic(message: text)
 788[28]: GenReturn(ret=0, value=0, discard=28)

Execute test:
  668:[4] Text()
  669:[28] Text()
  670:[52] ConstText(_value="12ðŸ˜ŠðŸ™ƒ45") -> "12ðŸ˜ŠðŸ™ƒ45"[52]
  684:[68] AppendText(var[28], v1="12ðŸ˜ŠðŸ™ƒ45"[52])
  687:[52] VarText(var[28]) -> "12ðŸ˜ŠðŸ™ƒ45"[52]
  690:[68] ConstInt(val=1) -> 1[68]
  695:[72] ConstInt(val=7) -> 7[72]
  700:[76] GetTextSub(v1="12ðŸ˜ŠðŸ™ƒ45"[52], from=1[68], till=7[72]) -> "2ðŸ˜ŠðŸ™ƒ"[52]
  701:[68] GenFreeStack(value=16, discard=24)
  705:[44] AppendText(var[4], v1="2ðŸ˜ŠðŸ™ƒ"[28])
  708:[28] VarText(var[4]) -> "2ðŸ˜ŠðŸ™ƒ"[28]
  711:[44] ConstText(_value="2ðŸ˜ŠðŸ™ƒ") -> "2ðŸ˜ŠðŸ™ƒ"[44]
  722:[60] EqText(v1="2ðŸ˜ŠðŸ™ƒ"[28], v2="2ðŸ˜ŠðŸ™ƒ"[44]) -> true[28]
  723:[29] GenGotoFalseWord(jump=729, if_false=true[28])
  726:[28] GenGotoWord(jump=788)
  788:[28] GenReturn(ret=4294967295[0], value=0, discard=28)
Finished
