pub fn test() {
    test_value = {a="12ðŸ˜ŠðŸ™ƒ45";a[1..7]};
    assert(
        test_value == "2ðŸ˜ŠðŸ™ƒ",
        "Test failed {test_value} != \"2ðŸ˜ŠðŸ™ƒ\""
    );
}
fn test() {#1 block
  __work_1:text = "";
  a:text = "";
  test_value:text["a"] = {#2 block
    a:text = "12ðŸ˜ŠðŸ™ƒ45";
    OpGetTextSub(a, 1i32, 7i32);
  }#2:text["a"];
  if OpEqText(test_value, "2ðŸ˜ŠðŸ™ƒ") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "2ðŸ˜ŠðŸ™ƒ"");
    __work_1;
  }#3:text);
}#1

byte-code for sub_utf8:test() [1073]
   0[0]: return-address
   0[4]: Text() var=__work_1[4]:text in 1
   1[28]: Text() var=a[28]:text in 1
   2[52]: Text() var=test_value[52]:text["a"] in 1
   3[76]: ClearText(var[28]) var=a[28]:text in 1
   6[76]: ConstText(_value="12ðŸ˜ŠðŸ™ƒ45") -> text
  20[92]: AppendText(var[28], v1: text)
  23[76]: VarText(var[28]) -> text var=a[28]:text in 1
  26[92]: ConstInt(val=1) -> integer
  31[96]: ConstInt(val=7) -> integer
  36[100]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
  37[92]: AppendText(var[52], v1: text)
  40[76]: VarText(var[52]) -> text var=test_value[52]:text["a"] in 1
  43[92]: ConstText(_value="2ðŸ˜ŠðŸ™ƒ") -> text
  54[108]: EqText(v1: text, v2: text) -> boolean
  55[77]: GotoFalseWord(jump=61, if_false: boolean)
  58[76]: GotoWord(jump=118)
  61[76]: ClearText(var[4]) var=__work_1[4]:text in 1
  64[76]: ConstText(_value="Test failed ") -> text
  78[92]: AppendText(var[4], v1: text)
  81[76]: VarText(var[52]) -> text var=test_value[52]:text["a"] in 1
  84[92]: ConstInt(val=0) -> integer
  89[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
  94[76]: ConstText(_value=" != "2ðŸ˜ŠðŸ™ƒ"") -> text
 111[92]: AppendText(var[4], v1: text)
 114[76]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 117[92]: Panic(message: text)
 118[76]: FreeText(var[52])
 121[76]: FreeText(var[28])
 124[76]: FreeText(var[4])
 127[76]: Return(ret=0, value=0, discard=76)

