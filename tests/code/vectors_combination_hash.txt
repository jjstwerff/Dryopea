struct Count { t: text, v: integer};
struct Counting { v: vector<Count>, h: hash<Count[t]> };
fn fill(c: Counting) {
  c.v = [
    {t:"One", v:1},
    {t:"Two", v:2},
  ];
  c.v += [
    {t:"Three", v:3},
    {t:"Four", v:4},
    {t:"Five", v:5},
    {t:"Six", v:6},
    {t:"Seven", v:7},
    {t:"Eight", v:8},
    {t:"Nine", v:9},
    {t:"Ten", v:10},
    {t:"Eleven", v:11},
    {t:"Twelve", v:12},
    {t:"Thirteen", v:13}
  ];
}

pub fn test() {
    test_value = {c = Counting {};
  fill(c);
  assert(!c.h["None"], "No element");
  c.h["Five"].v + c.h["Seven"].v};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}
Type 17:Count[12]:
    t:text[4]
    v:integer[8]

Type 18:Counting[12]:
    v:array<Count>[4] other [1]
    h:hash<Count[t]>[8] other [65535]

Type 19:array<Count>[4]:Array(17)

Type 20:hash<Count[t]>[4]:Hash(17, [0]) keys [tp:6 desc:false field:4, ]

fn fill(c:Counting) {#block(1):void
  _elm_1(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_1(1), 4i32, "One");
  OpSetInt(_elm_1(1), 8i32, 1i32);
  OpFinishRecord(c(0), _elm_1(1), 18i32, 0i32);
  _elm_1(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_1(1), 4i32, "Two");
  OpSetInt(_elm_1(1), 8i32, 2i32);
  OpFinishRecord(c(0), _elm_1(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Three");
  OpSetInt(_elm_2(1), 8i32, 3i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Four");
  OpSetInt(_elm_2(1), 8i32, 4i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Five");
  OpSetInt(_elm_2(1), 8i32, 5i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Six");
  OpSetInt(_elm_2(1), 8i32, 6i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Seven");
  OpSetInt(_elm_2(1), 8i32, 7i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Eight");
  OpSetInt(_elm_2(1), 8i32, 8i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Nine");
  OpSetInt(_elm_2(1), 8i32, 9i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Ten");
  OpSetInt(_elm_2(1), 8i32, 10i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Eleven");
  OpSetInt(_elm_2(1), 8i32, 11i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Twelve");
  OpSetInt(_elm_2(1), 8i32, 12i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
  _elm_2(1):ref(Count)["c"] = OpNewRecord(c(0), 18i32, 0i32);
  OpSetText(_elm_2(1), 4i32, "Thirteen");
  OpSetInt(_elm_2(1), 8i32, 13i32);
  OpFinishRecord(c(0), _elm_2(1), 18i32, 0i32);
}#block(1):void

byte-code for combination_hash:fill(c: ref(Counting)[4]) [1119]
   0[16]: return-address
   0[20]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
   3[32]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
   8[32]: VarRef(var[20]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_1[20]:ref(Count)["c"]
  11[44]: ConstText(_value="One") -> text
  16[60]: SetText(v1: ref(reference), fld=4, val: text)
  19[32]: VarRef(var[20]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_1[20]:ref(Count)["c"]
  22[44]: ConstInt(val=1) -> integer
  27[48]: SetInt(v1: ref(reference), fld=8, val: integer)
  30[32]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
  33[44]: VarRef(var[20]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_1[20]:ref(Count)["c"]
  36[56]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
  41[32]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
  44[44]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
  49[44]: PutRef(var[20], value: ref(reference))
  52[32]: VarRef(var[20]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_1[20]:ref(Count)["c"]
  55[44]: ConstText(_value="Two") -> text
  60[60]: SetText(v1: ref(reference), fld=4, val: text)
  63[32]: VarRef(var[20]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_1[20]:ref(Count)["c"]
  66[44]: ConstInt(val=2) -> integer
  71[48]: SetInt(v1: ref(reference), fld=8, val: integer)
  74[32]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
  77[44]: VarRef(var[20]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_1[20]:ref(Count)["c"]
  80[56]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
  85[32]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
  88[44]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
  93[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
  96[56]: ConstText(_value="Three") -> text
 103[72]: SetText(v1: ref(reference), fld=4, val: text)
 106[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 109[56]: ConstInt(val=3) -> integer
 114[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 117[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 120[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 123[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 128[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 131[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 136[56]: PutRef(var[32], value: ref(reference))
 139[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 142[56]: ConstText(_value="Four") -> text
 148[72]: SetText(v1: ref(reference), fld=4, val: text)
 151[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 154[56]: ConstInt(val=4) -> integer
 159[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 162[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 165[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 168[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 173[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 176[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 181[56]: PutRef(var[32], value: ref(reference))
 184[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 187[56]: ConstText(_value="Five") -> text
 193[72]: SetText(v1: ref(reference), fld=4, val: text)
 196[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 199[56]: ConstInt(val=5) -> integer
 204[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 207[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 210[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 213[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 218[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 221[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 226[56]: PutRef(var[32], value: ref(reference))
 229[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 232[56]: ConstText(_value="Six") -> text
 237[72]: SetText(v1: ref(reference), fld=4, val: text)
 240[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 243[56]: ConstInt(val=6) -> integer
 248[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 251[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 254[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 257[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 262[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 265[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 270[56]: PutRef(var[32], value: ref(reference))
 273[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 276[56]: ConstText(_value="Seven") -> text
 283[72]: SetText(v1: ref(reference), fld=4, val: text)
 286[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 289[56]: ConstInt(val=7) -> integer
 294[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 297[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 300[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 303[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 308[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 311[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 316[56]: PutRef(var[32], value: ref(reference))
 319[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 322[56]: ConstText(_value="Eight") -> text
 329[72]: SetText(v1: ref(reference), fld=4, val: text)
 332[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 335[56]: ConstInt(val=8) -> integer
 340[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 343[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 346[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 349[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 354[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 357[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 362[56]: PutRef(var[32], value: ref(reference))
 365[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 368[56]: ConstText(_value="Nine") -> text
 374[72]: SetText(v1: ref(reference), fld=4, val: text)
 377[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 380[56]: ConstInt(val=9) -> integer
 385[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 388[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 391[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 394[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 399[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 402[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 407[56]: PutRef(var[32], value: ref(reference))
 410[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 413[56]: ConstText(_value="Ten") -> text
 418[72]: SetText(v1: ref(reference), fld=4, val: text)
 421[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 424[56]: ConstInt(val=10) -> integer
 429[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 432[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 435[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 438[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 443[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 446[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 451[56]: PutRef(var[32], value: ref(reference))
 454[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 457[56]: ConstText(_value="Eleven") -> text
 465[72]: SetText(v1: ref(reference), fld=4, val: text)
 468[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 471[56]: ConstInt(val=11) -> integer
 476[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 479[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 482[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 485[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 490[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 493[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 498[56]: PutRef(var[32], value: ref(reference))
 501[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 504[56]: ConstText(_value="Twelve") -> text
 512[72]: SetText(v1: ref(reference), fld=4, val: text)
 515[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 518[56]: ConstInt(val=12) -> integer
 523[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 526[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 529[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 532[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 537[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 540[56]: NewRecord(data: ref(reference), parent_tp=18, fld=0) -> ref(reference)
 545[56]: PutRef(var[32], value: ref(reference))
 548[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 551[56]: ConstText(_value="Thirteen") -> text
 561[72]: SetText(v1: ref(reference), fld=4, val: text)
 564[44]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 567[56]: ConstInt(val=13) -> integer
 572[60]: SetInt(v1: ref(reference), fld=8, val: integer)
 575[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[4]:ref(Counting)
 578[56]: VarRef(var[32]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[17] var=_elm_2[32]:ref(Count)["c"]
 581[68]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=18, fld=0)
 586[44]: Return(ret=12, value=0, discard=40)

fn test() {#block(1):void
  __work_1(1):text = "";
  test_value(1):integer = {#block(2):integer
    c(2):ref(Counting) = null;
    OpDatabase(c(2), 18i32);
    OpSetInt(c(2), 4i32, 0i32);
    OpSetInt(c(2), 8i32, 0i32);
    fill(c(2));
    if OpNot(OpConvBoolFromRef(OpGetRecord(OpGetField(c(2), 8i32, 20i32), 20i32, 1i32, "None"))) null else OpPanic("No element");
    OpAddInt(OpGetInt(OpGetRecord(OpGetField(c(2), 8i32, 20i32), 20i32, 1i32, "Five"), 8i32), OpGetInt(OpGetRecord(OpGetField(c(2), 8i32, 20i32), 20i32, 1i32, "Seven"), 8i32));
    OpFreeRef(c(2));
  }#block(2):integer;
  if OpEqInt(test_value(1), 12i32) null else OpPanic({#Formatted string(3):text
    __work_1(1):text = "Test failed ";
    OpFormatInt(__work_1(1), test_value(1), 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1(1), " != 12");
    __work_1(1);
  }#Formatted string(3):text);
  OpFreeText(__work_1(1));
}#block(1):void

byte-code for combination_hash:test() [1711]
   0[4]: return-address
   0[8]: Text() var=__work_1[8]:text
   1[32]: ConvRefFromNull() -> ref(reference) var=c[32]:ref(Counting)
   2[44]: Database(var[32], db_tp=18) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18]
   7[44]: VarRef(var[32]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[32]:ref(Counting)
  10[56]: ConstInt(val=0) -> integer
  15[60]: SetInt(v1: ref(reference), fld=4, val: integer)
  18[44]: VarRef(var[32]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[32]:ref(Counting)
  21[56]: ConstInt(val=0) -> integer
  26[60]: SetInt(v1: ref(reference), fld=8, val: integer)
  29[44]: VarRef(var[32]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[32]:ref(Counting)
  32[56]: Call(size=0, to=1119)
  39[44]: VarRef(var[32]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[32]:ref(Counting)
  42[56]: GetField(v1: ref(reference), fld=8) -> ref(reference) type=hash<Count[t]>[4]:Hash(17, [0]) keys [tp:6 desc:false field:4, ][20]
  45[56]: ConstText(_value="None") -> text
  51[72]: GetRecord(data: ref(reference), db_tp=20, no_keys=1) -> ref(reference)
  55[56]: ConvBoolFromRef(val: ref(reference)) -> boolean
  56[45]: Not(v1: boolean) -> boolean
  57[45]: GotoFalseWord(jump=63, if_false: boolean)
  60[44]: GotoWord(jump=76)
  63[44]: ConstText(_value="No element") -> text
  75[60]: Panic(message: text)
  76[44]: VarRef(var[32]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[32]:ref(Counting)
  79[56]: GetField(v1: ref(reference), fld=8) -> ref(reference) type=hash<Count[t]>[4]:Hash(17, [0]) keys [tp:6 desc:false field:4, ][20]
  82[56]: ConstText(_value="Five") -> text
  88[72]: GetRecord(data: ref(reference), db_tp=20, no_keys=1) -> ref(reference)
  92[56]: GetInt(v1: ref(reference), fld=8) -> integer
  95[48]: VarRef(var[32]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[32]:ref(Counting)
  98[60]: GetField(v1: ref(reference), fld=8) -> ref(reference) type=hash<Count[t]>[4]:Hash(17, [0]) keys [tp:6 desc:false field:4, ][20]
 101[60]: ConstText(_value="Seven") -> text
 108[76]: GetRecord(data: ref(reference), db_tp=20, no_keys=1) -> ref(reference)
 112[60]: GetInt(v1: ref(reference), fld=8) -> integer
 115[52]: AddInt(v1: integer, v2: integer) -> integer
 116[48]: VarRef(var[32]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[18] var=c[32]:ref(Counting)
 119[60]: FreeRef(v1: ref(reference))
 120[48]: FreeStack(value=4, discard=16)
 124[36]: VarInt(var[32]) -> integer var=test_value[32]:integer
 127[40]: ConstInt(val=12) -> integer
 132[44]: EqInt(v1: integer, v2: integer) -> boolean
 133[37]: GotoFalseWord(jump=139, if_false: boolean)
 136[36]: GotoWord(jump=189)
 139[36]: ClearText(var[8]) var=__work_1[8]:text
 142[36]: ConstText(_value="Test failed ") -> text
 156[52]: AppendText(var[8], v1: text)
 159[36]: VarInt(var[32]) -> integer var=test_value[32]:integer
 162[40]: ConstInt(val=0) -> integer
 167[44]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 174[36]: ConstText(_value=" != 12") -> text
 182[52]: AppendText(var[8], v1: text)
 185[36]: VarText(var[8]) -> text var=__work_1[8]:text
 188[52]: Panic(message: text)
 189[36]: FreeText(var[8])
 192[36]: Return(ret=0, value=0, discard=32)

Execute test:
    0:[8] Text()
    1:[32] ConvRefFromNull() -> ref(1,0,0)[32]
    2:[44] Database(var[32], db_tp=18)
    7:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
   10:[56] ConstInt(val=0) -> 0[56]
   15:[60] SetInt(v1=ref(1,1,0)[44], fld=4, val=0[56])
   18:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
   21:[56] ConstInt(val=0) -> 0[56]
   26:[60] SetInt(v1=ref(1,1,0)[44], fld=8, val=0[56])
   29:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
   32:[56] Call(size=0, to=1119)
 1119:[60] VarRef(var[44]) -> ref(1,1,0)={v:[]}[60]
 1122:[72] NewRecord(data=ref(1,1,0)[60], parent_tp=18, fld=0) -> ref(1,13,0)[60]
 1127:[72] VarRef(var[60]) -> ref(1,13,0)={}[72]
 1130:[84] ConstText(_value="One") -> "One"[84]
 1135:[100] SetText(v1=ref(1,13,0)[72], fld=4, val="One"[84])
 1138:[72] VarRef(var[60]) -> ref(1,13,0)={t:"One"}[72]
 1141:[84] ConstInt(val=1) -> 1[84]
 1146:[88] SetInt(v1=ref(1,13,0)[72], fld=8, val=1[84])
 1149:[72] VarRef(var[44]) -> ref(1,1,0)={v:[]}[72]
 1152:[84] VarRef(var[60]) -> ref(1,13,0)={t:"One",v:1}[84]
 1155:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,13,0)[84], parent_tp=18, fld=0)
 1160:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[72]
 1163:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=18, fld=0) -> ref(1,33,0)[72]
 1168:[84] PutRef(var[60], value=ref(1,33,0)[72])
 1171:[72] VarRef(var[60]) -> ref(1,33,0)={}[72]
 1174:[84] ConstText(_value="Two") -> "Two"[84]
 1179:[100] SetText(v1=ref(1,33,0)[72], fld=4, val="Two"[84])
 1182:[72] VarRef(var[60]) -> ref(1,33,0)={t:"Two"}[72]
 1185:[84] ConstInt(val=2) -> 2[84]
 1190:[88] SetInt(v1=ref(1,33,0)[72], fld=8, val=2[84])
 1193:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[72]
 1196:[84] VarRef(var[60]) -> ref(1,33,0)={t:"Two",v:2}[84]
 1199:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,33,0)[84], parent_tp=18, fld=0)
 1204:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[72]
 1207:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=18, fld=0) -> ref(1,37,0)[72]
 1212:[84] VarRef(var[72]) -> ref(1,37,0)={}[84]
 1215:[96] ConstText(_value="Three") -> "Three"[96]
 1222:[112] SetText(v1=ref(1,37,0)[84], fld=4, val="Three"[96])
 1225:[84] VarRef(var[72]) -> ref(1,37,0)={t:"Three"}[84]
 1228:[96] ConstInt(val=3) -> 3[96]
 1233:[100] SetInt(v1=ref(1,37,0)[84], fld=8, val=3[96])
 1236:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[84]
 1239:[96] VarRef(var[72]) -> ref(1,37,0)={t:"Three",v:3}[96]
 1242:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,37,0)[96], parent_tp=18, fld=0)
 1247:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[84]
 1250:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,41,0)[84]
 1255:[96] PutRef(var[72], value=ref(1,41,0)[84])
 1258:[84] VarRef(var[72]) -> ref(1,41,0)={}[84]
 1261:[96] ConstText(_value="Four") -> "Four"[96]
 1267:[112] SetText(v1=ref(1,41,0)[84], fld=4, val="Four"[96])
 1270:[84] VarRef(var[72]) -> ref(1,41,0)={t:"Four"}[84]
 1273:[96] ConstInt(val=4) -> 4[96]
 1278:[100] SetInt(v1=ref(1,41,0)[84], fld=8, val=4[96])
 1281:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[84]
 1284:[96] VarRef(var[72]) -> ref(1,41,0)={t:"Four",v:4}[96]
 1287:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,41,0)[96], parent_tp=18, fld=0)
 1292:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[84]
 1295:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,45,0)[84]
 1300:[96] PutRef(var[72], value=ref(1,45,0)[84])
 1303:[84] VarRef(var[72]) -> ref(1,45,0)={}[84]
 1306:[96] ConstText(_value="Five") -> "Five"[96]
 1312:[112] SetText(v1=ref(1,45,0)[84], fld=4, val="Five"[96])
 1315:[84] VarRef(var[72]) -> ref(1,45,0)={t:"Five"}[84]
 1318:[96] ConstInt(val=5) -> 5[96]
 1323:[100] SetInt(v1=ref(1,45,0)[84], fld=8, val=5[96])
 1326:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[84]
 1329:[96] VarRef(var[72]) -> ref(1,45,0)={t:"Five",v:5}[96]
 1332:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,45,0)[96], parent_tp=18, fld=0)
 1337:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[84]
 1340:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,49,0)[84]
 1345:[96] PutRef(var[72], value=ref(1,49,0)[84])
 1348:[84] VarRef(var[72]) -> ref(1,49,0)={}[84]
 1351:[96] ConstText(_value="Six") -> "Six"[96]
 1356:[112] SetText(v1=ref(1,49,0)[84], fld=4, val="Six"[96])
 1359:[84] VarRef(var[72]) -> ref(1,49,0)={t:"Six"}[84]
 1362:[96] ConstInt(val=6) -> 6[96]
 1367:[100] SetInt(v1=ref(1,49,0)[84], fld=8, val=6[96])
 1370:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[84]
 1373:[96] VarRef(var[72]) -> ref(1,49,0)={t:"Six",v:6}[96]
 1376:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,49,0)[96], parent_tp=18, fld=0)
 1381:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[84]
 1384:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,53,0)[84]
 1389:[96] PutRef(var[72], value=ref(1,53,0)[84])
 1392:[84] VarRef(var[72]) -> ref(1,53,0)={}[84]
 1395:[96] ConstText(_value="Seven") -> "Seven"[96]
 1402:[112] SetText(v1=ref(1,53,0)[84], fld=4, val="Seven"[96])
 1405:[84] VarRef(var[72]) -> ref(1,53,0)={t:"Seven"}[84]
 1408:[96] ConstInt(val=7) -> 7[96]
 1413:[100] SetInt(v1=ref(1,53,0)[84], fld=8, val=7[96])
 1416:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[84]
 1419:[96] VarRef(var[72]) -> ref(1,53,0)={t:"Seven",v:7}[96]
 1422:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,53,0)[96], parent_tp=18, fld=0)
 1427:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[84]
 1430:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,57,0)[84]
 1435:[96] PutRef(var[72], value=ref(1,57,0)[84])
 1438:[84] VarRef(var[72]) -> ref(1,57,0)={}[84]
 1441:[96] ConstText(_value="Eight") -> "Eight"[96]
 1448:[112] SetText(v1=ref(1,57,0)[84], fld=4, val="Eight"[96])
 1451:[84] VarRef(var[72]) -> ref(1,57,0)={t:"Eight"}[84]
 1454:[96] ConstInt(val=8) -> 8[96]
 1459:[100] SetInt(v1=ref(1,57,0)[84], fld=8, val=8[96])
 1462:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[84]
 1465:[96] VarRef(var[72]) -> ref(1,57,0)={t:"Eight",v:8}[96]
 1468:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,57,0)[96], parent_tp=18, fld=0)
 1473:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[84]
 1476:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,61,0)[84]
 1481:[96] PutRef(var[72], value=ref(1,61,0)[84])
 1484:[84] VarRef(var[72]) -> ref(1,61,0)={}[84]
 1487:[96] ConstText(_value="Nine") -> "Nine"[96]
 1493:[112] SetText(v1=ref(1,61,0)[84], fld=4, val="Nine"[96])
 1496:[84] VarRef(var[72]) -> ref(1,61,0)={t:"Nine"}[84]
 1499:[96] ConstInt(val=9) -> 9[96]
 1504:[100] SetInt(v1=ref(1,61,0)[84], fld=8, val=9[96])
 1507:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[84]
 1510:[96] VarRef(var[72]) -> ref(1,61,0)={t:"Nine",v:9}[96]
 1513:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,61,0)[96], parent_tp=18, fld=0)
 1518:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[84]
 1521:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,65,0)[84]
 1526:[96] PutRef(var[72], value=ref(1,65,0)[84])
 1529:[84] VarRef(var[72]) -> ref(1,65,0)={}[84]
 1532:[96] ConstText(_value="Ten") -> "Ten"[96]
 1537:[112] SetText(v1=ref(1,65,0)[84], fld=4, val="Ten"[96])
 1540:[84] VarRef(var[72]) -> ref(1,65,0)={t:"Ten"}[84]
 1543:[96] ConstInt(val=10) -> 10[96]
 1548:[100] SetInt(v1=ref(1,65,0)[84], fld=8, val=10[96])
 1551:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[84]
 1554:[96] VarRef(var[72]) -> ref(1,65,0)={t:"Ten",v:10}[96]
 1557:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,65,0)[96], parent_tp=18, fld=0)
 1562:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[84]
 1565:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,69,0)[84]
 1570:[96] PutRef(var[72], value=ref(1,69,0)[84])
 1573:[84] VarRef(var[72]) -> ref(1,69,0)={}[84]
 1576:[96] ConstText(_value="Eleven") -> "Eleven"[96]
 1584:[112] SetText(v1=ref(1,69,0)[84], fld=4, val="Eleven"[96])
 1587:[84] VarRef(var[72]) -> ref(1,69,0)={t:"Eleven"}[84]
 1590:[96] ConstInt(val=11) -> 11[96]
 1595:[100] SetInt(v1=ref(1,69,0)[84], fld=8, val=11[96])
 1598:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[84]
 1601:[96] VarRef(var[72]) -> ref(1,69,0)={t:"Eleven",v:11}[96]
 1604:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,69,0)[96], parent_tp=18, fld=0)
 1609:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[84]
 1612:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,90,0)[84]
 1617:[96] PutRef(var[72], value=ref(1,90,0)[84])
 1620:[84] VarRef(var[72]) -> ref(1,90,0)={}[84]
 1623:[96] ConstText(_value="Twelve") -> "Twelve"[96]
 1631:[112] SetText(v1=ref(1,90,0)[84], fld=4, val="Twelve"[96])
 1634:[84] VarRef(var[72]) -> ref(1,90,0)={t:"Twelve"}[84]
 1637:[96] ConstInt(val=12) -> 12[96]
 1642:[100] SetInt(v1=ref(1,90,0)[84], fld=8, val=12[96])
 1645:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[84]
 1648:[96] VarRef(var[72]) -> ref(1,90,0)={t:"Twelve",v:12}[96]
 1651:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,90,0)[96], parent_tp=18, fld=0)
 1656:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[84]
 1659:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=18, fld=0) -> ref(1,94,0)[84]
 1664:[96] PutRef(var[72], value=ref(1,94,0)[84])
 1667:[84] VarRef(var[72]) -> ref(1,94,0)={}[84]
 1670:[96] ConstText(_value="Thirteen") -> "Thirteen"[96]
 1680:[112] SetText(v1=ref(1,94,0)[84], fld=4, val="Thirteen"[96])
 1683:[84] VarRef(var[72]) -> ref(1,94,0)={t:"Thirteen"}[84]
 1686:[96] ConstInt(val=13) -> 13[96]
 1691:[100] SetInt(v1=ref(1,94,0)[84], fld=8, val=13[96])
 1694:[84] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[84]
 1697:[96] VarRef(var[72]) -> ref(1,94,0)={t:"Thirteen",v:13}[96]
 1700:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,94,0)[96], parent_tp=18, fld=0)
 1705:[84] Return(ret=1750[56], value=0, discard=40)
   39:[44] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[44]
   42:[56] GetField(v1=ref(1,1,0)[44], fld=8) -> ref(1,1,8)=[{t:"Eight",v:8},{t:"Eleven",v:11},{t:"Five",v:5},{t:"Four",v:4},{t:"Nine",v:9},{t:"One",v:1},{t:"Seven",v:7},{t:"Six",v:6},{t:"Ten",v:10},{t:"Thirteen",v:13},{t:"Three",v:3},{t:"Twelve",v:12},{t:"Two",v:2}][44]
   45:[56] ConstText(_value="None") -> "None"[56]
   51:[72] GetRecord(data=ref(1,1,8)[44], db_tp=20, no_keys=1, key1="None"[56]) -> ref(1,0,0)[44]
   55:[56] ConvBoolFromRef(val=ref(1,0,0)[44]) -> false[44]
   56:[45] Not(v1=false[44]) -> true[44]
   57:[45] GotoFalseWord(jump=63, if_false=true[44])
   60:[44] GotoWord(jump=76)
   76:[44] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[44]
   79:[56] GetField(v1=ref(1,1,0)[44], fld=8) -> ref(1,1,8)=[{t:"Eight",v:8},{t:"Eleven",v:11},{t:"Five",v:5},{t:"Four",v:4},{t:"Nine",v:9},{t:"One",v:1},{t:"Seven",v:7},{t:"Six",v:6},{t:"Ten",v:10},{t:"Thirteen",v:13},{t:"Three",v:3},{t:"Twelve",v:12},{t:"Two",v:2}][44]
   82:[56] ConstText(_value="Five") -> "Five"[56]
   88:[72] GetRecord(data=ref(1,1,8)[44], db_tp=20, no_keys=1, key1="Five"[56]) -> ref(1,45,0)[44]
   92:[56] GetInt(v1=ref(1,45,0)[44], fld=8) -> 5[44]
   95:[48] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[48]
   98:[60] GetField(v1=ref(1,1,0)[48], fld=8) -> ref(1,1,8)=[{t:"Eight",v:8},{t:"Eleven",v:11},{t:"Five",v:5},{t:"Four",v:4},{t:"Nine",v:9},{t:"One",v:1},{t:"Seven",v:7},{t:"Six",v:6},{t:"Ten",v:10},{t:"Thirteen",v:13},{t:"Three",v:3},{t:"Twelve",v:12},{t:"Two",v:2}][48]
  101:[60] ConstText(_value="Seven") -> "Seven"[60]
  108:[76] GetRecord(data=ref(1,1,8)[48], db_tp=20, no_keys=1, key1="Seven"[60]) -> ref(1,53,0)[48]
  112:[60] GetInt(v1=ref(1,53,0)[48], fld=8) -> 7[48]
  115:[52] AddInt(v1=5[44], v2=7[48]) -> 12[44]
  116:[48] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[48]
  119:[60] FreeRef(v1=ref(1,1,0)[48])
  120:[48] FreeStack(value=4, discard=16)
  124:[36] VarInt(var[32]) -> 12[36]
  127:[40] ConstInt(val=12) -> 12[40]
  132:[44] EqInt(v1=12[36], v2=12[40]) -> true[36]
  133:[37] GotoFalseWord(jump=139, if_false=true[36])
  136:[36] GotoWord(jump=189)
  189:[36] FreeText(var[8])
  192:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
