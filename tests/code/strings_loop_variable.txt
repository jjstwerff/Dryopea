pub fn test() {
    test_value = {a = 0; for _t in 1..5 { b = "123"; a += b as integer; if a > 200 { break; }}; a};
    assert(
        test_value == 246,
        "Test failed {test_value} != 246"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    a:integer = 0i32;
    {#3 for
      _t#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        _t:integer = {#5 for next
          _t#index:integer = if OpNot(OpConvBoolFromInt(_t#index)) 1i32 else OpAddInt(_t#index, 1i32);
          if OpGeInt(_t#index, 5i32) break(0) else null;
          _t#index;
        }#5:integer;
        {#6 block
          b:text = "123";
          a:integer = OpAddInt(a, OpCastIntFromText(b));
          if OpGtInt(a, 200i32) {#7 block
            break(0);
          }#7 else null;
        }#6;
      }#4;
    }#3;
    a;
  }#2:integer;
  if OpEqInt(test_value, 246i32) null else OpPanic({#8 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 246");
    __work_1;
  }#8:text);
}#1

byte-code for loop_variable:test()
 645[0]: return-address
 645[4]: Text() var=__work_1[4]:text in 1
 646[28]: ConstInt(val=0) -> integer var=a[28]:integer in 2
 651[32]: ConvIntFromNull() -> integer var=_t#index[32]:integer in 3
 652[36]: VarInt(var[32]) -> integer var=_t#index[32]:integer in 3
 655[40]: ConvBoolFromInt(v1: integer) -> boolean
 656[37]: Not(v1: boolean) -> boolean
 657[37]: GotoFalseWord(jump=668, if_false: boolean)
 660[36]: ConstInt(val=1) -> integer
 665[40]: GotoWord(jump=677)
 668[36]: VarInt(var[32]) -> integer var=_t#index[32]:integer in 3
 671[40]: ConstInt(val=1) -> integer
 676[44]: AddInt(v1: integer, v2: integer) -> integer
 677[40]: PutInt(var[32], value: integer)
 680[36]: VarInt(var[32]) -> integer var=_t#index[32]:integer in 3
 683[40]: ConstInt(val=5) -> integer
 688[44]: GeInt(v1: integer, v2: integer) -> boolean
 689[37]: GotoFalseWord(jump=695, if_false: boolean)
 692[36]: GotoWord(jump=754)
 695[36]: VarInt(var[32]) -> integer var=_t#index[32]:integer in 3
 698[40]: Text() var=b[40]:text in 6
 699[64]: ConstText(_value="123") -> text
 704[80]: AppendText(var[40], v1: text)
 707[64]: VarInt(var[28]) -> integer var=a[28]:integer in 2
 710[68]: VarText(var[40]) -> text var=b[40]:text in 6
 713[84]: CastIntFromText(v1: text) -> integer
 714[72]: AddInt(v1: integer, v2: integer) -> integer
 715[68]: PutInt(var[28], value: integer)
 718[64]: VarInt(var[28]) -> integer var=a[28]:integer in 2
 721[68]: ConstInt(val=200) -> integer
 726[72]: GtInt(v1: integer, v2: integer) -> boolean
 727[65]: GotoFalseWord(jump=740, if_false: boolean)
 730[64]: FreeText(var[40])
 733[64]: FreeStack(value=0, discard=28)
 737[36]: GotoWord(jump=754)
 740[64]: FreeText(var[40])
 743[64]: FreeStack(value=0, discard=24)
 747[40]: FreeStack(value=0, discard=4)
 751[36]: GotoWord(jump=652)
 754[36]: FreeStack(value=0, discard=4)
 758[32]: VarInt(var[28]) -> integer var=a[28]:integer in 2
 761[36]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 765[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 768[36]: ConstInt(val=246) -> integer
 773[40]: EqInt(v1: integer, v2: integer) -> boolean
 774[33]: GotoFalseWord(jump=780, if_false: boolean)
 777[32]: GotoWord(jump=831)
 780[32]: ClearText(var[4]) var=__work_1[4]:text in 1
 783[32]: ConstText(_value="Test failed ") -> text
 797[48]: AppendText(var[4], v1: text)
 800[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 803[36]: ConstInt(val=0) -> integer
 808[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 815[32]: ConstText(_value=" != 246") -> text
 824[48]: AppendText(var[4], v1: text)
 827[32]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 830[48]: Panic(message: text)
 831[32]: FreeText(var[4])
 834[32]: Return(ret=0, value=0, discard=32)

Execute test:
  645:[8] Text()
  646:[32] ConstInt(val=0) -> 0[32]
  651:[36] ConvIntFromNull() -> -2147483648[36]
  652:[40] VarInt(var[36]) -> -2147483648[40]
  655:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  656:[41] Not(v1=false[40]) -> true[40]
  657:[41] GotoFalseWord(jump=668, if_false=true[40])
  660:[40] ConstInt(val=1) -> 1[40]
  665:[44] GotoWord(jump=677)
  677:[44] PutInt(var[36], value=1[40])
  680:[40] VarInt(var[36]) -> 1[40]
  683:[44] ConstInt(val=5) -> 5[44]
  688:[48] GeInt(v1=1[40], v2=5[44]) -> false[40]
  689:[41] GotoFalseWord(jump=695, if_false=false[40])
  695:[40] VarInt(var[36]) -> 1[40]
  698:[44] Text()
  699:[68] ConstText(_value="123") -> "123"[68]
  704:[84] AppendText(var[44], v1="123"[68])
  707:[68] VarInt(var[32]) -> 0[68]
  710:[72] VarText(var[44]) -> "123"[72]
  713:[88] CastIntFromText(v1="123"[72]) -> 123[72]
  714:[76] AddInt(v1=0[68], v2=123[72]) -> 123[68]
  715:[72] PutInt(var[32], value=123[68])
  718:[68] VarInt(var[32]) -> 123[68]
  721:[72] ConstInt(val=200) -> 200[72]
  726:[76] GtInt(v1=123[68], v2=200[72]) -> false[68]
  727:[69] GotoFalseWord(jump=740, if_false=false[68])
  740:[68] FreeText(var[44])
  743:[68] FreeStack(value=0, discard=24)
  747:[44] FreeStack(value=0, discard=4)
  751:[40] GotoWord(jump=652)
  652:[40] VarInt(var[36]) -> 1[40]
  655:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  656:[41] Not(v1=true[40]) -> false[40]
  657:[41] GotoFalseWord(jump=668, if_false=false[40])
  668:[40] VarInt(var[36]) -> 1[40]
  671:[44] ConstInt(val=1) -> 1[44]
  676:[48] AddInt(v1=1[40], v2=1[44]) -> 2[40]
  677:[44] PutInt(var[36], value=2[40])
  680:[40] VarInt(var[36]) -> 2[40]
  683:[44] ConstInt(val=5) -> 5[44]
  688:[48] GeInt(v1=2[40], v2=5[44]) -> false[40]
  689:[41] GotoFalseWord(jump=695, if_false=false[40])
  695:[40] VarInt(var[36]) -> 2[40]
  698:[44] Text()
  699:[68] ConstText(_value="123") -> "123"[68]
  704:[84] AppendText(var[44], v1="123"[68])
  707:[68] VarInt(var[32]) -> 123[68]
  710:[72] VarText(var[44]) -> "123"[72]
  713:[88] CastIntFromText(v1="123"[72]) -> 123[72]
  714:[76] AddInt(v1=123[68], v2=123[72]) -> 246[68]
  715:[72] PutInt(var[32], value=246[68])
  718:[68] VarInt(var[32]) -> 246[68]
  721:[72] ConstInt(val=200) -> 200[72]
  726:[76] GtInt(v1=246[68], v2=200[72]) -> true[68]
  727:[69] GotoFalseWord(jump=740, if_false=true[68])
  730:[68] FreeText(var[44])
  733:[68] FreeStack(value=0, discard=28)
  737:[40] GotoWord(jump=754)
  754:[40] FreeStack(value=0, discard=4)
  758:[36] VarInt(var[32]) -> 246[36]
  761:[40] FreeStack(value=4, discard=8)
  765:[36] VarInt(var[32]) -> 246[36]
  768:[40] ConstInt(val=246) -> 246[40]
  773:[44] EqInt(v1=246[36], v2=246[40]) -> true[36]
  774:[37] GotoFalseWord(jump=780, if_false=true[36])
  777:[36] GotoWord(jump=831)
  831:[36] FreeText(var[8])
  834:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
