pub fn test() {
    test_value = {a = 0; for _t in 1..5 { b = "123"; a += b as integer; if a > 200 { break; }}; a};
    assert(
        test_value == 246,
        "Test failed {test_value} != 246"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    a:integer = 0i32;
    {#3 for
      _t#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        _t:integer = {#5 for next
          _t#index:integer = if OpNot(OpConvBoolFromInt(_t#index)) 1i32 else OpAddInt(_t#index, 1i32);
          if OpGeInt(_t#index, 5i32) break(0) else null;
          _t#index;
        }#5:integer;
        {#6 block
          b:text = "123";
          a:integer = OpAddInt(a, OpCastIntFromText(b));
          if OpGtInt(a, 200i32) {#7 block
            break(0);
          }#7 else null;
        }#6;
      }#4;
    }#3;
    a;
  }#2:integer;
  if OpEqInt(test_value, 246i32) null else OpPanic({#8 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 246");
    __work_1;
  }#8:text);
}#1

byte-code for loop_variable:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: ConstInt(val=0) -> integer
 697[32]: ConvIntFromNull() -> integer
 698[36]: VarInt(var[32]) -> integer
 701[40]: ConvBoolFromInt(v1: integer) -> boolean
 702[37]: Not(v1: boolean) -> boolean
 703[37]: GotoFalseWord(jump=714, if_false: boolean)
 706[36]: ConstInt(val=1) -> integer
 711[40]: GotoWord(jump=723)
 714[36]: VarInt(var[32]) -> integer
 717[40]: ConstInt(val=1) -> integer
 722[44]: AddInt(v1: integer, v2: integer) -> integer
 723[40]: PutInt(var[32], value: integer)
 726[36]: VarInt(var[32]) -> integer
 729[40]: ConstInt(val=5) -> integer
 734[44]: GeInt(v1: integer, v2: integer) -> boolean
 735[37]: GotoFalseWord(jump=741, if_false: boolean)
 738[36]: GotoWord(jump=800)
 741[36]: VarInt(var[32]) -> integer
 744[40]: Text()
 745[64]: ConstText(_value="123") -> text
 750[80]: AppendText(var[40], v1: text)
 753[64]: VarInt(var[28]) -> integer
 756[68]: VarText(var[40]) -> text
 759[84]: CastIntFromText(v1: text) -> integer
 760[72]: AddInt(v1: integer, v2: integer) -> integer
 761[68]: PutInt(var[28], value: integer)
 764[64]: VarInt(var[28]) -> integer
 767[68]: ConstInt(val=200) -> integer
 772[72]: GtInt(v1: integer, v2: integer) -> boolean
 773[65]: GotoFalseWord(jump=786, if_false: boolean)
 776[64]: FreeText(var[40])
 779[64]: FreeStack(value=0, discard=28)
 783[36]: GotoWord(jump=800)
 786[64]: FreeText(var[40])
 789[64]: FreeStack(value=0, discard=24)
 793[40]: FreeStack(value=0, discard=4)
 797[36]: GotoWord(jump=698)
 800[36]: FreeStack(value=0, discard=4)
 804[32]: VarInt(var[28]) -> integer
 807[36]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 811[32]: VarInt(var[28]) -> integer
 814[36]: ConstInt(val=246) -> integer
 819[40]: EqInt(v1: integer, v2: integer) -> boolean
 820[33]: GotoFalseWord(jump=826, if_false: boolean)
 823[32]: GotoWord(jump=877)
 826[32]: ClearText(var[4])
 829[32]: ConstText(_value="Test failed ") -> text
 843[48]: AppendText(var[4], v1: text)
 846[32]: VarInt(var[28]) -> integer
 849[36]: ConstInt(val=0) -> integer
 854[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 861[32]: ConstText(_value=" != 246") -> text
 870[48]: AppendText(var[4], v1: text)
 873[32]: VarText(var[4]) -> text
 876[48]: Panic(message: text)
 877[32]: FreeText(var[4])
 880[32]: Return(ret=0, value=0, discard=32)

Execute test:
  691:[8] Text()
  692:[32] ConstInt(val=0) -> 0[32]
  697:[36] ConvIntFromNull() -> -2147483648[36]
  698:[40] VarInt(var[36]) -> -2147483648[40]
  701:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  702:[41] Not(v1=false[40]) -> true[40]
  703:[41] GotoFalseWord(jump=714, if_false=true[40])
  706:[40] ConstInt(val=1) -> 1[40]
  711:[44] GotoWord(jump=723)
  723:[44] PutInt(var[36], value=1[40])
  726:[40] VarInt(var[36]) -> 1[40]
  729:[44] ConstInt(val=5) -> 5[44]
  734:[48] GeInt(v1=1[40], v2=5[44]) -> false[40]
  735:[41] GotoFalseWord(jump=741, if_false=false[40])
  741:[40] VarInt(var[36]) -> 1[40]
  744:[44] Text()
  745:[68] ConstText(_value="123") -> "123"[68]
  750:[84] AppendText(var[44], v1="123"[68])
  753:[68] VarInt(var[32]) -> 0[68]
  756:[72] VarText(var[44]) -> "123"[72]
  759:[88] CastIntFromText(v1="123"[72]) -> 123[72]
  760:[76] AddInt(v1=0[68], v2=123[72]) -> 123[68]
  761:[72] PutInt(var[32], value=123[68])
  764:[68] VarInt(var[32]) -> 123[68]
  767:[72] ConstInt(val=200) -> 200[72]
  772:[76] GtInt(v1=123[68], v2=200[72]) -> false[68]
  773:[69] GotoFalseWord(jump=786, if_false=false[68])
  786:[68] FreeText(var[44])
  789:[68] FreeStack(value=0, discard=24)
  793:[44] FreeStack(value=0, discard=4)
  797:[40] GotoWord(jump=698)
  698:[40] VarInt(var[36]) -> 1[40]
  701:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  702:[41] Not(v1=true[40]) -> false[40]
  703:[41] GotoFalseWord(jump=714, if_false=false[40])
  714:[40] VarInt(var[36]) -> 1[40]
  717:[44] ConstInt(val=1) -> 1[44]
  722:[48] AddInt(v1=1[40], v2=1[44]) -> 2[40]
  723:[44] PutInt(var[36], value=2[40])
  726:[40] VarInt(var[36]) -> 2[40]
  729:[44] ConstInt(val=5) -> 5[44]
  734:[48] GeInt(v1=2[40], v2=5[44]) -> false[40]
  735:[41] GotoFalseWord(jump=741, if_false=false[40])
  741:[40] VarInt(var[36]) -> 2[40]
  744:[44] Text()
  745:[68] ConstText(_value="123") -> "123"[68]
  750:[84] AppendText(var[44], v1="123"[68])
  753:[68] VarInt(var[32]) -> 123[68]
  756:[72] VarText(var[44]) -> "123"[72]
  759:[88] CastIntFromText(v1="123"[72]) -> 123[72]
  760:[76] AddInt(v1=123[68], v2=123[72]) -> 246[68]
  761:[72] PutInt(var[32], value=246[68])
  764:[68] VarInt(var[32]) -> 246[68]
  767:[72] ConstInt(val=200) -> 200[72]
  772:[76] GtInt(v1=246[68], v2=200[72]) -> true[68]
  773:[69] GotoFalseWord(jump=786, if_false=true[68])
  776:[68] FreeText(var[44])
  779:[68] FreeStack(value=0, discard=28)
  783:[40] GotoWord(jump=800)
  800:[40] FreeStack(value=0, discard=4)
  804:[36] VarInt(var[32]) -> 246[36]
  807:[40] FreeStack(value=4, discard=8)
  811:[36] VarInt(var[32]) -> 246[36]
  814:[40] ConstInt(val=246) -> 246[40]
  819:[44] EqInt(v1=246[36], v2=246[40]) -> true[36]
  820:[37] GotoFalseWord(jump=826, if_false=true[36])
  823:[36] GotoWord(jump=877)
  877:[36] FreeText(var[8])
  880:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
