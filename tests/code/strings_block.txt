pub fn test() {
    test_value = {s = "1"; s += "2"; s};
    assert(
        test_value == "12",
        "Test failed {test_value} != \"12\""
    );
}
fn test() {#1 block
  __work_1:text = "";
  s:text = "";
  test_value:text["s"] = {#2 block
    s:text = "1";
    OpAppendText(s, "2");
    s;
  }#2:text["s"];
  if OpEqText(test_value, "12") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "12"");
    __work_1;
  }#3:text);
}#1

byte-code for block:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: Text()
 693[52]: Text()
 694[76]: ClearText(var[28])
 697[76]: ConstText(_value="1") -> text
 700[92]: AppendText(var[28], v1: text)
 703[76]: ConstText(_value="2") -> text
 706[92]: AppendText(var[28], v1: text)
 709[76]: VarText(var[28]) -> text
 712[92]: AppendText(var[52], v1: text)
 715[76]: VarText(var[52]) -> text
 718[92]: ConstText(_value="12") -> text
 722[108]: EqText(v1: text, v2: text) -> boolean
 723[77]: GotoFalseWord(jump=729, if_false: boolean)
 726[76]: GotoWord(jump=779)
 729[76]: ClearText(var[4])
 732[76]: ConstText(_value="Test failed ") -> text
 746[92]: AppendText(var[4], v1: text)
 749[76]: VarText(var[52]) -> text
 752[92]: ConstInt(val=0) -> integer
 757[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 762[76]: ConstText(_value=" != "12"") -> text
 772[92]: AppendText(var[4], v1: text)
 775[76]: VarText(var[4]) -> text
 778[92]: Panic(message: text)
 779[76]: FreeText(var[52])
 782[76]: FreeText(var[28])
 785[76]: FreeText(var[4])
 788[76]: Return(ret=0, value=0, discard=76)

Execute test:
  691:[8] Text()
  692:[32] Text()
  693:[56] Text()
  694:[80] ClearText(var[32])
  697:[80] ConstText(_value="1") -> "1"[80]
  700:[96] AppendText(var[32], v1="1"[80])
  703:[80] ConstText(_value="2") -> "2"[80]
  706:[96] AppendText(var[32], v1="2"[80])
  709:[80] VarText(var[32]) -> "12"[80]
  712:[96] AppendText(var[56], v1="12"[80])
  715:[80] VarText(var[56]) -> "12"[80]
  718:[96] ConstText(_value="12") -> "12"[96]
  722:[112] EqText(v1="12"[80], v2="12"[96]) -> true[80]
  723:[81] GotoFalseWord(jump=729, if_false=true[80])
  726:[80] GotoWord(jump=779)
  779:[80] FreeText(var[56])
  782:[80] FreeText(var[32])
  785:[80] FreeText(var[8])
  788:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
