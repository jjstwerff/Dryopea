pub fn test() {
    test_value = {s = "1"; s += "2"; s};
    assert(
        test_value == "12",
        "Test failed {test_value} != \"12\""
    );
}
fn test() {#1 block
  __work_1:text = "";
  s:text = "";
  test_value:text["s"] = {#2 block
    s:text = "1";
    OpAppendText(s, "2");
    s;
  }#2:text["s"];
  if OpEqText(test_value, "12") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "12"");
    __work_1;
  }#3:text);
}#1

byte-code for block:test()
 645[0]: return-address
 645[4]: Text() var=__work_1[4]:text in 1
 646[28]: Text() var=s[28]:text in 1
 647[52]: Text() var=test_value[52]:text["s"] in 1
 648[76]: ClearText(var[28]) var=s[28]:text in 1
 651[76]: ConstText(_value="1") -> text
 654[92]: AppendText(var[28], v1: text)
 657[76]: ConstText(_value="2") -> text
 660[92]: AppendText(var[28], v1: text)
 663[76]: VarText(var[28]) -> text var=s[28]:text in 1
 666[92]: AppendText(var[52], v1: text)
 669[76]: VarText(var[52]) -> text var=test_value[52]:text["s"] in 1
 672[92]: ConstText(_value="12") -> text
 676[108]: EqText(v1: text, v2: text) -> boolean
 677[77]: GotoFalseWord(jump=683, if_false: boolean)
 680[76]: GotoWord(jump=733)
 683[76]: ClearText(var[4]) var=__work_1[4]:text in 1
 686[76]: ConstText(_value="Test failed ") -> text
 700[92]: AppendText(var[4], v1: text)
 703[76]: VarText(var[52]) -> text var=test_value[52]:text["s"] in 1
 706[92]: ConstInt(val=0) -> integer
 711[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 716[76]: ConstText(_value=" != "12"") -> text
 726[92]: AppendText(var[4], v1: text)
 729[76]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 732[92]: Panic(message: text)
 733[76]: FreeText(var[52])
 736[76]: FreeText(var[28])
 739[76]: FreeText(var[4])
 742[76]: Return(ret=0, value=0, discard=76)

Execute test:
  645:[8] Text()
  646:[32] Text()
  647:[56] Text()
  648:[80] ClearText(var[32])
  651:[80] ConstText(_value="1") -> "1"[80]
  654:[96] AppendText(var[32], v1="1"[80])
  657:[80] ConstText(_value="2") -> "2"[80]
  660:[96] AppendText(var[32], v1="2"[80])
  663:[80] VarText(var[32]) -> "12"[80]
  666:[96] AppendText(var[56], v1="12"[80])
  669:[80] VarText(var[56]) -> "12"[80]
  672:[96] ConstText(_value="12") -> "12"[96]
  676:[112] EqText(v1="12"[80], v2="12"[96]) -> true[80]
  677:[81] GotoFalseWord(jump=683, if_false=true[80])
  680:[80] GotoWord(jump=733)
  733:[80] FreeText(var[56])
  736:[80] FreeText(var[32])
  739:[80] FreeText(var[8])
  742:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
