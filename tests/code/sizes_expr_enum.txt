enum En {V1, V2, V3}

pub fn test() {
    test_value = {sizeof(En) + 10 * sizeof(V1)};
    assert(
        test_value == 11,
        "Test failed {test_value} != 11"
    );
}
Type 12:En[1]:Enum(["V1", "V2", "V3"])

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    OpAddInt(1i32, OpMulInt(10i32, 1i32));
  }#2:integer;
  if OpEqInt(test_value, 11i32) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 11");
    __work_1;
  }#3:text);
}#1

byte-code for expr_enum:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: ConstInt(val=1) -> integer
 698[32]: ConstInt(val=10) -> integer
 703[36]: ConstInt(val=1) -> integer
 708[40]: MulInt(v1: integer, v2: integer) -> integer
 709[36]: AddInt(v1: integer, v2: integer) -> integer
 710[32]: VarInt(var[28]) -> integer
 713[36]: ConstInt(val=11) -> integer
 718[40]: EqInt(v1: integer, v2: integer) -> boolean
 719[33]: GotoFalseWord(jump=725, if_false: boolean)
 722[32]: GotoWord(jump=775)
 725[32]: ClearText(var[4])
 728[32]: ConstText(_value="Test failed ") -> text
 742[48]: AppendText(var[4], v1: text)
 745[32]: VarInt(var[28]) -> integer
 748[36]: ConstInt(val=0) -> integer
 753[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 760[32]: ConstText(_value=" != 11") -> text
 768[48]: AppendText(var[4], v1: text)
 771[32]: VarText(var[4]) -> text
 774[48]: Panic(message: text)
 775[32]: FreeText(var[4])
 778[32]: Return(ret=0, value=0, discard=32)

Execute test:
  692:[8] Text()
  693:[32] ConstInt(val=1) -> 1[32]
  698:[36] ConstInt(val=10) -> 10[36]
  703:[40] ConstInt(val=1) -> 1[40]
  708:[44] MulInt(v1=10[36], v2=1[40]) -> 10[36]
  709:[40] AddInt(v1=1[32], v2=10[36]) -> 11[32]
  710:[36] VarInt(var[32]) -> 11[36]
  713:[40] ConstInt(val=11) -> 11[40]
  718:[44] EqInt(v1=11[36], v2=11[40]) -> true[36]
  719:[37] GotoFalseWord(jump=725, if_false=true[36])
  722:[36] GotoWord(jump=775)
  775:[36] FreeText(var[8])
  778:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
