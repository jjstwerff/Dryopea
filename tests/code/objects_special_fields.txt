Test code:
enum Gender { Male, Female, Fluid }
struct Object{a: vector<integer>, b: Gender}
fn sum(o: Object) -> integer {
  r = 0;
  for v in o.a { r += v; };
  r
}

pub fn test() {
    test_value = {  o = Object {a: [1,4,3], b: Fluid};
  o.a += [sum(o)];
  "{o}"};
    assert(
        test_value == "{{a:[1,4,3,8],b:Fluid}}",
        "Test failed {test_value} != \"{{a:[1,4,3,8],b:Fluid}}\""
    );
}

Type 13:Gender[1]:Enum(["Male", "Female", "Fluid"])

Type 14:Object[9]:
    a:vector<integer>[4]
    b:Gender[8]

Type 15:vector<integer>[4]:Vector(0)

fn sum {
  let r = 0i32;
  {
    let v#index = 0i32;
    loop {
      let v = if OpGeInt(v#index, OpLengthVector(OpGetField(o, 4i32, 15i32))) {{
        OpConvIntFromNull();
      }} else {{
        let res_10 = OpGetInt(OpGetVector(OpGetField(o, 4i32, 15i32), 4i32, v#index), 0i32);
        v#index = OpAddInt(v#index, 1i32);
        res_10;
      }};
      if OpNot(OpConvBoolFromInt(v)) {break(0)} else {null};
      {
        r = OpAddInt(r, v);
      };
    };
  };
  r;
}

byte-code for special_fields:sum(o: Object[0]) -> integer
 664[12]: return-address
 664[16]: ConstInt(val=0) -> integer
 669[20]: ConstInt(val=0) -> integer
 674[24]: VarInt(var[20]) -> integer
 677[28]: VarRef(var[0]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 680[40]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[15]
 683[40]: LengthVector(r: vector) -> integer
 684[32]: GeInt(v1: integer, v2: integer) -> boolean
 685[25]: GenGotoFalseWord(jump=692, if_false: boolean)
 688[24]: ConvIntFromNull() -> integer
 689[28]: GenGotoWord(jump=726)
 692[24]: VarRef(var[0]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 695[36]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[15]
 698[36]: VarInt(var[20]) -> integer
 701[40]: GetVector(r: vector, size=4, index: integer) -> reference
 704[36]: GetInt(v1: reference, fld=0) -> integer
 707[28]: VarInt(var[20]) -> integer
 710[32]: ConstInt(val=1) -> integer
 715[36]: AddInt(v1: integer, v2: integer) -> integer
 716[32]: PutInt(var[20], value: integer)
 719[28]: VarInt(var[24]) -> integer
 722[32]: GenFreeStack(value=4, discard=4)
 726[28]: VarInt(var[24]) -> integer
 729[32]: ConvBoolFromInt(v1: integer) -> boolean
 730[29]: Not(v1: boolean) -> boolean
 731[29]: GenGotoFalseWord(jump=741, if_false: boolean)
 734[28]: GenFreeStack(value=0, discard=4)
 738[24]: GenGotoWord(jump=758)
 741[28]: VarInt(var[16]) -> integer
 744[32]: VarInt(var[24]) -> integer
 747[36]: AddInt(v1: integer, v2: integer) -> integer
 748[32]: PutInt(var[16], value: integer)
 751[28]: GenFreeStack(value=0, discard=4)
 755[24]: GenGotoWord(jump=674)
 758[24]: GenFreeStack(value=0, discard=4)
 762[20]: VarInt(var[16]) -> integer
 765[24]: GenReturn(ret=12, value=4, discard=24)

fn test {
  let test_value = {
    let o = {
      let val = OpDatabase(9i32, 14i32);
      OpSetInt(val, 4i32, 0i32);
      let elm_13 = OpNewRecord(val, 14i32, 0i32);
      OpSetInt(elm_13, 0i32, 1i32);
      OpFinishRecord(val, elm_13, 14i32, 0i32);
      elm_13 = OpNewRecord(val, 14i32, 0i32);
      OpSetInt(elm_13, 0i32, 4i32);
      OpFinishRecord(val, elm_13, 14i32, 0i32);
      elm_13 = OpNewRecord(val, 14i32, 0i32);
      OpSetInt(elm_13, 0i32, 3i32);
      OpFinishRecord(val, elm_13, 14i32, 0i32);
      OpSetEnum(val, 8i32, 3u8(13));
      val;
    };
    {
      let elm_14 = OpNewRecord(o, 14i32, 0i32);
      OpSetInt(elm_14, 0i32, sum(o));
      OpFinishRecord(o, elm_14, 14i32, 0i32);
    };
    {
      let append_15 = "";
      OpFormatDatabase(append_15, o, 14i32, false);
      append_15;
    };
  };
  if OpEqText(test_value, "{a:[1,4,3,8],b:Fluid}") {null} else {OpGenPanic({
    let append_16 = "Test failed ";
    OpFormatText(append_16, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_16, " != "{a:[1,4,3,8],b:Fluid}"");
    append_16;
  })};
}

byte-code for special_fields:test()
 771[0]: return-address
 771[4]: Text()
 772[28]: Database(size=9, db_tp=14) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 777[40]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 780[52]: ConstInt(val=0) -> integer
 785[56]: SetInt(v1: reference, fld=4, val: integer)
 788[40]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 791[52]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 796[52]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 799[64]: ConstInt(val=1) -> integer
 804[68]: SetInt(v1: reference, fld=0, val: integer)
 807[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 810[64]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 813[76]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 818[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 821[64]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 826[64]: PutRef(var[40], value: reference)
 829[52]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 832[64]: ConstInt(val=4) -> integer
 837[68]: SetInt(v1: reference, fld=0, val: integer)
 840[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 843[64]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 846[76]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 851[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 854[64]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 859[64]: PutRef(var[40], value: reference)
 862[52]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 865[64]: ConstInt(val=3) -> integer
 870[68]: SetInt(v1: reference, fld=0, val: integer)
 873[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 876[64]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 879[76]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 884[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 887[64]: ConstEnum(val=3) -> enumerate type=Gender[1]:Enum(["Male", "Female", "Fluid"])[13]
 889[65]: SetEnum(v1: reference, fld=8, val: enumerate)
 892[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 895[64]: GenFreeStack(value=12, discard=24)
 899[40]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 902[52]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 907[52]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 910[64]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 913[76]: GenCall(size=0, to=664)
 920[68]: SetInt(v1: reference, fld=0, val: integer)
 923[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 926[64]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 929[76]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 934[52]: GenFreeStack(value=0, discard=12)
 938[40]: Text()
 939[64]: ConstText(_value="") -> text
 941[80]: AppendText(var[40], v1: text)
 944[64]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 947[76]: FormatDatabase(var[40], val: reference, db_tp=14, pretty=false)
 953[64]: VarText(var[40]) -> text
 956[80]: GenFreeStack(value=16, discard=24)
 960[56]: GenFreeStack(value=16, discard=12)
 964[44]: AppendText(var[4], v1: text)
 967[28]: VarText(var[4]) -> text
 970[44]: ConstText(_value="{a:[1,4,3,8],b:Fluid}") -> text
 993[60]: EqText(v1: text, v2: text) -> boolean
 994[29]: GenGotoFalseWord(jump=1000, if_false: boolean)
 997[28]: GenGotoWord(jump=1071)
1000[28]: Text()
1001[52]: ConstText(_value="Test failed ") -> text
1015[68]: AppendText(var[28], v1: text)
1018[52]: VarText(var[4]) -> text
1021[68]: ConstInt(val=0) -> integer
1026[72]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
1031[52]: ConstText(_value=" != "{a:[1,4,3,8],b:Fluid}"") -> text
1060[68]: AppendText(var[28], v1: text)
1063[52]: VarText(var[28]) -> text
1066[68]: GenFreeStack(value=16, discard=24)
1070[44]: GenPanic(message: text)
1071[28]: GenReturn(ret=0, value=0, discard=28)

Execute test:
  771:[4] Text()
  772:[28] Database(size=9, db_tp=14) -> ref(1,1,0)={}[28]
  777:[40] VarRef(var[28]) -> ref(1,1,0)={}[40]
  780:[52] ConstInt(val=0) -> 0[52]
  785:[56] SetInt(v1=ref(1,1,0)[40], fld=4, val=0[52])
  788:[40] VarRef(var[28]) -> ref(1,1,0)={}[40]
  791:[52] NewRecord(data=ref(1,1,0)[40], parent_tp=14, fld=0) -> ref(1,10,8)[40]
  796:[52] VarRef(var[40]) -> ref(1,10,8)=false[52]
  799:[64] ConstInt(val=1) -> 1[64]
  804:[68] SetInt(v1=ref(1,10,8)[52], fld=0, val=1[64])
  807:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1]}[52]
  810:[64] VarRef(var[40]) -> ref(1,10,8)=true[64]
  813:[76] FinishRecord(data=ref(1,1,0)[52], rec=ref(1,10,8)[64], parent_tp=14, fld=0)
  818:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1]}[52]
  821:[64] NewRecord(data=ref(1,1,0)[52], parent_tp=14, fld=0) -> ref(1,10,12)[52]
  826:[64] PutRef(var[40], value=ref(1,10,12)[52])
  829:[52] VarRef(var[40]) -> ref(1,10,12)=false[52]
  832:[64] ConstInt(val=4) -> 4[64]
  837:[68] SetInt(v1=ref(1,10,12)[52], fld=0, val=4[64])
  840:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4]}[52]
  843:[64] VarRef(var[40]) -> ref(1,10,12)=true[64]
  846:[76] FinishRecord(data=ref(1,1,0)[52], rec=ref(1,10,12)[64], parent_tp=14, fld=0)
  851:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4]}[52]
  854:[64] NewRecord(data=ref(1,1,0)[52], parent_tp=14, fld=0) -> ref(1,10,16)[52]
  859:[64] PutRef(var[40], value=ref(1,10,16)[52])
  862:[52] VarRef(var[40]) -> ref(1,10,16)=false[52]
  865:[64] ConstInt(val=3) -> 3[64]
  870:[68] SetInt(v1=ref(1,10,16)[52], fld=0, val=3[64])
  873:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3]}[52]
  876:[64] VarRef(var[40]) -> ref(1,10,16)=true[64]
  879:[76] FinishRecord(data=ref(1,1,0)[52], rec=ref(1,10,16)[64], parent_tp=14, fld=0)
  884:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3]}[52]
  887:[64] ConstEnum(val=3) -> Fluid(3)[64]
  889:[65] SetEnum(v1=ref(1,1,0)[52], fld=8, val=3[64])
  892:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3],b:Fluid}[52]
  895:[64] GenFreeStack(value=12, discard=24)
  899:[40] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3],b:Fluid}[40]
  902:[52] NewRecord(data=ref(1,1,0)[40], parent_tp=14, fld=0) -> ref(1,10,20)[40]
  907:[52] VarRef(var[40]) -> ref(1,10,20)=false[52]
  910:[64] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[64]
  913:[76] GenCall(size=0, to=664)
  664:[80] ConstInt(val=0) -> 0[80]
  669:[84] ConstInt(val=0) -> 0[84]
  674:[88] VarInt(var[84]) -> 0[88]
  677:[92] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[92]
  680:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][92]
  683:[104] LengthVector(r=ref(1,1,4)=true[92]) -> 4[92]
  684:[96] GeInt(v1=0[88], v2=4[92]) -> false[88]
  685:[89] GenGotoFalseWord(jump=692, if_false=false[88])
  692:[88] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[88]
  695:[100] GetField(v1=ref(1,1,0)[88], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][88]
  698:[100] VarInt(var[84]) -> 0[100]
  701:[104] GetVector(r=ref(1,1,4)=true[88], size=4, index=0[100]) -> ref(1,10,8)[88]
  704:[100] GetInt(v1=ref(1,10,8)[88], fld=0) -> 1[88]
  707:[92] VarInt(var[84]) -> 0[92]
  710:[96] ConstInt(val=1) -> 1[96]
  715:[100] AddInt(v1=0[92], v2=1[96]) -> 1[92]
  716:[96] PutInt(var[84], value=1[92])
  719:[92] VarInt(var[88]) -> 1[92]
  722:[96] GenFreeStack(value=4, discard=4)
  726:[92] VarInt(var[88]) -> 1[92]
  729:[96] ConvBoolFromInt(v1=1[92]) -> true[92]
  730:[93] Not(v1=true[92]) -> false[92]
  731:[93] GenGotoFalseWord(jump=741, if_false=false[92])
  741:[92] VarInt(var[80]) -> 0[92]
  744:[96] VarInt(var[88]) -> 1[96]
  747:[100] AddInt(v1=0[92], v2=1[96]) -> 1[92]
  748:[96] PutInt(var[80], value=1[92])
  751:[92] GenFreeStack(value=0, discard=4)
  755:[88] GenGotoWord(jump=674)
  674:[88] VarInt(var[84]) -> 1[88]
  677:[92] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[92]
  680:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][92]
  683:[104] LengthVector(r=ref(1,1,4)=true[92]) -> 4[92]
  684:[96] GeInt(v1=1[88], v2=4[92]) -> false[88]
  685:[89] GenGotoFalseWord(jump=692, if_false=false[88])
  692:[88] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[88]
  695:[100] GetField(v1=ref(1,1,0)[88], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][88]
  698:[100] VarInt(var[84]) -> 1[100]
  701:[104] GetVector(r=ref(1,1,4)=true[88], size=4, index=1[100]) -> ref(1,10,12)[88]
  704:[100] GetInt(v1=ref(1,10,12)[88], fld=0) -> 4[88]
  707:[92] VarInt(var[84]) -> 1[92]
  710:[96] ConstInt(val=1) -> 1[96]
  715:[100] AddInt(v1=1[92], v2=1[96]) -> 2[92]
  716:[96] PutInt(var[84], value=2[92])
  719:[92] VarInt(var[88]) -> 4[92]
  722:[96] GenFreeStack(value=4, discard=4)
  726:[92] VarInt(var[88]) -> 4[92]
  729:[96] ConvBoolFromInt(v1=4[92]) -> true[92]
  730:[93] Not(v1=true[92]) -> false[92]
  731:[93] GenGotoFalseWord(jump=741, if_false=false[92])
  741:[92] VarInt(var[80]) -> 1[92]
  744:[96] VarInt(var[88]) -> 4[96]
  747:[100] AddInt(v1=1[92], v2=4[96]) -> 5[92]
  748:[96] PutInt(var[80], value=5[92])
  751:[92] GenFreeStack(value=0, discard=4)
  755:[88] GenGotoWord(jump=674)
  674:[88] VarInt(var[84]) -> 2[88]
  677:[92] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[92]
  680:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][92]
  683:[104] LengthVector(r=ref(1,1,4)=true[92]) -> 4[92]
  684:[96] GeInt(v1=2[88], v2=4[92]) -> false[88]
  685:[89] GenGotoFalseWord(jump=692, if_false=false[88])
  692:[88] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[88]
  695:[100] GetField(v1=ref(1,1,0)[88], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][88]
  698:[100] VarInt(var[84]) -> 2[100]
  701:[104] GetVector(r=ref(1,1,4)=true[88], size=4, index=2[100]) -> ref(1,10,16)[88]
  704:[100] GetInt(v1=ref(1,10,16)[88], fld=0) -> 3[88]
  707:[92] VarInt(var[84]) -> 2[92]
  710:[96] ConstInt(val=1) -> 1[96]
  715:[100] AddInt(v1=2[92], v2=1[96]) -> 3[92]
  716:[96] PutInt(var[84], value=3[92])
  719:[92] VarInt(var[88]) -> 3[92]
  722:[96] GenFreeStack(value=4, discard=4)
  726:[92] VarInt(var[88]) -> 3[92]
  729:[96] ConvBoolFromInt(v1=3[92]) -> true[92]
  730:[93] Not(v1=true[92]) -> false[92]
  731:[93] GenGotoFalseWord(jump=741, if_false=false[92])
  741:[92] VarInt(var[80]) -> 5[92]
  744:[96] VarInt(var[88]) -> 3[96]
  747:[100] AddInt(v1=5[92], v2=3[96]) -> 8[92]
  748:[96] PutInt(var[80], value=8[92])
  751:[92] GenFreeStack(value=0, discard=4)
  755:[88] GenGotoWord(jump=674)
  674:[88] VarInt(var[84]) -> 3[88]
  677:[92] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[92]
  680:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][92]
  683:[104] LengthVector(r=ref(1,1,4)=true[92]) -> 4[92]
  684:[96] GeInt(v1=3[88], v2=4[92]) -> false[88]
  685:[89] GenGotoFalseWord(jump=692, if_false=false[88])
  692:[88] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[88]
  695:[100] GetField(v1=ref(1,1,0)[88], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][88]
  698:[100] VarInt(var[84]) -> 3[100]
  701:[104] GetVector(r=ref(1,1,4)=true[88], size=4, index=3[100]) -> ref(1,10,20)[88]
  704:[100] GetInt(v1=ref(1,10,20)[88], fld=0) -> -2147483648[88]
  707:[92] VarInt(var[84]) -> 3[92]
  710:[96] ConstInt(val=1) -> 1[96]
  715:[100] AddInt(v1=3[92], v2=1[96]) -> 4[92]
  716:[96] PutInt(var[84], value=4[92])
  719:[92] VarInt(var[88]) -> -2147483648[92]
  722:[96] GenFreeStack(value=4, discard=4)
  726:[92] VarInt(var[88]) -> -2147483648[92]
  729:[96] ConvBoolFromInt(v1=-2147483648[92]) -> false[92]
  730:[93] Not(v1=false[92]) -> true[92]
  731:[93] GenGotoFalseWord(jump=741, if_false=true[92])
  734:[92] GenFreeStack(value=0, discard=4)
  738:[88] GenGotoWord(jump=758)
  758:[88] GenFreeStack(value=0, discard=4)
  762:[84] VarInt(var[80]) -> 8[84]
  765:[88] GenReturn(ret=920[76], value=4, discard=24)
  920:[68] SetInt(v1=ref(1,10,20)[52], fld=0, val=8[64])
  923:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3,8],b:Fluid}[52]
  926:[64] VarRef(var[40]) -> ref(1,10,20)=true[64]
  929:[76] FinishRecord(data=ref(1,1,0)[52], rec=ref(1,10,20)[64], parent_tp=14, fld=0)
  934:[52] GenFreeStack(value=0, discard=12)
  938:[40] Text()
  939:[64] ConstText(_value="") -> ""[64]
  941:[80] AppendText(var[40], v1=""[64])
  944:[64] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3,8],b:Fluid}[64]
  947:[76] FormatDatabase(var[40], val=ref(1,1,0)[64], db_tp=14, pretty=false)
  953:[64] VarText(var[40]) -> "{a:[1,4,3,8],b:Fluid}"[64]
  956:[80] GenFreeStack(value=16, discard=24)
  960:[56] GenFreeStack(value=16, discard=12)
  964:[44] AppendText(var[4], v1="{a:[1,4,3,8],b:Fluid}"[28])
  967:[28] VarText(var[4]) -> "{a:[1,4,3,8],b:Fluid}"[28]
  970:[44] ConstText(_value="{a:[1,4,3,8],b:Fluid}") -> "{a:[1,4,3,8],b:Fluid}"[44]
  993:[60] EqText(v1="{a:[1,4,3,8],b:Fluid}"[28], v2="{a:[1,4,3,8],b:Fluid}"[44]) -> true[28]
  994:[29] GenGotoFalseWord(jump=1000, if_false=true[28])
  997:[28] GenGotoWord(jump=1071)
 1071:[28] GenReturn(ret=4294967295[0], value=0, discard=28)
Finished
