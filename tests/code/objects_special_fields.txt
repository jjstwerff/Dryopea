Test code:
enum Gender { Male, Female, Fluid }
struct Object{a: vector<integer>, b: Gender}
fn sum(o: Object) -> integer {
  r = 0;
  for v in o.a { r += v; };
  r
}

pub fn test() {
    test_value = {  o = Object {a: [1,4,3], b: Fluid};
  o.a += [sum(o)];
  "{o}"};
    assert(
        test_value == "{{a:[1,4,3,8],b:Fluid}}",
        "Test failed {test_value} != \"{{a:[1,4,3,8],b:Fluid}}\""
    );
}

Type 13:Gender[1]:Enum(["Male", "Female", "Fluid"])

Type 14:Object[9]:
    a:vector<integer>[4]
    b:Gender[8]

Type 15:vector<integer>[4]:Vector(0)

fn sum {
  let r = 0i32;
  {
    let v#index = 0i32;
    loop {
      let v = if OpGeInt(v#index, OpLengthVector(OpGetField(o, 4i32, 15i32))) {{
        OpConvIntFromNull();
      }} else {{
        let res_10 = OpGetInt(OpGetVector(OpGetField(o, 4i32, 15i32), 4i32, v#index), 0i32);
        v#index = OpAddInt(v#index, 1i32);
        res_10;
      }};
      if OpNot(OpConvBoolFromInt(v)) {break(0)} else {null};
      {
        r = OpAddInt(r, v);
      };
    };
  };
  r;
}

byte-code for special_fields:sum(o: Object[0]) -> integer
 668[12]: return-address
 668[16]: ConstInt(val=0) -> integer
 673[20]: ConstInt(val=0) -> integer
 678[24]: VarInt(var[20]) -> integer
 681[28]: VarRef(var[0]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 684[40]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[15]
 687[40]: LengthVector(r: vector) -> integer
 688[32]: GeInt(v1: integer, v2: integer) -> boolean
 689[25]: GenGotoFalseWord(jump=696, if_false: boolean)
 692[24]: ConvIntFromNull() -> integer
 693[28]: GenGotoWord(jump=730)
 696[24]: VarRef(var[0]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 699[36]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[15]
 702[36]: VarInt(var[20]) -> integer
 705[40]: GetVector(r: vector, size=4, index: integer) -> reference
 708[36]: GetInt(v1: reference, fld=0) -> integer
 711[28]: VarInt(var[20]) -> integer
 714[32]: ConstInt(val=1) -> integer
 719[36]: AddInt(v1: integer, v2: integer) -> integer
 720[32]: PutInt(var[20], value: integer)
 723[28]: VarInt(var[24]) -> integer
 726[32]: GenFreeStack(value=4, discard=4)
 730[28]: VarInt(var[24]) -> integer
 733[32]: ConvBoolFromInt(v1: integer) -> boolean
 734[29]: Not(v1: boolean) -> boolean
 735[29]: GenGotoFalseWord(jump=745, if_false: boolean)
 738[28]: GenFreeStack(value=0, discard=4)
 742[24]: GenGotoWord(jump=762)
 745[28]: VarInt(var[16]) -> integer
 748[32]: VarInt(var[24]) -> integer
 751[36]: AddInt(v1: integer, v2: integer) -> integer
 752[32]: PutInt(var[16], value: integer)
 755[28]: GenFreeStack(value=0, discard=4)
 759[24]: GenGotoWord(jump=678)
 762[24]: GenFreeStack(value=0, discard=4)
 766[20]: VarInt(var[16]) -> integer
 769[24]: GenReturn(ret=12, value=4, discard=24)

fn test {
  let test_value = {
    let o = {
      let val = OpDatabase(9i32, 14i32);
      OpSetInt(val, 4i32, 0i32);
      let elm_13 = OpNewRecord(val, 14i32, 0i32);
      OpSetInt(elm_13, 0i32, 1i32);
      OpFinishRecord(val, elm_13, 14i32, 0i32);
      elm_13 = OpNewRecord(val, 14i32, 0i32);
      OpSetInt(elm_13, 0i32, 4i32);
      OpFinishRecord(val, elm_13, 14i32, 0i32);
      elm_13 = OpNewRecord(val, 14i32, 0i32);
      OpSetInt(elm_13, 0i32, 3i32);
      OpFinishRecord(val, elm_13, 14i32, 0i32);
      OpSetEnum(val, 8i32, 3u8(13));
      val;
    };
    {
      let elm_14 = OpNewRecord(o, 14i32, 0i32);
      OpSetInt(elm_14, 0i32, sum(o));
      OpFinishRecord(o, elm_14, 14i32, 0i32);
    };
    {
      let append_15 = "";
      OpFormatDatabase(append_15, o, 14i32, false);
      append_15;
    };
  };
  if OpEqText(test_value, "{a:[1,4,3,8],b:Fluid}") {null} else {OpGenPanic({
    let append_16 = "Test failed ";
    OpFormatText(append_16, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_16, " != "{a:[1,4,3,8],b:Fluid}"");
    append_16;
  })};
}

byte-code for special_fields:test()
 775[0]: return-address
 775[4]: Text()
 776[28]: Database(size=9, db_tp=14) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 781[40]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 784[52]: ConstInt(val=0) -> integer
 789[56]: SetInt(v1: reference, fld=4, val: integer)
 792[40]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 795[52]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 800[52]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 803[64]: ConstInt(val=1) -> integer
 808[68]: SetInt(v1: reference, fld=0, val: integer)
 811[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 814[64]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 817[76]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 822[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 825[64]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 830[64]: PutRef(var[40], value: reference)
 833[52]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 836[64]: ConstInt(val=4) -> integer
 841[68]: SetInt(v1: reference, fld=0, val: integer)
 844[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 847[64]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 850[76]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 855[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 858[64]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 863[64]: PutRef(var[40], value: reference)
 866[52]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 869[64]: ConstInt(val=3) -> integer
 874[68]: SetInt(v1: reference, fld=0, val: integer)
 877[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 880[64]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 883[76]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 888[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 891[64]: ConstEnum(val=3) -> enumerate type=Gender[1]:Enum(["Male", "Female", "Fluid"])[13]
 893[65]: SetEnum(v1: reference, fld=8, val: enumerate)
 896[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 899[64]: GenFreeStack(value=12, discard=24)
 903[40]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 906[52]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 911[52]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 914[64]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 917[76]: GenCall(size=0, to=668)
 924[68]: SetInt(v1: reference, fld=0, val: integer)
 927[52]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 930[64]: VarRef(var[40]) -> reference type=boolean[1]:Base[4]
 933[76]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 938[52]: GenFreeStack(value=0, discard=12)
 942[40]: Text()
 943[64]: ConstText(_value="") -> text
 945[80]: AppendText(var[40], v1: text)
 948[64]: VarRef(var[28]) -> reference type=Object[9]:{a:vector<integer>[4], b:Gender[8]}[14]
 951[76]: FormatDatabase(var[40], val: reference, db_tp=14, pretty=false)
 957[64]: VarText(var[40]) -> text
 960[80]: GenFreeStack(value=16, discard=24)
 964[56]: GenFreeStack(value=16, discard=12)
 968[44]: AppendText(var[4], v1: text)
 971[28]: VarText(var[4]) -> text
 974[44]: ConstText(_value="{a:[1,4,3,8],b:Fluid}") -> text
 997[60]: EqText(v1: text, v2: text) -> boolean
 998[29]: GenGotoFalseWord(jump=1004, if_false: boolean)
1001[28]: GenGotoWord(jump=1075)
1004[28]: Text()
1005[52]: ConstText(_value="Test failed ") -> text
1019[68]: AppendText(var[28], v1: text)
1022[52]: VarText(var[4]) -> text
1025[68]: ConstInt(val=0) -> integer
1030[72]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
1035[52]: ConstText(_value=" != "{a:[1,4,3,8],b:Fluid}"") -> text
1064[68]: AppendText(var[28], v1: text)
1067[52]: VarText(var[28]) -> text
1070[68]: GenFreeStack(value=16, discard=24)
1074[44]: GenPanic(message: text)
1075[28]: GenReturn(ret=0, value=0, discard=28)

Execute test:
  775:[4] Text()
  776:[28] Database(size=9, db_tp=14) -> ref(1,1,0)={}[28]
  781:[40] VarRef(var[28]) -> ref(1,1,0)={}[40]
  784:[52] ConstInt(val=0) -> 0[52]
  789:[56] SetInt(v1=ref(1,1,0)[40], fld=4, val=0[52])
  792:[40] VarRef(var[28]) -> ref(1,1,0)={}[40]
  795:[52] NewRecord(data=ref(1,1,0)[40], parent_tp=14, fld=0) -> ref(1,10,8)[40]
  800:[52] VarRef(var[40]) -> ref(1,10,8)=false[52]
  803:[64] ConstInt(val=1) -> 1[64]
  808:[68] SetInt(v1=ref(1,10,8)[52], fld=0, val=1[64])
  811:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1]}[52]
  814:[64] VarRef(var[40]) -> ref(1,10,8)=true[64]
  817:[76] FinishRecord(data=ref(1,1,0)[52], rec=ref(1,10,8)[64], parent_tp=14, fld=0)
  822:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1]}[52]
  825:[64] NewRecord(data=ref(1,1,0)[52], parent_tp=14, fld=0) -> ref(1,10,12)[52]
  830:[64] PutRef(var[40], value=ref(1,10,12)[52])
  833:[52] VarRef(var[40]) -> ref(1,10,12)=false[52]
  836:[64] ConstInt(val=4) -> 4[64]
  841:[68] SetInt(v1=ref(1,10,12)[52], fld=0, val=4[64])
  844:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4]}[52]
  847:[64] VarRef(var[40]) -> ref(1,10,12)=true[64]
  850:[76] FinishRecord(data=ref(1,1,0)[52], rec=ref(1,10,12)[64], parent_tp=14, fld=0)
  855:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4]}[52]
  858:[64] NewRecord(data=ref(1,1,0)[52], parent_tp=14, fld=0) -> ref(1,10,16)[52]
  863:[64] PutRef(var[40], value=ref(1,10,16)[52])
  866:[52] VarRef(var[40]) -> ref(1,10,16)=false[52]
  869:[64] ConstInt(val=3) -> 3[64]
  874:[68] SetInt(v1=ref(1,10,16)[52], fld=0, val=3[64])
  877:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3]}[52]
  880:[64] VarRef(var[40]) -> ref(1,10,16)=true[64]
  883:[76] FinishRecord(data=ref(1,1,0)[52], rec=ref(1,10,16)[64], parent_tp=14, fld=0)
  888:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3]}[52]
  891:[64] ConstEnum(val=3) -> Fluid(3)[64]
  893:[65] SetEnum(v1=ref(1,1,0)[52], fld=8, val=3[64])
  896:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3],b:Fluid}[52]
  899:[64] GenFreeStack(value=12, discard=24)
  903:[40] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3],b:Fluid}[40]
  906:[52] NewRecord(data=ref(1,1,0)[40], parent_tp=14, fld=0) -> ref(1,10,20)[40]
  911:[52] VarRef(var[40]) -> ref(1,10,20)=false[52]
  914:[64] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[64]
  917:[76] GenCall(size=0, to=668)
  668:[80] ConstInt(val=0) -> 0[80]
  673:[84] ConstInt(val=0) -> 0[84]
  678:[88] VarInt(var[84]) -> 0[88]
  681:[92] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[92]
  684:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][92]
  687:[104] LengthVector(r=ref(1,1,4)=true[92]) -> 4[92]
  688:[96] GeInt(v1=0[88], v2=4[92]) -> false[88]
  689:[89] GenGotoFalseWord(jump=696, if_false=false[88])
  696:[88] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[88]
  699:[100] GetField(v1=ref(1,1,0)[88], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][88]
  702:[100] VarInt(var[84]) -> 0[100]
  705:[104] GetVector(r=ref(1,1,4)=true[88], size=4, index=0[100]) -> ref(1,10,8)[88]
  708:[100] GetInt(v1=ref(1,10,8)[88], fld=0) -> 1[88]
  711:[92] VarInt(var[84]) -> 0[92]
  714:[96] ConstInt(val=1) -> 1[96]
  719:[100] AddInt(v1=0[92], v2=1[96]) -> 1[92]
  720:[96] PutInt(var[84], value=1[92])
  723:[92] VarInt(var[88]) -> 1[92]
  726:[96] GenFreeStack(value=4, discard=4)
  730:[92] VarInt(var[88]) -> 1[92]
  733:[96] ConvBoolFromInt(v1=1[92]) -> true[92]
  734:[93] Not(v1=true[92]) -> false[92]
  735:[93] GenGotoFalseWord(jump=745, if_false=false[92])
  745:[92] VarInt(var[80]) -> 0[92]
  748:[96] VarInt(var[88]) -> 1[96]
  751:[100] AddInt(v1=0[92], v2=1[96]) -> 1[92]
  752:[96] PutInt(var[80], value=1[92])
  755:[92] GenFreeStack(value=0, discard=4)
  759:[88] GenGotoWord(jump=678)
  678:[88] VarInt(var[84]) -> 1[88]
  681:[92] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[92]
  684:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][92]
  687:[104] LengthVector(r=ref(1,1,4)=true[92]) -> 4[92]
  688:[96] GeInt(v1=1[88], v2=4[92]) -> false[88]
  689:[89] GenGotoFalseWord(jump=696, if_false=false[88])
  696:[88] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[88]
  699:[100] GetField(v1=ref(1,1,0)[88], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][88]
  702:[100] VarInt(var[84]) -> 1[100]
  705:[104] GetVector(r=ref(1,1,4)=true[88], size=4, index=1[100]) -> ref(1,10,12)[88]
  708:[100] GetInt(v1=ref(1,10,12)[88], fld=0) -> 4[88]
  711:[92] VarInt(var[84]) -> 1[92]
  714:[96] ConstInt(val=1) -> 1[96]
  719:[100] AddInt(v1=1[92], v2=1[96]) -> 2[92]
  720:[96] PutInt(var[84], value=2[92])
  723:[92] VarInt(var[88]) -> 4[92]
  726:[96] GenFreeStack(value=4, discard=4)
  730:[92] VarInt(var[88]) -> 4[92]
  733:[96] ConvBoolFromInt(v1=4[92]) -> true[92]
  734:[93] Not(v1=true[92]) -> false[92]
  735:[93] GenGotoFalseWord(jump=745, if_false=false[92])
  745:[92] VarInt(var[80]) -> 1[92]
  748:[96] VarInt(var[88]) -> 4[96]
  751:[100] AddInt(v1=1[92], v2=4[96]) -> 5[92]
  752:[96] PutInt(var[80], value=5[92])
  755:[92] GenFreeStack(value=0, discard=4)
  759:[88] GenGotoWord(jump=678)
  678:[88] VarInt(var[84]) -> 2[88]
  681:[92] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[92]
  684:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][92]
  687:[104] LengthVector(r=ref(1,1,4)=true[92]) -> 4[92]
  688:[96] GeInt(v1=2[88], v2=4[92]) -> false[88]
  689:[89] GenGotoFalseWord(jump=696, if_false=false[88])
  696:[88] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[88]
  699:[100] GetField(v1=ref(1,1,0)[88], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][88]
  702:[100] VarInt(var[84]) -> 2[100]
  705:[104] GetVector(r=ref(1,1,4)=true[88], size=4, index=2[100]) -> ref(1,10,16)[88]
  708:[100] GetInt(v1=ref(1,10,16)[88], fld=0) -> 3[88]
  711:[92] VarInt(var[84]) -> 2[92]
  714:[96] ConstInt(val=1) -> 1[96]
  719:[100] AddInt(v1=2[92], v2=1[96]) -> 3[92]
  720:[96] PutInt(var[84], value=3[92])
  723:[92] VarInt(var[88]) -> 3[92]
  726:[96] GenFreeStack(value=4, discard=4)
  730:[92] VarInt(var[88]) -> 3[92]
  733:[96] ConvBoolFromInt(v1=3[92]) -> true[92]
  734:[93] Not(v1=true[92]) -> false[92]
  735:[93] GenGotoFalseWord(jump=745, if_false=false[92])
  745:[92] VarInt(var[80]) -> 5[92]
  748:[96] VarInt(var[88]) -> 3[96]
  751:[100] AddInt(v1=5[92], v2=3[96]) -> 8[92]
  752:[96] PutInt(var[80], value=8[92])
  755:[92] GenFreeStack(value=0, discard=4)
  759:[88] GenGotoWord(jump=678)
  678:[88] VarInt(var[84]) -> 3[88]
  681:[92] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[92]
  684:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][92]
  687:[104] LengthVector(r=ref(1,1,4)=true[92]) -> 4[92]
  688:[96] GeInt(v1=3[88], v2=4[92]) -> false[88]
  689:[89] GenGotoFalseWord(jump=696, if_false=false[88])
  696:[88] VarRef(var[64]) -> ref(1,1,0)={a:[1,4,3,-2147483648],b:Fluid}[88]
  699:[100] GetField(v1=ref(1,1,0)[88], fld=4) -> ref(1,1,4)=[1,4,3,-2147483648][88]
  702:[100] VarInt(var[84]) -> 3[100]
  705:[104] GetVector(r=ref(1,1,4)=true[88], size=4, index=3[100]) -> ref(1,10,20)[88]
  708:[100] GetInt(v1=ref(1,10,20)[88], fld=0) -> -2147483648[88]
  711:[92] VarInt(var[84]) -> 3[92]
  714:[96] ConstInt(val=1) -> 1[96]
  719:[100] AddInt(v1=3[92], v2=1[96]) -> 4[92]
  720:[96] PutInt(var[84], value=4[92])
  723:[92] VarInt(var[88]) -> -2147483648[92]
  726:[96] GenFreeStack(value=4, discard=4)
  730:[92] VarInt(var[88]) -> -2147483648[92]
  733:[96] ConvBoolFromInt(v1=-2147483648[92]) -> false[92]
  734:[93] Not(v1=false[92]) -> true[92]
  735:[93] GenGotoFalseWord(jump=745, if_false=true[92])
  738:[92] GenFreeStack(value=0, discard=4)
  742:[88] GenGotoWord(jump=762)
  762:[88] GenFreeStack(value=0, discard=4)
  766:[84] VarInt(var[80]) -> 8[84]
  769:[88] GenReturn(ret=924[76], value=4, discard=24)
  924:[68] SetInt(v1=ref(1,10,20)[52], fld=0, val=8[64])
  927:[52] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3,8],b:Fluid}[52]
  930:[64] VarRef(var[40]) -> ref(1,10,20)=true[64]
  933:[76] FinishRecord(data=ref(1,1,0)[52], rec=ref(1,10,20)[64], parent_tp=14, fld=0)
  938:[52] GenFreeStack(value=0, discard=12)
  942:[40] Text()
  943:[64] ConstText(_value="") -> ""[64]
  945:[80] AppendText(var[40], v1=""[64])
  948:[64] VarRef(var[28]) -> ref(1,1,0)={a:[1,4,3,8],b:Fluid}[64]
  951:[76] FormatDatabase(var[40], val=ref(1,1,0)[64], db_tp=14, pretty=false)
  957:[64] VarText(var[40]) -> "{a:[1,4,3,8],b:Fluid}"[64]
  960:[80] GenFreeStack(value=16, discard=24)
  964:[56] GenFreeStack(value=16, discard=12)
  968:[44] AppendText(var[4], v1="{a:[1,4,3,8],b:Fluid}"[28])
  971:[28] VarText(var[4]) -> "{a:[1,4,3,8],b:Fluid}"[28]
  974:[44] ConstText(_value="{a:[1,4,3,8],b:Fluid}") -> "{a:[1,4,3,8],b:Fluid}"[44]
  997:[60] EqText(v1="{a:[1,4,3,8],b:Fluid}"[28], v2="{a:[1,4,3,8],b:Fluid}"[44]) -> true[28]
  998:[29] GenGotoFalseWord(jump=1004, if_false=true[28])
 1001:[28] GenGotoWord(jump=1075)
 1075:[28] GenReturn(ret=4294967295[0], value=0, discard=28)
Finished
