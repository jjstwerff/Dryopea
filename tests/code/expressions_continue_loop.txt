fn routine() -> integer {b = 0; for a in 0..10 { if a == 2 {continue} if a > 5 {return b} b += a }; b}

pub fn test() {
    test_value = {routine()};
    assert(
        test_value == 13,
        "Test failed {test_value} != 13"
    );
}
fn routine() -> integer {#1 block
  b:integer = 0i32;
  {#2 for
    a#index:integer = OpConvIntFromNull();
    loop {#3 for loop
      a:integer = {#4 for next
        a#index:integer = if OpNot(OpConvBoolFromInt(a#index)) 0i32 else OpAddInt(a#index, 1i32);
        if OpGeInt(a#index, 10i32) break(0) else null;
        a#index;
      }#4:integer;
      {#5 block
        if OpEqInt(a, 2i32) {#6 block
          continue(0);
        }#6 else null;
        if OpGtInt(a, 5i32) {#7 block
          return b;
        }#7 else null;
        b:integer = OpAddInt(b, a);
      }#5;
    }#3;
  }#2;
  b;
}#1:integer

byte-code for continue_loop:routine() -> integer
 682[0]: return-address
 682[4]: ConstInt(val=0) -> integer
 687[8]: ConvIntFromNull() -> integer
 688[12]: VarInt(var[8]) -> integer
 691[16]: ConvBoolFromInt(v1: integer) -> boolean
 692[13]: Not(v1: boolean) -> boolean
 693[13]: GotoFalseWord(jump=704, if_false: boolean)
 696[12]: ConstInt(val=0) -> integer
 701[16]: GotoWord(jump=713)
 704[12]: VarInt(var[8]) -> integer
 707[16]: ConstInt(val=1) -> integer
 712[20]: AddInt(v1: integer, v2: integer) -> integer
 713[16]: PutInt(var[8], value: integer)
 716[12]: VarInt(var[8]) -> integer
 719[16]: ConstInt(val=10) -> integer
 724[20]: GeInt(v1: integer, v2: integer) -> boolean
 725[13]: GotoFalseWord(jump=731, if_false: boolean)
 728[12]: GotoWord(jump=795)
 731[12]: VarInt(var[8]) -> integer
 734[16]: VarInt(var[12]) -> integer
 737[20]: ConstInt(val=2) -> integer
 742[24]: EqInt(v1: integer, v2: integer) -> boolean
 743[17]: GotoFalseWord(jump=753, if_false: boolean)
 746[16]: FreeStack(value=0, discard=4)
 750[12]: GotoWord(jump=688)
 753[16]: VarInt(var[12]) -> integer
 756[20]: ConstInt(val=5) -> integer
 761[24]: GtInt(v1: integer, v2: integer) -> boolean
 762[17]: GotoFalseWord(jump=778, if_false: boolean)
 765[16]: VarInt(var[4]) -> integer
 768[20]: Return(ret=0, value=4, discard=20) type=integer[4]:Base[0]
 774[20]: FreeStack(value=0, discard=4)
 778[16]: VarInt(var[4]) -> integer
 781[20]: VarInt(var[12]) -> integer
 784[24]: AddInt(v1: integer, v2: integer) -> integer
 785[20]: PutInt(var[4], value: integer)
 788[16]: FreeStack(value=0, discard=4)
 792[12]: GotoWord(jump=688)
 795[12]: FreeStack(value=0, discard=4)
 799[8]: VarInt(var[4]) -> integer
 802[12]: Return(ret=0, value=4, discard=12) type=integer[4]:Base[0]

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    routine();
  }#2:integer;
  if OpEqInt(test_value, 13i32) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 13");
    __work_1;
  }#3:text);
}#1

byte-code for continue_loop:test()
 808[0]: return-address
 808[4]: Text()
 809[28]: Call(size=0, to=682)
 816[32]: VarInt(var[28]) -> integer
 819[36]: ConstInt(val=13) -> integer
 824[40]: EqInt(v1: integer, v2: integer) -> boolean
 825[33]: GotoFalseWord(jump=831, if_false: boolean)
 828[32]: GotoWord(jump=881)
 831[32]: ClearText(var[4])
 834[32]: ConstText(_value="Test failed ") -> text
 848[48]: AppendText(var[4], v1: text)
 851[32]: VarInt(var[28]) -> integer
 854[36]: ConstInt(val=0) -> integer
 859[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 866[32]: ConstText(_value=" != 13") -> text
 874[48]: AppendText(var[4], v1: text)
 877[32]: VarText(var[4]) -> text
 880[48]: Panic(message: text)
 881[32]: Return(ret=0, value=0, discard=32)

Execute test:
  808:[8] Text()
  809:[32] Call(size=0, to=682)
  682:[36] ConstInt(val=0) -> 0[36]
  687:[40] ConvIntFromNull() -> -2147483648[40]
  688:[44] VarInt(var[40]) -> -2147483648[44]
  691:[48] ConvBoolFromInt(v1=-2147483648[44]) -> false[44]
  692:[45] Not(v1=false[44]) -> true[44]
  693:[45] GotoFalseWord(jump=704, if_false=true[44])
  696:[44] ConstInt(val=0) -> 0[44]
  701:[48] GotoWord(jump=713)
  713:[48] PutInt(var[40], value=0[44])
  716:[44] VarInt(var[40]) -> 0[44]
  719:[48] ConstInt(val=10) -> 10[48]
  724:[52] GeInt(v1=0[44], v2=10[48]) -> false[44]
  725:[45] GotoFalseWord(jump=731, if_false=false[44])
  731:[44] VarInt(var[40]) -> 0[44]
  734:[48] VarInt(var[44]) -> 0[48]
  737:[52] ConstInt(val=2) -> 2[52]
  742:[56] EqInt(v1=0[48], v2=2[52]) -> false[48]
  743:[49] GotoFalseWord(jump=753, if_false=false[48])
  753:[48] VarInt(var[44]) -> 0[48]
  756:[52] ConstInt(val=5) -> 5[52]
  761:[56] GtInt(v1=0[48], v2=5[52]) -> false[48]
  762:[49] GotoFalseWord(jump=778, if_false=false[48])
  778:[48] VarInt(var[36]) -> 0[48]
  781:[52] VarInt(var[44]) -> 0[52]
  784:[56] AddInt(v1=0[48], v2=0[52]) -> 0[48]
  785:[52] PutInt(var[36], value=0[48])
  788:[48] FreeStack(value=0, discard=4)
  792:[44] GotoWord(jump=688)
  688:[44] VarInt(var[40]) -> 0[44]
  691:[48] ConvBoolFromInt(v1=0[44]) -> true[44]
  692:[45] Not(v1=true[44]) -> false[44]
  693:[45] GotoFalseWord(jump=704, if_false=false[44])
  704:[44] VarInt(var[40]) -> 0[44]
  707:[48] ConstInt(val=1) -> 1[48]
  712:[52] AddInt(v1=0[44], v2=1[48]) -> 1[44]
  713:[48] PutInt(var[40], value=1[44])
  716:[44] VarInt(var[40]) -> 1[44]
  719:[48] ConstInt(val=10) -> 10[48]
  724:[52] GeInt(v1=1[44], v2=10[48]) -> false[44]
  725:[45] GotoFalseWord(jump=731, if_false=false[44])
  731:[44] VarInt(var[40]) -> 1[44]
  734:[48] VarInt(var[44]) -> 1[48]
  737:[52] ConstInt(val=2) -> 2[52]
  742:[56] EqInt(v1=1[48], v2=2[52]) -> false[48]
  743:[49] GotoFalseWord(jump=753, if_false=false[48])
  753:[48] VarInt(var[44]) -> 1[48]
  756:[52] ConstInt(val=5) -> 5[52]
  761:[56] GtInt(v1=1[48], v2=5[52]) -> false[48]
  762:[49] GotoFalseWord(jump=778, if_false=false[48])
  778:[48] VarInt(var[36]) -> 0[48]
  781:[52] VarInt(var[44]) -> 1[52]
  784:[56] AddInt(v1=0[48], v2=1[52]) -> 1[48]
  785:[52] PutInt(var[36], value=1[48])
  788:[48] FreeStack(value=0, discard=4)
  792:[44] GotoWord(jump=688)
  688:[44] VarInt(var[40]) -> 1[44]
  691:[48] ConvBoolFromInt(v1=1[44]) -> true[44]
  692:[45] Not(v1=true[44]) -> false[44]
  693:[45] GotoFalseWord(jump=704, if_false=false[44])
  704:[44] VarInt(var[40]) -> 1[44]
  707:[48] ConstInt(val=1) -> 1[48]
  712:[52] AddInt(v1=1[44], v2=1[48]) -> 2[44]
  713:[48] PutInt(var[40], value=2[44])
  716:[44] VarInt(var[40]) -> 2[44]
  719:[48] ConstInt(val=10) -> 10[48]
  724:[52] GeInt(v1=2[44], v2=10[48]) -> false[44]
  725:[45] GotoFalseWord(jump=731, if_false=false[44])
  731:[44] VarInt(var[40]) -> 2[44]
  734:[48] VarInt(var[44]) -> 2[48]
  737:[52] ConstInt(val=2) -> 2[52]
  742:[56] EqInt(v1=2[48], v2=2[52]) -> true[48]
  743:[49] GotoFalseWord(jump=753, if_false=true[48])
  746:[48] FreeStack(value=0, discard=4)
  750:[44] GotoWord(jump=688)
  688:[44] VarInt(var[40]) -> 2[44]
  691:[48] ConvBoolFromInt(v1=2[44]) -> true[44]
  692:[45] Not(v1=true[44]) -> false[44]
  693:[45] GotoFalseWord(jump=704, if_false=false[44])
  704:[44] VarInt(var[40]) -> 2[44]
  707:[48] ConstInt(val=1) -> 1[48]
  712:[52] AddInt(v1=2[44], v2=1[48]) -> 3[44]
  713:[48] PutInt(var[40], value=3[44])
  716:[44] VarInt(var[40]) -> 3[44]
  719:[48] ConstInt(val=10) -> 10[48]
  724:[52] GeInt(v1=3[44], v2=10[48]) -> false[44]
  725:[45] GotoFalseWord(jump=731, if_false=false[44])
  731:[44] VarInt(var[40]) -> 3[44]
  734:[48] VarInt(var[44]) -> 3[48]
  737:[52] ConstInt(val=2) -> 2[52]
  742:[56] EqInt(v1=3[48], v2=2[52]) -> false[48]
  743:[49] GotoFalseWord(jump=753, if_false=false[48])
  753:[48] VarInt(var[44]) -> 3[48]
  756:[52] ConstInt(val=5) -> 5[52]
  761:[56] GtInt(v1=3[48], v2=5[52]) -> false[48]
  762:[49] GotoFalseWord(jump=778, if_false=false[48])
  778:[48] VarInt(var[36]) -> 1[48]
  781:[52] VarInt(var[44]) -> 3[52]
  784:[56] AddInt(v1=1[48], v2=3[52]) -> 4[48]
  785:[52] PutInt(var[36], value=4[48])
  788:[48] FreeStack(value=0, discard=4)
  792:[44] GotoWord(jump=688)
  688:[44] VarInt(var[40]) -> 3[44]
  691:[48] ConvBoolFromInt(v1=3[44]) -> true[44]
  692:[45] Not(v1=true[44]) -> false[44]
  693:[45] GotoFalseWord(jump=704, if_false=false[44])
  704:[44] VarInt(var[40]) -> 3[44]
  707:[48] ConstInt(val=1) -> 1[48]
  712:[52] AddInt(v1=3[44], v2=1[48]) -> 4[44]
  713:[48] PutInt(var[40], value=4[44])
  716:[44] VarInt(var[40]) -> 4[44]
  719:[48] ConstInt(val=10) -> 10[48]
  724:[52] GeInt(v1=4[44], v2=10[48]) -> false[44]
  725:[45] GotoFalseWord(jump=731, if_false=false[44])
  731:[44] VarInt(var[40]) -> 4[44]
  734:[48] VarInt(var[44]) -> 4[48]
  737:[52] ConstInt(val=2) -> 2[52]
  742:[56] EqInt(v1=4[48], v2=2[52]) -> false[48]
  743:[49] GotoFalseWord(jump=753, if_false=false[48])
  753:[48] VarInt(var[44]) -> 4[48]
  756:[52] ConstInt(val=5) -> 5[52]
  761:[56] GtInt(v1=4[48], v2=5[52]) -> false[48]
  762:[49] GotoFalseWord(jump=778, if_false=false[48])
  778:[48] VarInt(var[36]) -> 4[48]
  781:[52] VarInt(var[44]) -> 4[52]
  784:[56] AddInt(v1=4[48], v2=4[52]) -> 8[48]
  785:[52] PutInt(var[36], value=8[48])
  788:[48] FreeStack(value=0, discard=4)
  792:[44] GotoWord(jump=688)
  688:[44] VarInt(var[40]) -> 4[44]
  691:[48] ConvBoolFromInt(v1=4[44]) -> true[44]
  692:[45] Not(v1=true[44]) -> false[44]
  693:[45] GotoFalseWord(jump=704, if_false=false[44])
  704:[44] VarInt(var[40]) -> 4[44]
  707:[48] ConstInt(val=1) -> 1[48]
  712:[52] AddInt(v1=4[44], v2=1[48]) -> 5[44]
  713:[48] PutInt(var[40], value=5[44])
  716:[44] VarInt(var[40]) -> 5[44]
  719:[48] ConstInt(val=10) -> 10[48]
  724:[52] GeInt(v1=5[44], v2=10[48]) -> false[44]
  725:[45] GotoFalseWord(jump=731, if_false=false[44])
  731:[44] VarInt(var[40]) -> 5[44]
  734:[48] VarInt(var[44]) -> 5[48]
  737:[52] ConstInt(val=2) -> 2[52]
  742:[56] EqInt(v1=5[48], v2=2[52]) -> false[48]
  743:[49] GotoFalseWord(jump=753, if_false=false[48])
  753:[48] VarInt(var[44]) -> 5[48]
  756:[52] ConstInt(val=5) -> 5[52]
  761:[56] GtInt(v1=5[48], v2=5[52]) -> false[48]
  762:[49] GotoFalseWord(jump=778, if_false=false[48])
  778:[48] VarInt(var[36]) -> 8[48]
  781:[52] VarInt(var[44]) -> 5[52]
  784:[56] AddInt(v1=8[48], v2=5[52]) -> 13[48]
  785:[52] PutInt(var[36], value=13[48])
  788:[48] FreeStack(value=0, discard=4)
  792:[44] GotoWord(jump=688)
  688:[44] VarInt(var[40]) -> 5[44]
  691:[48] ConvBoolFromInt(v1=5[44]) -> true[44]
  692:[45] Not(v1=true[44]) -> false[44]
  693:[45] GotoFalseWord(jump=704, if_false=false[44])
  704:[44] VarInt(var[40]) -> 5[44]
  707:[48] ConstInt(val=1) -> 1[48]
  712:[52] AddInt(v1=5[44], v2=1[48]) -> 6[44]
  713:[48] PutInt(var[40], value=6[44])
  716:[44] VarInt(var[40]) -> 6[44]
  719:[48] ConstInt(val=10) -> 10[48]
  724:[52] GeInt(v1=6[44], v2=10[48]) -> false[44]
  725:[45] GotoFalseWord(jump=731, if_false=false[44])
  731:[44] VarInt(var[40]) -> 6[44]
  734:[48] VarInt(var[44]) -> 6[48]
  737:[52] ConstInt(val=2) -> 2[52]
  742:[56] EqInt(v1=6[48], v2=2[52]) -> false[48]
  743:[49] GotoFalseWord(jump=753, if_false=false[48])
  753:[48] VarInt(var[44]) -> 6[48]
  756:[52] ConstInt(val=5) -> 5[52]
  761:[56] GtInt(v1=6[48], v2=5[52]) -> true[48]
  762:[49] GotoFalseWord(jump=778, if_false=true[48])
  765:[48] VarInt(var[36]) -> 13[48]
  768:[52] Return(ret=816[32], value=4, discard=20) -> 13[32]
  816:[36] VarInt(var[32]) -> 13[36]
  819:[40] ConstInt(val=13) -> 13[40]
  824:[44] EqInt(v1=13[36], v2=13[40]) -> true[36]
  825:[37] GotoFalseWord(jump=831, if_false=true[36])
  828:[36] GotoWord(jump=881)
  881:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
