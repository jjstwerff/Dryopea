fn routine() -> integer {b = 0; for a in 0..10 { if a == 2 {continue} if a > 5 {return b} b += a }; b}

pub fn test() {
    test_value = {routine()};
    assert(
        test_value == 13,
        "Test failed {test_value} != 13"
    );
}
fn routine() -> integer {#1 block
  b:integer = 0i32;
  {#2 for
    a#index:integer = OpConvIntFromNull();
    loop {#3 for loop
      a:integer = {#4 for next
        a#index:integer = if OpNot(OpConvBoolFromInt(a#index)) 0i32 else OpAddInt(a#index, 1i32);
        if OpGeInt(a#index, 10i32) break(0) else null;
        a#index;
      }#4:integer;
      {#5 block
        if OpEqInt(a, 2i32) {#6 block
          continue(0);
        }#6 else null;
        if OpGtInt(a, 5i32) {#7 block
          return b;
        }#7 else null;
        b:integer = OpAddInt(b, a);
      }#5;
    }#3;
  }#2;
  b;
}#1:integer

byte-code for continue_loop:routine() -> integer
 691[0]: return-address
 691[4]: ConstInt(val=0) -> integer
 696[8]: ConvIntFromNull() -> integer
 697[12]: VarInt(var[8]) -> integer
 700[16]: ConvBoolFromInt(v1: integer) -> boolean
 701[13]: Not(v1: boolean) -> boolean
 702[13]: GotoFalseWord(jump=713, if_false: boolean)
 705[12]: ConstInt(val=0) -> integer
 710[16]: GotoWord(jump=722)
 713[12]: VarInt(var[8]) -> integer
 716[16]: ConstInt(val=1) -> integer
 721[20]: AddInt(v1: integer, v2: integer) -> integer
 722[16]: PutInt(var[8], value: integer)
 725[12]: VarInt(var[8]) -> integer
 728[16]: ConstInt(val=10) -> integer
 733[20]: GeInt(v1: integer, v2: integer) -> boolean
 734[13]: GotoFalseWord(jump=740, if_false: boolean)
 737[12]: GotoWord(jump=804)
 740[12]: VarInt(var[8]) -> integer
 743[16]: VarInt(var[12]) -> integer
 746[20]: ConstInt(val=2) -> integer
 751[24]: EqInt(v1: integer, v2: integer) -> boolean
 752[17]: GotoFalseWord(jump=762, if_false: boolean)
 755[16]: FreeStack(value=0, discard=4)
 759[12]: GotoWord(jump=697)
 762[16]: VarInt(var[12]) -> integer
 765[20]: ConstInt(val=5) -> integer
 770[24]: GtInt(v1: integer, v2: integer) -> boolean
 771[17]: GotoFalseWord(jump=787, if_false: boolean)
 774[16]: VarInt(var[4]) -> integer
 777[20]: Return(ret=0, value=4, discard=20) type=integer[4]:Base[0]
 783[20]: FreeStack(value=0, discard=4)
 787[16]: VarInt(var[4]) -> integer
 790[20]: VarInt(var[12]) -> integer
 793[24]: AddInt(v1: integer, v2: integer) -> integer
 794[20]: PutInt(var[4], value: integer)
 797[16]: FreeStack(value=0, discard=4)
 801[12]: GotoWord(jump=697)
 804[12]: FreeStack(value=0, discard=4)
 808[8]: VarInt(var[4]) -> integer
 811[12]: Return(ret=0, value=4, discard=12) type=integer[4]:Base[0]

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    routine();
  }#2:integer;
  if OpEqInt(test_value, 13i32) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 13");
    __work_1;
  }#3:text);
}#1

byte-code for continue_loop:test()
 817[0]: return-address
 817[4]: Text()
 818[28]: Call(size=0, to=691)
 825[32]: VarInt(var[28]) -> integer
 828[36]: ConstInt(val=13) -> integer
 833[40]: EqInt(v1: integer, v2: integer) -> boolean
 834[33]: GotoFalseWord(jump=840, if_false: boolean)
 837[32]: GotoWord(jump=890)
 840[32]: ClearText(var[4])
 843[32]: ConstText(_value="Test failed ") -> text
 857[48]: AppendText(var[4], v1: text)
 860[32]: VarInt(var[28]) -> integer
 863[36]: ConstInt(val=0) -> integer
 868[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 875[32]: ConstText(_value=" != 13") -> text
 883[48]: AppendText(var[4], v1: text)
 886[32]: VarText(var[4]) -> text
 889[48]: Panic(message: text)
 890[32]: FreeText(var[4])
 893[32]: Return(ret=0, value=0, discard=32)

Execute test:
  817:[8] Text()
  818:[32] Call(size=0, to=691)
  691:[36] ConstInt(val=0) -> 0[36]
  696:[40] ConvIntFromNull() -> -2147483648[40]
  697:[44] VarInt(var[40]) -> -2147483648[44]
  700:[48] ConvBoolFromInt(v1=-2147483648[44]) -> false[44]
  701:[45] Not(v1=false[44]) -> true[44]
  702:[45] GotoFalseWord(jump=713, if_false=true[44])
  705:[44] ConstInt(val=0) -> 0[44]
  710:[48] GotoWord(jump=722)
  722:[48] PutInt(var[40], value=0[44])
  725:[44] VarInt(var[40]) -> 0[44]
  728:[48] ConstInt(val=10) -> 10[48]
  733:[52] GeInt(v1=0[44], v2=10[48]) -> false[44]
  734:[45] GotoFalseWord(jump=740, if_false=false[44])
  740:[44] VarInt(var[40]) -> 0[44]
  743:[48] VarInt(var[44]) -> 0[48]
  746:[52] ConstInt(val=2) -> 2[52]
  751:[56] EqInt(v1=0[48], v2=2[52]) -> false[48]
  752:[49] GotoFalseWord(jump=762, if_false=false[48])
  762:[48] VarInt(var[44]) -> 0[48]
  765:[52] ConstInt(val=5) -> 5[52]
  770:[56] GtInt(v1=0[48], v2=5[52]) -> false[48]
  771:[49] GotoFalseWord(jump=787, if_false=false[48])
  787:[48] VarInt(var[36]) -> 0[48]
  790:[52] VarInt(var[44]) -> 0[52]
  793:[56] AddInt(v1=0[48], v2=0[52]) -> 0[48]
  794:[52] PutInt(var[36], value=0[48])
  797:[48] FreeStack(value=0, discard=4)
  801:[44] GotoWord(jump=697)
  697:[44] VarInt(var[40]) -> 0[44]
  700:[48] ConvBoolFromInt(v1=0[44]) -> true[44]
  701:[45] Not(v1=true[44]) -> false[44]
  702:[45] GotoFalseWord(jump=713, if_false=false[44])
  713:[44] VarInt(var[40]) -> 0[44]
  716:[48] ConstInt(val=1) -> 1[48]
  721:[52] AddInt(v1=0[44], v2=1[48]) -> 1[44]
  722:[48] PutInt(var[40], value=1[44])
  725:[44] VarInt(var[40]) -> 1[44]
  728:[48] ConstInt(val=10) -> 10[48]
  733:[52] GeInt(v1=1[44], v2=10[48]) -> false[44]
  734:[45] GotoFalseWord(jump=740, if_false=false[44])
  740:[44] VarInt(var[40]) -> 1[44]
  743:[48] VarInt(var[44]) -> 1[48]
  746:[52] ConstInt(val=2) -> 2[52]
  751:[56] EqInt(v1=1[48], v2=2[52]) -> false[48]
  752:[49] GotoFalseWord(jump=762, if_false=false[48])
  762:[48] VarInt(var[44]) -> 1[48]
  765:[52] ConstInt(val=5) -> 5[52]
  770:[56] GtInt(v1=1[48], v2=5[52]) -> false[48]
  771:[49] GotoFalseWord(jump=787, if_false=false[48])
  787:[48] VarInt(var[36]) -> 0[48]
  790:[52] VarInt(var[44]) -> 1[52]
  793:[56] AddInt(v1=0[48], v2=1[52]) -> 1[48]
  794:[52] PutInt(var[36], value=1[48])
  797:[48] FreeStack(value=0, discard=4)
  801:[44] GotoWord(jump=697)
  697:[44] VarInt(var[40]) -> 1[44]
  700:[48] ConvBoolFromInt(v1=1[44]) -> true[44]
  701:[45] Not(v1=true[44]) -> false[44]
  702:[45] GotoFalseWord(jump=713, if_false=false[44])
  713:[44] VarInt(var[40]) -> 1[44]
  716:[48] ConstInt(val=1) -> 1[48]
  721:[52] AddInt(v1=1[44], v2=1[48]) -> 2[44]
  722:[48] PutInt(var[40], value=2[44])
  725:[44] VarInt(var[40]) -> 2[44]
  728:[48] ConstInt(val=10) -> 10[48]
  733:[52] GeInt(v1=2[44], v2=10[48]) -> false[44]
  734:[45] GotoFalseWord(jump=740, if_false=false[44])
  740:[44] VarInt(var[40]) -> 2[44]
  743:[48] VarInt(var[44]) -> 2[48]
  746:[52] ConstInt(val=2) -> 2[52]
  751:[56] EqInt(v1=2[48], v2=2[52]) -> true[48]
  752:[49] GotoFalseWord(jump=762, if_false=true[48])
  755:[48] FreeStack(value=0, discard=4)
  759:[44] GotoWord(jump=697)
  697:[44] VarInt(var[40]) -> 2[44]
  700:[48] ConvBoolFromInt(v1=2[44]) -> true[44]
  701:[45] Not(v1=true[44]) -> false[44]
  702:[45] GotoFalseWord(jump=713, if_false=false[44])
  713:[44] VarInt(var[40]) -> 2[44]
  716:[48] ConstInt(val=1) -> 1[48]
  721:[52] AddInt(v1=2[44], v2=1[48]) -> 3[44]
  722:[48] PutInt(var[40], value=3[44])
  725:[44] VarInt(var[40]) -> 3[44]
  728:[48] ConstInt(val=10) -> 10[48]
  733:[52] GeInt(v1=3[44], v2=10[48]) -> false[44]
  734:[45] GotoFalseWord(jump=740, if_false=false[44])
  740:[44] VarInt(var[40]) -> 3[44]
  743:[48] VarInt(var[44]) -> 3[48]
  746:[52] ConstInt(val=2) -> 2[52]
  751:[56] EqInt(v1=3[48], v2=2[52]) -> false[48]
  752:[49] GotoFalseWord(jump=762, if_false=false[48])
  762:[48] VarInt(var[44]) -> 3[48]
  765:[52] ConstInt(val=5) -> 5[52]
  770:[56] GtInt(v1=3[48], v2=5[52]) -> false[48]
  771:[49] GotoFalseWord(jump=787, if_false=false[48])
  787:[48] VarInt(var[36]) -> 1[48]
  790:[52] VarInt(var[44]) -> 3[52]
  793:[56] AddInt(v1=1[48], v2=3[52]) -> 4[48]
  794:[52] PutInt(var[36], value=4[48])
  797:[48] FreeStack(value=0, discard=4)
  801:[44] GotoWord(jump=697)
  697:[44] VarInt(var[40]) -> 3[44]
  700:[48] ConvBoolFromInt(v1=3[44]) -> true[44]
  701:[45] Not(v1=true[44]) -> false[44]
  702:[45] GotoFalseWord(jump=713, if_false=false[44])
  713:[44] VarInt(var[40]) -> 3[44]
  716:[48] ConstInt(val=1) -> 1[48]
  721:[52] AddInt(v1=3[44], v2=1[48]) -> 4[44]
  722:[48] PutInt(var[40], value=4[44])
  725:[44] VarInt(var[40]) -> 4[44]
  728:[48] ConstInt(val=10) -> 10[48]
  733:[52] GeInt(v1=4[44], v2=10[48]) -> false[44]
  734:[45] GotoFalseWord(jump=740, if_false=false[44])
  740:[44] VarInt(var[40]) -> 4[44]
  743:[48] VarInt(var[44]) -> 4[48]
  746:[52] ConstInt(val=2) -> 2[52]
  751:[56] EqInt(v1=4[48], v2=2[52]) -> false[48]
  752:[49] GotoFalseWord(jump=762, if_false=false[48])
  762:[48] VarInt(var[44]) -> 4[48]
  765:[52] ConstInt(val=5) -> 5[52]
  770:[56] GtInt(v1=4[48], v2=5[52]) -> false[48]
  771:[49] GotoFalseWord(jump=787, if_false=false[48])
  787:[48] VarInt(var[36]) -> 4[48]
  790:[52] VarInt(var[44]) -> 4[52]
  793:[56] AddInt(v1=4[48], v2=4[52]) -> 8[48]
  794:[52] PutInt(var[36], value=8[48])
  797:[48] FreeStack(value=0, discard=4)
  801:[44] GotoWord(jump=697)
  697:[44] VarInt(var[40]) -> 4[44]
  700:[48] ConvBoolFromInt(v1=4[44]) -> true[44]
  701:[45] Not(v1=true[44]) -> false[44]
  702:[45] GotoFalseWord(jump=713, if_false=false[44])
  713:[44] VarInt(var[40]) -> 4[44]
  716:[48] ConstInt(val=1) -> 1[48]
  721:[52] AddInt(v1=4[44], v2=1[48]) -> 5[44]
  722:[48] PutInt(var[40], value=5[44])
  725:[44] VarInt(var[40]) -> 5[44]
  728:[48] ConstInt(val=10) -> 10[48]
  733:[52] GeInt(v1=5[44], v2=10[48]) -> false[44]
  734:[45] GotoFalseWord(jump=740, if_false=false[44])
  740:[44] VarInt(var[40]) -> 5[44]
  743:[48] VarInt(var[44]) -> 5[48]
  746:[52] ConstInt(val=2) -> 2[52]
  751:[56] EqInt(v1=5[48], v2=2[52]) -> false[48]
  752:[49] GotoFalseWord(jump=762, if_false=false[48])
  762:[48] VarInt(var[44]) -> 5[48]
  765:[52] ConstInt(val=5) -> 5[52]
  770:[56] GtInt(v1=5[48], v2=5[52]) -> false[48]
  771:[49] GotoFalseWord(jump=787, if_false=false[48])
  787:[48] VarInt(var[36]) -> 8[48]
  790:[52] VarInt(var[44]) -> 5[52]
  793:[56] AddInt(v1=8[48], v2=5[52]) -> 13[48]
  794:[52] PutInt(var[36], value=13[48])
  797:[48] FreeStack(value=0, discard=4)
  801:[44] GotoWord(jump=697)
  697:[44] VarInt(var[40]) -> 5[44]
  700:[48] ConvBoolFromInt(v1=5[44]) -> true[44]
  701:[45] Not(v1=true[44]) -> false[44]
  702:[45] GotoFalseWord(jump=713, if_false=false[44])
  713:[44] VarInt(var[40]) -> 5[44]
  716:[48] ConstInt(val=1) -> 1[48]
  721:[52] AddInt(v1=5[44], v2=1[48]) -> 6[44]
  722:[48] PutInt(var[40], value=6[44])
  725:[44] VarInt(var[40]) -> 6[44]
  728:[48] ConstInt(val=10) -> 10[48]
  733:[52] GeInt(v1=6[44], v2=10[48]) -> false[44]
  734:[45] GotoFalseWord(jump=740, if_false=false[44])
  740:[44] VarInt(var[40]) -> 6[44]
  743:[48] VarInt(var[44]) -> 6[48]
  746:[52] ConstInt(val=2) -> 2[52]
  751:[56] EqInt(v1=6[48], v2=2[52]) -> false[48]
  752:[49] GotoFalseWord(jump=762, if_false=false[48])
  762:[48] VarInt(var[44]) -> 6[48]
  765:[52] ConstInt(val=5) -> 5[52]
  770:[56] GtInt(v1=6[48], v2=5[52]) -> true[48]
  771:[49] GotoFalseWord(jump=787, if_false=true[48])
  774:[48] VarInt(var[36]) -> 13[48]
  777:[52] Return(ret=825[32], value=4, discard=20) -> 13[32]
  825:[36] VarInt(var[32]) -> 13[36]
  828:[40] ConstInt(val=13) -> 13[40]
  833:[44] EqInt(v1=13[36], v2=13[40]) -> true[36]
  834:[37] GotoFalseWord(jump=840, if_false=true[36])
  837:[36] GotoWord(jump=890)
  890:[36] FreeText(var[8])
  893:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
