fn routine() -> integer {b = 0; for a in 0..10 { if a == 2 {continue} if a > 5 {return b} b += a }; b}

pub fn test() {
    test_value = {routine()};
    assert(
        test_value == 13,
        "Test failed {test_value} != 13"
    );
}
fn routine() -> integer {#1 block
  b:integer = 0i32;
  {#2 for
    a#index:integer = OpConvIntFromNull();
    loop {#3 for loop
      a:integer = {#4 for next
        a#index:integer = if OpNot(OpConvBoolFromInt(a#index)) 0i32 else OpAddInt(a#index, 1i32);
        if OpGeInt(a#index, 10i32) break(0) else null;
        a#index;
      }#4:integer;
      {#5 block
        if OpEqInt(a, 2i32) {#6 block
          continue(0);
        }#6 else null;
        if OpGtInt(a, 5i32) {#7 block
          return b;
        }#7 else null;
        b:integer = OpAddInt(b, a);
      }#5;
    }#3;
  }#2;
  b;
}#1:integer

byte-code for continue_loop:routine() -> integer
 692[0]: return-address
 692[4]: ConstInt(val=0) -> integer
 697[8]: ConvIntFromNull() -> integer
 698[12]: VarInt(var[8]) -> integer
 701[16]: ConvBoolFromInt(v1: integer) -> boolean
 702[13]: Not(v1: boolean) -> boolean
 703[13]: GotoFalseWord(jump=714, if_false: boolean)
 706[12]: ConstInt(val=0) -> integer
 711[16]: GotoWord(jump=723)
 714[12]: VarInt(var[8]) -> integer
 717[16]: ConstInt(val=1) -> integer
 722[20]: AddInt(v1: integer, v2: integer) -> integer
 723[16]: PutInt(var[8], value: integer)
 726[12]: VarInt(var[8]) -> integer
 729[16]: ConstInt(val=10) -> integer
 734[20]: GeInt(v1: integer, v2: integer) -> boolean
 735[13]: GotoFalseWord(jump=741, if_false: boolean)
 738[12]: GotoWord(jump=805)
 741[12]: VarInt(var[8]) -> integer
 744[16]: VarInt(var[12]) -> integer
 747[20]: ConstInt(val=2) -> integer
 752[24]: EqInt(v1: integer, v2: integer) -> boolean
 753[17]: GotoFalseWord(jump=763, if_false: boolean)
 756[16]: FreeStack(value=0, discard=4)
 760[12]: GotoWord(jump=698)
 763[16]: VarInt(var[12]) -> integer
 766[20]: ConstInt(val=5) -> integer
 771[24]: GtInt(v1: integer, v2: integer) -> boolean
 772[17]: GotoFalseWord(jump=788, if_false: boolean)
 775[16]: VarInt(var[4]) -> integer
 778[20]: Return(ret=0, value=4, discard=20) type=integer[4]:Base[0]
 784[20]: FreeStack(value=0, discard=4)
 788[16]: VarInt(var[4]) -> integer
 791[20]: VarInt(var[12]) -> integer
 794[24]: AddInt(v1: integer, v2: integer) -> integer
 795[20]: PutInt(var[4], value: integer)
 798[16]: FreeStack(value=0, discard=4)
 802[12]: GotoWord(jump=698)
 805[12]: FreeStack(value=0, discard=4)
 809[8]: VarInt(var[4]) -> integer
 812[12]: Return(ret=0, value=4, discard=12) type=integer[4]:Base[0]

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    routine();
  }#2:integer;
  if OpEqInt(test_value, 13i32) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 13");
    __work_1;
  }#3:text);
}#1

byte-code for continue_loop:test()
 818[0]: return-address
 818[4]: Text()
 819[28]: Call(size=0, to=692)
 826[32]: VarInt(var[28]) -> integer
 829[36]: ConstInt(val=13) -> integer
 834[40]: EqInt(v1: integer, v2: integer) -> boolean
 835[33]: GotoFalseWord(jump=841, if_false: boolean)
 838[32]: GotoWord(jump=891)
 841[32]: ClearText(var[4])
 844[32]: ConstText(_value="Test failed ") -> text
 858[48]: AppendText(var[4], v1: text)
 861[32]: VarInt(var[28]) -> integer
 864[36]: ConstInt(val=0) -> integer
 869[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 876[32]: ConstText(_value=" != 13") -> text
 884[48]: AppendText(var[4], v1: text)
 887[32]: VarText(var[4]) -> text
 890[48]: Panic(message: text)
 891[32]: FreeText(var[4])
 894[32]: Return(ret=0, value=0, discard=32)

Execute test:
  818:[8] Text()
  819:[32] Call(size=0, to=692)
  692:[36] ConstInt(val=0) -> 0[36]
  697:[40] ConvIntFromNull() -> -2147483648[40]
  698:[44] VarInt(var[40]) -> -2147483648[44]
  701:[48] ConvBoolFromInt(v1=-2147483648[44]) -> false[44]
  702:[45] Not(v1=false[44]) -> true[44]
  703:[45] GotoFalseWord(jump=714, if_false=true[44])
  706:[44] ConstInt(val=0) -> 0[44]
  711:[48] GotoWord(jump=723)
  723:[48] PutInt(var[40], value=0[44])
  726:[44] VarInt(var[40]) -> 0[44]
  729:[48] ConstInt(val=10) -> 10[48]
  734:[52] GeInt(v1=0[44], v2=10[48]) -> false[44]
  735:[45] GotoFalseWord(jump=741, if_false=false[44])
  741:[44] VarInt(var[40]) -> 0[44]
  744:[48] VarInt(var[44]) -> 0[48]
  747:[52] ConstInt(val=2) -> 2[52]
  752:[56] EqInt(v1=0[48], v2=2[52]) -> false[48]
  753:[49] GotoFalseWord(jump=763, if_false=false[48])
  763:[48] VarInt(var[44]) -> 0[48]
  766:[52] ConstInt(val=5) -> 5[52]
  771:[56] GtInt(v1=0[48], v2=5[52]) -> false[48]
  772:[49] GotoFalseWord(jump=788, if_false=false[48])
  788:[48] VarInt(var[36]) -> 0[48]
  791:[52] VarInt(var[44]) -> 0[52]
  794:[56] AddInt(v1=0[48], v2=0[52]) -> 0[48]
  795:[52] PutInt(var[36], value=0[48])
  798:[48] FreeStack(value=0, discard=4)
  802:[44] GotoWord(jump=698)
  698:[44] VarInt(var[40]) -> 0[44]
  701:[48] ConvBoolFromInt(v1=0[44]) -> true[44]
  702:[45] Not(v1=true[44]) -> false[44]
  703:[45] GotoFalseWord(jump=714, if_false=false[44])
  714:[44] VarInt(var[40]) -> 0[44]
  717:[48] ConstInt(val=1) -> 1[48]
  722:[52] AddInt(v1=0[44], v2=1[48]) -> 1[44]
  723:[48] PutInt(var[40], value=1[44])
  726:[44] VarInt(var[40]) -> 1[44]
  729:[48] ConstInt(val=10) -> 10[48]
  734:[52] GeInt(v1=1[44], v2=10[48]) -> false[44]
  735:[45] GotoFalseWord(jump=741, if_false=false[44])
  741:[44] VarInt(var[40]) -> 1[44]
  744:[48] VarInt(var[44]) -> 1[48]
  747:[52] ConstInt(val=2) -> 2[52]
  752:[56] EqInt(v1=1[48], v2=2[52]) -> false[48]
  753:[49] GotoFalseWord(jump=763, if_false=false[48])
  763:[48] VarInt(var[44]) -> 1[48]
  766:[52] ConstInt(val=5) -> 5[52]
  771:[56] GtInt(v1=1[48], v2=5[52]) -> false[48]
  772:[49] GotoFalseWord(jump=788, if_false=false[48])
  788:[48] VarInt(var[36]) -> 0[48]
  791:[52] VarInt(var[44]) -> 1[52]
  794:[56] AddInt(v1=0[48], v2=1[52]) -> 1[48]
  795:[52] PutInt(var[36], value=1[48])
  798:[48] FreeStack(value=0, discard=4)
  802:[44] GotoWord(jump=698)
  698:[44] VarInt(var[40]) -> 1[44]
  701:[48] ConvBoolFromInt(v1=1[44]) -> true[44]
  702:[45] Not(v1=true[44]) -> false[44]
  703:[45] GotoFalseWord(jump=714, if_false=false[44])
  714:[44] VarInt(var[40]) -> 1[44]
  717:[48] ConstInt(val=1) -> 1[48]
  722:[52] AddInt(v1=1[44], v2=1[48]) -> 2[44]
  723:[48] PutInt(var[40], value=2[44])
  726:[44] VarInt(var[40]) -> 2[44]
  729:[48] ConstInt(val=10) -> 10[48]
  734:[52] GeInt(v1=2[44], v2=10[48]) -> false[44]
  735:[45] GotoFalseWord(jump=741, if_false=false[44])
  741:[44] VarInt(var[40]) -> 2[44]
  744:[48] VarInt(var[44]) -> 2[48]
  747:[52] ConstInt(val=2) -> 2[52]
  752:[56] EqInt(v1=2[48], v2=2[52]) -> true[48]
  753:[49] GotoFalseWord(jump=763, if_false=true[48])
  756:[48] FreeStack(value=0, discard=4)
  760:[44] GotoWord(jump=698)
  698:[44] VarInt(var[40]) -> 2[44]
  701:[48] ConvBoolFromInt(v1=2[44]) -> true[44]
  702:[45] Not(v1=true[44]) -> false[44]
  703:[45] GotoFalseWord(jump=714, if_false=false[44])
  714:[44] VarInt(var[40]) -> 2[44]
  717:[48] ConstInt(val=1) -> 1[48]
  722:[52] AddInt(v1=2[44], v2=1[48]) -> 3[44]
  723:[48] PutInt(var[40], value=3[44])
  726:[44] VarInt(var[40]) -> 3[44]
  729:[48] ConstInt(val=10) -> 10[48]
  734:[52] GeInt(v1=3[44], v2=10[48]) -> false[44]
  735:[45] GotoFalseWord(jump=741, if_false=false[44])
  741:[44] VarInt(var[40]) -> 3[44]
  744:[48] VarInt(var[44]) -> 3[48]
  747:[52] ConstInt(val=2) -> 2[52]
  752:[56] EqInt(v1=3[48], v2=2[52]) -> false[48]
  753:[49] GotoFalseWord(jump=763, if_false=false[48])
  763:[48] VarInt(var[44]) -> 3[48]
  766:[52] ConstInt(val=5) -> 5[52]
  771:[56] GtInt(v1=3[48], v2=5[52]) -> false[48]
  772:[49] GotoFalseWord(jump=788, if_false=false[48])
  788:[48] VarInt(var[36]) -> 1[48]
  791:[52] VarInt(var[44]) -> 3[52]
  794:[56] AddInt(v1=1[48], v2=3[52]) -> 4[48]
  795:[52] PutInt(var[36], value=4[48])
  798:[48] FreeStack(value=0, discard=4)
  802:[44] GotoWord(jump=698)
  698:[44] VarInt(var[40]) -> 3[44]
  701:[48] ConvBoolFromInt(v1=3[44]) -> true[44]
  702:[45] Not(v1=true[44]) -> false[44]
  703:[45] GotoFalseWord(jump=714, if_false=false[44])
  714:[44] VarInt(var[40]) -> 3[44]
  717:[48] ConstInt(val=1) -> 1[48]
  722:[52] AddInt(v1=3[44], v2=1[48]) -> 4[44]
  723:[48] PutInt(var[40], value=4[44])
  726:[44] VarInt(var[40]) -> 4[44]
  729:[48] ConstInt(val=10) -> 10[48]
  734:[52] GeInt(v1=4[44], v2=10[48]) -> false[44]
  735:[45] GotoFalseWord(jump=741, if_false=false[44])
  741:[44] VarInt(var[40]) -> 4[44]
  744:[48] VarInt(var[44]) -> 4[48]
  747:[52] ConstInt(val=2) -> 2[52]
  752:[56] EqInt(v1=4[48], v2=2[52]) -> false[48]
  753:[49] GotoFalseWord(jump=763, if_false=false[48])
  763:[48] VarInt(var[44]) -> 4[48]
  766:[52] ConstInt(val=5) -> 5[52]
  771:[56] GtInt(v1=4[48], v2=5[52]) -> false[48]
  772:[49] GotoFalseWord(jump=788, if_false=false[48])
  788:[48] VarInt(var[36]) -> 4[48]
  791:[52] VarInt(var[44]) -> 4[52]
  794:[56] AddInt(v1=4[48], v2=4[52]) -> 8[48]
  795:[52] PutInt(var[36], value=8[48])
  798:[48] FreeStack(value=0, discard=4)
  802:[44] GotoWord(jump=698)
  698:[44] VarInt(var[40]) -> 4[44]
  701:[48] ConvBoolFromInt(v1=4[44]) -> true[44]
  702:[45] Not(v1=true[44]) -> false[44]
  703:[45] GotoFalseWord(jump=714, if_false=false[44])
  714:[44] VarInt(var[40]) -> 4[44]
  717:[48] ConstInt(val=1) -> 1[48]
  722:[52] AddInt(v1=4[44], v2=1[48]) -> 5[44]
  723:[48] PutInt(var[40], value=5[44])
  726:[44] VarInt(var[40]) -> 5[44]
  729:[48] ConstInt(val=10) -> 10[48]
  734:[52] GeInt(v1=5[44], v2=10[48]) -> false[44]
  735:[45] GotoFalseWord(jump=741, if_false=false[44])
  741:[44] VarInt(var[40]) -> 5[44]
  744:[48] VarInt(var[44]) -> 5[48]
  747:[52] ConstInt(val=2) -> 2[52]
  752:[56] EqInt(v1=5[48], v2=2[52]) -> false[48]
  753:[49] GotoFalseWord(jump=763, if_false=false[48])
  763:[48] VarInt(var[44]) -> 5[48]
  766:[52] ConstInt(val=5) -> 5[52]
  771:[56] GtInt(v1=5[48], v2=5[52]) -> false[48]
  772:[49] GotoFalseWord(jump=788, if_false=false[48])
  788:[48] VarInt(var[36]) -> 8[48]
  791:[52] VarInt(var[44]) -> 5[52]
  794:[56] AddInt(v1=8[48], v2=5[52]) -> 13[48]
  795:[52] PutInt(var[36], value=13[48])
  798:[48] FreeStack(value=0, discard=4)
  802:[44] GotoWord(jump=698)
  698:[44] VarInt(var[40]) -> 5[44]
  701:[48] ConvBoolFromInt(v1=5[44]) -> true[44]
  702:[45] Not(v1=true[44]) -> false[44]
  703:[45] GotoFalseWord(jump=714, if_false=false[44])
  714:[44] VarInt(var[40]) -> 5[44]
  717:[48] ConstInt(val=1) -> 1[48]
  722:[52] AddInt(v1=5[44], v2=1[48]) -> 6[44]
  723:[48] PutInt(var[40], value=6[44])
  726:[44] VarInt(var[40]) -> 6[44]
  729:[48] ConstInt(val=10) -> 10[48]
  734:[52] GeInt(v1=6[44], v2=10[48]) -> false[44]
  735:[45] GotoFalseWord(jump=741, if_false=false[44])
  741:[44] VarInt(var[40]) -> 6[44]
  744:[48] VarInt(var[44]) -> 6[48]
  747:[52] ConstInt(val=2) -> 2[52]
  752:[56] EqInt(v1=6[48], v2=2[52]) -> false[48]
  753:[49] GotoFalseWord(jump=763, if_false=false[48])
  763:[48] VarInt(var[44]) -> 6[48]
  766:[52] ConstInt(val=5) -> 5[52]
  771:[56] GtInt(v1=6[48], v2=5[52]) -> true[48]
  772:[49] GotoFalseWord(jump=788, if_false=true[48])
  775:[48] VarInt(var[36]) -> 13[48]
  778:[52] Return(ret=826[32], value=4, discard=20) -> 13[32]
  826:[36] VarInt(var[32]) -> 13[36]
  829:[40] ConstInt(val=13) -> 13[40]
  834:[44] EqInt(v1=13[36], v2=13[40]) -> true[36]
  835:[37] GotoFalseWord(jump=841, if_false=true[36])
  838:[36] GotoWord(jump=891)
  891:[36] FreeText(var[8])
  894:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
