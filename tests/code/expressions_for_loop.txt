pub fn test() {
    test_value = {b = 0; for a in 0..5 { b+=a }; b};
    assert(
        test_value == 10,
        "Test failed {test_value} != 10"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    b:integer = 0i32;
    {#3 for
      a#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        a:integer = {#5 for next
          a#index:integer = if OpNot(OpConvBoolFromInt(a#index)) 0i32 else OpAddInt(a#index, 1i32);
          if OpGeInt(a#index, 5i32) break(0) else null;
          a#index;
        }#5:integer;
        {#6 block
          b:integer = OpAddInt(b, a);
        }#6;
      }#4;
    }#3;
    b;
  }#2:integer;
  if OpEqInt(test_value, 10i32) null else OpPanic({#7 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 10");
    __work_1;
  }#7:text);
}#1

byte-code for for_loop:test()
 655[0]: return-address
 655[4]: Text() var=__work_1[4]:text in 1
 656[28]: ConstInt(val=0) -> integer var=b[28]:integer in 2
 661[32]: ConvIntFromNull() -> integer var=a#index[32]:integer in 3
 662[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 665[40]: ConvBoolFromInt(v1: integer) -> boolean
 666[37]: Not(v1: boolean) -> boolean
 667[37]: GotoFalseWord(jump=678, if_false: boolean)
 670[36]: ConstInt(val=0) -> integer
 675[40]: GotoWord(jump=687)
 678[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 681[40]: ConstInt(val=1) -> integer
 686[44]: AddInt(v1: integer, v2: integer) -> integer
 687[40]: PutInt(var[32], value: integer)
 690[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 693[40]: ConstInt(val=5) -> integer
 698[44]: GeInt(v1: integer, v2: integer) -> boolean
 699[37]: GotoFalseWord(jump=705, if_false: boolean)
 702[36]: GotoWord(jump=725)
 705[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 708[40]: VarInt(var[28]) -> integer var=b[28]:integer in 2
 711[44]: VarInt(var[36]) -> integer var=a[36]:integer in 4
 714[48]: AddInt(v1: integer, v2: integer) -> integer
 715[44]: PutInt(var[28], value: integer)
 718[40]: FreeStack(value=0, discard=4)
 722[36]: GotoWord(jump=662)
 725[36]: FreeStack(value=0, discard=4)
 729[32]: VarInt(var[28]) -> integer var=b[28]:integer in 2
 732[36]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 736[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 739[36]: ConstInt(val=10) -> integer
 744[40]: EqInt(v1: integer, v2: integer) -> boolean
 745[33]: GotoFalseWord(jump=751, if_false: boolean)
 748[32]: GotoWord(jump=801)
 751[32]: ClearText(var[4]) var=__work_1[4]:text in 1
 754[32]: ConstText(_value="Test failed ") -> text
 768[48]: AppendText(var[4], v1: text)
 771[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 774[36]: ConstInt(val=0) -> integer
 779[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 786[32]: ConstText(_value=" != 10") -> text
 794[48]: AppendText(var[4], v1: text)
 797[32]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 800[48]: Panic(message: text)
 801[32]: FreeText(var[4])
 804[32]: Return(ret=0, value=0, discard=32)

Execute test:
  655:[8] Text()
  656:[32] ConstInt(val=0) -> 0[32]
  661:[36] ConvIntFromNull() -> -2147483648[36]
  662:[40] VarInt(var[36]) -> -2147483648[40]
  665:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  666:[41] Not(v1=false[40]) -> true[40]
  667:[41] GotoFalseWord(jump=678, if_false=true[40])
  670:[40] ConstInt(val=0) -> 0[40]
  675:[44] GotoWord(jump=687)
  687:[44] PutInt(var[36], value=0[40])
  690:[40] VarInt(var[36]) -> 0[40]
  693:[44] ConstInt(val=5) -> 5[44]
  698:[48] GeInt(v1=0[40], v2=5[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 0[40]
  708:[44] VarInt(var[32]) -> 0[44]
  711:[48] VarInt(var[40]) -> 0[48]
  714:[52] AddInt(v1=0[44], v2=0[48]) -> 0[44]
  715:[48] PutInt(var[32], value=0[44])
  718:[44] FreeStack(value=0, discard=4)
  722:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 0[40]
  665:[44] ConvBoolFromInt(v1=0[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 0[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] AddInt(v1=0[40], v2=1[44]) -> 1[40]
  687:[44] PutInt(var[36], value=1[40])
  690:[40] VarInt(var[36]) -> 1[40]
  693:[44] ConstInt(val=5) -> 5[44]
  698:[48] GeInt(v1=1[40], v2=5[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 1[40]
  708:[44] VarInt(var[32]) -> 0[44]
  711:[48] VarInt(var[40]) -> 1[48]
  714:[52] AddInt(v1=0[44], v2=1[48]) -> 1[44]
  715:[48] PutInt(var[32], value=1[44])
  718:[44] FreeStack(value=0, discard=4)
  722:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 1[40]
  665:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 1[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] AddInt(v1=1[40], v2=1[44]) -> 2[40]
  687:[44] PutInt(var[36], value=2[40])
  690:[40] VarInt(var[36]) -> 2[40]
  693:[44] ConstInt(val=5) -> 5[44]
  698:[48] GeInt(v1=2[40], v2=5[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 2[40]
  708:[44] VarInt(var[32]) -> 1[44]
  711:[48] VarInt(var[40]) -> 2[48]
  714:[52] AddInt(v1=1[44], v2=2[48]) -> 3[44]
  715:[48] PutInt(var[32], value=3[44])
  718:[44] FreeStack(value=0, discard=4)
  722:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 2[40]
  665:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 2[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] AddInt(v1=2[40], v2=1[44]) -> 3[40]
  687:[44] PutInt(var[36], value=3[40])
  690:[40] VarInt(var[36]) -> 3[40]
  693:[44] ConstInt(val=5) -> 5[44]
  698:[48] GeInt(v1=3[40], v2=5[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 3[40]
  708:[44] VarInt(var[32]) -> 3[44]
  711:[48] VarInt(var[40]) -> 3[48]
  714:[52] AddInt(v1=3[44], v2=3[48]) -> 6[44]
  715:[48] PutInt(var[32], value=6[44])
  718:[44] FreeStack(value=0, discard=4)
  722:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 3[40]
  665:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 3[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] AddInt(v1=3[40], v2=1[44]) -> 4[40]
  687:[44] PutInt(var[36], value=4[40])
  690:[40] VarInt(var[36]) -> 4[40]
  693:[44] ConstInt(val=5) -> 5[44]
  698:[48] GeInt(v1=4[40], v2=5[44]) -> false[40]
  699:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 4[40]
  708:[44] VarInt(var[32]) -> 6[44]
  711:[48] VarInt(var[40]) -> 4[48]
  714:[52] AddInt(v1=6[44], v2=4[48]) -> 10[44]
  715:[48] PutInt(var[32], value=10[44])
  718:[44] FreeStack(value=0, discard=4)
  722:[40] GotoWord(jump=662)
  662:[40] VarInt(var[36]) -> 4[40]
  665:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
  666:[41] Not(v1=true[40]) -> false[40]
  667:[41] GotoFalseWord(jump=678, if_false=false[40])
  678:[40] VarInt(var[36]) -> 4[40]
  681:[44] ConstInt(val=1) -> 1[44]
  686:[48] AddInt(v1=4[40], v2=1[44]) -> 5[40]
  687:[44] PutInt(var[36], value=5[40])
  690:[40] VarInt(var[36]) -> 5[40]
  693:[44] ConstInt(val=5) -> 5[44]
  698:[48] GeInt(v1=5[40], v2=5[44]) -> true[40]
  699:[41] GotoFalseWord(jump=705, if_false=true[40])
  702:[40] GotoWord(jump=725)
  725:[40] FreeStack(value=0, discard=4)
  729:[36] VarInt(var[32]) -> 10[36]
  732:[40] FreeStack(value=4, discard=8)
  736:[36] VarInt(var[32]) -> 10[36]
  739:[40] ConstInt(val=10) -> 10[40]
  744:[44] EqInt(v1=10[36], v2=10[40]) -> true[36]
  745:[37] GotoFalseWord(jump=751, if_false=true[36])
  748:[36] GotoWord(jump=801)
  801:[36] FreeText(var[8])
  804:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
