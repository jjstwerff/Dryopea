pub fn test() {
    test_value = {b = 0; for a in 0..5 { b+=a }; b};
    assert(
        test_value == 10,
        "Test failed {test_value} != 10"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    b:integer = 0i32;
    {#3 for
      a#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        a:integer = {#5 for next
          a#index:integer = if OpNot(OpConvBoolFromInt(a#index)) 0i32 else OpAddInt(a#index, 1i32);
          if OpGeInt(a#index, 5i32) break(0) else null;
          a#index;
        }#5:integer;
        {#6 block
          b:integer = OpAddInt(b, a);
        }#6;
      }#4;
    }#3;
    b;
  }#2:integer;
  if OpEqInt(test_value, 10i32) null else OpPanic({#7 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 10");
    __work_1;
  }#7:text);
}#1

byte-code for for_loop:test()
 675[0]: return-address
 675[4]: Text()
 676[28]: ConstInt(val=0) -> integer
 681[32]: ConvIntFromNull() -> integer
 682[36]: VarInt(var[32]) -> integer
 685[40]: ConvBoolFromInt(v1: integer) -> boolean
 686[37]: Not(v1: boolean) -> boolean
 687[37]: GotoFalseWord(jump=698, if_false: boolean)
 690[36]: ConstInt(val=0) -> integer
 695[40]: GotoWord(jump=707)
 698[36]: VarInt(var[32]) -> integer
 701[40]: ConstInt(val=1) -> integer
 706[44]: AddInt(v1: integer, v2: integer) -> integer
 707[40]: PutInt(var[32], value: integer)
 710[36]: VarInt(var[32]) -> integer
 713[40]: ConstInt(val=5) -> integer
 718[44]: GeInt(v1: integer, v2: integer) -> boolean
 719[37]: GotoFalseWord(jump=725, if_false: boolean)
 722[36]: GotoWord(jump=745)
 725[36]: VarInt(var[32]) -> integer
 728[40]: VarInt(var[28]) -> integer
 731[44]: VarInt(var[36]) -> integer
 734[48]: AddInt(v1: integer, v2: integer) -> integer
 735[44]: PutInt(var[28], value: integer)
 738[40]: FreeStack(value=0, discard=4)
 742[36]: GotoWord(jump=682)
 745[36]: FreeStack(value=0, discard=4)
 749[32]: VarInt(var[28]) -> integer
 752[36]: FreeStack(value=4, discard=4) type=integer[4]:Base[0]
 756[32]: VarInt(var[28]) -> integer
 759[36]: ConstInt(val=10) -> integer
 764[40]: EqInt(v1: integer, v2: integer) -> boolean
 765[33]: GotoFalseWord(jump=771, if_false: boolean)
 768[32]: GotoWord(jump=821)
 771[32]: ClearText(var[4])
 774[32]: ConstText(_value="Test failed ") -> text
 788[48]: AppendText(var[4], v1: text)
 791[32]: VarInt(var[28]) -> integer
 794[36]: ConstInt(val=0) -> integer
 799[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 806[32]: ConstText(_value=" != 10") -> text
 814[48]: AppendText(var[4], v1: text)
 817[32]: VarText(var[4]) -> text
 820[48]: Panic(message: text)
 821[32]: Return(ret=0, value=0, discard=32)

Execute test:
  675:[8] Text()
  676:[32] ConstInt(val=0) -> 0[32]
  681:[36] ConvIntFromNull() -> -2147483648[36]
  682:[40] VarInt(var[36]) -> -2147483648[40]
  685:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  686:[41] Not(v1=false[40]) -> true[40]
  687:[41] GotoFalseWord(jump=698, if_false=true[40])
  690:[40] ConstInt(val=0) -> 0[40]
  695:[44] GotoWord(jump=707)
  707:[44] PutInt(var[36], value=0[40])
  710:[40] VarInt(var[36]) -> 0[40]
  713:[44] ConstInt(val=5) -> 5[44]
  718:[48] GeInt(v1=0[40], v2=5[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 0[40]
  728:[44] VarInt(var[32]) -> 0[44]
  731:[48] VarInt(var[40]) -> 0[48]
  734:[52] AddInt(v1=0[44], v2=0[48]) -> 0[44]
  735:[48] PutInt(var[32], value=0[44])
  738:[44] FreeStack(value=0, discard=4)
  742:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 0[40]
  685:[44] ConvBoolFromInt(v1=0[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 0[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] AddInt(v1=0[40], v2=1[44]) -> 1[40]
  707:[44] PutInt(var[36], value=1[40])
  710:[40] VarInt(var[36]) -> 1[40]
  713:[44] ConstInt(val=5) -> 5[44]
  718:[48] GeInt(v1=1[40], v2=5[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 1[40]
  728:[44] VarInt(var[32]) -> 0[44]
  731:[48] VarInt(var[40]) -> 1[48]
  734:[52] AddInt(v1=0[44], v2=1[48]) -> 1[44]
  735:[48] PutInt(var[32], value=1[44])
  738:[44] FreeStack(value=0, discard=4)
  742:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 1[40]
  685:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 1[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] AddInt(v1=1[40], v2=1[44]) -> 2[40]
  707:[44] PutInt(var[36], value=2[40])
  710:[40] VarInt(var[36]) -> 2[40]
  713:[44] ConstInt(val=5) -> 5[44]
  718:[48] GeInt(v1=2[40], v2=5[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 2[40]
  728:[44] VarInt(var[32]) -> 1[44]
  731:[48] VarInt(var[40]) -> 2[48]
  734:[52] AddInt(v1=1[44], v2=2[48]) -> 3[44]
  735:[48] PutInt(var[32], value=3[44])
  738:[44] FreeStack(value=0, discard=4)
  742:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 2[40]
  685:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 2[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] AddInt(v1=2[40], v2=1[44]) -> 3[40]
  707:[44] PutInt(var[36], value=3[40])
  710:[40] VarInt(var[36]) -> 3[40]
  713:[44] ConstInt(val=5) -> 5[44]
  718:[48] GeInt(v1=3[40], v2=5[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 3[40]
  728:[44] VarInt(var[32]) -> 3[44]
  731:[48] VarInt(var[40]) -> 3[48]
  734:[52] AddInt(v1=3[44], v2=3[48]) -> 6[44]
  735:[48] PutInt(var[32], value=6[44])
  738:[44] FreeStack(value=0, discard=4)
  742:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 3[40]
  685:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 3[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] AddInt(v1=3[40], v2=1[44]) -> 4[40]
  707:[44] PutInt(var[36], value=4[40])
  710:[40] VarInt(var[36]) -> 4[40]
  713:[44] ConstInt(val=5) -> 5[44]
  718:[48] GeInt(v1=4[40], v2=5[44]) -> false[40]
  719:[41] GotoFalseWord(jump=725, if_false=false[40])
  725:[40] VarInt(var[36]) -> 4[40]
  728:[44] VarInt(var[32]) -> 6[44]
  731:[48] VarInt(var[40]) -> 4[48]
  734:[52] AddInt(v1=6[44], v2=4[48]) -> 10[44]
  735:[48] PutInt(var[32], value=10[44])
  738:[44] FreeStack(value=0, discard=4)
  742:[40] GotoWord(jump=682)
  682:[40] VarInt(var[36]) -> 4[40]
  685:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
  686:[41] Not(v1=true[40]) -> false[40]
  687:[41] GotoFalseWord(jump=698, if_false=false[40])
  698:[40] VarInt(var[36]) -> 4[40]
  701:[44] ConstInt(val=1) -> 1[44]
  706:[48] AddInt(v1=4[40], v2=1[44]) -> 5[40]
  707:[44] PutInt(var[36], value=5[40])
  710:[40] VarInt(var[36]) -> 5[40]
  713:[44] ConstInt(val=5) -> 5[44]
  718:[48] GeInt(v1=5[40], v2=5[44]) -> true[40]
  719:[41] GotoFalseWord(jump=725, if_false=true[40])
  722:[40] GotoWord(jump=745)
  745:[40] FreeStack(value=0, discard=4)
  749:[36] VarInt(var[32]) -> 10[36]
  752:[40] FreeStack(value=4, discard=4)
  756:[36] VarInt(var[32]) -> 10[36]
  759:[40] ConstInt(val=10) -> 10[40]
  764:[44] EqInt(v1=10[36], v2=10[40]) -> true[36]
  765:[37] GotoFalseWord(jump=771, if_false=true[36])
  768:[36] GotoWord(jump=821)
  821:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
