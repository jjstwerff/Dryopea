pub fn test() {
    test_value = {a="â™¥ðŸ˜ƒ"; a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + "." + a[7]};
    assert(
        test_value == "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.",
        "Test failed {test_value} != \"â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.\""
    );
}
fn test {#1 block
  let __work_2 = "";
  let __work_1 = "";
  let test_value = {#2 block
    let a = "â™¥ðŸ˜ƒ";
    OpClearText(__work_1);
    OpAppendText(__work_1, OpGetTextSub(a, 0i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 1i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 2i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 3i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 4i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 5i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 6i32, -2147483648i32));
    OpAppendText(__work_1, ".");
    OpAppendText(__work_1, OpGetTextSub(a, 7i32, -2147483648i32));
    __work_1;
  }#2;
  if OpEqText(test_value, "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") null else OpGenPanic({#3 formatting string
    OpClearText(__work_2);
    OpAppendText(__work_2, "Test failed ");
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."");
    __work_2;
  }#3);
}#1

byte-code for utf8_index:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: Text()
 670[52]: Text()
 671[76]: Text()
 672[100]: ConstText(_value="â™¥ðŸ˜ƒ") -> text(false, [])
 681[116]: AppendText(var[76], v1: text(false, []))
 684[100]: ClearText(var[28])
 687[100]: VarText(var[76]) -> text(false, [])
 690[116]: ConstInt(val=0) -> integer
 695[120]: ConstInt(val=-2147483648) -> integer
 700[124]: GetTextSub(v1: text(false, []), from: integer, till: integer) -> text(false, [])
 701[116]: AppendText(var[28], v1: text(false, []))
 704[100]: VarText(var[76]) -> text(false, [])
 707[116]: ConstInt(val=1) -> integer
 712[120]: ConstInt(val=-2147483648) -> integer
 717[124]: GetTextSub(v1: text(false, []), from: integer, till: integer) -> text(false, [])
 718[116]: AppendText(var[28], v1: text(false, []))
 721[100]: VarText(var[76]) -> text(false, [])
 724[116]: ConstInt(val=2) -> integer
 729[120]: ConstInt(val=-2147483648) -> integer
 734[124]: GetTextSub(v1: text(false, []), from: integer, till: integer) -> text(false, [])
 735[116]: AppendText(var[28], v1: text(false, []))
 738[100]: VarText(var[76]) -> text(false, [])
 741[116]: ConstInt(val=3) -> integer
 746[120]: ConstInt(val=-2147483648) -> integer
 751[124]: GetTextSub(v1: text(false, []), from: integer, till: integer) -> text(false, [])
 752[116]: AppendText(var[28], v1: text(false, []))
 755[100]: VarText(var[76]) -> text(false, [])
 758[116]: ConstInt(val=4) -> integer
 763[120]: ConstInt(val=-2147483648) -> integer
 768[124]: GetTextSub(v1: text(false, []), from: integer, till: integer) -> text(false, [])
 769[116]: AppendText(var[28], v1: text(false, []))
 772[100]: VarText(var[76]) -> text(false, [])
 775[116]: ConstInt(val=5) -> integer
 780[120]: ConstInt(val=-2147483648) -> integer
 785[124]: GetTextSub(v1: text(false, []), from: integer, till: integer) -> text(false, [])
 786[116]: AppendText(var[28], v1: text(false, []))
 789[100]: VarText(var[76]) -> text(false, [])
 792[116]: ConstInt(val=6) -> integer
 797[120]: ConstInt(val=-2147483648) -> integer
 802[124]: GetTextSub(v1: text(false, []), from: integer, till: integer) -> text(false, [])
 803[116]: AppendText(var[28], v1: text(false, []))
 806[100]: ConstText(_value=".") -> text(false, [])
 809[116]: AppendText(var[28], v1: text(false, []))
 812[100]: VarText(var[76]) -> text(false, [])
 815[116]: ConstInt(val=7) -> integer
 820[120]: ConstInt(val=-2147483648) -> integer
 825[124]: GetTextSub(v1: text(false, []), from: integer, till: integer) -> text(false, [])
 826[116]: AppendText(var[28], v1: text(false, []))
 829[100]: VarText(var[28]) -> text(false, [])
 832[116]: GenFreeStack(value=16, discard=24)
 836[92]: AppendText(var[52], v1: text(false, []))
 839[76]: VarText(var[52]) -> text(false, [])
 842[92]: ConstText(_value="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") -> text(false, [])
 870[108]: EqText(v1: text(false, []), v2: text(false, [])) -> boolean
 871[77]: GenGotoFalseWord(jump=877, if_false: boolean)
 874[76]: GenGotoWord(jump=951)
 877[76]: ClearText(var[4])
 880[76]: ConstText(_value="Test failed ") -> text(false, [])
 894[92]: AppendText(var[4], v1: text(false, []))
 897[76]: VarText(var[52]) -> text(false, [])
 900[92]: ConstInt(val=0) -> integer
 905[96]: FormatText(var[4], val: text(false, []), width: integer, dir=-1, token=32)
 910[76]: ConstText(_value=" != "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."") -> text(false, [])
 944[92]: AppendText(var[4], v1: text(false, []))
 947[76]: VarText(var[4]) -> text(false, [])
 950[92]: GenPanic(message: text(false, []))
 951[76]: GenReturn(ret=0, value=0, discard=76)

Execute test:
  668:[8] Text()
  669:[32] Text()
  670:[56] Text()
  671:[80] Text()
  672:[104] ConstText(_value="â™¥ðŸ˜ƒ") -> "â™¥ðŸ˜ƒ"[104]
  681:[120] AppendText(var[80], v1="â™¥ðŸ˜ƒ"[104])
  684:[104] ClearText(var[32])
  687:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  690:[120] ConstInt(val=0) -> 0[120]
  695:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  700:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=0[120], till=-2147483648[124]) -> "â™¥"[104]
  701:[120] AppendText(var[32], v1="â™¥"[104])
  704:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  707:[120] ConstInt(val=1) -> 1[120]
  712:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  717:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=1[120], till=-2147483648[124]) -> "â™¥"[104]
  718:[120] AppendText(var[32], v1="â™¥"[104])
  721:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  724:[120] ConstInt(val=2) -> 2[120]
  729:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  734:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=2[120], till=-2147483648[124]) -> "â™¥"[104]
  735:[120] AppendText(var[32], v1="â™¥"[104])
  738:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  741:[120] ConstInt(val=3) -> 3[120]
  746:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  751:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=3[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  752:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  755:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  758:[120] ConstInt(val=4) -> 4[120]
  763:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  768:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=4[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  769:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  772:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  775:[120] ConstInt(val=5) -> 5[120]
  780:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  785:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=5[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  786:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  789:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  792:[120] ConstInt(val=6) -> 6[120]
  797:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  802:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=6[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  803:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  806:[104] ConstText(_value=".") -> "."[104]
  809:[120] AppendText(var[32], v1="."[104])
  812:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  815:[120] ConstInt(val=7) -> 7[120]
  820:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  825:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=7[120], till=-2147483648[124]) -> ""[104]
  826:[120] AppendText(var[32], v1=""[104])
  829:[104] VarText(var[32]) -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[104]
  832:[120] GenFreeStack(value=16, discard=24)
  836:[96] AppendText(var[56], v1="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[80])
  839:[80] VarText(var[56]) -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[80]
  842:[96] ConstText(_value="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[96]
  870:[112] EqText(v1="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[80], v2="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[96]) -> true[80]
  871:[81] GenGotoFalseWord(jump=877, if_false=true[80])
  874:[80] GenGotoWord(jump=951)
  951:[80] GenReturn(ret=4294967295[4], value=0, discard=76)
Finished
