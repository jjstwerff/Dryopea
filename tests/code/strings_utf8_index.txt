Test code:
pub fn test() {
    test_value = {a="â™¥ðŸ˜ƒ"; a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + "." + a[7]};
    assert(
        test_value == "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.",
        "Test failed {test_value} != \"â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.\""
    );
}

fn test {
  let __work_4 = "";
  let test_value = {
    let a = "â™¥ðŸ˜ƒ";
    OpClearText(__work_4);
    OpAppendText(__work_4, OpGetTextSub(a, 0i32, -2147483648i32));
    OpAppendText(__work_4, OpGetTextSub(a, 1i32, -2147483648i32));
    OpAppendText(__work_4, OpGetTextSub(a, 2i32, -2147483648i32));
    OpAppendText(__work_4, OpGetTextSub(a, 3i32, -2147483648i32));
    OpAppendText(__work_4, OpGetTextSub(a, 4i32, -2147483648i32));
    OpAppendText(__work_4, OpGetTextSub(a, 5i32, -2147483648i32));
    OpAppendText(__work_4, OpGetTextSub(a, 6i32, -2147483648i32));
    OpAppendText(__work_4, ".");
    OpAppendText(__work_4, OpGetTextSub(a, 7i32, -2147483648i32));
    __work_4;
  };
  if OpEqText(test_value, "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") {null} else {OpGenPanic({
    let append_9 = "Test failed ";
    OpFormatText(append_9, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_9, " != "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."");
    append_9;
  })};
}

byte-code for utf8_index:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstText(_value="") -> text
 671[44]: AppendText(var[4], v1: text)
 674[28]: Text()
 675[52]: Text()
 676[76]: ConstText(_value="â™¥ðŸ˜ƒ") -> text
 685[92]: AppendText(var[52], v1: text)
 688[76]: ClearText(var[4])
 691[76]: VarText(var[52]) -> text
 694[92]: ConstInt(val=0) -> integer
 699[96]: ConstInt(val=-2147483648) -> integer
 704[100]: GetTextSub(v1: text, from: integer, till: integer) -> text
 705[92]: AppendText(var[4], v1: text)
 708[76]: VarText(var[52]) -> text
 711[92]: ConstInt(val=1) -> integer
 716[96]: ConstInt(val=-2147483648) -> integer
 721[100]: GetTextSub(v1: text, from: integer, till: integer) -> text
 722[92]: AppendText(var[4], v1: text)
 725[76]: VarText(var[52]) -> text
 728[92]: ConstInt(val=2) -> integer
 733[96]: ConstInt(val=-2147483648) -> integer
 738[100]: GetTextSub(v1: text, from: integer, till: integer) -> text
 739[92]: AppendText(var[4], v1: text)
 742[76]: VarText(var[52]) -> text
 745[92]: ConstInt(val=3) -> integer
 750[96]: ConstInt(val=-2147483648) -> integer
 755[100]: GetTextSub(v1: text, from: integer, till: integer) -> text
 756[92]: AppendText(var[4], v1: text)
 759[76]: VarText(var[52]) -> text
 762[92]: ConstInt(val=4) -> integer
 767[96]: ConstInt(val=-2147483648) -> integer
 772[100]: GetTextSub(v1: text, from: integer, till: integer) -> text
 773[92]: AppendText(var[4], v1: text)
 776[76]: VarText(var[52]) -> text
 779[92]: ConstInt(val=5) -> integer
 784[96]: ConstInt(val=-2147483648) -> integer
 789[100]: GetTextSub(v1: text, from: integer, till: integer) -> text
 790[92]: AppendText(var[4], v1: text)
 793[76]: VarText(var[52]) -> text
 796[92]: ConstInt(val=6) -> integer
 801[96]: ConstInt(val=-2147483648) -> integer
 806[100]: GetTextSub(v1: text, from: integer, till: integer) -> text
 807[92]: AppendText(var[4], v1: text)
 810[76]: ConstText(_value=".") -> text
 813[92]: AppendText(var[4], v1: text)
 816[76]: VarText(var[52]) -> text
 819[92]: ConstInt(val=7) -> integer
 824[96]: ConstInt(val=-2147483648) -> integer
 829[100]: GetTextSub(v1: text, from: integer, till: integer) -> text
 830[92]: AppendText(var[4], v1: text)
 833[76]: VarText(var[4]) -> text
 836[92]: GenFreeStack(value=16, discard=24)
 840[68]: AppendText(var[28], v1: text)
 843[52]: VarText(var[28]) -> text
 846[68]: ConstText(_value="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") -> text
 874[84]: EqText(v1: text, v2: text) -> boolean
 875[53]: GenGotoFalseWord(jump=881, if_false: boolean)
 878[52]: GenGotoWord(jump=957)
 881[52]: Text()
 882[76]: ConstText(_value="Test failed ") -> text
 896[92]: AppendText(var[52], v1: text)
 899[76]: VarText(var[28]) -> text
 902[92]: ConstInt(val=0) -> integer
 907[96]: FormatText(var[52], val: text, width: integer, dir=-1, token=32)
 912[76]: ConstText(_value=" != "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."") -> text
 946[92]: AppendText(var[52], v1: text)
 949[76]: VarText(var[52]) -> text
 952[92]: GenFreeStack(value=16, discard=24)
 956[68]: GenPanic(message: text)
 957[52]: GenReturn(ret=0, value=0, discard=52)

Execute test:
  668:[4] Text()
  669:[28] ConstText(_value="") -> ""[28]
  671:[44] AppendText(var[4], v1=""[28])
  674:[28] Text()
  675:[52] Text()
  676:[76] ConstText(_value="â™¥ðŸ˜ƒ") -> "â™¥ðŸ˜ƒ"[76]
  685:[92] AppendText(var[52], v1="â™¥ðŸ˜ƒ"[76])
  688:[76] ClearText(var[4])
  691:[76] VarText(var[52]) -> "â™¥ðŸ˜ƒ"[76]
  694:[92] ConstInt(val=0) -> 0[92]
  699:[96] ConstInt(val=-2147483648) -> -2147483648[96]
  704:[100] GetTextSub(v1="â™¥ðŸ˜ƒ"[76], from=0[92], till=-2147483648[96]) -> "â™¥"[76]
  705:[92] AppendText(var[4], v1="â™¥"[76])
  708:[76] VarText(var[52]) -> "â™¥ðŸ˜ƒ"[76]
  711:[92] ConstInt(val=1) -> 1[92]
  716:[96] ConstInt(val=-2147483648) -> -2147483648[96]
  721:[100] GetTextSub(v1="â™¥ðŸ˜ƒ"[76], from=1[92], till=-2147483648[96]) -> "â™¥"[76]
  722:[92] AppendText(var[4], v1="â™¥"[76])
  725:[76] VarText(var[52]) -> "â™¥ðŸ˜ƒ"[76]
  728:[92] ConstInt(val=2) -> 2[92]
  733:[96] ConstInt(val=-2147483648) -> -2147483648[96]
  738:[100] GetTextSub(v1="â™¥ðŸ˜ƒ"[76], from=2[92], till=-2147483648[96]) -> "â™¥"[76]
  739:[92] AppendText(var[4], v1="â™¥"[76])
  742:[76] VarText(var[52]) -> "â™¥ðŸ˜ƒ"[76]
  745:[92] ConstInt(val=3) -> 3[92]
  750:[96] ConstInt(val=-2147483648) -> -2147483648[96]
  755:[100] GetTextSub(v1="â™¥ðŸ˜ƒ"[76], from=3[92], till=-2147483648[96]) -> "ðŸ˜ƒ"[76]
  756:[92] AppendText(var[4], v1="ðŸ˜ƒ"[76])
  759:[76] VarText(var[52]) -> "â™¥ðŸ˜ƒ"[76]
  762:[92] ConstInt(val=4) -> 4[92]
  767:[96] ConstInt(val=-2147483648) -> -2147483648[96]
  772:[100] GetTextSub(v1="â™¥ðŸ˜ƒ"[76], from=4[92], till=-2147483648[96]) -> "ðŸ˜ƒ"[76]
  773:[92] AppendText(var[4], v1="ðŸ˜ƒ"[76])
  776:[76] VarText(var[52]) -> "â™¥ðŸ˜ƒ"[76]
  779:[92] ConstInt(val=5) -> 5[92]
  784:[96] ConstInt(val=-2147483648) -> -2147483648[96]
  789:[100] GetTextSub(v1="â™¥ðŸ˜ƒ"[76], from=5[92], till=-2147483648[96]) -> "ðŸ˜ƒ"[76]
  790:[92] AppendText(var[4], v1="ðŸ˜ƒ"[76])
  793:[76] VarText(var[52]) -> "â™¥ðŸ˜ƒ"[76]
  796:[92] ConstInt(val=6) -> 6[92]
  801:[96] ConstInt(val=-2147483648) -> -2147483648[96]
  806:[100] GetTextSub(v1="â™¥ðŸ˜ƒ"[76], from=6[92], till=-2147483648[96]) -> "ðŸ˜ƒ"[76]
  807:[92] AppendText(var[4], v1="ðŸ˜ƒ"[76])
  810:[76] ConstText(_value=".") -> "."[76]
  813:[92] AppendText(var[4], v1="."[76])
  816:[76] VarText(var[52]) -> "â™¥ðŸ˜ƒ"[76]
  819:[92] ConstInt(val=7) -> 7[92]
  824:[96] ConstInt(val=-2147483648) -> -2147483648[96]
  829:[100] GetTextSub(v1="â™¥ðŸ˜ƒ"[76], from=7[92], till=-2147483648[96]) -> ""[76]
  830:[92] AppendText(var[4], v1=""[76])
  833:[76] VarText(var[4]) -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[76]
  836:[92] GenFreeStack(value=16, discard=24)
  840:[68] AppendText(var[28], v1="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[52])
  843:[52] VarText(var[28]) -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[52]
  846:[68] ConstText(_value="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[68]
  874:[84] EqText(v1="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[52], v2="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[68]) -> true[52]
  875:[53] GenGotoFalseWord(jump=881, if_false=true[52])
  878:[52] GenGotoWord(jump=957)
  957:[52] GenReturn(ret=4294967295[0], value=0, discard=52)
Finished
