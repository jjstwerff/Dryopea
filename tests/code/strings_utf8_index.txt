pub fn test() {
    test_value = {a="â™¥ðŸ˜ƒ"; a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + "." + a[7]};
    assert(
        test_value == "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.",
        "Test failed {test_value} != \"â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text["__work_1"] = {#2 block
    a:text = "â™¥ðŸ˜ƒ";
    __work_1:text = OpGetTextSub(a, 0i32, -2147483648i32);
    OpAppendText(__work_1, OpGetTextSub(a, 1i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 2i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 3i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 4i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 5i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 6i32, -2147483648i32));
    OpAppendText(__work_1, ".");
    OpAppendText(__work_1, OpGetTextSub(a, 7i32, -2147483648i32));
    __work_1;
  }#2:text["__work_1"];
  if OpEqText(test_value, "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") null else OpPanic({#3 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."");
    __work_2;
  }#3:text);
}#1

byte-code for utf8_index:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: Text()
 694[52]: Text()
 695[76]: Text()
 696[100]: ConstText(_value="â™¥ðŸ˜ƒ") -> text
 705[116]: AppendText(var[76], v1: text)
 708[100]: ClearText(var[28])
 711[100]: VarText(var[76]) -> text
 714[116]: ConstInt(val=0) -> integer
 719[120]: ConstInt(val=-2147483648) -> integer
 724[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 725[116]: AppendText(var[28], v1: text)
 728[100]: VarText(var[76]) -> text
 731[116]: ConstInt(val=1) -> integer
 736[120]: ConstInt(val=-2147483648) -> integer
 741[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 742[116]: AppendText(var[28], v1: text)
 745[100]: VarText(var[76]) -> text
 748[116]: ConstInt(val=2) -> integer
 753[120]: ConstInt(val=-2147483648) -> integer
 758[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 759[116]: AppendText(var[28], v1: text)
 762[100]: VarText(var[76]) -> text
 765[116]: ConstInt(val=3) -> integer
 770[120]: ConstInt(val=-2147483648) -> integer
 775[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 776[116]: AppendText(var[28], v1: text)
 779[100]: VarText(var[76]) -> text
 782[116]: ConstInt(val=4) -> integer
 787[120]: ConstInt(val=-2147483648) -> integer
 792[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 793[116]: AppendText(var[28], v1: text)
 796[100]: VarText(var[76]) -> text
 799[116]: ConstInt(val=5) -> integer
 804[120]: ConstInt(val=-2147483648) -> integer
 809[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 810[116]: AppendText(var[28], v1: text)
 813[100]: VarText(var[76]) -> text
 816[116]: ConstInt(val=6) -> integer
 821[120]: ConstInt(val=-2147483648) -> integer
 826[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 827[116]: AppendText(var[28], v1: text)
 830[100]: ConstText(_value=".") -> text
 833[116]: AppendText(var[28], v1: text)
 836[100]: VarText(var[76]) -> text
 839[116]: ConstInt(val=7) -> integer
 844[120]: ConstInt(val=-2147483648) -> integer
 849[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 850[116]: AppendText(var[28], v1: text)
 853[100]: VarText(var[28]) -> text
 856[116]: FreeText(var[76])
 859[116]: FreeStack(value=16, discard=40) type=text[4]:Base[5]
 863[92]: AppendText(var[52], v1: text)
 866[76]: VarText(var[52]) -> text
 869[92]: ConstText(_value="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") -> text
 897[108]: EqText(v1: text, v2: text) -> boolean
 898[77]: GotoFalseWord(jump=904, if_false: boolean)
 901[76]: GotoWord(jump=978)
 904[76]: ClearText(var[4])
 907[76]: ConstText(_value="Test failed ") -> text
 921[92]: AppendText(var[4], v1: text)
 924[76]: VarText(var[52]) -> text
 927[92]: ConstInt(val=0) -> integer
 932[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 937[76]: ConstText(_value=" != "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."") -> text
 971[92]: AppendText(var[4], v1: text)
 974[76]: VarText(var[4]) -> text
 977[92]: Panic(message: text)
 978[76]: FreeText(var[52])
 981[76]: FreeText(var[28])
 984[76]: FreeText(var[4])
 987[76]: Return(ret=0, value=0, discard=76)

Execute test:
  692:[8] Text()
  693:[32] Text()
  694:[56] Text()
  695:[80] Text()
  696:[104] ConstText(_value="â™¥ðŸ˜ƒ") -> "â™¥ðŸ˜ƒ"[104]
  705:[120] AppendText(var[80], v1="â™¥ðŸ˜ƒ"[104])
  708:[104] ClearText(var[32])
  711:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  714:[120] ConstInt(val=0) -> 0[120]
  719:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  724:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=0[120], till=-2147483648[124]) -> "â™¥"[104]
  725:[120] AppendText(var[32], v1="â™¥"[104])
  728:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  731:[120] ConstInt(val=1) -> 1[120]
  736:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  741:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=1[120], till=-2147483648[124]) -> "â™¥"[104]
  742:[120] AppendText(var[32], v1="â™¥"[104])
  745:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  748:[120] ConstInt(val=2) -> 2[120]
  753:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  758:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=2[120], till=-2147483648[124]) -> "â™¥"[104]
  759:[120] AppendText(var[32], v1="â™¥"[104])
  762:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  765:[120] ConstInt(val=3) -> 3[120]
  770:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  775:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=3[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  776:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  779:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  782:[120] ConstInt(val=4) -> 4[120]
  787:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  792:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=4[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  793:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  796:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  799:[120] ConstInt(val=5) -> 5[120]
  804:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  809:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=5[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  810:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  813:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  816:[120] ConstInt(val=6) -> 6[120]
  821:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  826:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=6[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  827:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  830:[104] ConstText(_value=".") -> "."[104]
  833:[120] AppendText(var[32], v1="."[104])
  836:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  839:[120] ConstInt(val=7) -> 7[120]
  844:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  849:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=7[120], till=-2147483648[124]) -> ""[104]
  850:[120] AppendText(var[32], v1=""[104])
  853:[104] VarText(var[32]) -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[104]
  856:[120] FreeText(var[80])
  859:[120] FreeStack(value=16, discard=40)
  863:[96] AppendText(var[56], v1="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[80])
  866:[80] VarText(var[56]) -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[80]
  869:[96] ConstText(_value="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[96]
  897:[112] EqText(v1="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[80], v2="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[96]) -> true[80]
  898:[81] GotoFalseWord(jump=904, if_false=true[80])
  901:[80] GotoWord(jump=978)
  978:[80] FreeText(var[56])
  981:[80] FreeText(var[32])
  984:[80] FreeText(var[8])
  987:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
