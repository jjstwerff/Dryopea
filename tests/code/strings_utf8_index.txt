pub fn test() {
    test_value = {a="â™¥ðŸ˜ƒ"; a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + "." + a[7]};
    assert(
        test_value == "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.",
        "Test failed {test_value} != \"â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text["__work_1"] = {#2 block
    a:text = "â™¥ðŸ˜ƒ";
    __work_1:text = OpGetTextSub(a, 0i32, -2147483648i32);
    OpAppendText(__work_1, OpGetTextSub(a, 1i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 2i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 3i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 4i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 5i32, -2147483648i32));
    OpAppendText(__work_1, OpGetTextSub(a, 6i32, -2147483648i32));
    OpAppendText(__work_1, ".");
    OpAppendText(__work_1, OpGetTextSub(a, 7i32, -2147483648i32));
    __work_1;
  }#2:text["__work_1"];
  if OpEqText(test_value, "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") null else OpPanic({#3 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."");
    __work_2;
  }#3:text);
}#1

byte-code for utf8_index:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: Text()
 693[52]: Text()
 694[76]: Text()
 695[100]: ConstText(_value="â™¥ðŸ˜ƒ") -> text
 704[116]: AppendText(var[76], v1: text)
 707[100]: ClearText(var[28])
 710[100]: VarText(var[76]) -> text
 713[116]: ConstInt(val=0) -> integer
 718[120]: ConstInt(val=-2147483648) -> integer
 723[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 724[116]: AppendText(var[28], v1: text)
 727[100]: VarText(var[76]) -> text
 730[116]: ConstInt(val=1) -> integer
 735[120]: ConstInt(val=-2147483648) -> integer
 740[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 741[116]: AppendText(var[28], v1: text)
 744[100]: VarText(var[76]) -> text
 747[116]: ConstInt(val=2) -> integer
 752[120]: ConstInt(val=-2147483648) -> integer
 757[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 758[116]: AppendText(var[28], v1: text)
 761[100]: VarText(var[76]) -> text
 764[116]: ConstInt(val=3) -> integer
 769[120]: ConstInt(val=-2147483648) -> integer
 774[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 775[116]: AppendText(var[28], v1: text)
 778[100]: VarText(var[76]) -> text
 781[116]: ConstInt(val=4) -> integer
 786[120]: ConstInt(val=-2147483648) -> integer
 791[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 792[116]: AppendText(var[28], v1: text)
 795[100]: VarText(var[76]) -> text
 798[116]: ConstInt(val=5) -> integer
 803[120]: ConstInt(val=-2147483648) -> integer
 808[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 809[116]: AppendText(var[28], v1: text)
 812[100]: VarText(var[76]) -> text
 815[116]: ConstInt(val=6) -> integer
 820[120]: ConstInt(val=-2147483648) -> integer
 825[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 826[116]: AppendText(var[28], v1: text)
 829[100]: ConstText(_value=".") -> text
 832[116]: AppendText(var[28], v1: text)
 835[100]: VarText(var[76]) -> text
 838[116]: ConstInt(val=7) -> integer
 843[120]: ConstInt(val=-2147483648) -> integer
 848[124]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 849[116]: AppendText(var[28], v1: text)
 852[100]: VarText(var[28]) -> text
 855[116]: FreeText(var[76])
 858[116]: FreeStack(value=16, discard=40) type=text[4]:Base[5]
 862[92]: AppendText(var[52], v1: text)
 865[76]: VarText(var[52]) -> text
 868[92]: ConstText(_value="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") -> text
 896[108]: EqText(v1: text, v2: text) -> boolean
 897[77]: GotoFalseWord(jump=903, if_false: boolean)
 900[76]: GotoWord(jump=977)
 903[76]: ClearText(var[4])
 906[76]: ConstText(_value="Test failed ") -> text
 920[92]: AppendText(var[4], v1: text)
 923[76]: VarText(var[52]) -> text
 926[92]: ConstInt(val=0) -> integer
 931[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 936[76]: ConstText(_value=" != "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."") -> text
 970[92]: AppendText(var[4], v1: text)
 973[76]: VarText(var[4]) -> text
 976[92]: Panic(message: text)
 977[76]: FreeText(var[52])
 980[76]: FreeText(var[28])
 983[76]: FreeText(var[4])
 986[76]: Return(ret=0, value=0, discard=76)

Execute test:
  691:[8] Text()
  692:[32] Text()
  693:[56] Text()
  694:[80] Text()
  695:[104] ConstText(_value="â™¥ðŸ˜ƒ") -> "â™¥ðŸ˜ƒ"[104]
  704:[120] AppendText(var[80], v1="â™¥ðŸ˜ƒ"[104])
  707:[104] ClearText(var[32])
  710:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  713:[120] ConstInt(val=0) -> 0[120]
  718:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  723:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=0[120], till=-2147483648[124]) -> "â™¥"[104]
  724:[120] AppendText(var[32], v1="â™¥"[104])
  727:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  730:[120] ConstInt(val=1) -> 1[120]
  735:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  740:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=1[120], till=-2147483648[124]) -> "â™¥"[104]
  741:[120] AppendText(var[32], v1="â™¥"[104])
  744:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  747:[120] ConstInt(val=2) -> 2[120]
  752:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  757:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=2[120], till=-2147483648[124]) -> "â™¥"[104]
  758:[120] AppendText(var[32], v1="â™¥"[104])
  761:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  764:[120] ConstInt(val=3) -> 3[120]
  769:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  774:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=3[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  775:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  778:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  781:[120] ConstInt(val=4) -> 4[120]
  786:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  791:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=4[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  792:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  795:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  798:[120] ConstInt(val=5) -> 5[120]
  803:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  808:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=5[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  809:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  812:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  815:[120] ConstInt(val=6) -> 6[120]
  820:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  825:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=6[120], till=-2147483648[124]) -> "ðŸ˜ƒ"[104]
  826:[120] AppendText(var[32], v1="ðŸ˜ƒ"[104])
  829:[104] ConstText(_value=".") -> "."[104]
  832:[120] AppendText(var[32], v1="."[104])
  835:[104] VarText(var[80]) -> "â™¥ðŸ˜ƒ"[104]
  838:[120] ConstInt(val=7) -> 7[120]
  843:[124] ConstInt(val=-2147483648) -> -2147483648[124]
  848:[128] GetTextSub(v1="â™¥ðŸ˜ƒ"[104], from=7[120], till=-2147483648[124]) -> ""[104]
  849:[120] AppendText(var[32], v1=""[104])
  852:[104] VarText(var[32]) -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[104]
  855:[120] FreeText(var[80])
  858:[120] FreeStack(value=16, discard=40)
  862:[96] AppendText(var[56], v1="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[80])
  865:[80] VarText(var[56]) -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[80]
  868:[96] ConstText(_value="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ.") -> "â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[96]
  896:[112] EqText(v1="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[80], v2="â™¥â™¥â™¥ðŸ˜ƒðŸ˜ƒðŸ˜ƒðŸ˜ƒ."[96]) -> true[80]
  897:[81] GotoFalseWord(jump=903, if_false=true[80])
  900:[80] GotoWord(jump=977)
  977:[80] FreeText(var[56])
  980:[80] FreeText(var[32])
  983:[80] FreeText(var[8])
  986:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
