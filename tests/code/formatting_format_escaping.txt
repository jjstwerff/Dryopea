Test code:
pub fn test() {
    test_value = {"ab{{cd}}e"};
    assert(
        test_value == "ab{{cd}}e",
        "Test failed {test_value} != \"ab{{cd}}e\""
    );
}

fn test {
  let __work_1 = "";
  let test_value = {
    "ab{cd}e";
  };
  if OpEqText(test_value, "ab{cd}e") {null} else {OpGenPanic({
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "ab{cd}e"");
    __work_1;
  })};
}

byte-code for format_escaping:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstText(_value="") -> text(false)
 671[44]: AppendText(var[4], v1: text(false))
 674[28]: Text()
 675[52]: ConstText(_value="ab{cd}e") -> text(false)
 684[68]: AppendText(var[28], v1: text(false))
 687[52]: VarText(var[28]) -> text(false)
 690[68]: ConstText(_value="ab{cd}e") -> text(false)
 699[84]: EqText(v1: text(false), v2: text(false)) -> boolean
 700[53]: GenGotoFalseWord(jump=706, if_false: boolean)
 703[52]: GenGotoWord(jump=761)
 706[52]: ClearText(var[4])
 709[52]: ConstText(_value="Test failed ") -> text(false)
 723[68]: AppendText(var[4], v1: text(false))
 726[52]: VarText(var[28]) -> text(false)
 729[68]: ConstInt(val=0) -> integer
 734[72]: FormatText(var[4], val: text(false), width: integer, dir=-1, token=32)
 739[52]: ConstText(_value=" != "ab{cd}e"") -> text(false)
 754[68]: AppendText(var[4], v1: text(false))
 757[52]: VarText(var[4]) -> text(false)
 760[68]: GenPanic(message: text(false))
 761[52]: GenReturn(ret=0, value=0, discard=52)

Execute test:
  668:[8] Text()
  669:[32] ConstText(_value="") -> ""[32]
  671:[48] AppendText(var[8], v1=""[32])
  674:[32] Text()
  675:[56] ConstText(_value="ab{cd}e") -> "ab{cd}e"[56]
  684:[72] AppendText(var[32], v1="ab{cd}e"[56])
  687:[56] VarText(var[32]) -> "ab{cd}e"[56]
  690:[72] ConstText(_value="ab{cd}e") -> "ab{cd}e"[72]
  699:[88] EqText(v1="ab{cd}e"[56], v2="ab{cd}e"[72]) -> true[56]
  700:[57] GenGotoFalseWord(jump=706, if_false=true[56])
  703:[56] GenGotoWord(jump=761)
  761:[56] GenReturn(ret=4294967295[4], value=0, discard=52)
Finished
