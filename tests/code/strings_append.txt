pub fn test() {
    test_value = {a="â™¥ðŸ˜ƒ" + "1" + "2"; a};
    assert(
        test_value == "â™¥ðŸ˜ƒ12",
        "Test failed {test_value} != \"â™¥ðŸ˜ƒ12\""
    );
}
fn test() {#1 block
  let __work_1:text = "";
  let test_value:text["a"] = {#2 block
    let a:text = "";
    OpAppendText(a, "â™¥ðŸ˜ƒ");
    OpAppendText(a, "1");
    OpAppendText(a, "2");
    a;
  }#2:text["a"];
  if OpEqText(test_value, "â™¥ðŸ˜ƒ12") null else OpPanic({#3 formatting string
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "â™¥ðŸ˜ƒ12"");
    __work_1;
  }#3:text);
}#1

byte-code for append:test()
 675[0]: return-address
 675[4]: Text()
 676[28]: Text()
 677[52]: Text()
 678[76]: ConstText(_value="â™¥ðŸ˜ƒ") -> text
 687[92]: AppendText(var[52], v1: text)
 690[76]: ConstText(_value="1") -> text
 693[92]: AppendText(var[52], v1: text)
 696[76]: ConstText(_value="2") -> text
 699[92]: AppendText(var[52], v1: text)
 702[76]: VarText(var[52]) -> text
 705[92]: FreeStack(value=16, discard=24) type=text[4]:Base[5]
 709[68]: AppendText(var[28], v1: text)
 712[52]: VarText(var[28]) -> text
 715[68]: ConstText(_value="â™¥ðŸ˜ƒ12") -> text
 726[84]: EqText(v1: text, v2: text) -> boolean
 727[53]: GotoFalseWord(jump=733, if_false: boolean)
 730[52]: GotoWord(jump=790)
 733[52]: ClearText(var[4])
 736[52]: ConstText(_value="Test failed ") -> text
 750[68]: AppendText(var[4], v1: text)
 753[52]: VarText(var[28]) -> text
 756[68]: ConstInt(val=0) -> integer
 761[72]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 766[52]: ConstText(_value=" != "â™¥ðŸ˜ƒ12"") -> text
 783[68]: AppendText(var[4], v1: text)
 786[52]: VarText(var[4]) -> text
 789[68]: Panic(message: text)
 790[52]: Return(ret=0, value=0, discard=52)

Execute test:
  675:[8] Text()
  676:[32] Text()
  677:[56] Text()
  678:[80] ConstText(_value="â™¥ðŸ˜ƒ") -> "â™¥ðŸ˜ƒ"[80]
  687:[96] AppendText(var[56], v1="â™¥ðŸ˜ƒ"[80])
  690:[80] ConstText(_value="1") -> "1"[80]
  693:[96] AppendText(var[56], v1="1"[80])
  696:[80] ConstText(_value="2") -> "2"[80]
  699:[96] AppendText(var[56], v1="2"[80])
  702:[80] VarText(var[56]) -> "â™¥ðŸ˜ƒ12"[80]
  705:[96] FreeStack(value=16, discard=24)
  709:[72] AppendText(var[32], v1="â™¥ðŸ˜ƒ12"[56])
  712:[56] VarText(var[32]) -> "â™¥ðŸ˜ƒ12"[56]
  715:[72] ConstText(_value="â™¥ðŸ˜ƒ12") -> "â™¥ðŸ˜ƒ12"[72]
  726:[88] EqText(v1="â™¥ðŸ˜ƒ12"[56], v2="â™¥ðŸ˜ƒ12"[72]) -> true[56]
  727:[57] GotoFalseWord(jump=733, if_false=true[56])
  730:[56] GotoWord(jump=790)
  790:[56] Return(ret=4294967295[4], value=0, discard=52)
Finished
