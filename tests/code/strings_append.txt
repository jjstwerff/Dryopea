pub fn test() {
    test_value = {a="â™¥ðŸ˜ƒ" + "1" + "2"; a};
    assert(
        test_value == "â™¥ðŸ˜ƒ12",
        "Test failed {test_value} != \"â™¥ðŸ˜ƒ12\""
    );
}
fn test() {#1 block
  __work_1:text = "";
  a:text = "";
  test_value:text["a"] = {#2 block
    a:text = "â™¥ðŸ˜ƒ";
    OpAppendText(a, "1");
    OpAppendText(a, "2");
    a;
  }#2:text["a"];
  if OpEqText(test_value, "â™¥ðŸ˜ƒ12") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "â™¥ðŸ˜ƒ12"");
    __work_1;
  }#3:text);
}#1

byte-code for append:test()
   0[0]: return-address
   0[4]: Text() var=__work_1[4]:text in 1
   1[28]: Text() var=a[28]:text in 1
   2[52]: Text() var=test_value[52]:text["a"] in 1
   3[76]: ClearText(var[28]) var=a[28]:text in 1
   6[76]: ConstText(_value="â™¥ðŸ˜ƒ") -> text
  15[92]: AppendText(var[28], v1: text)
  18[76]: ConstText(_value="1") -> text
  21[92]: AppendText(var[28], v1: text)
  24[76]: ConstText(_value="2") -> text
  27[92]: AppendText(var[28], v1: text)
  30[76]: VarText(var[28]) -> text var=a[28]:text in 1
  33[92]: AppendText(var[52], v1: text)
  36[76]: VarText(var[52]) -> text var=test_value[52]:text["a"] in 1
  39[92]: ConstText(_value="â™¥ðŸ˜ƒ12") -> text
  50[108]: EqText(v1: text, v2: text) -> boolean
  51[77]: GotoFalseWord(jump=57, if_false: boolean)
  54[76]: GotoWord(jump=114)
  57[76]: ClearText(var[4]) var=__work_1[4]:text in 1
  60[76]: ConstText(_value="Test failed ") -> text
  74[92]: AppendText(var[4], v1: text)
  77[76]: VarText(var[52]) -> text var=test_value[52]:text["a"] in 1
  80[92]: ConstInt(val=0) -> integer
  85[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
  90[76]: ConstText(_value=" != "â™¥ðŸ˜ƒ12"") -> text
 107[92]: AppendText(var[4], v1: text)
 110[76]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 113[92]: Panic(message: text)
 114[76]: FreeText(var[52])
 117[76]: FreeText(var[28])
 120[76]: FreeText(var[4])
 123[76]: Return(ret=0, value=0, discard=76)

