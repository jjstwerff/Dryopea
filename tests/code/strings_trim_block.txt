pub fn test() {
    test_value = {s = " 12   "; trim(s)};
    assert(
        test_value == "12",
        "Test failed {test_value} != \"12\""
    );
}
fn test() {#1 block
  __work_1:text = "";
  s:text = "";
  test_value:text["s"] = {#2 block
    s:text = " 12   ";
    _tp_text_trim(s);
  }#2:text["s"];
  if OpEqText(test_value, "12") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "12"");
    __work_1;
  }#3:text);
}#1

byte-code for trim_block:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: Text()
 693[52]: Text()
 694[76]: ClearText(var[28])
 697[76]: ConstText(_value=" 12   ") -> text
 705[92]: AppendText(var[28], v1: text)
 708[76]: VarText(var[28]) -> text
 711[92]: StaticCall(_tp_text_trim)
 714[92]: AppendText(var[52], v1: text)
 717[76]: VarText(var[52]) -> text
 720[92]: ConstText(_value="12") -> text
 724[108]: EqText(v1: text, v2: text) -> boolean
 725[77]: GotoFalseWord(jump=731, if_false: boolean)
 728[76]: GotoWord(jump=781)
 731[76]: ClearText(var[4])
 734[76]: ConstText(_value="Test failed ") -> text
 748[92]: AppendText(var[4], v1: text)
 751[76]: VarText(var[52]) -> text
 754[92]: ConstInt(val=0) -> integer
 759[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 764[76]: ConstText(_value=" != "12"") -> text
 774[92]: AppendText(var[4], v1: text)
 777[76]: VarText(var[4]) -> text
 780[92]: Panic(message: text)
 781[76]: FreeText(var[52])
 784[76]: FreeText(var[28])
 787[76]: FreeText(var[4])
 790[76]: Return(ret=0, value=0, discard=76)

Execute test:
  691:[8] Text()
  692:[32] Text()
  693:[56] Text()
  694:[80] ClearText(var[32])
  697:[80] ConstText(_value=" 12   ") -> " 12   "[80]
  705:[96] AppendText(var[32], v1=" 12   "[80])
  708:[80] VarText(var[32]) -> " 12   "[80]
  711:[96] StaticCall(call=6)
  714:[96] AppendText(var[56], v1="12"[80])
  717:[80] VarText(var[56]) -> "12"[80]
  720:[96] ConstText(_value="12") -> "12"[96]
  724:[112] EqText(v1="12"[80], v2="12"[96]) -> true[80]
  725:[81] GotoFalseWord(jump=731, if_false=true[80])
  728:[80] GotoWord(jump=781)
  781:[80] FreeText(var[56])
  784:[80] FreeText(var[32])
  787:[80] FreeText(var[8])
  790:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
