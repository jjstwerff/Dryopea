pub fn test() {
    test_value = {s = " 12   "; trim(s)};
    assert(
        test_value == "12",
        "Test failed {test_value} != \"12\""
    );
}
fn test() {#1 block
  __work_1:text = "";
  s:text = "";
  test_value:text["s"] = {#2 block
    s:text = " 12   ";
    _tp_text_trim(s);
  }#2:text["s"];
  if OpEqText(test_value, "12") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "12"");
    __work_1;
  }#3:text);
}#1

byte-code for trim_block:test()
 645[0]: return-address
 645[4]: Text() var=__work_1[4]:text in 1
 646[28]: Text() var=s[28]:text in 1
 647[52]: Text() var=test_value[52]:text["s"] in 1
 648[76]: ClearText(var[28]) var=s[28]:text in 1
 651[76]: ConstText(_value=" 12   ") -> text
 659[92]: AppendText(var[28], v1: text)
 662[76]: VarText(var[28]) -> text var=s[28]:text in 1
 665[92]: StaticCall(_tp_text_trim)
 668[92]: AppendText(var[52], v1: text)
 671[76]: VarText(var[52]) -> text var=test_value[52]:text["s"] in 1
 674[92]: ConstText(_value="12") -> text
 678[108]: EqText(v1: text, v2: text) -> boolean
 679[77]: GotoFalseWord(jump=685, if_false: boolean)
 682[76]: GotoWord(jump=735)
 685[76]: ClearText(var[4]) var=__work_1[4]:text in 1
 688[76]: ConstText(_value="Test failed ") -> text
 702[92]: AppendText(var[4], v1: text)
 705[76]: VarText(var[52]) -> text var=test_value[52]:text["s"] in 1
 708[92]: ConstInt(val=0) -> integer
 713[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 718[76]: ConstText(_value=" != "12"") -> text
 728[92]: AppendText(var[4], v1: text)
 731[76]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 734[92]: Panic(message: text)
 735[76]: FreeText(var[52])
 738[76]: FreeText(var[28])
 741[76]: FreeText(var[4])
 744[76]: Return(ret=0, value=0, discard=76)

Execute test:
  645:[8] Text()
  646:[32] Text()
  647:[56] Text()
  648:[80] ClearText(var[32])
  651:[80] ConstText(_value=" 12   ") -> " 12   "[80]
  659:[96] AppendText(var[32], v1=" 12   "[80])
  662:[80] VarText(var[32]) -> " 12   "[80]
  665:[96] StaticCall(call=7)
  668:[96] AppendText(var[56], v1="12"[80])
  671:[80] VarText(var[56]) -> "12"[80]
  674:[96] ConstText(_value="12") -> "12"[96]
  678:[112] EqText(v1="12"[80], v2="12"[96]) -> true[80]
  679:[81] GotoFalseWord(jump=685, if_false=true[80])
  682:[80] GotoWord(jump=735)
  735:[80] FreeText(var[56])
  738:[80] FreeText(var[32])
  741:[80] FreeText(var[8])
  744:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
