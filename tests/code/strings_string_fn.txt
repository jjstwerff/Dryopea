fn to_text() -> text {
    res = "aa ";
    for _i in 0..2 {
        res += "b";
    }
    res + " cc"
}

pub fn test() {
    test_value = {"1{to_text()}2"};
    assert(
        test_value == "1aa bb cc2",
        "Test failed {test_value} != \"1aa bb cc2\""
    );
}
fn to_text(__work_1:&text) -> text["__work_1"] {#1 block
  __work_1:&text = "";
  res:text = "aa ";
  {#2 for
    _i#index:integer = OpConvIntFromNull();
    loop {#3 for loop
      _i:integer = {#4 for next
        _i#index:integer = if OpNot(OpConvBoolFromInt(_i#index)) 0i32 else OpAddInt(_i#index, 1i32);
        if OpGeInt(_i#index, 2i32) break(0) else null;
        _i#index;
      }#4:integer;
      {#5 block
        OpAppendText(res, "b");
      }#5;
    }#3;
  }#2;
  __work_1:&text = res;
  OpAppendRefText(OpVarRef(__work_1), 0i32, " cc");
  __work_1;
}#1:&text

byte-code for string_fn:to_text(__work_1: &text[0]) -> text["res"]
 645[12]: return-address
 645[16]: VarRef(var[0]) -> ref(reference) var=__work_1[0]:&text in 0
 648[28]: ConstText(_value="") -> text
 650[44]: AppendRefText(r: ref(reference), fld=0, v1: text)
 653[16]: Text() var=res[16]:text in 1
 654[40]: ConstText(_value="aa ") -> text
 659[56]: AppendText(var[16], v1: text)
 662[40]: ConvIntFromNull() -> integer var=_i#index[40]:integer in 2
 663[44]: VarInt(var[40]) -> integer var=_i#index[40]:integer in 2
 666[48]: ConvBoolFromInt(v1: integer) -> boolean
 667[45]: Not(v1: boolean) -> boolean
 668[45]: GotoFalseWord(jump=679, if_false: boolean)
 671[44]: ConstInt(val=0) -> integer
 676[48]: GotoWord(jump=688)
 679[44]: VarInt(var[40]) -> integer var=_i#index[40]:integer in 2
 682[48]: ConstInt(val=1) -> integer
 687[52]: AddInt(v1: integer, v2: integer) -> integer
 688[48]: PutInt(var[40], value: integer)
 691[44]: VarInt(var[40]) -> integer var=_i#index[40]:integer in 2
 694[48]: ConstInt(val=2) -> integer
 699[52]: GeInt(v1: integer, v2: integer) -> boolean
 700[45]: GotoFalseWord(jump=706, if_false: boolean)
 703[44]: GotoWord(jump=722)
 706[44]: VarInt(var[40]) -> integer var=_i#index[40]:integer in 2
 709[48]: ConstText(_value="b") -> text
 712[64]: AppendText(var[16], v1: text)
 715[48]: FreeStack(value=0, discard=4)
 719[44]: GotoWord(jump=663)
 722[44]: FreeStack(value=0, discard=4)
 726[40]: VarRef(var[0]) -> ref(reference) var=__work_1[0]:&text in 0
 729[52]: VarText(var[16]) -> text var=res[16]:text in 1
 732[68]: AppendRefText(r: ref(reference), fld=0, v1: text)
 735[40]: VarRef(var[0]) -> ref(reference)
 738[52]: ConstText(_value=" cc") -> text
 743[68]: AppendRefText(r: ref(reference), fld=0, v1: text)
 746[40]: VarRef(var[0]) -> ref(reference) var=__work_1[0]:&text in 0
 749[52]: GetRefText(r: ref(reference), fld=0) -> text["res"]
 752[56]: FreeText(var[16])
 755[56]: Return(ret=12, value=16, discard=56) type=text[4]:Base[5]

fn test() {#1 block
  __work_3:text = "";
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "1";
      OpFormatText(__work_1, to_text({#4 default ref
        OpCreateRef(__work_2);
      }#4:ref(reference)["__work_2"]), 0i32, -1i32, 32i32);
      OpAppendText(__work_1, "2");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "1aa bb cc2") null else OpPanic({#5 formatting string
    __work_3:text = "Test failed ";
    OpFormatText(__work_3, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_3, " != "1aa bb cc2"");
    __work_3;
  }#5:text);
}#1

byte-code for string_fn:test()
 761[0]: return-address
 761[4]: Text() var=__work_3[4]:text in 1
 762[28]: Text() var=__work_2[28]:text in 1
 763[52]: Text() var=__work_1[52]:text in 1
 764[76]: Text() var=test_value[76]:text in 1
 765[100]: ClearText(var[52]) var=__work_1[52]:text in 1
 768[100]: ConstText(_value="1") -> text
 771[116]: AppendText(var[52], v1: text)
 774[100]: CreateRef(var[28]) -> ref(reference)
 777[112]: Call(size=0, to=645)
 784[116]: ConstInt(val=0) -> integer
 789[120]: FormatText(var[52], val: text, width: integer, dir=-1, token=32)
 794[100]: ConstText(_value="2") -> text
 797[116]: AppendText(var[52], v1: text)
 800[100]: VarText(var[52]) -> text var=__work_1[52]:text in 1
 803[116]: AppendText(var[76], v1: text)
 806[100]: VarText(var[76]) -> text var=test_value[76]:text in 1
 809[116]: ConstText(_value="1aa bb cc2") -> text
 821[132]: EqText(v1: text, v2: text) -> boolean
 822[101]: GotoFalseWord(jump=828, if_false: boolean)
 825[100]: GotoWord(jump=886)
 828[100]: ClearText(var[4]) var=__work_3[4]:text in 1
 831[100]: ConstText(_value="Test failed ") -> text
 845[116]: AppendText(var[4], v1: text)
 848[100]: VarText(var[76]) -> text var=test_value[76]:text in 1
 851[116]: ConstInt(val=0) -> integer
 856[120]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 861[100]: ConstText(_value=" != "1aa bb cc2"") -> text
 879[116]: AppendText(var[4], v1: text)
 882[100]: VarText(var[4]) -> text var=__work_3[4]:text in 1
 885[116]: Panic(message: text)
 886[100]: FreeText(var[76])
 889[100]: FreeText(var[52])
 892[100]: FreeText(var[28])
 895[100]: FreeText(var[4])
 898[100]: Return(ret=0, value=0, discard=100)

Execute test:
  761:[8] Text()
  762:[32] Text()
  763:[56] Text()
  764:[80] Text()
  765:[104] ClearText(var[56])
  768:[104] ConstText(_value="1") -> "1"[104]
  771:[120] AppendText(var[56], v1="1"[104])
  774:[104] CreateRef(var[32]) -> ref(0,1,32)[104]
  777:[116] Call(size=0, to=645)
  645:[120] VarRef(var[104]) -> ref(0,1,32)[120]
  648:[132] ConstText(_value="") -> ""[132]
  650:[148] AppendRefText(r=ref(0,1,32)[120], fld=0, v1=""[132])
  651:[120] Goto(jump=-25714)
  653:[120] Text()
  654:[144] ConstText(_value="aa ") -> "aa "[144]
  659:[160] AppendText(var[120], v1="aa "[144])
  662:[144] ConvIntFromNull() -> -2147483648[144]
  663:[148] VarInt(var[144]) -> -2147483648[148]
  666:[152] ConvBoolFromInt(v1=-2147483648[148]) -> false[148]
  667:[149] Not(v1=false[148]) -> true[148]
  668:[149] GotoFalseWord(jump=679, if_false=true[148])
  671:[148] ConstInt(val=0) -> 0[148]
  676:[152] GotoWord(jump=688)
  688:[152] PutInt(var[144], value=0[148])
  691:[148] VarInt(var[144]) -> 0[148]
  694:[152] ConstInt(val=2) -> 2[152]
  699:[156] GeInt(v1=0[148], v2=2[152]) -> false[148]
  700:[149] GotoFalseWord(jump=706, if_false=false[148])
  706:[148] VarInt(var[144]) -> 0[148]
  709:[152] ConstText(_value="b") -> "b"[152]
  712:[168] AppendText(var[120], v1="b"[152])
  715:[152] FreeStack(value=0, discard=4)
  719:[148] GotoWord(jump=663)
  663:[148] VarInt(var[144]) -> 0[148]
  666:[152] ConvBoolFromInt(v1=0[148]) -> true[148]
  667:[149] Not(v1=true[148]) -> false[148]
  668:[149] GotoFalseWord(jump=679, if_false=false[148])
  679:[148] VarInt(var[144]) -> 0[148]
  682:[152] ConstInt(val=1) -> 1[152]
  687:[156] AddInt(v1=0[148], v2=1[152]) -> 1[148]
  688:[152] PutInt(var[144], value=1[148])
  691:[148] VarInt(var[144]) -> 1[148]
  694:[152] ConstInt(val=2) -> 2[152]
  699:[156] GeInt(v1=1[148], v2=2[152]) -> false[148]
  700:[149] GotoFalseWord(jump=706, if_false=false[148])
  706:[148] VarInt(var[144]) -> 1[148]
  709:[152] ConstText(_value="b") -> "b"[152]
  712:[168] AppendText(var[120], v1="b"[152])
  715:[152] FreeStack(value=0, discard=4)
  719:[148] GotoWord(jump=663)
  663:[148] VarInt(var[144]) -> 1[148]
  666:[152] ConvBoolFromInt(v1=1[148]) -> true[148]
  667:[149] Not(v1=true[148]) -> false[148]
  668:[149] GotoFalseWord(jump=679, if_false=false[148])
  679:[148] VarInt(var[144]) -> 1[148]
  682:[152] ConstInt(val=1) -> 1[152]
  687:[156] AddInt(v1=1[148], v2=1[152]) -> 2[148]
  688:[152] PutInt(var[144], value=2[148])
  691:[148] VarInt(var[144]) -> 2[148]
  694:[152] ConstInt(val=2) -> 2[152]
  699:[156] GeInt(v1=2[148], v2=2[152]) -> true[148]
  700:[149] GotoFalseWord(jump=706, if_false=true[148])
  703:[148] GotoWord(jump=722)
  722:[148] FreeStack(value=0, discard=4)
  726:[144] VarRef(var[104]) -> ref(0,1,32)[144]
  729:[156] VarText(var[120]) -> "aa bb"[156]
  732:[172] AppendRefText(r=ref(0,1,32)[144], fld=0, v1="aa bb"[156])
  733:[144] Goto(jump=-16928)
  735:[144] VarRef(var[104]) -> ref(0,1,32)[144]
  738:[156] ConstText(_value=" cc") -> " cc"[156]
  743:[172] AppendRefText(r=ref(0,1,32)[144], fld=0, v1=" cc"[156])
  744:[144] Goto(jump=-16917)
  746:[144] VarRef(var[104]) -> ref(0,1,32)[144]
  749:[156] GetRefText(r=ref(0,1,32)[144], fld=0) -> "aa bb cc"[144]
  750:[160] Goto(jump=-24591)
  752:[160] FreeText(var[120])
  755:[160] Return(ret=784[116], value=16, discard=56) -> "aa bb cc"[104]
  784:[120] ConstInt(val=0) -> 0[120]
  789:[124] FormatText(var[56], val="aa bb cc"[104], width=0[120], dir=-1, token=32)
  794:[104] ConstText(_value="2") -> "2"[104]
  797:[120] AppendText(var[56], v1="2"[104])
  800:[104] VarText(var[56]) -> "1aa bb cc2"[104]
  803:[120] AppendText(var[80], v1="1aa bb cc2"[104])
  806:[104] VarText(var[80]) -> "1aa bb cc2"[104]
  809:[120] ConstText(_value="1aa bb cc2") -> "1aa bb cc2"[120]
  821:[136] EqText(v1="1aa bb cc2"[104], v2="1aa bb cc2"[120]) -> true[104]
  822:[105] GotoFalseWord(jump=828, if_false=true[104])
  825:[104] GotoWord(jump=886)
  886:[104] FreeText(var[80])
  889:[104] FreeText(var[56])
  892:[104] FreeText(var[32])
  895:[104] FreeText(var[8])
  898:[104] Return(ret=4294967295[4], value=0, discard=100)
Finished
