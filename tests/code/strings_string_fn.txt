fn to_text() -> text {
    res = "aa ";
    for _i in 0..2 {
        res += "b";
    }
    res + " cc"
}

pub fn test() {
    test_value = {"1{to_text()}2"};
    assert(
        test_value == "1aa bb cc2",
        "Test failed {test_value} != \"1aa bb cc2\""
    );
}
fn to_text(__work_1:&text) -> text["__work_1"] {#1 block
  __work_1:&text = "";
  res:text = "aa ";
  {#2 for
    _i#index:integer = OpConvIntFromNull();
    loop {#3 for loop
      _i:integer = {#4 for next
        _i#index:integer = if OpNot(OpConvBoolFromInt(_i#index)) 0i32 else OpAddInt(_i#index, 1i32);
        if OpGeInt(_i#index, 2i32) break(0) else null;
        _i#index;
      }#4:integer;
      {#5 block
        OpAppendText(res, "b");
      }#5;
    }#3;
  }#2;
  __work_1:&text = res;
  OpAppendRefText(OpVarRef(__work_1), 0i32, " cc");
  __work_1;
}#1:&text

byte-code for string_fn:to_text(__work_1: &text[0]) -> text["res"]
 655[12]: return-address
 655[16]: VarRef(var[0]) -> ref(reference) var=__work_1[0]:&text in 0
 658[28]: ConstText(_value="") -> text
 660[44]: AppendRefText(r: ref(reference), fld=0, v1: text)
 663[16]: Text() var=res[16]:text in 1
 664[40]: ConstText(_value="aa ") -> text
 669[56]: AppendText(var[16], v1: text)
 672[40]: ConvIntFromNull() -> integer var=_i#index[40]:integer in 2
 673[44]: VarInt(var[40]) -> integer var=_i#index[40]:integer in 2
 676[48]: ConvBoolFromInt(v1: integer) -> boolean
 677[45]: Not(v1: boolean) -> boolean
 678[45]: GotoFalseWord(jump=689, if_false: boolean)
 681[44]: ConstInt(val=0) -> integer
 686[48]: GotoWord(jump=698)
 689[44]: VarInt(var[40]) -> integer var=_i#index[40]:integer in 2
 692[48]: ConstInt(val=1) -> integer
 697[52]: AddInt(v1: integer, v2: integer) -> integer
 698[48]: PutInt(var[40], value: integer)
 701[44]: VarInt(var[40]) -> integer var=_i#index[40]:integer in 2
 704[48]: ConstInt(val=2) -> integer
 709[52]: GeInt(v1: integer, v2: integer) -> boolean
 710[45]: GotoFalseWord(jump=716, if_false: boolean)
 713[44]: GotoWord(jump=732)
 716[44]: VarInt(var[40]) -> integer var=_i#index[40]:integer in 2
 719[48]: ConstText(_value="b") -> text
 722[64]: AppendText(var[16], v1: text)
 725[48]: FreeStack(value=0, discard=4)
 729[44]: GotoWord(jump=673)
 732[44]: FreeStack(value=0, discard=4)
 736[40]: VarRef(var[0]) -> ref(reference) var=__work_1[0]:&text in 0
 739[52]: VarText(var[16]) -> text var=res[16]:text in 1
 742[68]: AppendRefText(r: ref(reference), fld=0, v1: text)
 745[40]: VarRef(var[0]) -> ref(reference)
 748[52]: ConstText(_value=" cc") -> text
 753[68]: AppendRefText(r: ref(reference), fld=0, v1: text)
 756[40]: VarRef(var[0]) -> ref(reference) var=__work_1[0]:&text in 0
 759[52]: GetRefText(r: ref(reference), fld=0) -> text["res"]
 762[56]: FreeText(var[16])
 765[56]: Return(ret=12, value=16, discard=56) type=text[4]:Base[5]

fn test() {#1 block
  __work_3:text = "";
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "1";
      OpFormatText(__work_1, to_text({#4 default ref
        OpCreateRef(__work_2);
      }#4:ref(reference)["__work_2"]), 0i32, -1i32, 32i32);
      OpAppendText(__work_1, "2");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "1aa bb cc2") null else OpPanic({#5 formatting string
    __work_3:text = "Test failed ";
    OpFormatText(__work_3, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_3, " != "1aa bb cc2"");
    __work_3;
  }#5:text);
}#1

byte-code for string_fn:test()
 771[0]: return-address
 771[4]: Text() var=__work_3[4]:text in 1
 772[28]: Text() var=__work_2[28]:text in 1
 773[52]: Text() var=__work_1[52]:text in 1
 774[76]: Text() var=test_value[76]:text in 1
 775[100]: ClearText(var[52]) var=__work_1[52]:text in 1
 778[100]: ConstText(_value="1") -> text
 781[116]: AppendText(var[52], v1: text)
 784[100]: CreateRef(var[28]) -> ref(reference)
 787[112]: Call(size=0, to=655)
 794[116]: ConstInt(val=0) -> integer
 799[120]: FormatText(var[52], val: text, width: integer, dir=-1, token=32)
 804[100]: ConstText(_value="2") -> text
 807[116]: AppendText(var[52], v1: text)
 810[100]: VarText(var[52]) -> text var=__work_1[52]:text in 1
 813[116]: AppendText(var[76], v1: text)
 816[100]: VarText(var[76]) -> text var=test_value[76]:text in 1
 819[116]: ConstText(_value="1aa bb cc2") -> text
 831[132]: EqText(v1: text, v2: text) -> boolean
 832[101]: GotoFalseWord(jump=838, if_false: boolean)
 835[100]: GotoWord(jump=896)
 838[100]: ClearText(var[4]) var=__work_3[4]:text in 1
 841[100]: ConstText(_value="Test failed ") -> text
 855[116]: AppendText(var[4], v1: text)
 858[100]: VarText(var[76]) -> text var=test_value[76]:text in 1
 861[116]: ConstInt(val=0) -> integer
 866[120]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 871[100]: ConstText(_value=" != "1aa bb cc2"") -> text
 889[116]: AppendText(var[4], v1: text)
 892[100]: VarText(var[4]) -> text var=__work_3[4]:text in 1
 895[116]: Panic(message: text)
 896[100]: FreeText(var[76])
 899[100]: FreeText(var[52])
 902[100]: FreeText(var[28])
 905[100]: FreeText(var[4])
 908[100]: Return(ret=0, value=0, discard=100)

Execute test:
  771:[8] Text()
  772:[32] Text()
  773:[56] Text()
  774:[80] Text()
  775:[104] ClearText(var[56])
  778:[104] ConstText(_value="1") -> "1"[104]
  781:[120] AppendText(var[56], v1="1"[104])
  784:[104] CreateRef(var[32]) -> ref(0,1,32)[104]
  787:[116] Call(size=0, to=655)
  655:[120] VarRef(var[104]) -> ref(0,1,32)[120]
  658:[132] ConstText(_value="") -> ""[132]
  660:[148] AppendRefText(r=ref(0,1,32)[120], fld=0, v1=""[132])
  661:[120] Goto(jump=-25704)
  663:[120] Text()
  664:[144] ConstText(_value="aa ") -> "aa "[144]
  669:[160] AppendText(var[120], v1="aa "[144])
  672:[144] ConvIntFromNull() -> -2147483648[144]
  673:[148] VarInt(var[144]) -> -2147483648[148]
  676:[152] ConvBoolFromInt(v1=-2147483648[148]) -> false[148]
  677:[149] Not(v1=false[148]) -> true[148]
  678:[149] GotoFalseWord(jump=689, if_false=true[148])
  681:[148] ConstInt(val=0) -> 0[148]
  686:[152] GotoWord(jump=698)
  698:[152] PutInt(var[144], value=0[148])
  701:[148] VarInt(var[144]) -> 0[148]
  704:[152] ConstInt(val=2) -> 2[152]
  709:[156] GeInt(v1=0[148], v2=2[152]) -> false[148]
  710:[149] GotoFalseWord(jump=716, if_false=false[148])
  716:[148] VarInt(var[144]) -> 0[148]
  719:[152] ConstText(_value="b") -> "b"[152]
  722:[168] AppendText(var[120], v1="b"[152])
  725:[152] FreeStack(value=0, discard=4)
  729:[148] GotoWord(jump=673)
  673:[148] VarInt(var[144]) -> 0[148]
  676:[152] ConvBoolFromInt(v1=0[148]) -> true[148]
  677:[149] Not(v1=true[148]) -> false[148]
  678:[149] GotoFalseWord(jump=689, if_false=false[148])
  689:[148] VarInt(var[144]) -> 0[148]
  692:[152] ConstInt(val=1) -> 1[152]
  697:[156] AddInt(v1=0[148], v2=1[152]) -> 1[148]
  698:[152] PutInt(var[144], value=1[148])
  701:[148] VarInt(var[144]) -> 1[148]
  704:[152] ConstInt(val=2) -> 2[152]
  709:[156] GeInt(v1=1[148], v2=2[152]) -> false[148]
  710:[149] GotoFalseWord(jump=716, if_false=false[148])
  716:[148] VarInt(var[144]) -> 1[148]
  719:[152] ConstText(_value="b") -> "b"[152]
  722:[168] AppendText(var[120], v1="b"[152])
  725:[152] FreeStack(value=0, discard=4)
  729:[148] GotoWord(jump=673)
  673:[148] VarInt(var[144]) -> 1[148]
  676:[152] ConvBoolFromInt(v1=1[148]) -> true[148]
  677:[149] Not(v1=true[148]) -> false[148]
  678:[149] GotoFalseWord(jump=689, if_false=false[148])
  689:[148] VarInt(var[144]) -> 1[148]
  692:[152] ConstInt(val=1) -> 1[152]
  697:[156] AddInt(v1=1[148], v2=1[152]) -> 2[148]
  698:[152] PutInt(var[144], value=2[148])
  701:[148] VarInt(var[144]) -> 2[148]
  704:[152] ConstInt(val=2) -> 2[152]
  709:[156] GeInt(v1=2[148], v2=2[152]) -> true[148]
  710:[149] GotoFalseWord(jump=716, if_false=true[148])
  713:[148] GotoWord(jump=732)
  732:[148] FreeStack(value=0, discard=4)
  736:[144] VarRef(var[104]) -> ref(0,1,32)[144]
  739:[156] VarText(var[120]) -> "aa bb"[156]
  742:[172] AppendRefText(r=ref(0,1,32)[144], fld=0, v1="aa bb"[156])
  743:[144] Goto(jump=-16918)
  745:[144] VarRef(var[104]) -> ref(0,1,32)[144]
  748:[156] ConstText(_value=" cc") -> " cc"[156]
  753:[172] AppendRefText(r=ref(0,1,32)[144], fld=0, v1=" cc"[156])
  754:[144] Goto(jump=-16907)
  756:[144] VarRef(var[104]) -> ref(0,1,32)[144]
  759:[156] GetRefText(r=ref(0,1,32)[144], fld=0) -> "aa bb cc"[144]
  760:[160] Goto(jump=-24581)
  762:[160] FreeText(var[120])
  765:[160] Return(ret=794[116], value=16, discard=56) -> "aa bb cc"[104]
  794:[120] ConstInt(val=0) -> 0[120]
  799:[124] FormatText(var[56], val="aa bb cc"[104], width=0[120], dir=-1, token=32)
  804:[104] ConstText(_value="2") -> "2"[104]
  807:[120] AppendText(var[56], v1="2"[104])
  810:[104] VarText(var[56]) -> "1aa bb cc2"[104]
  813:[120] AppendText(var[80], v1="1aa bb cc2"[104])
  816:[104] VarText(var[80]) -> "1aa bb cc2"[104]
  819:[120] ConstText(_value="1aa bb cc2") -> "1aa bb cc2"[120]
  831:[136] EqText(v1="1aa bb cc2"[104], v2="1aa bb cc2"[120]) -> true[104]
  832:[105] GotoFalseWord(jump=838, if_false=true[104])
  835:[104] GotoWord(jump=896)
  896:[104] FreeText(var[80])
  899:[104] FreeText(var[56])
  902:[104] FreeText(var[32])
  905:[104] FreeText(var[8])
  908:[104] Return(ret=4294967295[4], value=0, discard=100)
Finished
