
fn to_text() -> text {
    res = "aa ";
    for _i in 0..2 {
        res += "b";
    }
    res + " cc"
}
    

pub fn test() {
    test_value = {"1{to_text()}2"};
    assert(
        test_value == "1aa bb cc2",
        "Test failed {test_value} != \"1aa bb cc2\""
    );
}
fn to_text() -> text {#1 block
  __work_1:text = "";
  res:text = "aa ";
  {#2 for
    _i#index:integer = OpConvIntFromNull();
    loop {#3 for loop
      _i:integer = {#4 for next
        _i#index:integer = if OpNot(OpConvBoolFromInt(_i#index)) 0i32 else OpAddInt(_i#index, 1i32);
        if OpGeInt(_i#index, 2i32) break(0) else null;
        _i#index;
      }#4:integer;
      {#5 block
        OpAppendText(res, "b");
      }#5;
    }#3;
  }#2;
  __work_1:text = res;
  OpAppendText(__work_1, " cc");
  __work_1;
}#1:text["__work_1"]

byte-code for string_fn:to_text() -> text
 682[0]: return-address
 682[4]: Text()
 683[28]: Text()
 684[52]: ConstText(_value="aa ") -> text
 689[68]: AppendText(var[28], v1: text)
 692[52]: ConvIntFromNull() -> integer
 693[56]: VarInt(var[52]) -> integer
 696[60]: ConvBoolFromInt(v1: integer) -> boolean
 697[57]: Not(v1: boolean) -> boolean
 698[57]: GotoFalseWord(jump=709, if_false: boolean)
 701[56]: ConstInt(val=0) -> integer
 706[60]: GotoWord(jump=718)
 709[56]: VarInt(var[52]) -> integer
 712[60]: ConstInt(val=1) -> integer
 717[64]: AddInt(v1: integer, v2: integer) -> integer
 718[60]: PutInt(var[52], value: integer)
 721[56]: VarInt(var[52]) -> integer
 724[60]: ConstInt(val=2) -> integer
 729[64]: GeInt(v1: integer, v2: integer) -> boolean
 730[57]: GotoFalseWord(jump=736, if_false: boolean)
 733[56]: GotoWord(jump=752)
 736[56]: VarInt(var[52]) -> integer
 739[60]: ConstText(_value="b") -> text
 742[76]: AppendText(var[28], v1: text)
 745[60]: FreeStack(value=0, discard=4)
 749[56]: GotoWord(jump=693)
 752[56]: FreeStack(value=0, discard=4)
 756[52]: ClearText(var[4])
 759[52]: VarText(var[28]) -> text
 762[68]: AppendText(var[4], v1: text)
 765[52]: ConstText(_value=" cc") -> text
 770[68]: AppendText(var[4], v1: text)
 773[52]: VarText(var[4]) -> text
 776[68]: Return(ret=0, value=16, discard=68) type=text[4]:Base[5]

fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "1";
      OpFormatText(__work_1, to_text(), 0i32, -1i32, 32i32);
      OpAppendText(__work_1, "2");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "1aa bb cc2") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "1aa bb cc2"");
    __work_2;
  }#4:text);
}#1

byte-code for string_fn:test()
 782[0]: return-address
 782[4]: Text()
 783[28]: Text()
 784[52]: Text()
 785[76]: ClearText(var[28])
 788[76]: ConstText(_value="1") -> text
 791[92]: AppendText(var[28], v1: text)
 794[76]: Call(size=0, to=682)
 801[92]: ConstInt(val=0) -> integer
 806[96]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
 811[76]: ConstText(_value="2") -> text
 814[92]: AppendText(var[28], v1: text)
 817[76]: VarText(var[28]) -> text
 820[92]: AppendText(var[52], v1: text)
 823[76]: VarText(var[52]) -> text
 826[92]: ConstText(_value="1aa bb cc2") -> text
 838[108]: EqText(v1: text, v2: text) -> boolean
 839[77]: GotoFalseWord(jump=845, if_false: boolean)
 842[76]: GotoWord(jump=903)
 845[76]: ClearText(var[4])
 848[76]: ConstText(_value="Test failed ") -> text
 862[92]: AppendText(var[4], v1: text)
 865[76]: VarText(var[52]) -> text
 868[92]: ConstInt(val=0) -> integer
 873[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 878[76]: ConstText(_value=" != "1aa bb cc2"") -> text
 896[92]: AppendText(var[4], v1: text)
 899[76]: VarText(var[4]) -> text
 902[92]: Panic(message: text)
 903[76]: Return(ret=0, value=0, discard=76)

Execute test:
  782:[8] Text()
  783:[32] Text()
  784:[56] Text()
  785:[80] ClearText(var[32])
  788:[80] ConstText(_value="1") -> "1"[80]
  791:[96] AppendText(var[32], v1="1"[80])
  794:[80] Call(size=0, to=682)
  682:[84] Text()
  683:[108] Text()
  684:[132] ConstText(_value="aa ") -> "aa "[132]
  689:[148] AppendText(var[108], v1="aa "[132])
  692:[132] ConvIntFromNull() -> -2147483648[132]
  693:[136] VarInt(var[132]) -> -2147483648[136]
  696:[140] ConvBoolFromInt(v1=-2147483648[136]) -> false[136]
  697:[137] Not(v1=false[136]) -> true[136]
  698:[137] GotoFalseWord(jump=709, if_false=true[136])
  701:[136] ConstInt(val=0) -> 0[136]
  706:[140] GotoWord(jump=718)
  718:[140] PutInt(var[132], value=0[136])
  721:[136] VarInt(var[132]) -> 0[136]
  724:[140] ConstInt(val=2) -> 2[140]
  729:[144] GeInt(v1=0[136], v2=2[140]) -> false[136]
  730:[137] GotoFalseWord(jump=736, if_false=false[136])
  736:[136] VarInt(var[132]) -> 0[136]
  739:[140] ConstText(_value="b") -> "b"[140]
  742:[156] AppendText(var[108], v1="b"[140])
  745:[140] FreeStack(value=0, discard=4)
  749:[136] GotoWord(jump=693)
  693:[136] VarInt(var[132]) -> 0[136]
  696:[140] ConvBoolFromInt(v1=0[136]) -> true[136]
  697:[137] Not(v1=true[136]) -> false[136]
  698:[137] GotoFalseWord(jump=709, if_false=false[136])
  709:[136] VarInt(var[132]) -> 0[136]
  712:[140] ConstInt(val=1) -> 1[140]
  717:[144] AddInt(v1=0[136], v2=1[140]) -> 1[136]
  718:[140] PutInt(var[132], value=1[136])
  721:[136] VarInt(var[132]) -> 1[136]
  724:[140] ConstInt(val=2) -> 2[140]
  729:[144] GeInt(v1=1[136], v2=2[140]) -> false[136]
  730:[137] GotoFalseWord(jump=736, if_false=false[136])
  736:[136] VarInt(var[132]) -> 1[136]
  739:[140] ConstText(_value="b") -> "b"[140]
  742:[156] AppendText(var[108], v1="b"[140])
  745:[140] FreeStack(value=0, discard=4)
  749:[136] GotoWord(jump=693)
  693:[136] VarInt(var[132]) -> 1[136]
  696:[140] ConvBoolFromInt(v1=1[136]) -> true[136]
  697:[137] Not(v1=true[136]) -> false[136]
  698:[137] GotoFalseWord(jump=709, if_false=false[136])
  709:[136] VarInt(var[132]) -> 1[136]
  712:[140] ConstInt(val=1) -> 1[140]
  717:[144] AddInt(v1=1[136], v2=1[140]) -> 2[136]
  718:[140] PutInt(var[132], value=2[136])
  721:[136] VarInt(var[132]) -> 2[136]
  724:[140] ConstInt(val=2) -> 2[140]
  729:[144] GeInt(v1=2[136], v2=2[140]) -> true[136]
  730:[137] GotoFalseWord(jump=736, if_false=true[136])
  733:[136] GotoWord(jump=752)
  752:[136] FreeStack(value=0, discard=4)
  756:[132] ClearText(var[84])
  759:[132] VarText(var[108]) -> "aa bb"[132]
  762:[148] AppendText(var[84], v1="aa bb"[132])
  765:[132] ConstText(_value=" cc") -> " cc"[132]
  770:[148] AppendText(var[84], v1=" cc"[132])
  773:[132] VarText(var[84]) -> "aa bb cc"[132]
  776:[148] Return(ret=801[80], value=16, discard=68) -> "aa bb cc"[80]
  801:[96] ConstInt(val=0) -> 0[96]
  806:[100] FormatText(var[32], val="aa bb cc"[80], width=0[96], dir=-1, token=32)
  811:[80] ConstText(_value="2") -> "2"[80]
  814:[96] AppendText(var[32], v1="2"[80])
  817:[80] VarText(var[32]) -> "1aa bb cc2"[80]
  820:[96] AppendText(var[56], v1="1aa bb cc2"[80])
  823:[80] VarText(var[56]) -> "1aa bb cc2"[80]
  826:[96] ConstText(_value="1aa bb cc2") -> "1aa bb cc2"[96]
  838:[112] EqText(v1="1aa bb cc2"[80], v2="1aa bb cc2"[96]) -> true[80]
  839:[81] GotoFalseWord(jump=845, if_false=true[80])
  842:[80] GotoWord(jump=903)
  903:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
