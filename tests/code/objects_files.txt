pub fn test() {
    test_value = {fs = file("example").files(); "{fs}"};
    assert(
        test_value == "[{{path:\"example/config\",size:4096,dir:true}},{{path:\"example/map.png\",size:3406,dir:false}},{{path:\"example/map.xcf\",size:7817,dir:false}},{{path:\"example/show.lav\",size:371,dir:false}}]",
        "Test failed {test_value} != \"[{{path:\"example/config\",size:4096,dir:true}},{{path:\"example/map.png\",size:3406,dir:false}},{{path:\"example/map.xcf\",size:7817,dir:false}},{{path:\"example/show.lav\",size:371,dir:false}}]\""
    );
}
fn test() {#block(1):void
  __ref_2(1):vector<ref(File)> = null;
  __ref_1(1):ref(File) = null;
  __work_2(1):text = "";
  __work_1(1):text = "";
  test_value(1):text = {#block(2):text
    fs(2):vector<ref(File)>["__ref_2"] = _tp_File_files(file("example", __ref_1(1)), __ref_2(1));
    {#Formatted string(3):text
      __work_1(1):text = "";
      OpFormatDatabase(__work_1(1), fs(2), 16i32, false);
      __work_1(1);
    }#Formatted string(3):text;
  }#block(2):text;
  if OpEqText(test_value(1), "[{path:"example/config",size:4096,dir:true},{path:"example/map.png",size:3406,dir:false},{path:"example/map.xcf",size:7817,dir:false},{path:"example/show.lav",size:371,dir:false}]") null else OpPanic({#Formatted string(4):text
    __work_2(1):text = "Test failed ";
    OpFormatText(__work_2(1), test_value(1), 0i32, -1i32, 32i32);
    OpAppendText(__work_2(1), " != "[{path:"example/config",size:4096,dir:true},{path:"example/map.png",size:3406,dir:false},{path:"example/map.xcf",size:7817,dir:false},{path:"example/show.lav",size:371,dir:false}]"");
    __work_2(1);
  }#Formatted string(4):text);
  OpFreeText(test_value(1));
  OpFreeRef(__ref_1(1));
  OpFreeRef(__ref_2(1));
  OpFreeText(__work_1(1));
  OpFreeText(__work_2(1));
}#block(1):void

byte-code for files:test() [1119]
   0[4]: return-address
   0[8]: ConvRefFromNull() -> ref(reference) var=__ref_2[8]:vector<ref(File)>
   1[20]: Database(var[8], db_tp=15)
   6[20]: VarRef(var[8]) -> ref(reference)
   9[32]: ConstInt(val=0) -> integer
  14[36]: SetInt(v1: ref(reference), fld=4, val: integer)
  17[20]: CreateRef(var[8]) -> ref(reference)
  20[32]: ConstInt(val=4) -> integer
  25[36]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  30[20]: ConvRefFromNull() -> ref(reference) var=__ref_1[20]:ref(File)
  31[32]: Text() var=__work_2[32]:text
  32[56]: Text() var=__work_1[56]:text
  33[80]: Text() var=test_value[80]:text
  34[104]: ConstText(_value="example") -> text var=fs[104]:vector<ref(File)>["__ref_2"]
  43[120]: VarRef(var[20]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=__ref_1[20]:ref(File)
  46[132]: Call(size=0, to=732)
  53[116]: VarVector(var[8]) -> vector type=vector<File>[4]:Vector(13)[16] var=__ref_2[8]:vector<ref(File)>
  56[128]: Call(size=0, to=810)
  63[116]: ClearText(var[56]) var=__work_1[56]:text
  66[116]: ConstText(_value="") -> text
  68[132]: AppendText(var[56], v1: text)
  71[116]: VarVector(var[104]) -> vector type=vector<File>[4]:Vector(13)[16] var=fs[104]:vector<ref(File)>["__ref_2"]
  74[128]: FormatDatabase(var[56], val: ref(reference), db_tp=16, pretty=false)
  80[116]: VarText(var[56]) -> text var=__work_1[56]:text
  83[132]: FreeStack(value=16, discard=28)
  87[120]: AppendText(var[80], v1: text)
  90[104]: VarText(var[80]) -> text var=test_value[80]:text
  93[120]: ConstText(_value="[{path:"example/config",size:4096,dir:true},{path:"example/map.png",size:3406,dir:false},{path:"example/map.xcf",size:7817,dir:false},{path:"example/show.lav",size:371,dir:false}]") -> text
 274[136]: EqText(v1: text, v2: text) -> boolean
 275[105]: GotoFalseWord(jump=281, if_false: boolean)
 278[104]: GotoWord(jump=508)
 281[104]: ClearText(var[32]) var=__work_2[32]:text
 284[104]: ConstText(_value="Test failed ") -> text
 298[120]: AppendText(var[32], v1: text)
 301[104]: VarText(var[80]) -> text var=test_value[80]:text
 304[120]: ConstInt(val=0) -> integer
 309[124]: FormatText(var[32], val: text, width: integer, dir=-1, token=32)
 314[104]: ConstText(_value=" != "[{path:"example/config",size:4096,dir:true},{path:"example/map.png",size:3406,dir:false},{path:"example/map.xcf",size:7817,dir:false},{path:"example/show.lav",size:371,dir:false}]"") -> text
 501[120]: AppendText(var[32], v1: text)
 504[104]: VarText(var[32]) -> text var=__work_2[32]:text
 507[120]: Panic(message: text)
 508[104]: FreeText(var[80])
 511[104]: VarRef(var[20]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=__ref_1[20]:ref(File)
 514[116]: FreeRef(v1: ref(reference))
 515[104]: VarVector(var[8]) -> vector type=vector<File>[4]:Vector(13)[16] var=__ref_2[8]:vector<ref(File)>
 518[116]: FreeRef(v1: ref(reference))
 519[104]: FreeText(var[56])
 522[104]: FreeText(var[32])
 525[104]: Return(ret=0, value=0, discard=100)

Execute test:
    0:[8] ConvRefFromNull() -> ref(1,0,0)[8]
    1:[20] Database(var[8], db_tp=15)
    6:[20] VarRef(var[8]) -> ref(1,1,0)[20]
    9:[32] ConstInt(val=0) -> 0[32]
   14:[36] SetInt(v1=ref(1,1,0)[20], fld=4, val=0[32])
   17:[20] CreateRef(var[8]) -> ref(0,1,8)[20]
   20:[32] ConstInt(val=4) -> 4[32]
   25:[36] SetByte(v1=ref(0,1,8)[20], fld=4, min=0, val=4[32])
   30:[20] ConvRefFromNull() -> ref(2,0,0)[20]
   31:[32] Text()
   32:[56] Text()
   33:[80] Text()
   34:[104] ConstText(_value="example") -> "example"[104]
   43:[120] VarRef(var[20]) -> ref(2,0,0)=null[120]
   46:[132] Call(size=0, to=732)
  732:[136] Database(var[120], db_tp=13)
  737:[136] VarRef(var[120]) -> ref(2,1,0)={dir:false}[136]
  740:[148] ArgText(var[104]) -> "example"[148]
  743:[164] SetText(v1=ref(2,1,0)[136], fld=4, val="example"[148])
  746:[136] VarRef(var[120]) -> ref(2,1,0)={path:"example",dir:false}[136]
  749:[148] ConstLong(val=0) -> 0[148]
  758:[156] SetLong(v1=ref(2,1,0)[136], fld=8, val=0[148])
  761:[136] VarRef(var[120]) -> ref(2,1,0)={path:"example",size:0,dir:false}[136]
  764:[148] ConstFalse() -> false[148]
  765:[149] GotoFalseWord(jump=776, if_false=false[148])
  776:[148] ConstInt(val=0) -> 0[148]
  781:[152] SetByte(v1=ref(2,1,0)[136], fld=16, min=0, val=0[148])
  786:[136] VarRef(var[120]) -> ref(2,1,0)={path:"example",size:0,dir:false}[136]
  789:[148] GetFile(file=ref(2,1,0)={path:"example",size:0,dir:false}[136]) -> true[136]
  790:[137] GotoFalseWord(jump=799, if_false=true[136])
  793:[136] VarRef(var[120]) -> ref(2,1,0)={path:"example",size:4096,dir:true}[136]
  796:[148] GotoWord(jump=804)
  804:[148] Return(ret=2[144], value=12, discard=32) -> ref(2,1,0)={path:"example",size:4096,dir:true}[116]
    2:[128] Goto(jump=1566)
   29:[128] Goto(jump=2155)
  106:[128] MathCeilSingle(v1=0.000000000000000000000000000000000000000000003[124]) -> 1[124]
  107:[128] Return(ret=0[120], value=4, discard=12) -> 1[116]
    0:[120] VarInt(var[112]) -> 7[120]
    3:[124] AbsInt(v1=7[120]) -> 7[120]
    4:[124] Return(ret=1065353216[116], value=4, discard=12) -> 7[112]
