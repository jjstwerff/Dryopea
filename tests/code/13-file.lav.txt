fn texts(dir:File, l:vector<ref(File)>) {#1 block
  __ref_1:vector<ref(File)> = null;
  {#2 for
    _vector_1:vector<ref(File)>["__ref_1"] = _tp_File_files(dir, __ref_1);
    f#index:integer = -1i32;
    loop {#3 for loop
      f:ref(File)["_vector_1"] = {#4 iter next
        f#index:integer = OpAddInt(f#index, 1i32);
        OpGetVector(_vector_1, 17i32, f#index);
      }#4:ref(File)["_vector_1"];
      if OpNot(OpConvBoolFromRef(f)) break(0) else null;
      {#5 block
        if OpEqInt(OpGetByte(f, 16i32, 0i32), 1i32) {#6 block
          texts(f, l);
        }#6 else if _tp_text_ends_with(OpGetText(f, 4i32), ".txt") {#7 block
          {#8 vector
            _elm_2:ref(File)["l"] = OpNewRecord(l, 14i32, 65535i32);
            OpCopyRecord(f, _elm_2, 12i32);
            OpFinishRecord(l, _elm_2, 14i32, 65535i32);
          }#8;
        }#7 else null;
      }#5;
    }#3;
  }#2;
}#1

byte-code for tests/suite/13-file.lav:texts(dir: ref(File)[0], l: vector<ref(File)>[12])
   0[24]: return-address
   0[28]: ConvRefFromNull() -> ref(reference) var=__ref_1[28]:vector<ref(File)> in 1
   1[40]: Database(var[28], db_tp=15)
   6[40]: VarRef(var[28]) -> ref(reference)
   9[52]: ConstInt(val=0) -> integer
  14[56]: SetInt(v1: ref(reference), fld=4, val: integer)
  17[40]: CreateRef(var[28]) -> ref(reference)
  20[52]: ConstInt(val=4) -> integer
  25[56]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  30[40]: VarRef(var[0]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=dir[0]:ref(File) in 0
  33[52]: VarVector(var[28]) -> vector type=vector<File>[4]:Vector(12)[14] var=__ref_1[28]:vector<ref(File)> in 1
  36[64]: Call(size=0, to=774)
  43[52]: ConstInt(val=-1) -> integer var=f#index[52]:integer in 2
  48[56]: VarInt(var[52]) -> integer var=f#index[52]:integer in 2
  51[60]: ConstInt(val=1) -> integer
  56[64]: AddInt(v1: integer, v2: integer) -> integer
  57[60]: PutInt(var[52], value: integer)
  60[56]: VarVector(var[40]) -> vector type=vector<File>[4]:Vector(12)[14] var=_vector_1[40]:vector<ref(File)>["__ref_1"] in 2
  63[68]: VarInt(var[52]) -> integer var=f#index[52]:integer in 2
  66[72]: GetVector(r: vector, size=17, index: integer) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12]
  69[68]: VarRef(var[56]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=f[56]:ref(File)["_vector_1"] in 3
  72[80]: ConvBoolFromRef(val: ref(reference)) -> boolean
  73[69]: Not(v1: boolean) -> boolean
  74[69]: GotoFalseWord(jump=84, if_false: boolean)
  77[68]: FreeStack(value=0, discard=12)
  81[56]: GotoWord(jump=174)
  84[68]: VarRef(var[56]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=f[56]:ref(File)["_vector_1"] in 3
  87[80]: GetByte(v1: ref(reference), fld=16, min=0) -> integer
  92[72]: ConstInt(val=1) -> integer
  97[76]: EqInt(v1: integer, v2: integer) -> boolean
  98[69]: GotoFalseWord(jump=117, if_false: boolean)
 101[68]: VarRef(var[56]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=f[56]:ref(File)["_vector_1"] in 3
 104[80]: VarVector(var[12]) -> vector type=vector<File>[4]:Vector(12)[14] var=l[12]:vector<ref(File)> in 0
 107[92]: Call(size=0, to=911)
 114[68]: GotoWord(jump=167)
 117[68]: VarRef(var[56]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=f[56]:ref(File)["_vector_1"] in 3
 120[80]: GetText(v1: ref(reference), fld=4) -> text["dir"]
 123[84]: ConstText(_value=".txt") -> text
 129[100]: StaticCall(_tp_text_ends_with)
 132[69]: GotoFalseWord(jump=167, if_false: boolean)
 135[68]: VarVector(var[12]) -> vector type=vector<File>[4]:Vector(12)[14] var=l[12]:vector<ref(File)> in 0
 138[80]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
 143[80]: VarRef(var[56]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=f[56]:ref(File)["_vector_1"] in 3
 146[92]: VarRef(var[68]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=_elm_2[68]:ref(File)["l"] in 8
 149[104]: CopyRecord(data: ref(reference), to: ref(reference), tp=12)
 152[80]: VarVector(var[12]) -> vector type=vector<File>[4]:Vector(12)[14] var=l[12]:vector<ref(File)> in 0
 155[92]: VarRef(var[68]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=_elm_2[68]:ref(File)["l"] in 8
 158[104]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
 163[80]: FreeStack(value=0, discard=12)
 167[68]: FreeStack(value=0, discard=12)
 171[56]: GotoWord(jump=48)
 174[56]: FreeStack(value=0, discard=16)
 178[40]: VarVector(var[28]) -> vector type=vector<File>[4]:Vector(12)[14] var=__ref_1[28]:vector<ref(File)> in 1
 181[52]: FreeRef(v1: ref(reference))
 182[40]: Return(ret=24, value=0, discard=40)

fn main() {#1 block
  __ref_3:vector<text> = null;
  __ref_2:ref(File) = null;
  __ref_1:ref(main_vector<File>) = null;
  __work_2:text = "";
  __work_1:text = "";
  l:vector<ref(File)>["__ref_1"] = {#2 vector
    OpDatabase(__ref_1, 15i32);
    _vec_1:vector<ref(File)>["__ref_1"] = OpGetField(__ref_1, 4i32, 65535i32);
    OpSetInt(__ref_1, 4i32, 0i32);
    _vec_1;
  }#2:vector<ref(File)>["__ref_1"];
  texts(file("example", __ref_2), l);
  if OpEqText(OpGetText(OpGetVector(l, 17i32, 0i32), 4i32), "example/config/terrain.txt") null else OpPanic({#3 formatting string
    __work_1:text = "Found file '";
    OpFormatText(__work_1, OpGetText(OpGetVector(l, 17i32, 0i32), 4i32), 0i32, -1i32, 32i32);
    OpAppendText(__work_1, "'");
    __work_1;
  }#3:text);
  f:ref(File)["l"] = OpGetVector(l, 17i32, 0i32);
  c:vector<text>["__ref_3"] = _tp_File_lines(f, __ref_3);
  if OpEqText(OpGetText(OpGetVector(c, 4i32, 1i32), 0i32), "   terrain = [") null else OpPanic({#4 formatting string
    __work_2:text = "Line was '";
    OpFormatText(__work_2, OpGetText(OpGetVector(c, 4i32, 1i32), 0i32), 0i32, -1i32, 32i32);
    OpAppendText(__work_2, "'");
    __work_2;
  }#4:text);
}#1

byte-code for tests/suite/13-file.lav:main()
   0[0]: return-address
   0[4]: ConvRefFromNull() -> ref(reference) var=__ref_3[4]:vector<text> in 1
   1[16]: Database(var[4], db_tp=13)
   6[16]: VarRef(var[4]) -> ref(reference)
   9[28]: ConstInt(val=0) -> integer
  14[32]: SetInt(v1: ref(reference), fld=4, val: integer)
  17[16]: CreateRef(var[4]) -> ref(reference)
  20[28]: ConstInt(val=4) -> integer
  25[32]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  30[16]: ConvRefFromNull() -> ref(reference) var=__ref_2[16]:ref(File) in 1
  31[28]: ConvRefFromNull() -> ref(reference) var=__ref_1[28]:ref(main_vector<File>) in 1
  32[40]: Text() var=__work_2[40]:text in 1
  33[64]: Text() var=__work_1[64]:text in 1
  34[88]: Database(var[28], db_tp=15) type=main_vector<File>[8]:{vector:vector<File>[4]}[15] var=l[88]:vector<ref(File)>["__ref_1"] in 1
  39[88]: VarRef(var[28]) -> ref(reference) type=main_vector<File>[8]:{vector:vector<File>[4]}[15] var=__ref_1[28]:ref(main_vector<File>) in 1
  42[100]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=Unknown type(65535)[65535]
  45[100]: VarRef(var[28]) -> ref(reference) type=main_vector<File>[8]:{vector:vector<File>[4]}[15] var=__ref_1[28]:ref(main_vector<File>) in 1
  48[112]: ConstInt(val=0) -> integer
  53[116]: SetInt(v1: ref(reference), fld=4, val: integer)
  56[100]: VarVector(var[88]) -> vector type=vector<File>[4]:Vector(12)[14] var=_vec_1[88]:vector<ref(File)>["__ref_1"] in 2
  59[112]: FreeStack(value=12, discard=24) type=vector<text>[4]:Vector(5)[6]
  63[100]: ConstText(_value="example") -> text
  72[116]: VarRef(var[16]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=__ref_2[16]:ref(File) in 1
  75[128]: Call(size=0, to=700)
  82[112]: VarVector(var[88]) -> vector type=vector<File>[4]:Vector(12)[14] var=l[88]:vector<ref(File)>["__ref_1"] in 1
  85[124]: Call(size=0, to=911)
  92[100]: VarVector(var[88]) -> vector type=vector<File>[4]:Vector(12)[14] var=l[88]:vector<ref(File)>["__ref_1"] in 1
  95[112]: ConstInt(val=0) -> integer
 100[116]: GetVector(r: vector, size=17, index: integer) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12]
 103[112]: GetText(v1: ref(reference), fld=4) -> text["l"]
 106[116]: ConstText(_value="example/config/terrain.txt") -> text
 134[132]: EqText(v1: text, v2: text) -> boolean
 135[101]: GotoFalseWord(jump=141, if_false: boolean)
 138[100]: GotoWord(jump=195)
 141[100]: ClearText(var[64]) var=__work_1[64]:text in 1
 144[100]: ConstText(_value="Found file '") -> text
 158[116]: AppendText(var[64], v1: text)
 161[100]: VarVector(var[88]) -> vector type=vector<File>[4]:Vector(12)[14] var=l[88]:vector<ref(File)>["__ref_1"] in 1
 164[112]: ConstInt(val=0) -> integer
 169[116]: GetVector(r: vector, size=17, index: integer) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12]
 172[112]: GetText(v1: ref(reference), fld=4) -> text["l"]
 175[116]: ConstInt(val=0) -> integer
 180[120]: FormatText(var[64], val: text, width: integer, dir=-1, token=32)
 185[100]: ConstText(_value="'") -> text
 188[116]: AppendText(var[64], v1: text)
 191[100]: VarText(var[64]) -> text var=__work_1[64]:text in 1
 194[116]: Panic(message: text)
 195[100]: VarVector(var[88]) -> vector type=vector<File>[4]:Vector(12)[14] var=l[88]:vector<ref(File)>["__ref_1"] in 1
 198[112]: ConstInt(val=0) -> integer
 203[116]: GetVector(r: vector, size=17, index: integer) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12]
 206[112]: VarRef(var[100]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=f[100]:ref(File)["l"] in 1
 209[124]: VarVector(var[4]) -> vector type=vector<text>[4]:Vector(5)[6] var=__ref_3[4]:vector<text> in 1
 212[136]: Call(size=0, to=436)
 219[124]: VarVector(var[112]) -> vector type=vector<text>[4]:Vector(5)[6] var=c[112]:vector<text>["__ref_3"] in 1
 222[136]: ConstInt(val=1) -> integer
 227[140]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=text[4]:Base[5]
 230[136]: GetText(v1: ref(reference), fld=0) -> text["l"]
 233[140]: ConstText(_value="   terrain = [") -> text
 249[156]: EqText(v1: text, v2: text) -> boolean
 250[125]: GotoFalseWord(jump=256, if_false: boolean)
 253[124]: GotoWord(jump=308)
 256[124]: ClearText(var[40]) var=__work_2[40]:text in 1
 259[124]: ConstText(_value="Line was '") -> text
 271[140]: AppendText(var[40], v1: text)
 274[124]: VarVector(var[112]) -> vector type=vector<text>[4]:Vector(5)[6] var=c[112]:vector<text>["__ref_3"] in 1
 277[136]: ConstInt(val=1) -> integer
 282[140]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=text[4]:Base[5]
 285[136]: GetText(v1: ref(reference), fld=0) -> text["l"]
 288[140]: ConstInt(val=0) -> integer
 293[144]: FormatText(var[40], val: text, width: integer, dir=-1, token=32)
 298[124]: ConstText(_value="'") -> text
 301[140]: AppendText(var[40], v1: text)
 304[124]: VarText(var[40]) -> text var=__work_2[40]:text in 1
 307[140]: Panic(message: text)
 308[124]: VarRef(var[28]) -> ref(reference) type=main_vector<File>[8]:{vector:vector<File>[4]}[15] var=__ref_1[28]:ref(main_vector<File>) in 1
 311[136]: FreeRef(v1: ref(reference))
 312[124]: FreeText(var[64])
 315[124]: VarRef(var[16]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[12] var=__ref_2[16]:ref(File) in 1
 318[136]: FreeRef(v1: ref(reference))
 319[124]: FreeText(var[40])
 322[124]: VarVector(var[4]) -> vector type=vector<text>[4]:Vector(5)[6] var=__ref_3[4]:vector<text> in 1
 325[136]: FreeRef(v1: ref(reference))
 326[124]: Return(ret=0, value=0, discard=124)

