fn texts(dir:File, l:vector<ref(File)>) {#block(1):void
  __ref_1(1):vector<ref(File)> = null;
  {#For block(2):void
    _vector_1(2):vector<ref(File)>["__ref_1"] = _tp_File_files(dir(0), __ref_1(1));
    f#index(2):integer = -1i32;
    loop {#For loop_3
      f(3):ref(File)["_vector_1"] = {#iter next(4):integer
        f#index(2):integer = OpAddInt(f#index(2), 1i32);
        OpGetVector(_vector_1(2), 17i32, f#index(2));
      }#iter next(4):integer;
      if OpNot(OpConvBoolFromRef(f(3))) {#break(5):void
        break(0);
      }#break(5):void else null;
      {#block(6):void
        if OpEqInt(OpGetByte(f(3), 16i32, 0i32), 1i32) {#block(7):void
          texts(f(3), l(0));
        }#block(7):void else if _tp_text_ends_with(OpGetText(f(3), 4i32), ".txt") {#block(8):void
          _elm_2(8):ref(File)["l"] = OpNewRecord(l(0), 16i32, 65535i32);
          OpCopyRecord(f(3), _elm_2(8), 13i32);
          OpFinishRecord(l(0), _elm_2(8), 16i32, 65535i32);
        }#block(8):void else null;
      }#block(6):void;
    }#For loop_3;
  }#For block(2):void;
  OpFreeRef(__ref_1(1));
}#block(1):void

byte-code for tests/suite/13-file.lav:texts(dir: ref(File)[4], l: vector<ref(File)>[16]) [1119]
   0[28]: return-address
   0[32]: ConvRefFromNull() -> ref(reference) var=__ref_1[32]:vector<ref(File)>
   1[44]: Database(var[32], db_tp=15)
   6[44]: VarRef(var[32]) -> ref(reference)
   9[56]: ConstInt(val=0) -> integer
  14[60]: SetInt(v1: ref(reference), fld=4, val: integer)
  17[44]: CreateRef(var[32]) -> ref(reference)
  20[56]: ConstInt(val=4) -> integer
  25[60]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  30[44]: VarRef(var[4]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=dir[4]:ref(File)
  33[56]: VarVector(var[32]) -> vector type=vector<File>[4]:Vector(13)[16] var=__ref_1[32]:vector<ref(File)>
  36[68]: Call(size=0, to=810)
  43[56]: ConstInt(val=-1) -> integer var=f#index[56]:integer
  48[60]: VarInt(var[56]) -> integer var=f#index[56]:integer
  51[64]: ConstInt(val=1) -> integer
  56[68]: AddInt(v1: integer, v2: integer) -> integer
  57[64]: PutInt(var[56], value: integer)
  60[60]: VarVector(var[44]) -> vector type=vector<File>[4]:Vector(13)[16] var=_vector_1[44]:vector<ref(File)>["__ref_1"]
  63[72]: VarInt(var[56]) -> integer var=f#index[56]:integer
  66[76]: GetVector(r: vector, size=17, index: integer) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13]
  69[72]: FreeStack(value=4, discard=12)
  73[64]: VarRef(var[60]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=f[60]:ref(File)["_vector_1"]
  76[76]: ConvBoolFromRef(val: ref(reference)) -> boolean
  77[65]: Not(v1: boolean) -> boolean
  78[65]: GotoFalseWord(jump=88, if_false: boolean)
  81[64]: FreeStack(value=0, discard=4)
  85[60]: GotoWord(jump=178)
  88[64]: VarRef(var[60]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=f[60]:ref(File)["_vector_1"]
  91[76]: GetByte(v1: ref(reference), fld=16, min=0) -> integer
  96[68]: ConstInt(val=1) -> integer
 101[72]: EqInt(v1: integer, v2: integer) -> boolean
 102[65]: GotoFalseWord(jump=121, if_false: boolean)
 105[64]: VarRef(var[60]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=f[60]:ref(File)["_vector_1"]
 108[76]: VarVector(var[16]) -> vector type=vector<File>[4]:Vector(13)[16] var=l[16]:vector<ref(File)>["__ref_2"]
 111[88]: Call(size=0, to=1119)
 118[64]: GotoWord(jump=171)
 121[64]: VarRef(var[60]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=f[60]:ref(File)["_vector_1"]
 124[76]: GetText(v1: ref(reference), fld=4) -> text["dir"]
 127[80]: ConstText(_value=".txt") -> text
 133[96]: StaticCall(_tp_text_ends_with)
 136[65]: GotoFalseWord(jump=171, if_false: boolean)
 139[64]: VarVector(var[16]) -> vector type=vector<File>[4]:Vector(13)[16] var=l[16]:vector<ref(File)>["__ref_2"]
 142[76]: NewRecord(data: ref(reference), parent_tp=16, fld=65535) -> ref(reference)
 147[76]: VarRef(var[60]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=f[60]:ref(File)["_vector_1"]
 150[88]: VarRef(var[64]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=_elm_2[64]:ref(File)["l"]
 153[100]: CopyRecord(data: ref(reference), to: ref(reference), tp=13)
 156[76]: VarVector(var[16]) -> vector type=vector<File>[4]:Vector(13)[16] var=l[16]:vector<ref(File)>["__ref_2"]
 159[88]: VarRef(var[64]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=_elm_2[64]:ref(File)["l"]
 162[100]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=16, fld=65535)
 167[76]: FreeStack(value=0, discard=12)
 171[64]: FreeStack(value=0, discard=4)
 175[60]: GotoWord(jump=48)
 178[60]: FreeStack(value=0, discard=16)
 182[44]: VarVector(var[32]) -> vector type=vector<File>[4]:Vector(13)[16] var=__ref_1[32]:vector<ref(File)>
 185[56]: FreeRef(v1: ref(reference))
 186[44]: Return(ret=24, value=0, discard=40)

fn main() {#block(1):void
  __ref_3(1):vector<text> = null;
  __ref_2(1):vector<text> = null;
  __ref_1(1):ref(File) = null;
  __work_2(1):text = "";
  __work_1(1):text = "";
  OpDatabase(__ref_1(1), 15i32);
  l(1):vector<ref(File)>["__ref_1"] = OpGetField(__ref_1(1), 4i32, 16i32);
  OpSetInt(__ref_1(1), 4i32, 0i32);
  texts(file("example", __ref_2(1)), l(1));
  if OpEqText(OpGetText(OpGetVector(l(1), 17i32, 0i32), 4i32), "example/config/terrain.txt") null else OpPanic({#Formatted string(2):text
    __work_1(1):text = "Found file '";
    OpFormatText(__work_1(1), OpGetText(OpGetVector(l(1), 17i32, 0i32), 4i32), 0i32, -1i32, 32i32);
    OpAppendText(__work_1(1), "'");
    __work_1(1);
  }#Formatted string(2):text);
  f(1):ref(File)["l"] = OpGetVector(l(1), 17i32, 0i32);
  c(1):vector<text>["__ref_3"] = _tp_File_lines(f(1), __ref_3(1));
  if OpEqText(OpGetText(OpGetVector(c(1), 4i32, 1i32), 0i32), "   terrain = [") null else OpPanic({#Formatted string(3):text
    __work_2(1):text = "Line was '";
    OpFormatText(__work_2(1), OpGetText(OpGetVector(c(1), 4i32, 1i32), 0i32), 0i32, -1i32, 32i32);
    OpAppendText(__work_2(1), "'");
    __work_2(1);
  }#Formatted string(3):text);
  OpFreeRef(__ref_1(1));
  OpFreeText(__work_1(1));
  OpFreeRef(__ref_2(1));
  OpFreeText(__work_2(1));
  OpFreeRef(__ref_3(1));
}#block(1):void

byte-code for tests/suite/13-file.lav:main() [1311]
   0[4]: return-address
   0[8]: ConvRefFromNull() -> ref(reference) var=__ref_3[8]:vector<text>
   1[20]: Database(var[8], db_tp=14)
   6[20]: VarRef(var[8]) -> ref(reference)
   9[32]: ConstInt(val=0) -> integer
  14[36]: SetInt(v1: ref(reference), fld=4, val: integer)
  17[20]: CreateRef(var[8]) -> ref(reference)
  20[32]: ConstInt(val=4) -> integer
  25[36]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  30[20]: ConvRefFromNull() -> ref(reference) var=__ref_2[20]:vector<text>
  31[32]: Database(var[20], db_tp=14)
  36[32]: VarRef(var[20]) -> ref(reference)
  39[44]: ConstInt(val=0) -> integer
  44[48]: SetInt(v1: ref(reference), fld=4, val: integer)
  47[32]: CreateRef(var[20]) -> ref(reference)
  50[44]: ConstInt(val=4) -> integer
  55[48]: SetByte(v1: ref(reference), fld=4, min=0, val: integer)
  60[32]: ConvRefFromNull() -> ref(reference) var=__ref_1[32]:ref(File)
  61[44]: Text() var=__work_2[44]:text
  62[68]: Text() var=__work_1[68]:text
  63[92]: Database(var[32], db_tp=15) type=main_vector<File>[8]:{vector:vector<File>[4]}[15]
  68[92]: VarRef(var[32]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=__ref_1[32]:ref(File)
  71[104]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=vector<File>[4]:Vector(13)[16]
  74[104]: VarRef(var[32]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=__ref_1[32]:ref(File)
  77[116]: ConstInt(val=0) -> integer
  82[120]: SetInt(v1: ref(reference), fld=4, val: integer)
  85[104]: ConstText(_value="example") -> text
  94[120]: VarVector(var[20]) -> vector type=vector<text>[4]:Vector(5)[7] var=__ref_2[20]:vector<text>
  97[132]: Call(size=0, to=732)
 104[116]: VarVector(var[92]) -> vector type=vector<File>[4]:Vector(13)[16] var=l[92]:vector<ref(File)>["__ref_1"]
 107[128]: Call(size=0, to=1119)
 114[104]: VarVector(var[92]) -> vector type=vector<File>[4]:Vector(13)[16] var=l[92]:vector<ref(File)>["__ref_1"]
 117[116]: ConstInt(val=0) -> integer
 122[120]: GetVector(r: vector, size=17, index: integer) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13]
 125[116]: GetText(v1: ref(reference), fld=4) -> text["l"]
 128[120]: ConstText(_value="example/config/terrain.txt") -> text
 156[136]: EqText(v1: text, v2: text) -> boolean
 157[105]: GotoFalseWord(jump=163, if_false: boolean)
 160[104]: GotoWord(jump=217)
 163[104]: ClearText(var[68]) var=__work_1[68]:text
 166[104]: ConstText(_value="Found file '") -> text
 180[120]: AppendText(var[68], v1: text)
 183[104]: VarVector(var[92]) -> vector type=vector<File>[4]:Vector(13)[16] var=l[92]:vector<ref(File)>["__ref_1"]
 186[116]: ConstInt(val=0) -> integer
 191[120]: GetVector(r: vector, size=17, index: integer) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13]
 194[116]: GetText(v1: ref(reference), fld=4) -> text["l"]
 197[120]: ConstInt(val=0) -> integer
 202[124]: FormatText(var[68], val: text, width: integer, dir=-1, token=32)
 207[104]: ConstText(_value="'") -> text
 210[120]: AppendText(var[68], v1: text)
 213[104]: VarText(var[68]) -> text var=__work_1[68]:text
 216[120]: Panic(message: text)
 217[104]: VarVector(var[92]) -> vector type=vector<File>[4]:Vector(13)[16] var=l[92]:vector<ref(File)>["__ref_1"]
 220[116]: ConstInt(val=0) -> integer
 225[120]: GetVector(r: vector, size=17, index: integer) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13]
 228[116]: VarRef(var[104]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=f[104]:ref(File)["l"]
 231[128]: VarVector(var[8]) -> vector type=vector<text>[4]:Vector(5)[7] var=__ref_3[8]:vector<text>
 234[140]: Call(size=0, to=444)
 241[128]: VarVector(var[116]) -> vector type=vector<text>[4]:Vector(5)[7] var=c[116]:vector<text>["__ref_3"]
 244[140]: ConstInt(val=1) -> integer
 249[144]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=text[4]:Base[5]
 252[140]: GetText(v1: ref(reference), fld=0) -> text["l"]
 255[144]: ConstText(_value="   terrain = [") -> text
 271[160]: EqText(v1: text, v2: text) -> boolean
 272[129]: GotoFalseWord(jump=278, if_false: boolean)
 275[128]: GotoWord(jump=330)
 278[128]: ClearText(var[44]) var=__work_2[44]:text
 281[128]: ConstText(_value="Line was '") -> text
 293[144]: AppendText(var[44], v1: text)
 296[128]: VarVector(var[116]) -> vector type=vector<text>[4]:Vector(5)[7] var=c[116]:vector<text>["__ref_3"]
 299[140]: ConstInt(val=1) -> integer
 304[144]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=text[4]:Base[5]
 307[140]: GetText(v1: ref(reference), fld=0) -> text["l"]
 310[144]: ConstInt(val=0) -> integer
 315[148]: FormatText(var[44], val: text, width: integer, dir=-1, token=32)
 320[128]: ConstText(_value="'") -> text
 323[144]: AppendText(var[44], v1: text)
 326[128]: VarText(var[44]) -> text var=__work_2[44]:text
 329[144]: Panic(message: text)
 330[128]: VarRef(var[32]) -> ref(reference) type=File[17]:{path:text[4], size:long[8], dir:boolean[16]}[13] var=__ref_1[32]:ref(File)
 333[140]: FreeRef(v1: ref(reference))
 334[128]: FreeText(var[68])
 337[128]: VarVector(var[20]) -> vector type=vector<text>[4]:Vector(5)[7] var=__ref_2[20]:vector<text>
 340[140]: FreeRef(v1: ref(reference))
 341[128]: FreeText(var[44])
 344[128]: VarVector(var[8]) -> vector type=vector<text>[4]:Vector(5)[7] var=__ref_3[8]:vector<text>
 347[140]: FreeRef(v1: ref(reference))
 348[128]: Return(ret=0, value=0, discard=124)

