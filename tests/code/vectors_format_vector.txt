pub fn test() {
    test_value = {v=[1, 2, 4, 8];
v += [16];
"{v} {v.len()} {v[2]} {v[1..3]} {v[rev(1..=3)]} {for x in v if x >= 4 {x/2}}"};
    assert(
        test_value == "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]",
        "Test failed {test_value} != \"[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]\""
    );
}
Type 12:vector<integer>[4]:Vector(0)

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    v:vector<integer>#[] = {#3 vector
      _db_3:main_vector<integer> = OpDatabase(4i32, 13i32);
      _vec_2:vector<integer>#[] = OpGetField(_db_3, 4i32, 65535i32);
      OpSetInt(_db_3, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 4i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 8i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _vec_2;
    }#3:vector<integer>#[];
    {#4 vector
      _elm_4:boolean = OpNewRecord(v, 12i32, 65535i32);
      OpSetInt(_elm_4, 0i32, 16i32);
      OpFinishRecord(v, _elm_4, 12i32, 65535i32);
    }#4;
    {#5 formatting string
      __work_1:text = "";
      OpFormatDatabase(__work_1, v, 12i32, false);
      OpAppendText(__work_1, " ");
      OpFormatInt(__work_1, _tp_vector_len(v), 10i32, 0i32, 32i32, false, false);
      OpAppendText(__work_1, " ");
      OpFormatInt(__work_1, OpGetInt(OpGetVector(v, 4i32, 2i32), 0i32), 10i32, 0i32, 32i32, false, false);
      OpAppendText(__work_1, " ");
      OpAppendText(__work_1, "[");
      _index_5:integer = OpConvIntFromNull();
      _first_6:boolean = true;
      loop {#6 append iter loop
        _val_7:integer = {#7 append iter next
          OpGetInt(OpGetVector(v, 4i32, {#8 next block
            _index_5:integer = if OpNot(OpConvBoolFromInt(_index_5)) 1i32 else OpAddInt(_index_5, 1i32);
            if OpGeInt(_index_5, 3i32) break(0) else null;
            _index_5;
          }#8:integer), 0i32);
        }#7:integer;
        if _first_6 _first_6:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_7, 10i32, 0i32, 32i32, false, false);
      }#6;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, " ");
      OpAppendText(__work_1, "[");
      _index_8:integer = OpConvIntFromNull();
      _first_9:boolean = true;
      loop {#9 append iter loop
        _val_10:integer = {#10 append iter next
          OpGetInt(OpGetVector(v, 4i32, {#11 next block
            _index_8:integer = if OpNot(OpConvBoolFromInt(_index_8)) 3i32 else OpMinInt(_index_8, 1i32);
            if OpLtInt(_index_8, 1i32) break(0) else null;
            _index_8;
          }#11:integer), 0i32);
        }#10:integer;
        if _first_9 _first_9:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_10, 10i32, 0i32, 32i32, false, false);
      }#9;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, " ");
      OpAppendText(__work_1, "[");
      x#index:integer = 0i32;
      _first_13:boolean = true;
      loop {#12 iter for loop
        _val_11:integer = {#13 iter for fill
          x:integer = if OpGeInt(x#index, OpLengthVector(v)) OpConvIntFromNull() else {#14 iter next
            _res_12:integer = OpGetInt(OpGetVector(v, 4i32, x#index), 0i32);
            x#index:integer = OpAddInt(x#index, 1i32);
            _res_12;
          }#14:integer;
          if OpNot(OpConvBoolFromInt(x)) break(0) else null;
          if OpGeInt(x, 4i32) null else continue(0);
          {#15 block
            OpDivInt(x, 2i32);
          }#15:integer;
        }#13:integer;
        if _first_13 _first_13:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_11, 10i32, 0i32, 32i32, false, false);
      }#12;
      OpAppendText(__work_1, "]");
      __work_1;
    }#5:text;
  }#2:text;
  if OpEqText(test_value, "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") null else OpPanic({#16 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"");
    __work_2;
  }#16:text);
}#1

byte-code for format_vector:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: Text()
 694[52]: Text()
 695[76]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 700[88]: VarRef(var[76]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 703[100]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 706[100]: VarRef(var[76]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 709[112]: ConstInt(val=0) -> integer
 714[116]: SetInt(v1: reference, fld=4, val: integer)
 717[100]: VarVector(var[88]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 720[112]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 725[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 728[124]: ConstInt(val=1) -> integer
 733[128]: SetInt(v1: reference, fld=0, val: integer)
 736[112]: VarVector(var[88]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 739[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 742[136]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 747[112]: VarVector(var[88]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 750[124]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 755[124]: PutRef(var[100], value: reference)
 758[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 761[124]: ConstInt(val=2) -> integer
 766[128]: SetInt(v1: reference, fld=0, val: integer)
 769[112]: VarVector(var[88]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 772[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 775[136]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 780[112]: VarVector(var[88]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 783[124]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 788[124]: PutRef(var[100], value: reference)
 791[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 794[124]: ConstInt(val=4) -> integer
 799[128]: SetInt(v1: reference, fld=0, val: integer)
 802[112]: VarVector(var[88]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 805[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 808[136]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 813[112]: VarVector(var[88]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 816[124]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 821[124]: PutRef(var[100], value: reference)
 824[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 827[124]: ConstInt(val=8) -> integer
 832[128]: SetInt(v1: reference, fld=0, val: integer)
 835[112]: VarVector(var[88]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 838[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 841[136]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 846[112]: VarVector(var[88]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 849[124]: FreeStack(value=12, discard=48) type=Variable[12]:{name:text[4], value:text[8]}[6]
 853[88]: VarVector(var[76]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 856[100]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 861[100]: VarRef(var[88]) -> reference type=boolean[1]:Base[4]
 864[112]: ConstInt(val=16) -> integer
 869[116]: SetInt(v1: reference, fld=0, val: integer)
 872[100]: VarVector(var[76]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 875[112]: VarRef(var[88]) -> reference type=boolean[1]:Base[4]
 878[124]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 883[100]: FreeStack(value=0, discard=12)
 887[88]: ClearText(var[28])
 890[88]: ConstText(_value="") -> text
 892[104]: AppendText(var[28], v1: text)
 895[88]: VarVector(var[76]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 898[100]: FormatDatabase(var[28], val: reference, db_tp=12, pretty=false)
 904[88]: ConstText(_value=" ") -> text
 907[104]: AppendText(var[28], v1: text)
 910[88]: VarVector(var[76]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 913[100]: Call(size=0, to=328)
 920[92]: ConstInt(val=0) -> integer
 925[96]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 932[88]: ConstText(_value=" ") -> text
 935[104]: AppendText(var[28], v1: text)
 938[88]: VarVector(var[76]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 941[100]: ConstInt(val=2) -> integer
 946[104]: GetVector(r: vector[], size=4, index: integer) -> reference type=integer[4]:Base[0]
 949[100]: GetInt(v1: reference, fld=0) -> integer
 952[92]: ConstInt(val=0) -> integer
 957[96]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 964[88]: ConstText(_value=" ") -> text
 967[104]: AppendText(var[28], v1: text)
 970[88]: ConstText(_value="[") -> text
 973[104]: AppendText(var[28], v1: text)
 976[88]: ConvIntFromNull() -> integer
 977[92]: ConstTrue() -> boolean
 978[93]: VarVector(var[76]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
 981[105]: VarInt(var[88]) -> integer
 984[109]: ConvBoolFromInt(v1: integer) -> boolean
 985[106]: Not(v1: boolean) -> boolean
 986[106]: GotoFalseWord(jump=997, if_false: boolean)
 989[105]: ConstInt(val=1) -> integer
 994[109]: GotoWord(jump=1006)
 997[105]: VarInt(var[88]) -> integer
1000[109]: ConstInt(val=1) -> integer
1005[113]: AddInt(v1: integer, v2: integer) -> integer
1006[109]: PutInt(var[88], value: integer)
1009[105]: VarInt(var[88]) -> integer
1012[109]: ConstInt(val=3) -> integer
1017[113]: GeInt(v1: integer, v2: integer) -> boolean
1018[106]: GotoFalseWord(jump=1028, if_false: boolean)
1021[105]: FreeStack(value=0, discard=12)
1025[93]: GotoWord(jump=1078)
1028[105]: VarInt(var[88]) -> integer
1031[109]: GetVector(r: vector[], size=4, index: integer) -> reference type=integer[4]:Base[0]
1034[105]: GetInt(v1: reference, fld=0) -> integer
1037[97]: VarBool(var[92]) -> boolean
1040[98]: GotoFalseWord(jump=1050, if_false: boolean)
1043[97]: ConstFalse() -> boolean
1044[98]: PutBool(var=6, value: boolean)
1047[97]: GotoWord(jump=1056)
1050[97]: ConstText(_value=",") -> text
1053[113]: AppendText(var[28], v1: text)
1056[97]: VarInt(var[93]) -> integer
1059[101]: ConstInt(val=0) -> integer
1064[105]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1071[97]: FreeStack(value=0, discard=4)
1075[93]: GotoWord(jump=978)
1078[93]: ConstText(_value="]") -> text
1081[109]: AppendText(var[28], v1: text)
1084[93]: ConstText(_value=" ") -> text
1087[109]: AppendText(var[28], v1: text)
1090[93]: ConstText(_value="[") -> text
1093[109]: AppendText(var[28], v1: text)
1096[93]: ConvIntFromNull() -> integer
1097[97]: ConstTrue() -> boolean
1098[98]: VarVector(var[76]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
1101[110]: VarInt(var[93]) -> integer
1104[114]: ConvBoolFromInt(v1: integer) -> boolean
1105[111]: Not(v1: boolean) -> boolean
1106[111]: GotoFalseWord(jump=1117, if_false: boolean)
1109[110]: ConstInt(val=3) -> integer
1114[114]: GotoWord(jump=1126)
1117[110]: VarInt(var[93]) -> integer
1120[114]: ConstInt(val=1) -> integer
1125[118]: MinInt(v1: integer, v2: integer) -> integer
1126[114]: PutInt(var[93], value: integer)
1129[110]: VarInt(var[93]) -> integer
1132[114]: ConstInt(val=1) -> integer
1137[118]: LtInt(v1: integer, v2: integer) -> boolean
1138[111]: GotoFalseWord(jump=1148, if_false: boolean)
1141[110]: FreeStack(value=0, discard=12)
1145[98]: GotoWord(jump=1198)
1148[110]: VarInt(var[93]) -> integer
1151[114]: GetVector(r: vector[], size=4, index: integer) -> reference type=integer[4]:Base[0]
1154[110]: GetInt(v1: reference, fld=0) -> integer
1157[102]: VarBool(var[97]) -> boolean
1160[103]: GotoFalseWord(jump=1170, if_false: boolean)
1163[102]: ConstFalse() -> boolean
1164[103]: PutBool(var=6, value: boolean)
1167[102]: GotoWord(jump=1176)
1170[102]: ConstText(_value=",") -> text
1173[118]: AppendText(var[28], v1: text)
1176[102]: VarInt(var[98]) -> integer
1179[106]: ConstInt(val=0) -> integer
1184[110]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1191[102]: FreeStack(value=0, discard=4)
1195[98]: GotoWord(jump=1098)
1198[98]: ConstText(_value="]") -> text
1201[114]: AppendText(var[28], v1: text)
1204[98]: ConstText(_value=" ") -> text
1207[114]: AppendText(var[28], v1: text)
1210[98]: ConstText(_value="[") -> text
1213[114]: AppendText(var[28], v1: text)
1216[98]: ConstInt(val=0) -> integer
1221[102]: ConstTrue() -> boolean
1222[103]: VarInt(var[98]) -> integer
1225[107]: VarVector(var[76]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
1228[119]: LengthVector(r: vector[]) -> integer
1229[111]: GeInt(v1: integer, v2: integer) -> boolean
1230[104]: GotoFalseWord(jump=1237, if_false: boolean)
1233[103]: ConvIntFromNull() -> integer
1234[107]: GotoWord(jump=1268)
1237[103]: VarVector(var[76]) -> vector[] type=vector<integer>[4]:Vector(0)[12]
1240[115]: VarInt(var[98]) -> integer
1243[119]: GetVector(r: vector[], size=4, index: integer) -> reference type=integer[4]:Base[0]
1246[115]: GetInt(v1: reference, fld=0) -> integer
1249[107]: VarInt(var[98]) -> integer
1252[111]: ConstInt(val=1) -> integer
1257[115]: AddInt(v1: integer, v2: integer) -> integer
1258[111]: PutInt(var[98], value: integer)
1261[107]: VarInt(var[103]) -> integer
1264[111]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
1268[107]: VarInt(var[103]) -> integer
1271[111]: ConvBoolFromInt(v1: integer) -> boolean
1272[108]: Not(v1: boolean) -> boolean
1273[108]: GotoFalseWord(jump=1283, if_false: boolean)
1276[107]: FreeStack(value=0, discard=4)
1280[103]: GotoWord(jump=1359)
1283[107]: VarInt(var[103]) -> integer
1286[111]: ConstInt(val=4) -> integer
1291[115]: GeInt(v1: integer, v2: integer) -> boolean
1292[108]: GotoFalseWord(jump=1298, if_false: boolean)
1295[107]: GotoWord(jump=1305)
1298[107]: FreeStack(value=0, discard=4)
1302[103]: GotoWord(jump=1222)
1305[107]: VarInt(var[103]) -> integer
1308[111]: ConstInt(val=2) -> integer
1313[115]: DivInt(v1: integer, v2: integer) -> integer
1314[111]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
1318[107]: VarBool(var[102]) -> boolean
1321[108]: GotoFalseWord(jump=1331, if_false: boolean)
1324[107]: ConstFalse() -> boolean
1325[108]: PutBool(var=6, value: boolean)
1328[107]: GotoWord(jump=1337)
1331[107]: ConstText(_value=",") -> text
1334[123]: AppendText(var[28], v1: text)
1337[107]: VarInt(var[103]) -> integer
1340[111]: ConstInt(val=0) -> integer
1345[115]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1352[107]: FreeStack(value=0, discard=4)
1356[103]: GotoWord(jump=1222)
1359[103]: ConstText(_value="]") -> text
1362[119]: AppendText(var[28], v1: text)
1365[103]: VarText(var[28]) -> text
1368[119]: FreeStack(value=16, discard=31) type=text[4]:Base[5]
1372[104]: FreeStack(value=16, discard=28) type=text[4]:Base[5]
1376[92]: AppendText(var[52], v1: text)
1379[76]: VarText(var[52]) -> text
1382[92]: ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> text
1422[108]: EqText(v1: text, v2: text) -> boolean
1423[77]: GotoFalseWord(jump=1429, if_false: boolean)
1426[76]: GotoWord(jump=1515)
1429[76]: ClearText(var[4])
1432[76]: ConstText(_value="Test failed ") -> text
1446[92]: AppendText(var[4], v1: text)
1449[76]: VarText(var[52]) -> text
1452[92]: ConstInt(val=0) -> integer
1457[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
1462[76]: ConstText(_value=" != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"") -> text
1508[92]: AppendText(var[4], v1: text)
1511[76]: VarText(var[4]) -> text
1514[92]: Panic(message: text)
1515[76]: FreeText(var[52])
1518[76]: FreeText(var[28])
1521[76]: FreeText(var[4])
1524[76]: Return(ret=0, value=0, discard=76)

Execute test:
  692:[8] Text()
  693:[32] Text()
  694:[56] Text()
  695:[80] Database(size=4, db_tp=13) -> ref(1,1,0)={}[80]
  700:[92] VarRef(var[80]) -> ref(1,1,0)={}[92]
  703:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)[92]
  706:[104] VarRef(var[80]) -> ref(1,1,0)={}[104]
  709:[116] ConstInt(val=0) -> 0[116]
  714:[120] SetInt(v1=ref(1,1,0)[104], fld=4, val=0[116])
  717:[104] VarVector(var[92]) -> ref(1,1,4)=[][104]
  720:[116] NewRecord(data=ref(1,1,4)[104], parent_tp=12, fld=65535) -> ref(1,5,8)[104]
  725:[116] VarRef(var[104]) -> ref(1,5,8)=false[116]
  728:[128] ConstInt(val=1) -> 1[128]
  733:[132] SetInt(v1=ref(1,5,8)[116], fld=0, val=1[128])
  736:[116] VarVector(var[92]) -> ref(1,1,4)=[1][116]
  739:[128] VarRef(var[104]) -> ref(1,5,8)=true[128]
  742:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,5,8)[128], parent_tp=12, fld=65535)
  747:[116] VarVector(var[92]) -> ref(1,1,4)=[1][116]
  750:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=12, fld=65535) -> ref(1,5,12)[116]
  755:[128] PutRef(var[104], value=ref(1,5,12)[116])
  758:[116] VarRef(var[104]) -> ref(1,5,12)=false[116]
  761:[128] ConstInt(val=2) -> 2[128]
  766:[132] SetInt(v1=ref(1,5,12)[116], fld=0, val=2[128])
  769:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2][116]
  772:[128] VarRef(var[104]) -> ref(1,5,12)=true[128]
  775:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,5,12)[128], parent_tp=12, fld=65535)
  780:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2][116]
  783:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=12, fld=65535) -> ref(1,5,16)[116]
  788:[128] PutRef(var[104], value=ref(1,5,16)[116])
  791:[116] VarRef(var[104]) -> ref(1,5,16)=false[116]
  794:[128] ConstInt(val=4) -> 4[128]
  799:[132] SetInt(v1=ref(1,5,16)[116], fld=0, val=4[128])
  802:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2,4][116]
  805:[128] VarRef(var[104]) -> ref(1,5,16)=true[128]
  808:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,5,16)[128], parent_tp=12, fld=65535)
  813:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2,4][116]
  816:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=12, fld=65535) -> ref(1,5,20)[116]
  821:[128] PutRef(var[104], value=ref(1,5,20)[116])
  824:[116] VarRef(var[104]) -> ref(1,5,20)=false[116]
  827:[128] ConstInt(val=8) -> 8[128]
  832:[132] SetInt(v1=ref(1,5,20)[116], fld=0, val=8[128])
  835:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8][116]
  838:[128] VarRef(var[104]) -> ref(1,5,20)=true[128]
  841:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,5,20)[128], parent_tp=12, fld=65535)
  846:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8][116]
  849:[128] FreeStack(value=12, discard=48)
  853:[92] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8][92]
  856:[104] NewRecord(data=ref(1,1,4)[92], parent_tp=12, fld=65535) -> ref(1,5,24)[92]
  861:[104] VarRef(var[92]) -> ref(1,5,24)=false[104]
  864:[116] ConstInt(val=16) -> 16[116]
  869:[120] SetInt(v1=ref(1,5,24)[104], fld=0, val=16[116])
  872:[104] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][104]
  875:[116] VarRef(var[92]) -> ref(1,5,24)=true[116]
  878:[128] FinishRecord(data=ref(1,1,4)[104], rec=ref(1,5,24)[116], parent_tp=12, fld=65535)
  883:[104] FreeStack(value=0, discard=12)
  887:[92] ClearText(var[32])
  890:[92] ConstText(_value="") -> ""[92]
  892:[108] AppendText(var[32], v1=""[92])
  895:[92] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][92]
  898:[104] FormatDatabase(var[32], val=ref(1,1,4)[92], db_tp=12, pretty=false)
  904:[92] ConstText(_value=" ") -> " "[92]
  907:[108] AppendText(var[32], v1=" "[92])
  910:[92] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][92]
  913:[104] Call(size=0, to=328)
  328:[108] VarVector(var[92]) -> ref(1,1,4)=true[108]
  331:[120] LengthVector(r=ref(1,1,4)=true[108]) -> 5[108]
  332:[112] Return(ret=920[104], value=4, discard=20) -> 5[92]
  920:[96] ConstInt(val=0) -> 0[96]
  925:[100] FormatInt(var[32], val=5[92], radix=10, width=0[96], token=32, plus=false, note=false)
  932:[92] ConstText(_value=" ") -> " "[92]
  935:[108] AppendText(var[32], v1=" "[92])
  938:[92] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][92]
  941:[104] ConstInt(val=2) -> 2[104]
  946:[108] GetVector(r=ref(1,1,4)=true[92], size=4, index=2[104]) -> ref(1,5,16)=4[92]
  949:[104] GetInt(v1=ref(1,5,16)[92], fld=0) -> 4[92]
  952:[96] ConstInt(val=0) -> 0[96]
  957:[100] FormatInt(var[32], val=4[92], radix=10, width=0[96], token=32, plus=false, note=false)
  964:[92] ConstText(_value=" ") -> " "[92]
  967:[108] AppendText(var[32], v1=" "[92])
  970:[92] ConstText(_value="[") -> "["[92]
  973:[108] AppendText(var[32], v1="["[92])
  976:[92] ConvIntFromNull() -> -2147483648[92]
  977:[96] ConstTrue() -> true[96]
  978:[97] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][97]
  981:[109] VarInt(var[92]) -> -2147483648[109]
  984:[113] ConvBoolFromInt(v1=-2147483648[109]) -> false[109]
  985:[110] Not(v1=false[109]) -> true[109]
  986:[110] GotoFalseWord(jump=997, if_false=true[109])
  989:[109] ConstInt(val=1) -> 1[109]
  994:[113] GotoWord(jump=1006)
 1006:[113] PutInt(var[92], value=1[109])
 1009:[109] VarInt(var[92]) -> 1[109]
 1012:[113] ConstInt(val=3) -> 3[113]
 1017:[117] GeInt(v1=1[109], v2=3[113]) -> false[109]
 1018:[110] GotoFalseWord(jump=1028, if_false=false[109])
 1028:[109] VarInt(var[92]) -> 1[109]
 1031:[113] GetVector(r=ref(1,1,4)=true[97], size=4, index=1[109]) -> ref(1,5,12)=2[97]
 1034:[109] GetInt(v1=ref(1,5,12)[97], fld=0) -> 2[97]
 1037:[101] VarBool(var[96]) -> true[101]
 1040:[102] GotoFalseWord(jump=1050, if_false=true[101])
 1043:[101] ConstFalse() -> false[101]
 1044:[102] PutBool(var=6, value=false[101])
 1047:[101] GotoWord(jump=1056)
 1056:[101] VarInt(var[97]) -> 2[101]
 1059:[105] ConstInt(val=0) -> 0[105]
 1064:[109] FormatInt(var[32], val=2[101], radix=10, width=0[105], token=32, plus=false, note=false)
 1071:[101] FreeStack(value=0, discard=4)
 1075:[97] GotoWord(jump=978)
  978:[97] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][97]
  981:[109] VarInt(var[92]) -> 1[109]
  984:[113] ConvBoolFromInt(v1=1[109]) -> true[109]
  985:[110] Not(v1=true[109]) -> false[109]
  986:[110] GotoFalseWord(jump=997, if_false=false[109])
  997:[109] VarInt(var[92]) -> 1[109]
 1000:[113] ConstInt(val=1) -> 1[113]
 1005:[117] AddInt(v1=1[109], v2=1[113]) -> 2[109]
 1006:[113] PutInt(var[92], value=2[109])
 1009:[109] VarInt(var[92]) -> 2[109]
 1012:[113] ConstInt(val=3) -> 3[113]
 1017:[117] GeInt(v1=2[109], v2=3[113]) -> false[109]
 1018:[110] GotoFalseWord(jump=1028, if_false=false[109])
 1028:[109] VarInt(var[92]) -> 2[109]
 1031:[113] GetVector(r=ref(1,1,4)=true[97], size=4, index=2[109]) -> ref(1,5,16)=4[97]
 1034:[109] GetInt(v1=ref(1,5,16)[97], fld=0) -> 4[97]
 1037:[101] VarBool(var[96]) -> false[101]
 1040:[102] GotoFalseWord(jump=1050, if_false=false[101])
 1050:[101] ConstText(_value=",") -> ","[101]
 1053:[117] AppendText(var[32], v1=","[101])
 1056:[101] VarInt(var[97]) -> 4[101]
 1059:[105] ConstInt(val=0) -> 0[105]
 1064:[109] FormatInt(var[32], val=4[101], radix=10, width=0[105], token=32, plus=false, note=false)
 1071:[101] FreeStack(value=0, discard=4)
 1075:[97] GotoWord(jump=978)
  978:[97] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][97]
  981:[109] VarInt(var[92]) -> 2[109]
  984:[113] ConvBoolFromInt(v1=2[109]) -> true[109]
  985:[110] Not(v1=true[109]) -> false[109]
  986:[110] GotoFalseWord(jump=997, if_false=false[109])
  997:[109] VarInt(var[92]) -> 2[109]
 1000:[113] ConstInt(val=1) -> 1[113]
 1005:[117] AddInt(v1=2[109], v2=1[113]) -> 3[109]
 1006:[113] PutInt(var[92], value=3[109])
 1009:[109] VarInt(var[92]) -> 3[109]
 1012:[113] ConstInt(val=3) -> 3[113]
 1017:[117] GeInt(v1=3[109], v2=3[113]) -> true[109]
 1018:[110] GotoFalseWord(jump=1028, if_false=true[109])
 1021:[109] FreeStack(value=0, discard=12)
 1025:[97] GotoWord(jump=1078)
 1078:[97] ConstText(_value="]") -> "]"[97]
 1081:[113] AppendText(var[32], v1="]"[97])
 1084:[97] ConstText(_value=" ") -> " "[97]
 1087:[113] AppendText(var[32], v1=" "[97])
 1090:[97] ConstText(_value="[") -> "["[97]
 1093:[113] AppendText(var[32], v1="["[97])
 1096:[97] ConvIntFromNull() -> -2147483648[97]
 1097:[101] ConstTrue() -> true[101]
 1098:[102] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][102]
 1101:[114] VarInt(var[97]) -> -2147483648[114]
 1104:[118] ConvBoolFromInt(v1=-2147483648[114]) -> false[114]
 1105:[115] Not(v1=false[114]) -> true[114]
 1106:[115] GotoFalseWord(jump=1117, if_false=true[114])
 1109:[114] ConstInt(val=3) -> 3[114]
 1114:[118] GotoWord(jump=1126)
 1126:[118] PutInt(var[97], value=3[114])
 1129:[114] VarInt(var[97]) -> 3[114]
 1132:[118] ConstInt(val=1) -> 1[118]
 1137:[122] LtInt(v1=3[114], v2=1[118]) -> false[114]
 1138:[115] GotoFalseWord(jump=1148, if_false=false[114])
 1148:[114] VarInt(var[97]) -> 3[114]
 1151:[118] GetVector(r=ref(1,1,4)=true[102], size=4, index=3[114]) -> ref(1,5,20)=8[102]
 1154:[114] GetInt(v1=ref(1,5,20)[102], fld=0) -> 8[102]
 1157:[106] VarBool(var[101]) -> true[106]
 1160:[107] GotoFalseWord(jump=1170, if_false=true[106])
 1163:[106] ConstFalse() -> false[106]
 1164:[107] PutBool(var=6, value=false[106])
 1167:[106] GotoWord(jump=1176)
 1176:[106] VarInt(var[102]) -> 8[106]
 1179:[110] ConstInt(val=0) -> 0[110]
 1184:[114] FormatInt(var[32], val=8[106], radix=10, width=0[110], token=32, plus=false, note=false)
 1191:[106] FreeStack(value=0, discard=4)
 1195:[102] GotoWord(jump=1098)
 1098:[102] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][102]
 1101:[114] VarInt(var[97]) -> 3[114]
 1104:[118] ConvBoolFromInt(v1=3[114]) -> true[114]
 1105:[115] Not(v1=true[114]) -> false[114]
 1106:[115] GotoFalseWord(jump=1117, if_false=false[114])
 1117:[114] VarInt(var[97]) -> 3[114]
 1120:[118] ConstInt(val=1) -> 1[118]
 1125:[122] MinInt(v1=3[114], v2=1[118]) -> 2[114]
 1126:[118] PutInt(var[97], value=2[114])
 1129:[114] VarInt(var[97]) -> 2[114]
 1132:[118] ConstInt(val=1) -> 1[118]
 1137:[122] LtInt(v1=2[114], v2=1[118]) -> false[114]
 1138:[115] GotoFalseWord(jump=1148, if_false=false[114])
 1148:[114] VarInt(var[97]) -> 2[114]
 1151:[118] GetVector(r=ref(1,1,4)=true[102], size=4, index=2[114]) -> ref(1,5,16)=4[102]
 1154:[114] GetInt(v1=ref(1,5,16)[102], fld=0) -> 4[102]
 1157:[106] VarBool(var[101]) -> false[106]
 1160:[107] GotoFalseWord(jump=1170, if_false=false[106])
 1170:[106] ConstText(_value=",") -> ","[106]
 1173:[122] AppendText(var[32], v1=","[106])
 1176:[106] VarInt(var[102]) -> 4[106]
 1179:[110] ConstInt(val=0) -> 0[110]
 1184:[114] FormatInt(var[32], val=4[106], radix=10, width=0[110], token=32, plus=false, note=false)
 1191:[106] FreeStack(value=0, discard=4)
 1195:[102] GotoWord(jump=1098)
 1098:[102] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][102]
 1101:[114] VarInt(var[97]) -> 2[114]
 1104:[118] ConvBoolFromInt(v1=2[114]) -> true[114]
 1105:[115] Not(v1=true[114]) -> false[114]
 1106:[115] GotoFalseWord(jump=1117, if_false=false[114])
 1117:[114] VarInt(var[97]) -> 2[114]
 1120:[118] ConstInt(val=1) -> 1[118]
 1125:[122] MinInt(v1=2[114], v2=1[118]) -> 1[114]
 1126:[118] PutInt(var[97], value=1[114])
 1129:[114] VarInt(var[97]) -> 1[114]
 1132:[118] ConstInt(val=1) -> 1[118]
 1137:[122] LtInt(v1=1[114], v2=1[118]) -> false[114]
 1138:[115] GotoFalseWord(jump=1148, if_false=false[114])
 1148:[114] VarInt(var[97]) -> 1[114]
 1151:[118] GetVector(r=ref(1,1,4)=true[102], size=4, index=1[114]) -> ref(1,5,12)=2[102]
 1154:[114] GetInt(v1=ref(1,5,12)[102], fld=0) -> 2[102]
 1157:[106] VarBool(var[101]) -> false[106]
 1160:[107] GotoFalseWord(jump=1170, if_false=false[106])
 1170:[106] ConstText(_value=",") -> ","[106]
 1173:[122] AppendText(var[32], v1=","[106])
 1176:[106] VarInt(var[102]) -> 2[106]
 1179:[110] ConstInt(val=0) -> 0[110]
 1184:[114] FormatInt(var[32], val=2[106], radix=10, width=0[110], token=32, plus=false, note=false)
 1191:[106] FreeStack(value=0, discard=4)
 1195:[102] GotoWord(jump=1098)
 1098:[102] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][102]
 1101:[114] VarInt(var[97]) -> 1[114]
 1104:[118] ConvBoolFromInt(v1=1[114]) -> true[114]
 1105:[115] Not(v1=true[114]) -> false[114]
 1106:[115] GotoFalseWord(jump=1117, if_false=false[114])
 1117:[114] VarInt(var[97]) -> 1[114]
 1120:[118] ConstInt(val=1) -> 1[118]
 1125:[122] MinInt(v1=1[114], v2=1[118]) -> 0[114]
 1126:[118] PutInt(var[97], value=0[114])
 1129:[114] VarInt(var[97]) -> 0[114]
 1132:[118] ConstInt(val=1) -> 1[118]
 1137:[122] LtInt(v1=0[114], v2=1[118]) -> true[114]
 1138:[115] GotoFalseWord(jump=1148, if_false=true[114])
 1141:[114] FreeStack(value=0, discard=12)
 1145:[102] GotoWord(jump=1198)
 1198:[102] ConstText(_value="]") -> "]"[102]
 1201:[118] AppendText(var[32], v1="]"[102])
 1204:[102] ConstText(_value=" ") -> " "[102]
 1207:[118] AppendText(var[32], v1=" "[102])
 1210:[102] ConstText(_value="[") -> "["[102]
 1213:[118] AppendText(var[32], v1="["[102])
 1216:[102] ConstInt(val=0) -> 0[102]
 1221:[106] ConstTrue() -> true[106]
 1222:[107] VarInt(var[102]) -> 0[107]
 1225:[111] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][111]
 1228:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1229:[115] GeInt(v1=0[107], v2=5[111]) -> false[107]
 1230:[108] GotoFalseWord(jump=1237, if_false=false[107])
 1237:[107] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][107]
 1240:[119] VarInt(var[102]) -> 0[119]
 1243:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=0[119]) -> ref(1,5,8)=1[107]
 1246:[119] GetInt(v1=ref(1,5,8)[107], fld=0) -> 1[107]
 1249:[111] VarInt(var[102]) -> 0[111]
 1252:[115] ConstInt(val=1) -> 1[115]
 1257:[119] AddInt(v1=0[111], v2=1[115]) -> 1[111]
 1258:[115] PutInt(var[102], value=1[111])
 1261:[111] VarInt(var[107]) -> 1[111]
 1264:[115] FreeStack(value=4, discard=8)
 1268:[111] VarInt(var[107]) -> 1[111]
 1271:[115] ConvBoolFromInt(v1=1[111]) -> true[111]
 1272:[112] Not(v1=true[111]) -> false[111]
 1273:[112] GotoFalseWord(jump=1283, if_false=false[111])
 1283:[111] VarInt(var[107]) -> 1[111]
 1286:[115] ConstInt(val=4) -> 4[115]
 1291:[119] GeInt(v1=1[111], v2=4[115]) -> false[111]
 1292:[112] GotoFalseWord(jump=1298, if_false=false[111])
 1298:[111] FreeStack(value=0, discard=4)
 1302:[107] GotoWord(jump=1222)
 1222:[107] VarInt(var[102]) -> 1[107]
 1225:[111] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][111]
 1228:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1229:[115] GeInt(v1=1[107], v2=5[111]) -> false[107]
 1230:[108] GotoFalseWord(jump=1237, if_false=false[107])
 1237:[107] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][107]
 1240:[119] VarInt(var[102]) -> 1[119]
 1243:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=1[119]) -> ref(1,5,12)=2[107]
 1246:[119] GetInt(v1=ref(1,5,12)[107], fld=0) -> 2[107]
 1249:[111] VarInt(var[102]) -> 1[111]
 1252:[115] ConstInt(val=1) -> 1[115]
 1257:[119] AddInt(v1=1[111], v2=1[115]) -> 2[111]
 1258:[115] PutInt(var[102], value=2[111])
 1261:[111] VarInt(var[107]) -> 2[111]
 1264:[115] FreeStack(value=4, discard=8)
 1268:[111] VarInt(var[107]) -> 2[111]
 1271:[115] ConvBoolFromInt(v1=2[111]) -> true[111]
 1272:[112] Not(v1=true[111]) -> false[111]
 1273:[112] GotoFalseWord(jump=1283, if_false=false[111])
 1283:[111] VarInt(var[107]) -> 2[111]
 1286:[115] ConstInt(val=4) -> 4[115]
 1291:[119] GeInt(v1=2[111], v2=4[115]) -> false[111]
 1292:[112] GotoFalseWord(jump=1298, if_false=false[111])
 1298:[111] FreeStack(value=0, discard=4)
 1302:[107] GotoWord(jump=1222)
 1222:[107] VarInt(var[102]) -> 2[107]
 1225:[111] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][111]
 1228:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1229:[115] GeInt(v1=2[107], v2=5[111]) -> false[107]
 1230:[108] GotoFalseWord(jump=1237, if_false=false[107])
 1237:[107] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][107]
 1240:[119] VarInt(var[102]) -> 2[119]
 1243:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=2[119]) -> ref(1,5,16)=4[107]
 1246:[119] GetInt(v1=ref(1,5,16)[107], fld=0) -> 4[107]
 1249:[111] VarInt(var[102]) -> 2[111]
 1252:[115] ConstInt(val=1) -> 1[115]
 1257:[119] AddInt(v1=2[111], v2=1[115]) -> 3[111]
 1258:[115] PutInt(var[102], value=3[111])
 1261:[111] VarInt(var[107]) -> 4[111]
 1264:[115] FreeStack(value=4, discard=8)
 1268:[111] VarInt(var[107]) -> 4[111]
 1271:[115] ConvBoolFromInt(v1=4[111]) -> true[111]
 1272:[112] Not(v1=true[111]) -> false[111]
 1273:[112] GotoFalseWord(jump=1283, if_false=false[111])
 1283:[111] VarInt(var[107]) -> 4[111]
 1286:[115] ConstInt(val=4) -> 4[115]
 1291:[119] GeInt(v1=4[111], v2=4[115]) -> true[111]
 1292:[112] GotoFalseWord(jump=1298, if_false=true[111])
 1295:[111] GotoWord(jump=1305)
 1305:[111] VarInt(var[107]) -> 4[111]
 1308:[115] ConstInt(val=2) -> 2[115]
 1313:[119] DivInt(v1=4[111], v2=2[115]) -> 2[111]
 1314:[115] FreeStack(value=4, discard=8)
 1318:[111] VarBool(var[106]) -> true[111]
 1321:[112] GotoFalseWord(jump=1331, if_false=true[111])
 1324:[111] ConstFalse() -> false[111]
 1325:[112] PutBool(var=6, value=false[111])
 1328:[111] GotoWord(jump=1337)
 1337:[111] VarInt(var[107]) -> 2[111]
 1340:[115] ConstInt(val=0) -> 0[115]
 1345:[119] FormatInt(var[32], val=2[111], radix=10, width=0[115], token=32, plus=false, note=false)
 1352:[111] FreeStack(value=0, discard=4)
 1356:[107] GotoWord(jump=1222)
 1222:[107] VarInt(var[102]) -> 3[107]
 1225:[111] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][111]
 1228:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1229:[115] GeInt(v1=3[107], v2=5[111]) -> false[107]
 1230:[108] GotoFalseWord(jump=1237, if_false=false[107])
 1237:[107] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][107]
 1240:[119] VarInt(var[102]) -> 3[119]
 1243:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=3[119]) -> ref(1,5,20)=8[107]
 1246:[119] GetInt(v1=ref(1,5,20)[107], fld=0) -> 8[107]
 1249:[111] VarInt(var[102]) -> 3[111]
 1252:[115] ConstInt(val=1) -> 1[115]
 1257:[119] AddInt(v1=3[111], v2=1[115]) -> 4[111]
 1258:[115] PutInt(var[102], value=4[111])
 1261:[111] VarInt(var[107]) -> 8[111]
 1264:[115] FreeStack(value=4, discard=8)
 1268:[111] VarInt(var[107]) -> 8[111]
 1271:[115] ConvBoolFromInt(v1=8[111]) -> true[111]
 1272:[112] Not(v1=true[111]) -> false[111]
 1273:[112] GotoFalseWord(jump=1283, if_false=false[111])
 1283:[111] VarInt(var[107]) -> 8[111]
 1286:[115] ConstInt(val=4) -> 4[115]
 1291:[119] GeInt(v1=8[111], v2=4[115]) -> true[111]
 1292:[112] GotoFalseWord(jump=1298, if_false=true[111])
 1295:[111] GotoWord(jump=1305)
 1305:[111] VarInt(var[107]) -> 8[111]
 1308:[115] ConstInt(val=2) -> 2[115]
 1313:[119] DivInt(v1=8[111], v2=2[115]) -> 4[111]
 1314:[115] FreeStack(value=4, discard=8)
 1318:[111] VarBool(var[106]) -> false[111]
 1321:[112] GotoFalseWord(jump=1331, if_false=false[111])
 1331:[111] ConstText(_value=",") -> ","[111]
 1334:[127] AppendText(var[32], v1=","[111])
 1337:[111] VarInt(var[107]) -> 4[111]
 1340:[115] ConstInt(val=0) -> 0[115]
 1345:[119] FormatInt(var[32], val=4[111], radix=10, width=0[115], token=32, plus=false, note=false)
 1352:[111] FreeStack(value=0, discard=4)
 1356:[107] GotoWord(jump=1222)
 1222:[107] VarInt(var[102]) -> 4[107]
 1225:[111] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][111]
 1228:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1229:[115] GeInt(v1=4[107], v2=5[111]) -> false[107]
 1230:[108] GotoFalseWord(jump=1237, if_false=false[107])
 1237:[107] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][107]
 1240:[119] VarInt(var[102]) -> 4[119]
 1243:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=4[119]) -> ref(1,5,24)=16[107]
 1246:[119] GetInt(v1=ref(1,5,24)[107], fld=0) -> 16[107]
 1249:[111] VarInt(var[102]) -> 4[111]
 1252:[115] ConstInt(val=1) -> 1[115]
 1257:[119] AddInt(v1=4[111], v2=1[115]) -> 5[111]
 1258:[115] PutInt(var[102], value=5[111])
 1261:[111] VarInt(var[107]) -> 16[111]
 1264:[115] FreeStack(value=4, discard=8)
 1268:[111] VarInt(var[107]) -> 16[111]
 1271:[115] ConvBoolFromInt(v1=16[111]) -> true[111]
 1272:[112] Not(v1=true[111]) -> false[111]
 1273:[112] GotoFalseWord(jump=1283, if_false=false[111])
 1283:[111] VarInt(var[107]) -> 16[111]
 1286:[115] ConstInt(val=4) -> 4[115]
 1291:[119] GeInt(v1=16[111], v2=4[115]) -> true[111]
 1292:[112] GotoFalseWord(jump=1298, if_false=true[111])
 1295:[111] GotoWord(jump=1305)
 1305:[111] VarInt(var[107]) -> 16[111]
 1308:[115] ConstInt(val=2) -> 2[115]
 1313:[119] DivInt(v1=16[111], v2=2[115]) -> 8[111]
 1314:[115] FreeStack(value=4, discard=8)
 1318:[111] VarBool(var[106]) -> false[111]
 1321:[112] GotoFalseWord(jump=1331, if_false=false[111])
 1331:[111] ConstText(_value=",") -> ","[111]
 1334:[127] AppendText(var[32], v1=","[111])
 1337:[111] VarInt(var[107]) -> 8[111]
 1340:[115] ConstInt(val=0) -> 0[115]
 1345:[119] FormatInt(var[32], val=8[111], radix=10, width=0[115], token=32, plus=false, note=false)
 1352:[111] FreeStack(value=0, discard=4)
 1356:[107] GotoWord(jump=1222)
 1222:[107] VarInt(var[102]) -> 5[107]
 1225:[111] VarVector(var[80]) -> ref(1,1,4)=[1,2,4,8,16][111]
 1228:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1229:[115] GeInt(v1=5[107], v2=5[111]) -> true[107]
 1230:[108] GotoFalseWord(jump=1237, if_false=true[107])
 1233:[107] ConvIntFromNull() -> -2147483648[107]
 1234:[111] GotoWord(jump=1268)
 1268:[111] VarInt(var[107]) -> -2147483648[111]
 1271:[115] ConvBoolFromInt(v1=-2147483648[111]) -> false[111]
 1272:[112] Not(v1=false[111]) -> true[111]
 1273:[112] GotoFalseWord(jump=1283, if_false=true[111])
 1276:[111] FreeStack(value=0, discard=4)
 1280:[107] GotoWord(jump=1359)
 1359:[107] ConstText(_value="]") -> "]"[107]
 1362:[123] AppendText(var[32], v1="]"[107])
 1365:[107] VarText(var[32]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[107]
 1368:[123] FreeStack(value=16, discard=31)
 1372:[108] FreeStack(value=16, discard=28)
 1376:[96] AppendText(var[56], v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[80])
 1379:[80] VarText(var[56]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[80]
 1382:[96] ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[96]
 1422:[112] EqText(v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[80], v2="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[96]) -> true[80]
 1423:[81] GotoFalseWord(jump=1429, if_false=true[80])
 1426:[80] GotoWord(jump=1515)
 1515:[80] FreeText(var[56])
 1518:[80] FreeText(var[32])
 1521:[80] FreeText(var[8])
 1524:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
