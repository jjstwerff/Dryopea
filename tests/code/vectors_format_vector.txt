Test code:
pub fn test() {
    test_value = {v=[1, 2, 4, 8];
v += [16];
"{v} {v.len()} {v[2]} {v[1..3]} {v[rev(1..=3)]} {for x in v if x >= 4 {x/2}}"};
    assert(
        test_value == "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]",
        "Test failed {test_value} != \"[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]\""
    );
}

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

Type 14:vector<integer>[4]:Vector(0)

fn test {
  let test_value = {
    let v = {
      let db_21 = OpDatabase(4i32, 13i32);
      let vec_20 = OpGetField(db_21, 4i32, 14i32);
      OpSetInt(db_21, 4i32, 0i32);
      let elm_19 = OpNewRecord(vec_20, 14i32, 65535i32);
      OpSetInt(elm_19, 0i32, 1i32);
      OpFinishRecord(vec_20, elm_19, 14i32, 65535i32);
      elm_19 = OpNewRecord(vec_20, 14i32, 65535i32);
      OpSetInt(elm_19, 0i32, 2i32);
      OpFinishRecord(vec_20, elm_19, 14i32, 65535i32);
      elm_19 = OpNewRecord(vec_20, 14i32, 65535i32);
      OpSetInt(elm_19, 0i32, 4i32);
      OpFinishRecord(vec_20, elm_19, 14i32, 65535i32);
      elm_19 = OpNewRecord(vec_20, 14i32, 65535i32);
      OpSetInt(elm_19, 0i32, 8i32);
      OpFinishRecord(vec_20, elm_19, 14i32, 65535i32);
      vec_20;
    };
    {
      let vec_23 = v;
      let elm_22 = OpNewRecord(vec_23, 14i32, 65535i32);
      OpSetInt(elm_22, 0i32, 16i32);
      OpFinishRecord(vec_23, elm_22, 14i32, 65535i32);
    };
    {
      let append_24 = "";
      OpFormatDatabase(append_24, v, 14i32, false);
      OpAppendText(append_24, " ");
      OpFormatInt(append_24, _tp_vector_len(v), 10i32, 0i32, 32i32, false, false);
      OpAppendText(append_24, " ");
      OpFormatInt(append_24, OpGetInt(OpGetVector(v, 4i32, 2i32), 0i32), 10i32, 0i32, 32i32, false, false);
      OpAppendText(append_24, " ");
      OpAppendText(append_24, "[");
      let index_25 = OpConvIntFromNull();
      let first_26 = true;
      loop {
        let val_27 = OpGetInt(OpGetVector(v, 4i32, {
          index_25 = if OpNot(OpConvBoolFromInt(index_25)) {1i32} else {OpAddInt(index_25, 1i32)};
          if OpGeInt(index_25, 3i32) {break(0)} else {null};
          index_25;
        }), 0i32);
        if first_26 {first_26 = false} else {OpAppendText(append_24, ",")};
        OpFormatInt(append_24, val_27, 10i32, 0i32, 32i32, false, false);
      };
      OpAppendText(append_24, "]");
      OpAppendText(append_24, " ");
      OpAppendText(append_24, "[");
      let index_28 = OpConvIntFromNull();
      let first_29 = true;
      loop {
        let val_30 = OpGetInt(OpGetVector(v, 4i32, {
          index_28 = if OpNot(OpConvBoolFromInt(index_28)) {3i32} else {OpMinInt(index_28, 1i32)};
          if OpLtInt(index_28, 1i32) {break(0)} else {null};
          index_28;
        }), 0i32);
        if first_29 {first_29 = false} else {OpAppendText(append_24, ",")};
        OpFormatInt(append_24, val_30, 10i32, 0i32, 32i32, false, false);
      };
      OpAppendText(append_24, "]");
      OpAppendText(append_24, " ");
      OpAppendText(append_24, "[");
      let x#index = 0i32;
      let first_32 = true;
      loop {
        let val_33 = {
          let x = if OpGeInt(x#index, OpLengthVector(v)) {{
            OpConvIntFromNull();
          }} else {{
            let res_31 = OpGetInt(OpGetVector(v, 4i32, x#index), 0i32);
            x#index = OpAddInt(x#index, 1i32);
            res_31;
          }};
          if OpNot(OpConvBoolFromInt(x)) {break(0)} else {null};
          if OpGeInt(x, 4i32) {null} else {continue(0)};
          OpDivInt(x, 2i32);
        };
        if first_32 {first_32 = false} else {OpAppendText(append_24, ",")};
        OpFormatInt(append_24, val_33, 10i32, 0i32, 32i32, false, false);
      };
      OpAppendText(append_24, "]");
      append_24;
    };
  };
  if OpEqText(test_value, "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") {null} else {OpGenPanic({
    let append_34 = "Test failed ";
    OpFormatText(append_34, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_34, " != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"");
    append_34;
  })};
}

byte-code for format_vector:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 674[40]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 677[52]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[14]
 680[52]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 683[64]: ConstInt(val=0) -> integer
 688[68]: SetInt(v1: reference, fld=4, val: integer)
 691[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 694[64]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 699[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 702[76]: ConstInt(val=1) -> integer
 707[80]: SetInt(v1: reference, fld=0, val: integer)
 710[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 713[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 716[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 721[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 724[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 729[76]: PutRef(var[52], value: reference)
 732[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 735[76]: ConstInt(val=2) -> integer
 740[80]: SetInt(v1: reference, fld=0, val: integer)
 743[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 746[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 749[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 754[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 757[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 762[76]: PutRef(var[52], value: reference)
 765[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 768[76]: ConstInt(val=4) -> integer
 773[80]: SetInt(v1: reference, fld=0, val: integer)
 776[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 779[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 782[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 787[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 790[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 795[76]: PutRef(var[52], value: reference)
 798[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 801[76]: ConstInt(val=8) -> integer
 806[80]: SetInt(v1: reference, fld=0, val: integer)
 809[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 812[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 815[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 820[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 823[76]: GenFreeStack(value=12, discard=36)
 827[40]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 830[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 833[64]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 838[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 841[76]: ConstInt(val=16) -> integer
 846[80]: SetInt(v1: reference, fld=0, val: integer)
 849[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 852[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 855[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 860[64]: GenFreeStack(value=0, discard=24)
 864[40]: Text()
 865[64]: ConstText(_value="") -> text
 867[80]: AppendText(var[40], v1: text)
 870[64]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 873[76]: FormatDatabase(var[40], val: reference, db_tp=14, pretty=false)
 879[64]: ConstText(_value=" ") -> text
 882[80]: AppendText(var[40], v1: text)
 885[64]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 888[76]: GenCall(size=0, to=328)
 895[68]: ConstInt(val=0) -> integer
 900[72]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 907[64]: ConstText(_value=" ") -> text
 910[80]: AppendText(var[40], v1: text)
 913[64]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 916[76]: ConstInt(val=2) -> integer
 921[80]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 924[76]: GetInt(v1: reference, fld=0) -> integer
 927[68]: ConstInt(val=0) -> integer
 932[72]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 939[64]: ConstText(_value=" ") -> text
 942[80]: AppendText(var[40], v1: text)
 945[64]: ConstText(_value="[") -> text
 948[80]: AppendText(var[40], v1: text)
 951[64]: ConvIntFromNull() -> integer
 952[68]: ConstTrue() -> boolean
 953[69]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 956[81]: VarInt(var[64]) -> integer
 959[85]: ConvBoolFromInt(v1: integer) -> boolean
 960[82]: Not(v1: boolean) -> boolean
 961[82]: GenGotoFalseWord(jump=972, if_false: boolean)
 964[81]: ConstInt(val=1) -> integer
 969[85]: GenGotoWord(jump=981)
 972[81]: VarInt(var[64]) -> integer
 975[85]: ConstInt(val=1) -> integer
 980[89]: AddInt(v1: integer, v2: integer) -> integer
 981[85]: PutInt(var[64], value: integer)
 984[81]: VarInt(var[64]) -> integer
 987[85]: ConstInt(val=3) -> integer
 992[89]: GeInt(v1: integer, v2: integer) -> boolean
 993[82]: GenGotoFalseWord(jump=1003, if_false: boolean)
 996[81]: GenFreeStack(value=0, discard=12)
1000[69]: GenGotoWord(jump=1053)
1003[81]: VarInt(var[64]) -> integer
1006[85]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1009[81]: GetInt(v1: reference, fld=0) -> integer
1012[73]: VarBool(var[68]) -> boolean
1015[74]: GenGotoFalseWord(jump=1025, if_false: boolean)
1018[73]: ConstFalse() -> boolean
1019[74]: PutBool(var=6, value: boolean)
1022[73]: GenGotoWord(jump=1031)
1025[73]: ConstText(_value=",") -> text
1028[89]: AppendText(var[40], v1: text)
1031[73]: VarInt(var[69]) -> integer
1034[77]: ConstInt(val=0) -> integer
1039[81]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1046[73]: GenFreeStack(value=0, discard=4)
1050[69]: GenGotoWord(jump=953)
1053[69]: ConstText(_value="]") -> text
1056[85]: AppendText(var[40], v1: text)
1059[69]: ConstText(_value=" ") -> text
1062[85]: AppendText(var[40], v1: text)
1065[69]: ConstText(_value="[") -> text
1068[85]: AppendText(var[40], v1: text)
1071[69]: ConvIntFromNull() -> integer
1072[73]: ConstTrue() -> boolean
1073[74]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
1076[86]: VarInt(var[69]) -> integer
1079[90]: ConvBoolFromInt(v1: integer) -> boolean
1080[87]: Not(v1: boolean) -> boolean
1081[87]: GenGotoFalseWord(jump=1092, if_false: boolean)
1084[86]: ConstInt(val=3) -> integer
1089[90]: GenGotoWord(jump=1101)
1092[86]: VarInt(var[69]) -> integer
1095[90]: ConstInt(val=1) -> integer
1100[94]: MinInt(v1: integer, v2: integer) -> integer
1101[90]: PutInt(var[69], value: integer)
1104[86]: VarInt(var[69]) -> integer
1107[90]: ConstInt(val=1) -> integer
1112[94]: LtInt(v1: integer, v2: integer) -> boolean
1113[87]: GenGotoFalseWord(jump=1123, if_false: boolean)
1116[86]: GenFreeStack(value=0, discard=12)
1120[74]: GenGotoWord(jump=1173)
1123[86]: VarInt(var[69]) -> integer
1126[90]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1129[86]: GetInt(v1: reference, fld=0) -> integer
1132[78]: VarBool(var[73]) -> boolean
1135[79]: GenGotoFalseWord(jump=1145, if_false: boolean)
1138[78]: ConstFalse() -> boolean
1139[79]: PutBool(var=6, value: boolean)
1142[78]: GenGotoWord(jump=1151)
1145[78]: ConstText(_value=",") -> text
1148[94]: AppendText(var[40], v1: text)
1151[78]: VarInt(var[74]) -> integer
1154[82]: ConstInt(val=0) -> integer
1159[86]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1166[78]: GenFreeStack(value=0, discard=4)
1170[74]: GenGotoWord(jump=1073)
1173[74]: ConstText(_value="]") -> text
1176[90]: AppendText(var[40], v1: text)
1179[74]: ConstText(_value=" ") -> text
1182[90]: AppendText(var[40], v1: text)
1185[74]: ConstText(_value="[") -> text
1188[90]: AppendText(var[40], v1: text)
1191[74]: ConstInt(val=0) -> integer
1196[78]: ConstTrue() -> boolean
1197[79]: VarInt(var[74]) -> integer
1200[83]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
1203[95]: LengthVector(r: vector) -> integer
1204[87]: GeInt(v1: integer, v2: integer) -> boolean
1205[80]: GenGotoFalseWord(jump=1212, if_false: boolean)
1208[79]: ConvIntFromNull() -> integer
1209[83]: GenGotoWord(jump=1243)
1212[79]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
1215[91]: VarInt(var[74]) -> integer
1218[95]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1221[91]: GetInt(v1: reference, fld=0) -> integer
1224[83]: VarInt(var[74]) -> integer
1227[87]: ConstInt(val=1) -> integer
1232[91]: AddInt(v1: integer, v2: integer) -> integer
1233[87]: PutInt(var[74], value: integer)
1236[83]: VarInt(var[79]) -> integer
1239[87]: GenFreeStack(value=4, discard=4)
1243[83]: VarInt(var[79]) -> integer
1246[87]: ConvBoolFromInt(v1: integer) -> boolean
1247[84]: Not(v1: boolean) -> boolean
1248[84]: GenGotoFalseWord(jump=1258, if_false: boolean)
1251[83]: GenFreeStack(value=0, discard=4)
1255[79]: GenGotoWord(jump=1334)
1258[83]: VarInt(var[79]) -> integer
1261[87]: ConstInt(val=4) -> integer
1266[91]: GeInt(v1: integer, v2: integer) -> boolean
1267[84]: GenGotoFalseWord(jump=1273, if_false: boolean)
1270[83]: GenGotoWord(jump=1280)
1273[83]: GenFreeStack(value=0, discard=4)
1277[79]: GenGotoWord(jump=1197)
1280[83]: VarInt(var[79]) -> integer
1283[87]: ConstInt(val=2) -> integer
1288[91]: DivInt(v1: integer, v2: integer) -> integer
1289[87]: GenFreeStack(value=4, discard=4)
1293[83]: VarBool(var[78]) -> boolean
1296[84]: GenGotoFalseWord(jump=1306, if_false: boolean)
1299[83]: ConstFalse() -> boolean
1300[84]: PutBool(var=6, value: boolean)
1303[83]: GenGotoWord(jump=1312)
1306[83]: ConstText(_value=",") -> text
1309[99]: AppendText(var[40], v1: text)
1312[83]: VarInt(var[79]) -> integer
1315[87]: ConstInt(val=0) -> integer
1320[91]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1327[83]: GenFreeStack(value=0, discard=4)
1331[79]: GenGotoWord(jump=1197)
1334[79]: ConstText(_value="]") -> text
1337[95]: AppendText(var[40], v1: text)
1340[79]: VarText(var[40]) -> text
1343[95]: GenFreeStack(value=16, discard=39)
1347[56]: GenFreeStack(value=16, discard=12)
1351[44]: AppendText(var[4], v1: text)
1354[28]: VarText(var[4]) -> text
1357[44]: ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> text
1397[60]: EqText(v1: text, v2: text) -> boolean
1398[29]: GenGotoFalseWord(jump=1404, if_false: boolean)
1401[28]: GenGotoWord(jump=1492)
1404[28]: Text()
1405[52]: ConstText(_value="Test failed ") -> text
1419[68]: AppendText(var[28], v1: text)
1422[52]: VarText(var[4]) -> text
1425[68]: ConstInt(val=0) -> integer
1430[72]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
1435[52]: ConstText(_value=" != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"") -> text
1481[68]: AppendText(var[28], v1: text)
1484[52]: VarText(var[28]) -> text
1487[68]: GenFreeStack(value=16, discard=24)
1491[44]: GenPanic(message: text)
1492[28]: GenReturn(ret=0, value=0, discard=28)

Execute test:
  668:[4] Text()
  669:[28] Database(size=4, db_tp=13) -> ref(1,1,0)={}[28]
  674:[40] VarRef(var[28]) -> ref(1,1,0)={}[40]
  677:[52] GetField(v1=ref(1,1,0)[40], fld=4) -> ref(1,1,4)=[][40]
  680:[52] VarRef(var[28]) -> ref(1,1,0)={}[52]
  683:[64] ConstInt(val=0) -> 0[64]
  688:[68] SetInt(v1=ref(1,1,0)[52], fld=4, val=0[64])
  691:[52] VarVector(var[40]) -> ref(1,1,4)=[][52]
  694:[64] NewRecord(data=ref(1,1,4)[52], parent_tp=14, fld=65535) -> ref(1,5,8)[52]
  699:[64] VarRef(var[52]) -> ref(1,5,8)=false[64]
  702:[76] ConstInt(val=1) -> 1[76]
  707:[80] SetInt(v1=ref(1,5,8)[64], fld=0, val=1[76])
  710:[64] VarVector(var[40]) -> ref(1,1,4)=[1][64]
  713:[76] VarRef(var[52]) -> ref(1,5,8)=true[76]
  716:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,8)[76], parent_tp=14, fld=65535)
  721:[64] VarVector(var[40]) -> ref(1,1,4)=[1][64]
  724:[76] NewRecord(data=ref(1,1,4)[64], parent_tp=14, fld=65535) -> ref(1,5,12)[64]
  729:[76] PutRef(var[52], value=ref(1,5,12)[64])
  732:[64] VarRef(var[52]) -> ref(1,5,12)=false[64]
  735:[76] ConstInt(val=2) -> 2[76]
  740:[80] SetInt(v1=ref(1,5,12)[64], fld=0, val=2[76])
  743:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2][64]
  746:[76] VarRef(var[52]) -> ref(1,5,12)=true[76]
  749:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,12)[76], parent_tp=14, fld=65535)
  754:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2][64]
  757:[76] NewRecord(data=ref(1,1,4)[64], parent_tp=14, fld=65535) -> ref(1,5,16)[64]
  762:[76] PutRef(var[52], value=ref(1,5,16)[64])
  765:[64] VarRef(var[52]) -> ref(1,5,16)=false[64]
  768:[76] ConstInt(val=4) -> 4[76]
  773:[80] SetInt(v1=ref(1,5,16)[64], fld=0, val=4[76])
  776:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4][64]
  779:[76] VarRef(var[52]) -> ref(1,5,16)=true[76]
  782:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,16)[76], parent_tp=14, fld=65535)
  787:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4][64]
  790:[76] NewRecord(data=ref(1,1,4)[64], parent_tp=14, fld=65535) -> ref(1,5,20)[64]
  795:[76] PutRef(var[52], value=ref(1,5,20)[64])
  798:[64] VarRef(var[52]) -> ref(1,5,20)=false[64]
  801:[76] ConstInt(val=8) -> 8[76]
  806:[80] SetInt(v1=ref(1,5,20)[64], fld=0, val=8[76])
  809:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4,8][64]
  812:[76] VarRef(var[52]) -> ref(1,5,20)=true[76]
  815:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,20)[76], parent_tp=14, fld=65535)
  820:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4,8][64]
  823:[76] GenFreeStack(value=12, discard=36)
  827:[40] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8][40]
  830:[52] VarVector(var[40]) -> ref(1,1,4)=[1,2,4,8][52]
  833:[64] NewRecord(data=ref(1,1,4)[52], parent_tp=14, fld=65535) -> ref(1,5,24)[52]
  838:[64] VarRef(var[52]) -> ref(1,5,24)=false[64]
  841:[76] ConstInt(val=16) -> 16[76]
  846:[80] SetInt(v1=ref(1,5,24)[64], fld=0, val=16[76])
  849:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4,8,16][64]
  852:[76] VarRef(var[52]) -> ref(1,5,24)=true[76]
  855:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,24)[76], parent_tp=14, fld=65535)
  860:[64] GenFreeStack(value=0, discard=24)
  864:[40] Text()
  865:[64] ConstText(_value="") -> ""[64]
  867:[80] AppendText(var[40], v1=""[64])
  870:[64] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][64]
  873:[76] FormatDatabase(var[40], val=ref(1,1,4)[64], db_tp=14, pretty=false)
  879:[64] ConstText(_value=" ") -> " "[64]
  882:[80] AppendText(var[40], v1=" "[64])
  885:[64] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][64]
  888:[76] GenCall(size=0, to=328)
  328:[80] VarVector(var[64]) -> ref(1,1,4)={r:5,g:0,b:0}[80]
  331:[92] LengthVector(r=ref(1,1,4)=true[80]) -> 5[80]
  332:[84] GenReturn(ret=895[76], value=4, discard=20)
  895:[68] ConstInt(val=0) -> 0[68]
  900:[72] FormatInt(var[40], val=5[64], radix=10, width=0[68], token=32, plus=false, note=false)
  907:[64] ConstText(_value=" ") -> " "[64]
  910:[80] AppendText(var[40], v1=" "[64])
  913:[64] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][64]
  916:[76] ConstInt(val=2) -> 2[76]
  921:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=2[76]) -> ref(1,5,16)=4[64]
  924:[76] GetInt(v1=ref(1,5,16)[64], fld=0) -> 4[64]
  927:[68] ConstInt(val=0) -> 0[68]
  932:[72] FormatInt(var[40], val=4[64], radix=10, width=0[68], token=32, plus=false, note=false)
  939:[64] ConstText(_value=" ") -> " "[64]
  942:[80] AppendText(var[40], v1=" "[64])
  945:[64] ConstText(_value="[") -> "["[64]
  948:[80] AppendText(var[40], v1="["[64])
  951:[64] ConvIntFromNull() -> -2147483648[64]
  952:[68] ConstTrue() -> true[68]
  953:[69] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][69]
  956:[81] VarInt(var[64]) -> -2147483648[81]
  959:[85] ConvBoolFromInt(v1=-2147483648[81]) -> false[81]
  960:[82] Not(v1=false[81]) -> true[81]
  961:[82] GenGotoFalseWord(jump=972, if_false=true[81])
  964:[81] ConstInt(val=1) -> 1[81]
  969:[85] GenGotoWord(jump=981)
  981:[85] PutInt(var[64], value=1[81])
  984:[81] VarInt(var[64]) -> 1[81]
  987:[85] ConstInt(val=3) -> 3[85]
  992:[89] GeInt(v1=1[81], v2=3[85]) -> false[81]
  993:[82] GenGotoFalseWord(jump=1003, if_false=false[81])
 1003:[81] VarInt(var[64]) -> 1[81]
 1006:[85] GetVector(r=ref(1,1,4)=true[69], size=4, index=1[81]) -> ref(1,5,12)=2[69]
 1009:[81] GetInt(v1=ref(1,5,12)[69], fld=0) -> 2[69]
 1012:[73] VarBool(var[68]) -> true[73]
 1015:[74] GenGotoFalseWord(jump=1025, if_false=true[73])
 1018:[73] ConstFalse() -> false[73]
 1019:[74] PutBool(var=6, value=false[73])
 1022:[73] GenGotoWord(jump=1031)
 1031:[73] VarInt(var[69]) -> 2[73]
 1034:[77] ConstInt(val=0) -> 0[77]
 1039:[81] FormatInt(var[40], val=2[73], radix=10, width=0[77], token=32, plus=false, note=false)
 1046:[73] GenFreeStack(value=0, discard=4)
 1050:[69] GenGotoWord(jump=953)
  953:[69] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][69]
  956:[81] VarInt(var[64]) -> 1[81]
  959:[85] ConvBoolFromInt(v1=1[81]) -> true[81]
  960:[82] Not(v1=true[81]) -> false[81]
  961:[82] GenGotoFalseWord(jump=972, if_false=false[81])
  972:[81] VarInt(var[64]) -> 1[81]
  975:[85] ConstInt(val=1) -> 1[85]
  980:[89] AddInt(v1=1[81], v2=1[85]) -> 2[81]
  981:[85] PutInt(var[64], value=2[81])
  984:[81] VarInt(var[64]) -> 2[81]
  987:[85] ConstInt(val=3) -> 3[85]
  992:[89] GeInt(v1=2[81], v2=3[85]) -> false[81]
  993:[82] GenGotoFalseWord(jump=1003, if_false=false[81])
 1003:[81] VarInt(var[64]) -> 2[81]
 1006:[85] GetVector(r=ref(1,1,4)=true[69], size=4, index=2[81]) -> ref(1,5,16)=4[69]
 1009:[81] GetInt(v1=ref(1,5,16)[69], fld=0) -> 4[69]
 1012:[73] VarBool(var[68]) -> false[73]
 1015:[74] GenGotoFalseWord(jump=1025, if_false=false[73])
 1025:[73] ConstText(_value=",") -> ","[73]
 1028:[89] AppendText(var[40], v1=","[73])
 1031:[73] VarInt(var[69]) -> 4[73]
 1034:[77] ConstInt(val=0) -> 0[77]
 1039:[81] FormatInt(var[40], val=4[73], radix=10, width=0[77], token=32, plus=false, note=false)
 1046:[73] GenFreeStack(value=0, discard=4)
 1050:[69] GenGotoWord(jump=953)
  953:[69] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][69]
  956:[81] VarInt(var[64]) -> 2[81]
  959:[85] ConvBoolFromInt(v1=2[81]) -> true[81]
  960:[82] Not(v1=true[81]) -> false[81]
  961:[82] GenGotoFalseWord(jump=972, if_false=false[81])
  972:[81] VarInt(var[64]) -> 2[81]
  975:[85] ConstInt(val=1) -> 1[85]
  980:[89] AddInt(v1=2[81], v2=1[85]) -> 3[81]
  981:[85] PutInt(var[64], value=3[81])
  984:[81] VarInt(var[64]) -> 3[81]
  987:[85] ConstInt(val=3) -> 3[85]
  992:[89] GeInt(v1=3[81], v2=3[85]) -> true[81]
  993:[82] GenGotoFalseWord(jump=1003, if_false=true[81])
  996:[81] GenFreeStack(value=0, discard=12)
 1000:[69] GenGotoWord(jump=1053)
 1053:[69] ConstText(_value="]") -> "]"[69]
 1056:[85] AppendText(var[40], v1="]"[69])
 1059:[69] ConstText(_value=" ") -> " "[69]
 1062:[85] AppendText(var[40], v1=" "[69])
 1065:[69] ConstText(_value="[") -> "["[69]
 1068:[85] AppendText(var[40], v1="["[69])
 1071:[69] ConvIntFromNull() -> -2147483648[69]
 1072:[73] ConstTrue() -> true[73]
 1073:[74] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][74]
 1076:[86] VarInt(var[69]) -> -2147483648[86]
 1079:[90] ConvBoolFromInt(v1=-2147483648[86]) -> false[86]
 1080:[87] Not(v1=false[86]) -> true[86]
 1081:[87] GenGotoFalseWord(jump=1092, if_false=true[86])
 1084:[86] ConstInt(val=3) -> 3[86]
 1089:[90] GenGotoWord(jump=1101)
 1101:[90] PutInt(var[69], value=3[86])
 1104:[86] VarInt(var[69]) -> 3[86]
 1107:[90] ConstInt(val=1) -> 1[90]
 1112:[94] LtInt(v1=3[86], v2=1[90]) -> false[86]
 1113:[87] GenGotoFalseWord(jump=1123, if_false=false[86])
 1123:[86] VarInt(var[69]) -> 3[86]
 1126:[90] GetVector(r=ref(1,1,4)=true[74], size=4, index=3[86]) -> ref(1,5,20)=8[74]
 1129:[86] GetInt(v1=ref(1,5,20)[74], fld=0) -> 8[74]
 1132:[78] VarBool(var[73]) -> true[78]
 1135:[79] GenGotoFalseWord(jump=1145, if_false=true[78])
 1138:[78] ConstFalse() -> false[78]
 1139:[79] PutBool(var=6, value=false[78])
 1142:[78] GenGotoWord(jump=1151)
 1151:[78] VarInt(var[74]) -> 8[78]
 1154:[82] ConstInt(val=0) -> 0[82]
 1159:[86] FormatInt(var[40], val=8[78], radix=10, width=0[82], token=32, plus=false, note=false)
 1166:[78] GenFreeStack(value=0, discard=4)
 1170:[74] GenGotoWord(jump=1073)
 1073:[74] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][74]
 1076:[86] VarInt(var[69]) -> 3[86]
 1079:[90] ConvBoolFromInt(v1=3[86]) -> true[86]
 1080:[87] Not(v1=true[86]) -> false[86]
 1081:[87] GenGotoFalseWord(jump=1092, if_false=false[86])
 1092:[86] VarInt(var[69]) -> 3[86]
 1095:[90] ConstInt(val=1) -> 1[90]
 1100:[94] MinInt(v1=3[86], v2=1[90]) -> 2[86]
 1101:[90] PutInt(var[69], value=2[86])
 1104:[86] VarInt(var[69]) -> 2[86]
 1107:[90] ConstInt(val=1) -> 1[90]
 1112:[94] LtInt(v1=2[86], v2=1[90]) -> false[86]
 1113:[87] GenGotoFalseWord(jump=1123, if_false=false[86])
 1123:[86] VarInt(var[69]) -> 2[86]
 1126:[90] GetVector(r=ref(1,1,4)=true[74], size=4, index=2[86]) -> ref(1,5,16)=4[74]
 1129:[86] GetInt(v1=ref(1,5,16)[74], fld=0) -> 4[74]
 1132:[78] VarBool(var[73]) -> false[78]
 1135:[79] GenGotoFalseWord(jump=1145, if_false=false[78])
 1145:[78] ConstText(_value=",") -> ","[78]
 1148:[94] AppendText(var[40], v1=","[78])
 1151:[78] VarInt(var[74]) -> 4[78]
 1154:[82] ConstInt(val=0) -> 0[82]
 1159:[86] FormatInt(var[40], val=4[78], radix=10, width=0[82], token=32, plus=false, note=false)
 1166:[78] GenFreeStack(value=0, discard=4)
 1170:[74] GenGotoWord(jump=1073)
 1073:[74] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][74]
 1076:[86] VarInt(var[69]) -> 2[86]
 1079:[90] ConvBoolFromInt(v1=2[86]) -> true[86]
 1080:[87] Not(v1=true[86]) -> false[86]
 1081:[87] GenGotoFalseWord(jump=1092, if_false=false[86])
 1092:[86] VarInt(var[69]) -> 2[86]
 1095:[90] ConstInt(val=1) -> 1[90]
 1100:[94] MinInt(v1=2[86], v2=1[90]) -> 1[86]
 1101:[90] PutInt(var[69], value=1[86])
 1104:[86] VarInt(var[69]) -> 1[86]
 1107:[90] ConstInt(val=1) -> 1[90]
 1112:[94] LtInt(v1=1[86], v2=1[90]) -> false[86]
 1113:[87] GenGotoFalseWord(jump=1123, if_false=false[86])
 1123:[86] VarInt(var[69]) -> 1[86]
 1126:[90] GetVector(r=ref(1,1,4)=true[74], size=4, index=1[86]) -> ref(1,5,12)=2[74]
 1129:[86] GetInt(v1=ref(1,5,12)[74], fld=0) -> 2[74]
 1132:[78] VarBool(var[73]) -> false[78]
 1135:[79] GenGotoFalseWord(jump=1145, if_false=false[78])
 1145:[78] ConstText(_value=",") -> ","[78]
 1148:[94] AppendText(var[40], v1=","[78])
 1151:[78] VarInt(var[74]) -> 2[78]
 1154:[82] ConstInt(val=0) -> 0[82]
 1159:[86] FormatInt(var[40], val=2[78], radix=10, width=0[82], token=32, plus=false, note=false)
 1166:[78] GenFreeStack(value=0, discard=4)
 1170:[74] GenGotoWord(jump=1073)
 1073:[74] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][74]
 1076:[86] VarInt(var[69]) -> 1[86]
 1079:[90] ConvBoolFromInt(v1=1[86]) -> true[86]
 1080:[87] Not(v1=true[86]) -> false[86]
 1081:[87] GenGotoFalseWord(jump=1092, if_false=false[86])
 1092:[86] VarInt(var[69]) -> 1[86]
 1095:[90] ConstInt(val=1) -> 1[90]
 1100:[94] MinInt(v1=1[86], v2=1[90]) -> 0[86]
 1101:[90] PutInt(var[69], value=0[86])
 1104:[86] VarInt(var[69]) -> 0[86]
 1107:[90] ConstInt(val=1) -> 1[90]
 1112:[94] LtInt(v1=0[86], v2=1[90]) -> true[86]
 1113:[87] GenGotoFalseWord(jump=1123, if_false=true[86])
 1116:[86] GenFreeStack(value=0, discard=12)
 1120:[74] GenGotoWord(jump=1173)
 1173:[74] ConstText(_value="]") -> "]"[74]
 1176:[90] AppendText(var[40], v1="]"[74])
 1179:[74] ConstText(_value=" ") -> " "[74]
 1182:[90] AppendText(var[40], v1=" "[74])
 1185:[74] ConstText(_value="[") -> "["[74]
 1188:[90] AppendText(var[40], v1="["[74])
 1191:[74] ConstInt(val=0) -> 0[74]
 1196:[78] ConstTrue() -> true[78]
 1197:[79] VarInt(var[74]) -> 0[79]
 1200:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1203:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1204:[87] GeInt(v1=0[79], v2=5[83]) -> false[79]
 1205:[80] GenGotoFalseWord(jump=1212, if_false=false[79])
 1212:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1215:[91] VarInt(var[74]) -> 0[91]
 1218:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=0[91]) -> ref(1,5,8)=1[79]
 1221:[91] GetInt(v1=ref(1,5,8)[79], fld=0) -> 1[79]
 1224:[83] VarInt(var[74]) -> 0[83]
 1227:[87] ConstInt(val=1) -> 1[87]
 1232:[91] AddInt(v1=0[83], v2=1[87]) -> 1[83]
 1233:[87] PutInt(var[74], value=1[83])
 1236:[83] VarInt(var[79]) -> 1[83]
 1239:[87] GenFreeStack(value=4, discard=4)
 1243:[83] VarInt(var[79]) -> 1[83]
 1246:[87] ConvBoolFromInt(v1=1[83]) -> true[83]
 1247:[84] Not(v1=true[83]) -> false[83]
 1248:[84] GenGotoFalseWord(jump=1258, if_false=false[83])
 1258:[83] VarInt(var[79]) -> 1[83]
 1261:[87] ConstInt(val=4) -> 4[87]
 1266:[91] GeInt(v1=1[83], v2=4[87]) -> false[83]
 1267:[84] GenGotoFalseWord(jump=1273, if_false=false[83])
 1273:[83] GenFreeStack(value=0, discard=4)
 1277:[79] GenGotoWord(jump=1197)
 1197:[79] VarInt(var[74]) -> 1[79]
 1200:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1203:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1204:[87] GeInt(v1=1[79], v2=5[83]) -> false[79]
 1205:[80] GenGotoFalseWord(jump=1212, if_false=false[79])
 1212:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1215:[91] VarInt(var[74]) -> 1[91]
 1218:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=1[91]) -> ref(1,5,12)=2[79]
 1221:[91] GetInt(v1=ref(1,5,12)[79], fld=0) -> 2[79]
 1224:[83] VarInt(var[74]) -> 1[83]
 1227:[87] ConstInt(val=1) -> 1[87]
 1232:[91] AddInt(v1=1[83], v2=1[87]) -> 2[83]
 1233:[87] PutInt(var[74], value=2[83])
 1236:[83] VarInt(var[79]) -> 2[83]
 1239:[87] GenFreeStack(value=4, discard=4)
 1243:[83] VarInt(var[79]) -> 2[83]
 1246:[87] ConvBoolFromInt(v1=2[83]) -> true[83]
 1247:[84] Not(v1=true[83]) -> false[83]
 1248:[84] GenGotoFalseWord(jump=1258, if_false=false[83])
 1258:[83] VarInt(var[79]) -> 2[83]
 1261:[87] ConstInt(val=4) -> 4[87]
 1266:[91] GeInt(v1=2[83], v2=4[87]) -> false[83]
 1267:[84] GenGotoFalseWord(jump=1273, if_false=false[83])
 1273:[83] GenFreeStack(value=0, discard=4)
 1277:[79] GenGotoWord(jump=1197)
 1197:[79] VarInt(var[74]) -> 2[79]
 1200:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1203:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1204:[87] GeInt(v1=2[79], v2=5[83]) -> false[79]
 1205:[80] GenGotoFalseWord(jump=1212, if_false=false[79])
 1212:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1215:[91] VarInt(var[74]) -> 2[91]
 1218:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=2[91]) -> ref(1,5,16)=4[79]
 1221:[91] GetInt(v1=ref(1,5,16)[79], fld=0) -> 4[79]
 1224:[83] VarInt(var[74]) -> 2[83]
 1227:[87] ConstInt(val=1) -> 1[87]
 1232:[91] AddInt(v1=2[83], v2=1[87]) -> 3[83]
 1233:[87] PutInt(var[74], value=3[83])
 1236:[83] VarInt(var[79]) -> 4[83]
 1239:[87] GenFreeStack(value=4, discard=4)
 1243:[83] VarInt(var[79]) -> 4[83]
 1246:[87] ConvBoolFromInt(v1=4[83]) -> true[83]
 1247:[84] Not(v1=true[83]) -> false[83]
 1248:[84] GenGotoFalseWord(jump=1258, if_false=false[83])
 1258:[83] VarInt(var[79]) -> 4[83]
 1261:[87] ConstInt(val=4) -> 4[87]
 1266:[91] GeInt(v1=4[83], v2=4[87]) -> true[83]
 1267:[84] GenGotoFalseWord(jump=1273, if_false=true[83])
 1270:[83] GenGotoWord(jump=1280)
 1280:[83] VarInt(var[79]) -> 4[83]
 1283:[87] ConstInt(val=2) -> 2[87]
 1288:[91] DivInt(v1=4[83], v2=2[87]) -> 2[83]
 1289:[87] GenFreeStack(value=4, discard=4)
 1293:[83] VarBool(var[78]) -> true[83]
 1296:[84] GenGotoFalseWord(jump=1306, if_false=true[83])
 1299:[83] ConstFalse() -> false[83]
 1300:[84] PutBool(var=6, value=false[83])
 1303:[83] GenGotoWord(jump=1312)
 1312:[83] VarInt(var[79]) -> 2[83]
 1315:[87] ConstInt(val=0) -> 0[87]
 1320:[91] FormatInt(var[40], val=2[83], radix=10, width=0[87], token=32, plus=false, note=false)
 1327:[83] GenFreeStack(value=0, discard=4)
 1331:[79] GenGotoWord(jump=1197)
 1197:[79] VarInt(var[74]) -> 3[79]
 1200:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1203:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1204:[87] GeInt(v1=3[79], v2=5[83]) -> false[79]
 1205:[80] GenGotoFalseWord(jump=1212, if_false=false[79])
 1212:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1215:[91] VarInt(var[74]) -> 3[91]
 1218:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=3[91]) -> ref(1,5,20)=8[79]
 1221:[91] GetInt(v1=ref(1,5,20)[79], fld=0) -> 8[79]
 1224:[83] VarInt(var[74]) -> 3[83]
 1227:[87] ConstInt(val=1) -> 1[87]
 1232:[91] AddInt(v1=3[83], v2=1[87]) -> 4[83]
 1233:[87] PutInt(var[74], value=4[83])
 1236:[83] VarInt(var[79]) -> 8[83]
 1239:[87] GenFreeStack(value=4, discard=4)
 1243:[83] VarInt(var[79]) -> 8[83]
 1246:[87] ConvBoolFromInt(v1=8[83]) -> true[83]
 1247:[84] Not(v1=true[83]) -> false[83]
 1248:[84] GenGotoFalseWord(jump=1258, if_false=false[83])
 1258:[83] VarInt(var[79]) -> 8[83]
 1261:[87] ConstInt(val=4) -> 4[87]
 1266:[91] GeInt(v1=8[83], v2=4[87]) -> true[83]
 1267:[84] GenGotoFalseWord(jump=1273, if_false=true[83])
 1270:[83] GenGotoWord(jump=1280)
 1280:[83] VarInt(var[79]) -> 8[83]
 1283:[87] ConstInt(val=2) -> 2[87]
 1288:[91] DivInt(v1=8[83], v2=2[87]) -> 4[83]
 1289:[87] GenFreeStack(value=4, discard=4)
 1293:[83] VarBool(var[78]) -> false[83]
 1296:[84] GenGotoFalseWord(jump=1306, if_false=false[83])
 1306:[83] ConstText(_value=",") -> ","[83]
 1309:[99] AppendText(var[40], v1=","[83])
 1312:[83] VarInt(var[79]) -> 4[83]
 1315:[87] ConstInt(val=0) -> 0[87]
 1320:[91] FormatInt(var[40], val=4[83], radix=10, width=0[87], token=32, plus=false, note=false)
 1327:[83] GenFreeStack(value=0, discard=4)
 1331:[79] GenGotoWord(jump=1197)
 1197:[79] VarInt(var[74]) -> 4[79]
 1200:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1203:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1204:[87] GeInt(v1=4[79], v2=5[83]) -> false[79]
 1205:[80] GenGotoFalseWord(jump=1212, if_false=false[79])
 1212:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1215:[91] VarInt(var[74]) -> 4[91]
 1218:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=4[91]) -> ref(1,5,24)=16[79]
 1221:[91] GetInt(v1=ref(1,5,24)[79], fld=0) -> 16[79]
 1224:[83] VarInt(var[74]) -> 4[83]
 1227:[87] ConstInt(val=1) -> 1[87]
 1232:[91] AddInt(v1=4[83], v2=1[87]) -> 5[83]
 1233:[87] PutInt(var[74], value=5[83])
 1236:[83] VarInt(var[79]) -> 16[83]
 1239:[87] GenFreeStack(value=4, discard=4)
 1243:[83] VarInt(var[79]) -> 16[83]
 1246:[87] ConvBoolFromInt(v1=16[83]) -> true[83]
 1247:[84] Not(v1=true[83]) -> false[83]
 1248:[84] GenGotoFalseWord(jump=1258, if_false=false[83])
 1258:[83] VarInt(var[79]) -> 16[83]
 1261:[87] ConstInt(val=4) -> 4[87]
 1266:[91] GeInt(v1=16[83], v2=4[87]) -> true[83]
 1267:[84] GenGotoFalseWord(jump=1273, if_false=true[83])
 1270:[83] GenGotoWord(jump=1280)
 1280:[83] VarInt(var[79]) -> 16[83]
 1283:[87] ConstInt(val=2) -> 2[87]
 1288:[91] DivInt(v1=16[83], v2=2[87]) -> 8[83]
 1289:[87] GenFreeStack(value=4, discard=4)
 1293:[83] VarBool(var[78]) -> false[83]
 1296:[84] GenGotoFalseWord(jump=1306, if_false=false[83])
 1306:[83] ConstText(_value=",") -> ","[83]
 1309:[99] AppendText(var[40], v1=","[83])
 1312:[83] VarInt(var[79]) -> 8[83]
 1315:[87] ConstInt(val=0) -> 0[87]
 1320:[91] FormatInt(var[40], val=8[83], radix=10, width=0[87], token=32, plus=false, note=false)
 1327:[83] GenFreeStack(value=0, discard=4)
 1331:[79] GenGotoWord(jump=1197)
 1197:[79] VarInt(var[74]) -> 5[79]
 1200:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1203:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1204:[87] GeInt(v1=5[79], v2=5[83]) -> true[79]
 1205:[80] GenGotoFalseWord(jump=1212, if_false=true[79])
 1208:[79] ConvIntFromNull() -> -2147483648[79]
 1209:[83] GenGotoWord(jump=1243)
 1243:[83] VarInt(var[79]) -> -2147483648[83]
 1246:[87] ConvBoolFromInt(v1=-2147483648[83]) -> false[83]
 1247:[84] Not(v1=false[83]) -> true[83]
 1248:[84] GenGotoFalseWord(jump=1258, if_false=true[83])
 1251:[83] GenFreeStack(value=0, discard=4)
 1255:[79] GenGotoWord(jump=1334)
 1334:[79] ConstText(_value="]") -> "]"[79]
 1337:[95] AppendText(var[40], v1="]"[79])
 1340:[79] VarText(var[40]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[79]
 1343:[95] GenFreeStack(value=16, discard=39)
 1347:[56] GenFreeStack(value=16, discard=12)
 1351:[44] AppendText(var[4], v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[28])
 1354:[28] VarText(var[4]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[28]
 1357:[44] ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[44]
 1397:[60] EqText(v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[28], v2="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[44]) -> true[28]
 1398:[29] GenGotoFalseWord(jump=1404, if_false=true[28])
 1401:[28] GenGotoWord(jump=1492)
 1492:[28] GenReturn(ret=4294967295[0], value=0, discard=28)
Finished
