pub fn test() {
    test_value = {v=[1, 2, 4, 8];
v += [16];
"{v} {v.len()} {v[2]} {v[1..3]} {v[rev(1..=3)]} {for x in v if x >= 4 {x/2}}"};
    assert(
        test_value == "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]",
        "Test failed {test_value} != \"[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]\""
    );
}
Type 11:vector<integer>[4]:Vector(0)

Type 12:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    v:vector<integer>#[] = {#3 vector
      _db_3:main_vector<integer> = OpDatabase(4i32, 12i32);
      _vec_2:vector<integer>#[] = OpGetField(_db_3, 4i32, 65535i32);
      OpSetInt(_db_3, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 4i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 8i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _vec_2;
    }#3:vector<integer>#[];
    {#4 vector
      _elm_4:boolean = OpNewRecord(v, 11i32, 65535i32);
      OpSetInt(_elm_4, 0i32, 16i32);
      OpFinishRecord(v, _elm_4, 11i32, 65535i32);
    }#4;
    {#5 formatting string
      __work_1:text = "";
      OpFormatDatabase(__work_1, v, 11i32, false);
      OpAppendText(__work_1, " ");
      OpFormatInt(__work_1, _tp_vector_len(v), 10i32, 0i32, 32i32, false, false);
      OpAppendText(__work_1, " ");
      OpFormatInt(__work_1, OpGetInt(OpGetVector(v, 4i32, 2i32), 0i32), 10i32, 0i32, 32i32, false, false);
      OpAppendText(__work_1, " ");
      OpAppendText(__work_1, "[");
      _index_5:integer = OpConvIntFromNull();
      _first_6:boolean = true;
      loop {#6 append iter loop
        _val_7:integer = {#7 append iter next
          OpGetInt(OpGetVector(v, 4i32, {#8 next block
            _index_5:integer = if OpNot(OpConvBoolFromInt(_index_5)) 1i32 else OpAddInt(_index_5, 1i32);
            if OpGeInt(_index_5, 3i32) break(0) else null;
            _index_5;
          }#8:integer), 0i32);
        }#7:integer;
        if _first_6 _first_6:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_7, 10i32, 0i32, 32i32, false, false);
      }#6;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, " ");
      OpAppendText(__work_1, "[");
      _index_8:integer = OpConvIntFromNull();
      _first_9:boolean = true;
      loop {#9 append iter loop
        _val_10:integer = {#10 append iter next
          OpGetInt(OpGetVector(v, 4i32, {#11 next block
            _index_8:integer = if OpNot(OpConvBoolFromInt(_index_8)) 3i32 else OpMinInt(_index_8, 1i32);
            if OpLtInt(_index_8, 1i32) break(0) else null;
            _index_8;
          }#11:integer), 0i32);
        }#10:integer;
        if _first_9 _first_9:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_10, 10i32, 0i32, 32i32, false, false);
      }#9;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, " ");
      OpAppendText(__work_1, "[");
      x#index:integer = 0i32;
      _first_13:boolean = true;
      loop {#12 iter for loop
        _val_11:integer = {#13 iter for fill
          x:integer = if OpGeInt(x#index, OpLengthVector(v)) OpConvIntFromNull() else {#14 iter next
            _res_12:integer = OpGetInt(OpGetVector(v, 4i32, x#index), 0i32);
            x#index:integer = OpAddInt(x#index, 1i32);
            _res_12;
          }#14:integer;
          if OpNot(OpConvBoolFromInt(x)) break(0) else null;
          if OpGeInt(x, 4i32) null else continue(0);
          {#15 block
            OpDivInt(x, 2i32);
          }#15:integer;
        }#13:integer;
        if _first_13 _first_13:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_11, 10i32, 0i32, 32i32, false, false);
      }#12;
      OpAppendText(__work_1, "]");
      __work_1;
    }#5:text;
  }#2:text;
  if OpEqText(test_value, "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") null else OpPanic({#16 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"");
    __work_2;
  }#16:text);
}#1

byte-code for format_vector:test()
 682[0]: return-address
 682[4]: Text()
 683[28]: Text()
 684[52]: Text()
 685[76]: Database(size=4, db_tp=12) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 690[88]: VarRef(var[76]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 693[100]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 696[100]: VarRef(var[76]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 699[112]: ConstInt(val=0) -> integer
 704[116]: SetInt(v1: reference, fld=4, val: integer)
 707[100]: VarVector(var[88]) -> vector#[] type=Unknown type(65535)[65535]
 710[112]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 715[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 718[124]: ConstInt(val=1) -> integer
 723[128]: SetInt(v1: reference, fld=0, val: integer)
 726[112]: VarVector(var[88]) -> vector#[] type=Unknown type(65535)[65535]
 729[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 732[136]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 737[112]: VarVector(var[88]) -> vector#[] type=Unknown type(65535)[65535]
 740[124]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 745[124]: PutRef(var[100], value: reference)
 748[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 751[124]: ConstInt(val=2) -> integer
 756[128]: SetInt(v1: reference, fld=0, val: integer)
 759[112]: VarVector(var[88]) -> vector#[] type=Unknown type(65535)[65535]
 762[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 765[136]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 770[112]: VarVector(var[88]) -> vector#[] type=Unknown type(65535)[65535]
 773[124]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 778[124]: PutRef(var[100], value: reference)
 781[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 784[124]: ConstInt(val=4) -> integer
 789[128]: SetInt(v1: reference, fld=0, val: integer)
 792[112]: VarVector(var[88]) -> vector#[] type=Unknown type(65535)[65535]
 795[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 798[136]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 803[112]: VarVector(var[88]) -> vector#[] type=Unknown type(65535)[65535]
 806[124]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 811[124]: PutRef(var[100], value: reference)
 814[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 817[124]: ConstInt(val=8) -> integer
 822[128]: SetInt(v1: reference, fld=0, val: integer)
 825[112]: VarVector(var[88]) -> vector#[] type=Unknown type(65535)[65535]
 828[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 831[136]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 836[112]: VarVector(var[88]) -> vector#[] type=Unknown type(65535)[65535]
 839[124]: FreeStack(value=12, discard=36) type=Pixel[3]:{r:byte[0], g:byte[1], b:byte[2]}[6]
 843[88]: VarVector(var[76]) -> vector#[] type=Unknown type(65535)[65535]
 846[100]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 851[100]: VarRef(var[88]) -> reference type=boolean[1]:Base[4]
 854[112]: ConstInt(val=16) -> integer
 859[116]: SetInt(v1: reference, fld=0, val: integer)
 862[100]: VarVector(var[76]) -> vector#[] type=Unknown type(65535)[65535]
 865[112]: VarRef(var[88]) -> reference type=boolean[1]:Base[4]
 868[124]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 873[100]: FreeStack(value=0, discard=12)
 877[88]: ClearText(var[28])
 880[88]: ConstText(_value="") -> text
 882[104]: AppendText(var[28], v1: text)
 885[88]: VarVector(var[76]) -> vector#[] type=Unknown type(65535)[65535]
 888[100]: FormatDatabase(var[28], val: reference, db_tp=11, pretty=false)
 894[88]: ConstText(_value=" ") -> text
 897[104]: AppendText(var[28], v1: text)
 900[88]: VarVector(var[76]) -> vector#[] type=Unknown type(65535)[65535]
 903[100]: Call(size=0, to=328)
 910[92]: ConstInt(val=0) -> integer
 915[96]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 922[88]: ConstText(_value=" ") -> text
 925[104]: AppendText(var[28], v1: text)
 928[88]: VarVector(var[76]) -> vector#[] type=Unknown type(65535)[65535]
 931[100]: ConstInt(val=2) -> integer
 936[104]: GetVector(r: vector#[], size=4, index: integer) -> reference type=integer[4]:Base[0]
 939[100]: GetInt(v1: reference, fld=0) -> integer
 942[92]: ConstInt(val=0) -> integer
 947[96]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 954[88]: ConstText(_value=" ") -> text
 957[104]: AppendText(var[28], v1: text)
 960[88]: ConstText(_value="[") -> text
 963[104]: AppendText(var[28], v1: text)
 966[88]: ConvIntFromNull() -> integer
 967[92]: ConstTrue() -> boolean
 968[93]: VarVector(var[76]) -> vector#[] type=Unknown type(65535)[65535]
 971[105]: VarInt(var[88]) -> integer
 974[109]: ConvBoolFromInt(v1: integer) -> boolean
 975[106]: Not(v1: boolean) -> boolean
 976[106]: GotoFalseWord(jump=987, if_false: boolean)
 979[105]: ConstInt(val=1) -> integer
 984[109]: GotoWord(jump=996)
 987[105]: VarInt(var[88]) -> integer
 990[109]: ConstInt(val=1) -> integer
 995[113]: AddInt(v1: integer, v2: integer) -> integer
 996[109]: PutInt(var[88], value: integer)
 999[105]: VarInt(var[88]) -> integer
1002[109]: ConstInt(val=3) -> integer
1007[113]: GeInt(v1: integer, v2: integer) -> boolean
1008[106]: GotoFalseWord(jump=1018, if_false: boolean)
1011[105]: FreeStack(value=0, discard=12)
1015[93]: GotoWord(jump=1068)
1018[105]: VarInt(var[88]) -> integer
1021[109]: GetVector(r: vector#[], size=4, index: integer) -> reference type=integer[4]:Base[0]
1024[105]: GetInt(v1: reference, fld=0) -> integer
1027[97]: VarBool(var[92]) -> boolean
1030[98]: GotoFalseWord(jump=1040, if_false: boolean)
1033[97]: ConstFalse() -> boolean
1034[98]: PutBool(var=6, value: boolean)
1037[97]: GotoWord(jump=1046)
1040[97]: ConstText(_value=",") -> text
1043[113]: AppendText(var[28], v1: text)
1046[97]: VarInt(var[93]) -> integer
1049[101]: ConstInt(val=0) -> integer
1054[105]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1061[97]: FreeStack(value=0, discard=4)
1065[93]: GotoWord(jump=968)
1068[93]: ConstText(_value="]") -> text
1071[109]: AppendText(var[28], v1: text)
1074[93]: ConstText(_value=" ") -> text
1077[109]: AppendText(var[28], v1: text)
1080[93]: ConstText(_value="[") -> text
1083[109]: AppendText(var[28], v1: text)
1086[93]: ConvIntFromNull() -> integer
1087[97]: ConstTrue() -> boolean
1088[98]: VarVector(var[76]) -> vector#[] type=Unknown type(65535)[65535]
1091[110]: VarInt(var[93]) -> integer
1094[114]: ConvBoolFromInt(v1: integer) -> boolean
1095[111]: Not(v1: boolean) -> boolean
1096[111]: GotoFalseWord(jump=1107, if_false: boolean)
1099[110]: ConstInt(val=3) -> integer
1104[114]: GotoWord(jump=1116)
1107[110]: VarInt(var[93]) -> integer
1110[114]: ConstInt(val=1) -> integer
1115[118]: MinInt(v1: integer, v2: integer) -> integer
1116[114]: PutInt(var[93], value: integer)
1119[110]: VarInt(var[93]) -> integer
1122[114]: ConstInt(val=1) -> integer
1127[118]: LtInt(v1: integer, v2: integer) -> boolean
1128[111]: GotoFalseWord(jump=1138, if_false: boolean)
1131[110]: FreeStack(value=0, discard=12)
1135[98]: GotoWord(jump=1188)
1138[110]: VarInt(var[93]) -> integer
1141[114]: GetVector(r: vector#[], size=4, index: integer) -> reference type=integer[4]:Base[0]
1144[110]: GetInt(v1: reference, fld=0) -> integer
1147[102]: VarBool(var[97]) -> boolean
1150[103]: GotoFalseWord(jump=1160, if_false: boolean)
1153[102]: ConstFalse() -> boolean
1154[103]: PutBool(var=6, value: boolean)
1157[102]: GotoWord(jump=1166)
1160[102]: ConstText(_value=",") -> text
1163[118]: AppendText(var[28], v1: text)
1166[102]: VarInt(var[98]) -> integer
1169[106]: ConstInt(val=0) -> integer
1174[110]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1181[102]: FreeStack(value=0, discard=4)
1185[98]: GotoWord(jump=1088)
1188[98]: ConstText(_value="]") -> text
1191[114]: AppendText(var[28], v1: text)
1194[98]: ConstText(_value=" ") -> text
1197[114]: AppendText(var[28], v1: text)
1200[98]: ConstText(_value="[") -> text
1203[114]: AppendText(var[28], v1: text)
1206[98]: ConstInt(val=0) -> integer
1211[102]: ConstTrue() -> boolean
1212[103]: VarInt(var[98]) -> integer
1215[107]: VarVector(var[76]) -> vector#[] type=Unknown type(65535)[65535]
1218[119]: LengthVector(r: vector#[]) -> integer
1219[111]: GeInt(v1: integer, v2: integer) -> boolean
1220[104]: GotoFalseWord(jump=1227, if_false: boolean)
1223[103]: ConvIntFromNull() -> integer
1224[107]: GotoWord(jump=1258)
1227[103]: VarVector(var[76]) -> vector#[] type=Unknown type(65535)[65535]
1230[115]: VarInt(var[98]) -> integer
1233[119]: GetVector(r: vector#[], size=4, index: integer) -> reference type=integer[4]:Base[0]
1236[115]: GetInt(v1: reference, fld=0) -> integer
1239[107]: VarInt(var[98]) -> integer
1242[111]: ConstInt(val=1) -> integer
1247[115]: AddInt(v1: integer, v2: integer) -> integer
1248[111]: PutInt(var[98], value: integer)
1251[107]: VarInt(var[103]) -> integer
1254[111]: FreeStack(value=4, discard=4) type=integer[4]:Base[0]
1258[107]: VarInt(var[103]) -> integer
1261[111]: ConvBoolFromInt(v1: integer) -> boolean
1262[108]: Not(v1: boolean) -> boolean
1263[108]: GotoFalseWord(jump=1273, if_false: boolean)
1266[107]: FreeStack(value=0, discard=4)
1270[103]: GotoWord(jump=1349)
1273[107]: VarInt(var[103]) -> integer
1276[111]: ConstInt(val=4) -> integer
1281[115]: GeInt(v1: integer, v2: integer) -> boolean
1282[108]: GotoFalseWord(jump=1288, if_false: boolean)
1285[107]: GotoWord(jump=1295)
1288[107]: FreeStack(value=0, discard=4)
1292[103]: GotoWord(jump=1212)
1295[107]: VarInt(var[103]) -> integer
1298[111]: ConstInt(val=2) -> integer
1303[115]: DivInt(v1: integer, v2: integer) -> integer
1304[111]: FreeStack(value=4, discard=4) type=integer[4]:Base[0]
1308[107]: VarBool(var[102]) -> boolean
1311[108]: GotoFalseWord(jump=1321, if_false: boolean)
1314[107]: ConstFalse() -> boolean
1315[108]: PutBool(var=6, value: boolean)
1318[107]: GotoWord(jump=1327)
1321[107]: ConstText(_value=",") -> text
1324[123]: AppendText(var[28], v1: text)
1327[107]: VarInt(var[103]) -> integer
1330[111]: ConstInt(val=0) -> integer
1335[115]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1342[107]: FreeStack(value=0, discard=4)
1346[103]: GotoWord(jump=1212)
1349[103]: ConstText(_value="]") -> text
1352[119]: AppendText(var[28], v1: text)
1355[103]: VarText(var[28]) -> text
1358[119]: FreeStack(value=16, discard=15) type=text[4]:Base[5]
1362[104]: FreeStack(value=16, discard=12) type=text[4]:Base[5]
1366[92]: AppendText(var[52], v1: text)
1369[76]: VarText(var[52]) -> text
1372[92]: ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> text
1412[108]: EqText(v1: text, v2: text) -> boolean
1413[77]: GotoFalseWord(jump=1419, if_false: boolean)
1416[76]: GotoWord(jump=1505)
1419[76]: ClearText(var[4])
1422[76]: ConstText(_value="Test failed ") -> text
1436[92]: AppendText(var[4], v1: text)
1439[76]: VarText(var[52]) -> text
1442[92]: ConstInt(val=0) -> integer
1447[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
1452[76]: ConstText(_value=" != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"") -> text
1498[92]: AppendText(var[4], v1: text)
1501[76]: VarText(var[4]) -> text
1504[92]: Panic(message: text)
1505[76]: Return(ret=0, value=0, discard=76)

Execute test:
  682:[8] Text()
  683:[32] Text()
  684:[56] Text()
  685:[80] Database(size=4, db_tp=12) -> ref(1,1,0)={}[80]
  690:[92] VarRef(var[80]) -> ref(1,1,0)={}[92]
  693:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)[92]
  696:[104] VarRef(var[80]) -> ref(1,1,0)={}[104]
  699:[116] ConstInt(val=0) -> 0[116]
  704:[120] SetInt(v1=ref(1,1,0)[104], fld=4, val=0[116])
  707:[104] VarVector(var[92]) -> ref(1,1,4)[104]
  710:[116] NewRecord(data=ref(1,1,4)[104], parent_tp=11, fld=65535) -> ref(1,5,8)[104]
  715:[116] VarRef(var[104]) -> ref(1,5,8)=false[116]
  718:[128] ConstInt(val=1) -> 1[128]
  723:[132] SetInt(v1=ref(1,5,8)[116], fld=0, val=1[128])
  726:[116] VarVector(var[92]) -> ref(1,1,4)[116]
  729:[128] VarRef(var[104]) -> ref(1,5,8)=true[128]
  732:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,5,8)[128], parent_tp=11, fld=65535)
  737:[116] VarVector(var[92]) -> ref(1,1,4)[116]
  740:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=11, fld=65535) -> ref(1,5,12)[116]
  745:[128] PutRef(var[104], value=ref(1,5,12)[116])
  748:[116] VarRef(var[104]) -> ref(1,5,12)=false[116]
  751:[128] ConstInt(val=2) -> 2[128]
  756:[132] SetInt(v1=ref(1,5,12)[116], fld=0, val=2[128])
  759:[116] VarVector(var[92]) -> ref(1,1,4)[116]
  762:[128] VarRef(var[104]) -> ref(1,5,12)=true[128]
  765:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,5,12)[128], parent_tp=11, fld=65535)
  770:[116] VarVector(var[92]) -> ref(1,1,4)[116]
  773:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=11, fld=65535) -> ref(1,5,16)[116]
  778:[128] PutRef(var[104], value=ref(1,5,16)[116])
  781:[116] VarRef(var[104]) -> ref(1,5,16)=false[116]
  784:[128] ConstInt(val=4) -> 4[128]
  789:[132] SetInt(v1=ref(1,5,16)[116], fld=0, val=4[128])
  792:[116] VarVector(var[92]) -> ref(1,1,4)[116]
  795:[128] VarRef(var[104]) -> ref(1,5,16)=true[128]
  798:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,5,16)[128], parent_tp=11, fld=65535)
  803:[116] VarVector(var[92]) -> ref(1,1,4)[116]
  806:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=11, fld=65535) -> ref(1,5,20)[116]
  811:[128] PutRef(var[104], value=ref(1,5,20)[116])
  814:[116] VarRef(var[104]) -> ref(1,5,20)=false[116]
  817:[128] ConstInt(val=8) -> 8[128]
  822:[132] SetInt(v1=ref(1,5,20)[116], fld=0, val=8[128])
  825:[116] VarVector(var[92]) -> ref(1,1,4)[116]
  828:[128] VarRef(var[104]) -> ref(1,5,20)=true[128]
  831:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,5,20)[128], parent_tp=11, fld=65535)
  836:[116] VarVector(var[92]) -> ref(1,1,4)[116]
  839:[128] FreeStack(value=12, discard=36)
  843:[92] VarVector(var[80]) -> ref(1,1,4)[92]
  846:[104] NewRecord(data=ref(1,1,4)[92], parent_tp=11, fld=65535) -> ref(1,5,24)[92]
  851:[104] VarRef(var[92]) -> ref(1,5,24)=false[104]
  854:[116] ConstInt(val=16) -> 16[116]
  859:[120] SetInt(v1=ref(1,5,24)[104], fld=0, val=16[116])
  862:[104] VarVector(var[80]) -> ref(1,1,4)[104]
  865:[116] VarRef(var[92]) -> ref(1,5,24)=true[116]
  868:[128] FinishRecord(data=ref(1,1,4)[104], rec=ref(1,5,24)[116], parent_tp=11, fld=65535)
  873:[104] FreeStack(value=0, discard=12)
  877:[92] ClearText(var[32])
  880:[92] ConstText(_value="") -> ""[92]
  882:[108] AppendText(var[32], v1=""[92])
  885:[92] VarVector(var[80]) -> ref(1,1,4)[92]
  888:[104] FormatDatabase(var[32], val=ref(1,1,4)[92], db_tp=11, pretty=false)
  894:[92] ConstText(_value=" ") -> " "[92]
  897:[108] AppendText(var[32], v1=" "[92])
  900:[92] VarVector(var[80]) -> ref(1,1,4)[92]
  903:[104] Call(size=0, to=328)
  328:[108] VarVector(var[92]) -> ref(1,1,4)={r:5,g:0,b:0}[108]
  331:[120] LengthVector(r=ref(1,1,4)=true[108]) -> 5[108]
  332:[112] Return(ret=910[104], value=4, discard=20) -> 5[92]
  910:[96] ConstInt(val=0) -> 0[96]
  915:[100] FormatInt(var[32], val=5[92], radix=10, width=0[96], token=32, plus=false, note=false)
  922:[92] ConstText(_value=" ") -> " "[92]
  925:[108] AppendText(var[32], v1=" "[92])
  928:[92] VarVector(var[80]) -> ref(1,1,4)[92]
  931:[104] ConstInt(val=2) -> 2[104]
  936:[108] GetVector(r=ref(1,1,4)=true[92], size=4, index=2[104]) -> ref(1,5,16)=4[92]
  939:[104] GetInt(v1=ref(1,5,16)[92], fld=0) -> 4[92]
  942:[96] ConstInt(val=0) -> 0[96]
  947:[100] FormatInt(var[32], val=4[92], radix=10, width=0[96], token=32, plus=false, note=false)
  954:[92] ConstText(_value=" ") -> " "[92]
  957:[108] AppendText(var[32], v1=" "[92])
  960:[92] ConstText(_value="[") -> "["[92]
  963:[108] AppendText(var[32], v1="["[92])
  966:[92] ConvIntFromNull() -> -2147483648[92]
  967:[96] ConstTrue() -> true[96]
  968:[97] VarVector(var[80]) -> ref(1,1,4)[97]
  971:[109] VarInt(var[92]) -> -2147483648[109]
  974:[113] ConvBoolFromInt(v1=-2147483648[109]) -> false[109]
  975:[110] Not(v1=false[109]) -> true[109]
  976:[110] GotoFalseWord(jump=987, if_false=true[109])
  979:[109] ConstInt(val=1) -> 1[109]
  984:[113] GotoWord(jump=996)
  996:[113] PutInt(var[92], value=1[109])
  999:[109] VarInt(var[92]) -> 1[109]
 1002:[113] ConstInt(val=3) -> 3[113]
 1007:[117] GeInt(v1=1[109], v2=3[113]) -> false[109]
 1008:[110] GotoFalseWord(jump=1018, if_false=false[109])
 1018:[109] VarInt(var[92]) -> 1[109]
 1021:[113] GetVector(r=ref(1,1,4)=true[97], size=4, index=1[109]) -> ref(1,5,12)=2[97]
 1024:[109] GetInt(v1=ref(1,5,12)[97], fld=0) -> 2[97]
 1027:[101] VarBool(var[96]) -> true[101]
 1030:[102] GotoFalseWord(jump=1040, if_false=true[101])
 1033:[101] ConstFalse() -> false[101]
 1034:[102] PutBool(var=6, value=false[101])
 1037:[101] GotoWord(jump=1046)
 1046:[101] VarInt(var[97]) -> 2[101]
 1049:[105] ConstInt(val=0) -> 0[105]
 1054:[109] FormatInt(var[32], val=2[101], radix=10, width=0[105], token=32, plus=false, note=false)
 1061:[101] FreeStack(value=0, discard=4)
 1065:[97] GotoWord(jump=968)
  968:[97] VarVector(var[80]) -> ref(1,1,4)[97]
  971:[109] VarInt(var[92]) -> 1[109]
  974:[113] ConvBoolFromInt(v1=1[109]) -> true[109]
  975:[110] Not(v1=true[109]) -> false[109]
  976:[110] GotoFalseWord(jump=987, if_false=false[109])
  987:[109] VarInt(var[92]) -> 1[109]
  990:[113] ConstInt(val=1) -> 1[113]
  995:[117] AddInt(v1=1[109], v2=1[113]) -> 2[109]
  996:[113] PutInt(var[92], value=2[109])
  999:[109] VarInt(var[92]) -> 2[109]
 1002:[113] ConstInt(val=3) -> 3[113]
 1007:[117] GeInt(v1=2[109], v2=3[113]) -> false[109]
 1008:[110] GotoFalseWord(jump=1018, if_false=false[109])
 1018:[109] VarInt(var[92]) -> 2[109]
 1021:[113] GetVector(r=ref(1,1,4)=true[97], size=4, index=2[109]) -> ref(1,5,16)=4[97]
 1024:[109] GetInt(v1=ref(1,5,16)[97], fld=0) -> 4[97]
 1027:[101] VarBool(var[96]) -> false[101]
 1030:[102] GotoFalseWord(jump=1040, if_false=false[101])
 1040:[101] ConstText(_value=",") -> ","[101]
 1043:[117] AppendText(var[32], v1=","[101])
 1046:[101] VarInt(var[97]) -> 4[101]
 1049:[105] ConstInt(val=0) -> 0[105]
 1054:[109] FormatInt(var[32], val=4[101], radix=10, width=0[105], token=32, plus=false, note=false)
 1061:[101] FreeStack(value=0, discard=4)
 1065:[97] GotoWord(jump=968)
  968:[97] VarVector(var[80]) -> ref(1,1,4)[97]
  971:[109] VarInt(var[92]) -> 2[109]
  974:[113] ConvBoolFromInt(v1=2[109]) -> true[109]
  975:[110] Not(v1=true[109]) -> false[109]
  976:[110] GotoFalseWord(jump=987, if_false=false[109])
  987:[109] VarInt(var[92]) -> 2[109]
  990:[113] ConstInt(val=1) -> 1[113]
  995:[117] AddInt(v1=2[109], v2=1[113]) -> 3[109]
  996:[113] PutInt(var[92], value=3[109])
  999:[109] VarInt(var[92]) -> 3[109]
 1002:[113] ConstInt(val=3) -> 3[113]
 1007:[117] GeInt(v1=3[109], v2=3[113]) -> true[109]
 1008:[110] GotoFalseWord(jump=1018, if_false=true[109])
 1011:[109] FreeStack(value=0, discard=12)
 1015:[97] GotoWord(jump=1068)
 1068:[97] ConstText(_value="]") -> "]"[97]
 1071:[113] AppendText(var[32], v1="]"[97])
 1074:[97] ConstText(_value=" ") -> " "[97]
 1077:[113] AppendText(var[32], v1=" "[97])
 1080:[97] ConstText(_value="[") -> "["[97]
 1083:[113] AppendText(var[32], v1="["[97])
 1086:[97] ConvIntFromNull() -> -2147483648[97]
 1087:[101] ConstTrue() -> true[101]
 1088:[102] VarVector(var[80]) -> ref(1,1,4)[102]
 1091:[114] VarInt(var[97]) -> -2147483648[114]
 1094:[118] ConvBoolFromInt(v1=-2147483648[114]) -> false[114]
 1095:[115] Not(v1=false[114]) -> true[114]
 1096:[115] GotoFalseWord(jump=1107, if_false=true[114])
 1099:[114] ConstInt(val=3) -> 3[114]
 1104:[118] GotoWord(jump=1116)
 1116:[118] PutInt(var[97], value=3[114])
 1119:[114] VarInt(var[97]) -> 3[114]
 1122:[118] ConstInt(val=1) -> 1[118]
 1127:[122] LtInt(v1=3[114], v2=1[118]) -> false[114]
 1128:[115] GotoFalseWord(jump=1138, if_false=false[114])
 1138:[114] VarInt(var[97]) -> 3[114]
 1141:[118] GetVector(r=ref(1,1,4)=true[102], size=4, index=3[114]) -> ref(1,5,20)=8[102]
 1144:[114] GetInt(v1=ref(1,5,20)[102], fld=0) -> 8[102]
 1147:[106] VarBool(var[101]) -> true[106]
 1150:[107] GotoFalseWord(jump=1160, if_false=true[106])
 1153:[106] ConstFalse() -> false[106]
 1154:[107] PutBool(var=6, value=false[106])
 1157:[106] GotoWord(jump=1166)
 1166:[106] VarInt(var[102]) -> 8[106]
 1169:[110] ConstInt(val=0) -> 0[110]
 1174:[114] FormatInt(var[32], val=8[106], radix=10, width=0[110], token=32, plus=false, note=false)
 1181:[106] FreeStack(value=0, discard=4)
 1185:[102] GotoWord(jump=1088)
 1088:[102] VarVector(var[80]) -> ref(1,1,4)[102]
 1091:[114] VarInt(var[97]) -> 3[114]
 1094:[118] ConvBoolFromInt(v1=3[114]) -> true[114]
 1095:[115] Not(v1=true[114]) -> false[114]
 1096:[115] GotoFalseWord(jump=1107, if_false=false[114])
 1107:[114] VarInt(var[97]) -> 3[114]
 1110:[118] ConstInt(val=1) -> 1[118]
 1115:[122] MinInt(v1=3[114], v2=1[118]) -> 2[114]
 1116:[118] PutInt(var[97], value=2[114])
 1119:[114] VarInt(var[97]) -> 2[114]
 1122:[118] ConstInt(val=1) -> 1[118]
 1127:[122] LtInt(v1=2[114], v2=1[118]) -> false[114]
 1128:[115] GotoFalseWord(jump=1138, if_false=false[114])
 1138:[114] VarInt(var[97]) -> 2[114]
 1141:[118] GetVector(r=ref(1,1,4)=true[102], size=4, index=2[114]) -> ref(1,5,16)=4[102]
 1144:[114] GetInt(v1=ref(1,5,16)[102], fld=0) -> 4[102]
 1147:[106] VarBool(var[101]) -> false[106]
 1150:[107] GotoFalseWord(jump=1160, if_false=false[106])
 1160:[106] ConstText(_value=",") -> ","[106]
 1163:[122] AppendText(var[32], v1=","[106])
 1166:[106] VarInt(var[102]) -> 4[106]
 1169:[110] ConstInt(val=0) -> 0[110]
 1174:[114] FormatInt(var[32], val=4[106], radix=10, width=0[110], token=32, plus=false, note=false)
 1181:[106] FreeStack(value=0, discard=4)
 1185:[102] GotoWord(jump=1088)
 1088:[102] VarVector(var[80]) -> ref(1,1,4)[102]
 1091:[114] VarInt(var[97]) -> 2[114]
 1094:[118] ConvBoolFromInt(v1=2[114]) -> true[114]
 1095:[115] Not(v1=true[114]) -> false[114]
 1096:[115] GotoFalseWord(jump=1107, if_false=false[114])
 1107:[114] VarInt(var[97]) -> 2[114]
 1110:[118] ConstInt(val=1) -> 1[118]
 1115:[122] MinInt(v1=2[114], v2=1[118]) -> 1[114]
 1116:[118] PutInt(var[97], value=1[114])
 1119:[114] VarInt(var[97]) -> 1[114]
 1122:[118] ConstInt(val=1) -> 1[118]
 1127:[122] LtInt(v1=1[114], v2=1[118]) -> false[114]
 1128:[115] GotoFalseWord(jump=1138, if_false=false[114])
 1138:[114] VarInt(var[97]) -> 1[114]
 1141:[118] GetVector(r=ref(1,1,4)=true[102], size=4, index=1[114]) -> ref(1,5,12)=2[102]
 1144:[114] GetInt(v1=ref(1,5,12)[102], fld=0) -> 2[102]
 1147:[106] VarBool(var[101]) -> false[106]
 1150:[107] GotoFalseWord(jump=1160, if_false=false[106])
 1160:[106] ConstText(_value=",") -> ","[106]
 1163:[122] AppendText(var[32], v1=","[106])
 1166:[106] VarInt(var[102]) -> 2[106]
 1169:[110] ConstInt(val=0) -> 0[110]
 1174:[114] FormatInt(var[32], val=2[106], radix=10, width=0[110], token=32, plus=false, note=false)
 1181:[106] FreeStack(value=0, discard=4)
 1185:[102] GotoWord(jump=1088)
 1088:[102] VarVector(var[80]) -> ref(1,1,4)[102]
 1091:[114] VarInt(var[97]) -> 1[114]
 1094:[118] ConvBoolFromInt(v1=1[114]) -> true[114]
 1095:[115] Not(v1=true[114]) -> false[114]
 1096:[115] GotoFalseWord(jump=1107, if_false=false[114])
 1107:[114] VarInt(var[97]) -> 1[114]
 1110:[118] ConstInt(val=1) -> 1[118]
 1115:[122] MinInt(v1=1[114], v2=1[118]) -> 0[114]
 1116:[118] PutInt(var[97], value=0[114])
 1119:[114] VarInt(var[97]) -> 0[114]
 1122:[118] ConstInt(val=1) -> 1[118]
 1127:[122] LtInt(v1=0[114], v2=1[118]) -> true[114]
 1128:[115] GotoFalseWord(jump=1138, if_false=true[114])
 1131:[114] FreeStack(value=0, discard=12)
 1135:[102] GotoWord(jump=1188)
 1188:[102] ConstText(_value="]") -> "]"[102]
 1191:[118] AppendText(var[32], v1="]"[102])
 1194:[102] ConstText(_value=" ") -> " "[102]
 1197:[118] AppendText(var[32], v1=" "[102])
 1200:[102] ConstText(_value="[") -> "["[102]
 1203:[118] AppendText(var[32], v1="["[102])
 1206:[102] ConstInt(val=0) -> 0[102]
 1211:[106] ConstTrue() -> true[106]
 1212:[107] VarInt(var[102]) -> 0[107]
 1215:[111] VarVector(var[80]) -> ref(1,1,4)[111]
 1218:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1219:[115] GeInt(v1=0[107], v2=5[111]) -> false[107]
 1220:[108] GotoFalseWord(jump=1227, if_false=false[107])
 1227:[107] VarVector(var[80]) -> ref(1,1,4)[107]
 1230:[119] VarInt(var[102]) -> 0[119]
 1233:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=0[119]) -> ref(1,5,8)=1[107]
 1236:[119] GetInt(v1=ref(1,5,8)[107], fld=0) -> 1[107]
 1239:[111] VarInt(var[102]) -> 0[111]
 1242:[115] ConstInt(val=1) -> 1[115]
 1247:[119] AddInt(v1=0[111], v2=1[115]) -> 1[111]
 1248:[115] PutInt(var[102], value=1[111])
 1251:[111] VarInt(var[107]) -> 1[111]
 1254:[115] FreeStack(value=4, discard=4)
 1258:[111] VarInt(var[107]) -> 1[111]
 1261:[115] ConvBoolFromInt(v1=1[111]) -> true[111]
 1262:[112] Not(v1=true[111]) -> false[111]
 1263:[112] GotoFalseWord(jump=1273, if_false=false[111])
 1273:[111] VarInt(var[107]) -> 1[111]
 1276:[115] ConstInt(val=4) -> 4[115]
 1281:[119] GeInt(v1=1[111], v2=4[115]) -> false[111]
 1282:[112] GotoFalseWord(jump=1288, if_false=false[111])
 1288:[111] FreeStack(value=0, discard=4)
 1292:[107] GotoWord(jump=1212)
 1212:[107] VarInt(var[102]) -> 1[107]
 1215:[111] VarVector(var[80]) -> ref(1,1,4)[111]
 1218:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1219:[115] GeInt(v1=1[107], v2=5[111]) -> false[107]
 1220:[108] GotoFalseWord(jump=1227, if_false=false[107])
 1227:[107] VarVector(var[80]) -> ref(1,1,4)[107]
 1230:[119] VarInt(var[102]) -> 1[119]
 1233:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=1[119]) -> ref(1,5,12)=2[107]
 1236:[119] GetInt(v1=ref(1,5,12)[107], fld=0) -> 2[107]
 1239:[111] VarInt(var[102]) -> 1[111]
 1242:[115] ConstInt(val=1) -> 1[115]
 1247:[119] AddInt(v1=1[111], v2=1[115]) -> 2[111]
 1248:[115] PutInt(var[102], value=2[111])
 1251:[111] VarInt(var[107]) -> 2[111]
 1254:[115] FreeStack(value=4, discard=4)
 1258:[111] VarInt(var[107]) -> 2[111]
 1261:[115] ConvBoolFromInt(v1=2[111]) -> true[111]
 1262:[112] Not(v1=true[111]) -> false[111]
 1263:[112] GotoFalseWord(jump=1273, if_false=false[111])
 1273:[111] VarInt(var[107]) -> 2[111]
 1276:[115] ConstInt(val=4) -> 4[115]
 1281:[119] GeInt(v1=2[111], v2=4[115]) -> false[111]
 1282:[112] GotoFalseWord(jump=1288, if_false=false[111])
 1288:[111] FreeStack(value=0, discard=4)
 1292:[107] GotoWord(jump=1212)
 1212:[107] VarInt(var[102]) -> 2[107]
 1215:[111] VarVector(var[80]) -> ref(1,1,4)[111]
 1218:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1219:[115] GeInt(v1=2[107], v2=5[111]) -> false[107]
 1220:[108] GotoFalseWord(jump=1227, if_false=false[107])
 1227:[107] VarVector(var[80]) -> ref(1,1,4)[107]
 1230:[119] VarInt(var[102]) -> 2[119]
 1233:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=2[119]) -> ref(1,5,16)=4[107]
 1236:[119] GetInt(v1=ref(1,5,16)[107], fld=0) -> 4[107]
 1239:[111] VarInt(var[102]) -> 2[111]
 1242:[115] ConstInt(val=1) -> 1[115]
 1247:[119] AddInt(v1=2[111], v2=1[115]) -> 3[111]
 1248:[115] PutInt(var[102], value=3[111])
 1251:[111] VarInt(var[107]) -> 4[111]
 1254:[115] FreeStack(value=4, discard=4)
 1258:[111] VarInt(var[107]) -> 4[111]
 1261:[115] ConvBoolFromInt(v1=4[111]) -> true[111]
 1262:[112] Not(v1=true[111]) -> false[111]
 1263:[112] GotoFalseWord(jump=1273, if_false=false[111])
 1273:[111] VarInt(var[107]) -> 4[111]
 1276:[115] ConstInt(val=4) -> 4[115]
 1281:[119] GeInt(v1=4[111], v2=4[115]) -> true[111]
 1282:[112] GotoFalseWord(jump=1288, if_false=true[111])
 1285:[111] GotoWord(jump=1295)
 1295:[111] VarInt(var[107]) -> 4[111]
 1298:[115] ConstInt(val=2) -> 2[115]
 1303:[119] DivInt(v1=4[111], v2=2[115]) -> 2[111]
 1304:[115] FreeStack(value=4, discard=4)
 1308:[111] VarBool(var[106]) -> true[111]
 1311:[112] GotoFalseWord(jump=1321, if_false=true[111])
 1314:[111] ConstFalse() -> false[111]
 1315:[112] PutBool(var=6, value=false[111])
 1318:[111] GotoWord(jump=1327)
 1327:[111] VarInt(var[107]) -> 2[111]
 1330:[115] ConstInt(val=0) -> 0[115]
 1335:[119] FormatInt(var[32], val=2[111], radix=10, width=0[115], token=32, plus=false, note=false)
 1342:[111] FreeStack(value=0, discard=4)
 1346:[107] GotoWord(jump=1212)
 1212:[107] VarInt(var[102]) -> 3[107]
 1215:[111] VarVector(var[80]) -> ref(1,1,4)[111]
 1218:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1219:[115] GeInt(v1=3[107], v2=5[111]) -> false[107]
 1220:[108] GotoFalseWord(jump=1227, if_false=false[107])
 1227:[107] VarVector(var[80]) -> ref(1,1,4)[107]
 1230:[119] VarInt(var[102]) -> 3[119]
 1233:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=3[119]) -> ref(1,5,20)=8[107]
 1236:[119] GetInt(v1=ref(1,5,20)[107], fld=0) -> 8[107]
 1239:[111] VarInt(var[102]) -> 3[111]
 1242:[115] ConstInt(val=1) -> 1[115]
 1247:[119] AddInt(v1=3[111], v2=1[115]) -> 4[111]
 1248:[115] PutInt(var[102], value=4[111])
 1251:[111] VarInt(var[107]) -> 8[111]
 1254:[115] FreeStack(value=4, discard=4)
 1258:[111] VarInt(var[107]) -> 8[111]
 1261:[115] ConvBoolFromInt(v1=8[111]) -> true[111]
 1262:[112] Not(v1=true[111]) -> false[111]
 1263:[112] GotoFalseWord(jump=1273, if_false=false[111])
 1273:[111] VarInt(var[107]) -> 8[111]
 1276:[115] ConstInt(val=4) -> 4[115]
 1281:[119] GeInt(v1=8[111], v2=4[115]) -> true[111]
 1282:[112] GotoFalseWord(jump=1288, if_false=true[111])
 1285:[111] GotoWord(jump=1295)
 1295:[111] VarInt(var[107]) -> 8[111]
 1298:[115] ConstInt(val=2) -> 2[115]
 1303:[119] DivInt(v1=8[111], v2=2[115]) -> 4[111]
 1304:[115] FreeStack(value=4, discard=4)
 1308:[111] VarBool(var[106]) -> false[111]
 1311:[112] GotoFalseWord(jump=1321, if_false=false[111])
 1321:[111] ConstText(_value=",") -> ","[111]
 1324:[127] AppendText(var[32], v1=","[111])
 1327:[111] VarInt(var[107]) -> 4[111]
 1330:[115] ConstInt(val=0) -> 0[115]
 1335:[119] FormatInt(var[32], val=4[111], radix=10, width=0[115], token=32, plus=false, note=false)
 1342:[111] FreeStack(value=0, discard=4)
 1346:[107] GotoWord(jump=1212)
 1212:[107] VarInt(var[102]) -> 4[107]
 1215:[111] VarVector(var[80]) -> ref(1,1,4)[111]
 1218:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1219:[115] GeInt(v1=4[107], v2=5[111]) -> false[107]
 1220:[108] GotoFalseWord(jump=1227, if_false=false[107])
 1227:[107] VarVector(var[80]) -> ref(1,1,4)[107]
 1230:[119] VarInt(var[102]) -> 4[119]
 1233:[123] GetVector(r=ref(1,1,4)=true[107], size=4, index=4[119]) -> ref(1,5,24)=16[107]
 1236:[119] GetInt(v1=ref(1,5,24)[107], fld=0) -> 16[107]
 1239:[111] VarInt(var[102]) -> 4[111]
 1242:[115] ConstInt(val=1) -> 1[115]
 1247:[119] AddInt(v1=4[111], v2=1[115]) -> 5[111]
 1248:[115] PutInt(var[102], value=5[111])
 1251:[111] VarInt(var[107]) -> 16[111]
 1254:[115] FreeStack(value=4, discard=4)
 1258:[111] VarInt(var[107]) -> 16[111]
 1261:[115] ConvBoolFromInt(v1=16[111]) -> true[111]
 1262:[112] Not(v1=true[111]) -> false[111]
 1263:[112] GotoFalseWord(jump=1273, if_false=false[111])
 1273:[111] VarInt(var[107]) -> 16[111]
 1276:[115] ConstInt(val=4) -> 4[115]
 1281:[119] GeInt(v1=16[111], v2=4[115]) -> true[111]
 1282:[112] GotoFalseWord(jump=1288, if_false=true[111])
 1285:[111] GotoWord(jump=1295)
 1295:[111] VarInt(var[107]) -> 16[111]
 1298:[115] ConstInt(val=2) -> 2[115]
 1303:[119] DivInt(v1=16[111], v2=2[115]) -> 8[111]
 1304:[115] FreeStack(value=4, discard=4)
 1308:[111] VarBool(var[106]) -> false[111]
 1311:[112] GotoFalseWord(jump=1321, if_false=false[111])
 1321:[111] ConstText(_value=",") -> ","[111]
 1324:[127] AppendText(var[32], v1=","[111])
 1327:[111] VarInt(var[107]) -> 8[111]
 1330:[115] ConstInt(val=0) -> 0[115]
 1335:[119] FormatInt(var[32], val=8[111], radix=10, width=0[115], token=32, plus=false, note=false)
 1342:[111] FreeStack(value=0, discard=4)
 1346:[107] GotoWord(jump=1212)
 1212:[107] VarInt(var[102]) -> 5[107]
 1215:[111] VarVector(var[80]) -> ref(1,1,4)[111]
 1218:[123] LengthVector(r=ref(1,1,4)=true[111]) -> 5[111]
 1219:[115] GeInt(v1=5[107], v2=5[111]) -> true[107]
 1220:[108] GotoFalseWord(jump=1227, if_false=true[107])
 1223:[107] ConvIntFromNull() -> -2147483648[107]
 1224:[111] GotoWord(jump=1258)
 1258:[111] VarInt(var[107]) -> -2147483648[111]
 1261:[115] ConvBoolFromInt(v1=-2147483648[111]) -> false[111]
 1262:[112] Not(v1=false[111]) -> true[111]
 1263:[112] GotoFalseWord(jump=1273, if_false=true[111])
 1266:[111] FreeStack(value=0, discard=4)
 1270:[107] GotoWord(jump=1349)
 1349:[107] ConstText(_value="]") -> "]"[107]
 1352:[123] AppendText(var[32], v1="]"[107])
 1355:[107] VarText(var[32]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[107]
 1358:[123] FreeStack(value=16, discard=15)
 1362:[108] FreeStack(value=16, discard=12)
 1366:[96] AppendText(var[56], v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[80])
 1369:[80] VarText(var[56]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[80]
 1372:[96] ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[96]
 1412:[112] EqText(v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[80], v2="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[96]) -> true[80]
 1413:[81] GotoFalseWord(jump=1419, if_false=true[80])
 1416:[80] GotoWord(jump=1505)
 1505:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
