Test code:
pub fn test() {
    test_value = {v=[1, 2, 4, 8];
v += [16];
"{v} {v.len()} {v[2]} {v[1..3]} {v[rev(1..=3)]} {for x in v if x >= 4 {x/2}}"};
    assert(
        test_value == "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]",
        "Test failed {test_value} != \"[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]\""
    );
}

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

Type 14:vector<integer>[4]:Vector(0)

fn test {
  let test_value = {
    let v = {
      let db_21 = OpDatabase(4i32, 13i32);
      let vec_20 = OpGetField(db_21, 4i32, 14i32);
      OpSetInt(db_21, 4i32, 0i32);
      let elm_19 = OpNewRecord(vec_20, 14i32, 65535i32);
      OpSetInt(elm_19, 0i32, 1i32);
      OpFinishRecord(vec_20, elm_19, 14i32, 65535i32);
      elm_19 = OpNewRecord(vec_20, 14i32, 65535i32);
      OpSetInt(elm_19, 0i32, 2i32);
      OpFinishRecord(vec_20, elm_19, 14i32, 65535i32);
      elm_19 = OpNewRecord(vec_20, 14i32, 65535i32);
      OpSetInt(elm_19, 0i32, 4i32);
      OpFinishRecord(vec_20, elm_19, 14i32, 65535i32);
      elm_19 = OpNewRecord(vec_20, 14i32, 65535i32);
      OpSetInt(elm_19, 0i32, 8i32);
      OpFinishRecord(vec_20, elm_19, 14i32, 65535i32);
      vec_20;
    };
    {
      let vec_23 = v;
      let elm_22 = OpNewRecord(vec_23, 14i32, 65535i32);
      OpSetInt(elm_22, 0i32, 16i32);
      OpFinishRecord(vec_23, elm_22, 14i32, 65535i32);
    };
    {
      let append_24 = "";
      OpFormatDatabase(append_24, v, 14i32, false);
      OpAppendText(append_24, " ");
      OpFormatInt(append_24, _tp_vector_len(v), 10i32, 0i32, 32i32, false, false);
      OpAppendText(append_24, " ");
      OpFormatInt(append_24, OpGetInt(OpGetVector(v, 4i32, 2i32), 0i32), 10i32, 0i32, 32i32, false, false);
      OpAppendText(append_24, " ");
      OpAppendText(append_24, "[");
      let index_25 = OpConvIntFromNull();
      let first_26 = true;
      loop {
        let val_27 = OpGetInt(OpGetVector(v, 4i32, {
          index_25 = if OpNot(OpConvBoolFromInt(index_25)) {1i32} else {OpAddInt(index_25, 1i32)};
          if OpGeInt(index_25, 3i32) {break(0)} else {null};
          index_25;
        }), 0i32);
        if first_26 {first_26 = false} else {OpAppendText(append_24, ",")};
        OpFormatInt(append_24, val_27, 10i32, 0i32, 32i32, false, false);
      };
      OpAppendText(append_24, "]");
      OpAppendText(append_24, " ");
      OpAppendText(append_24, "[");
      let index_28 = OpConvIntFromNull();
      let first_29 = true;
      loop {
        let val_30 = OpGetInt(OpGetVector(v, 4i32, {
          index_28 = if OpNot(OpConvBoolFromInt(index_28)) {3i32} else {OpMinInt(index_28, 1i32)};
          if OpLtInt(index_28, 1i32) {break(0)} else {null};
          index_28;
        }), 0i32);
        if first_29 {first_29 = false} else {OpAppendText(append_24, ",")};
        OpFormatInt(append_24, val_30, 10i32, 0i32, 32i32, false, false);
      };
      OpAppendText(append_24, "]");
      OpAppendText(append_24, " ");
      OpAppendText(append_24, "[");
      let x#index = 0i32;
      let first_32 = true;
      loop {
        let val_33 = {
          let x = if OpGeInt(x#index, OpLengthVector(v)) {{
            OpConvIntFromNull();
          }} else {{
            let res_31 = OpGetInt(OpGetVector(v, 4i32, x#index), 0i32);
            x#index = OpAddInt(x#index, 1i32);
            res_31;
          }};
          if OpNot(OpConvBoolFromInt(x)) {break(0)} else {null};
          if OpGeInt(x, 4i32) {null} else {continue(0)};
          OpDivInt(x, 2i32);
        };
        if first_32 {first_32 = false} else {OpAppendText(append_24, ",")};
        OpFormatInt(append_24, val_33, 10i32, 0i32, 32i32, false, false);
      };
      OpAppendText(append_24, "]");
      append_24;
    };
  };
  if OpEqText(test_value, "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") {null} else {OpGenPanic({
    let append_34 = "Test failed ";
    OpFormatText(append_34, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_34, " != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"");
    append_34;
  })};
}

byte-code for format_vector:test()
 664[0]: return-address
 664[4]: Text()
 665[28]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 670[40]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 673[52]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[14]
 676[52]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 679[64]: ConstInt(val=0) -> integer
 684[68]: SetInt(v1: reference, fld=4, val: integer)
 687[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 690[64]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 695[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 698[76]: ConstInt(val=1) -> integer
 703[80]: SetInt(v1: reference, fld=0, val: integer)
 706[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 709[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 712[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 717[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 720[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 725[76]: PutRef(var[52], value: reference)
 728[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 731[76]: ConstInt(val=2) -> integer
 736[80]: SetInt(v1: reference, fld=0, val: integer)
 739[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 742[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 745[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 750[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 753[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 758[76]: PutRef(var[52], value: reference)
 761[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 764[76]: ConstInt(val=4) -> integer
 769[80]: SetInt(v1: reference, fld=0, val: integer)
 772[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 775[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 778[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 783[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 786[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 791[76]: PutRef(var[52], value: reference)
 794[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 797[76]: ConstInt(val=8) -> integer
 802[80]: SetInt(v1: reference, fld=0, val: integer)
 805[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 808[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 811[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 816[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 819[76]: GenFreeStack(value=12, discard=36)
 823[40]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 826[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 829[64]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 834[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 837[76]: ConstInt(val=16) -> integer
 842[80]: SetInt(v1: reference, fld=0, val: integer)
 845[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 848[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 851[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 856[64]: GenFreeStack(value=0, discard=24)
 860[40]: Text()
 861[64]: ConstText(_value="") -> text
 863[80]: AppendText(var[40], v1: text)
 866[64]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 869[76]: FormatDatabase(var[40], val: reference, db_tp=14, pretty=false)
 875[64]: ConstText(_value=" ") -> text
 878[80]: AppendText(var[40], v1: text)
 881[64]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 884[76]: GenCall(size=0, to=328)
 891[68]: ConstInt(val=0) -> integer
 896[72]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 903[64]: ConstText(_value=" ") -> text
 906[80]: AppendText(var[40], v1: text)
 909[64]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 912[76]: ConstInt(val=2) -> integer
 917[80]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 920[76]: GetInt(v1: reference, fld=0) -> integer
 923[68]: ConstInt(val=0) -> integer
 928[72]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 935[64]: ConstText(_value=" ") -> text
 938[80]: AppendText(var[40], v1: text)
 941[64]: ConstText(_value="[") -> text
 944[80]: AppendText(var[40], v1: text)
 947[64]: ConvIntFromNull() -> integer
 948[68]: ConstTrue() -> boolean
 949[69]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 952[81]: VarInt(var[64]) -> integer
 955[85]: ConvBoolFromInt(v1: integer) -> boolean
 956[82]: Not(v1: boolean) -> boolean
 957[82]: GenGotoFalseWord(jump=968, if_false: boolean)
 960[81]: ConstInt(val=1) -> integer
 965[85]: GenGotoWord(jump=977)
 968[81]: VarInt(var[64]) -> integer
 971[85]: ConstInt(val=1) -> integer
 976[89]: AddInt(v1: integer, v2: integer) -> integer
 977[85]: PutInt(var[64], value: integer)
 980[81]: VarInt(var[64]) -> integer
 983[85]: ConstInt(val=3) -> integer
 988[89]: GeInt(v1: integer, v2: integer) -> boolean
 989[82]: GenGotoFalseWord(jump=999, if_false: boolean)
 992[81]: GenFreeStack(value=0, discard=12)
 996[69]: GenGotoWord(jump=1049)
 999[81]: VarInt(var[64]) -> integer
1002[85]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1005[81]: GetInt(v1: reference, fld=0) -> integer
1008[73]: VarBool(var[68]) -> boolean
1011[74]: GenGotoFalseWord(jump=1021, if_false: boolean)
1014[73]: ConstFalse() -> boolean
1015[74]: PutBool(var=6, value: boolean)
1018[73]: GenGotoWord(jump=1027)
1021[73]: ConstText(_value=",") -> text
1024[89]: AppendText(var[40], v1: text)
1027[73]: VarInt(var[69]) -> integer
1030[77]: ConstInt(val=0) -> integer
1035[81]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1042[73]: GenFreeStack(value=0, discard=4)
1046[69]: GenGotoWord(jump=949)
1049[69]: ConstText(_value="]") -> text
1052[85]: AppendText(var[40], v1: text)
1055[69]: ConstText(_value=" ") -> text
1058[85]: AppendText(var[40], v1: text)
1061[69]: ConstText(_value="[") -> text
1064[85]: AppendText(var[40], v1: text)
1067[69]: ConvIntFromNull() -> integer
1068[73]: ConstTrue() -> boolean
1069[74]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
1072[86]: VarInt(var[69]) -> integer
1075[90]: ConvBoolFromInt(v1: integer) -> boolean
1076[87]: Not(v1: boolean) -> boolean
1077[87]: GenGotoFalseWord(jump=1088, if_false: boolean)
1080[86]: ConstInt(val=3) -> integer
1085[90]: GenGotoWord(jump=1097)
1088[86]: VarInt(var[69]) -> integer
1091[90]: ConstInt(val=1) -> integer
1096[94]: MinInt(v1: integer, v2: integer) -> integer
1097[90]: PutInt(var[69], value: integer)
1100[86]: VarInt(var[69]) -> integer
1103[90]: ConstInt(val=1) -> integer
1108[94]: LtInt(v1: integer, v2: integer) -> boolean
1109[87]: GenGotoFalseWord(jump=1119, if_false: boolean)
1112[86]: GenFreeStack(value=0, discard=12)
1116[74]: GenGotoWord(jump=1169)
1119[86]: VarInt(var[69]) -> integer
1122[90]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1125[86]: GetInt(v1: reference, fld=0) -> integer
1128[78]: VarBool(var[73]) -> boolean
1131[79]: GenGotoFalseWord(jump=1141, if_false: boolean)
1134[78]: ConstFalse() -> boolean
1135[79]: PutBool(var=6, value: boolean)
1138[78]: GenGotoWord(jump=1147)
1141[78]: ConstText(_value=",") -> text
1144[94]: AppendText(var[40], v1: text)
1147[78]: VarInt(var[74]) -> integer
1150[82]: ConstInt(val=0) -> integer
1155[86]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1162[78]: GenFreeStack(value=0, discard=4)
1166[74]: GenGotoWord(jump=1069)
1169[74]: ConstText(_value="]") -> text
1172[90]: AppendText(var[40], v1: text)
1175[74]: ConstText(_value=" ") -> text
1178[90]: AppendText(var[40], v1: text)
1181[74]: ConstText(_value="[") -> text
1184[90]: AppendText(var[40], v1: text)
1187[74]: ConstInt(val=0) -> integer
1192[78]: ConstTrue() -> boolean
1193[79]: VarInt(var[74]) -> integer
1196[83]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
1199[95]: LengthVector(r: vector) -> integer
1200[87]: GeInt(v1: integer, v2: integer) -> boolean
1201[80]: GenGotoFalseWord(jump=1208, if_false: boolean)
1204[79]: ConvIntFromNull() -> integer
1205[83]: GenGotoWord(jump=1239)
1208[79]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
1211[91]: VarInt(var[74]) -> integer
1214[95]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1217[91]: GetInt(v1: reference, fld=0) -> integer
1220[83]: VarInt(var[74]) -> integer
1223[87]: ConstInt(val=1) -> integer
1228[91]: AddInt(v1: integer, v2: integer) -> integer
1229[87]: PutInt(var[74], value: integer)
1232[83]: VarInt(var[79]) -> integer
1235[87]: GenFreeStack(value=4, discard=4)
1239[83]: VarInt(var[79]) -> integer
1242[87]: ConvBoolFromInt(v1: integer) -> boolean
1243[84]: Not(v1: boolean) -> boolean
1244[84]: GenGotoFalseWord(jump=1254, if_false: boolean)
1247[83]: GenFreeStack(value=0, discard=4)
1251[79]: GenGotoWord(jump=1330)
1254[83]: VarInt(var[79]) -> integer
1257[87]: ConstInt(val=4) -> integer
1262[91]: GeInt(v1: integer, v2: integer) -> boolean
1263[84]: GenGotoFalseWord(jump=1269, if_false: boolean)
1266[83]: GenGotoWord(jump=1276)
1269[83]: GenFreeStack(value=0, discard=4)
1273[79]: GenGotoWord(jump=1193)
1276[83]: VarInt(var[79]) -> integer
1279[87]: ConstInt(val=2) -> integer
1284[91]: DivInt(v1: integer, v2: integer) -> integer
1285[87]: GenFreeStack(value=4, discard=4)
1289[83]: VarBool(var[78]) -> boolean
1292[84]: GenGotoFalseWord(jump=1302, if_false: boolean)
1295[83]: ConstFalse() -> boolean
1296[84]: PutBool(var=6, value: boolean)
1299[83]: GenGotoWord(jump=1308)
1302[83]: ConstText(_value=",") -> text
1305[99]: AppendText(var[40], v1: text)
1308[83]: VarInt(var[79]) -> integer
1311[87]: ConstInt(val=0) -> integer
1316[91]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1323[83]: GenFreeStack(value=0, discard=4)
1327[79]: GenGotoWord(jump=1193)
1330[79]: ConstText(_value="]") -> text
1333[95]: AppendText(var[40], v1: text)
1336[79]: VarText(var[40]) -> text
1339[95]: GenFreeStack(value=16, discard=39)
1343[56]: GenFreeStack(value=16, discard=12)
1347[44]: AppendText(var[4], v1: text)
1350[28]: VarText(var[4]) -> text
1353[44]: ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> text
1393[60]: EqText(v1: text, v2: text) -> boolean
1394[29]: GenGotoFalseWord(jump=1400, if_false: boolean)
1397[28]: GenGotoWord(jump=1488)
1400[28]: Text()
1401[52]: ConstText(_value="Test failed ") -> text
1415[68]: AppendText(var[28], v1: text)
1418[52]: VarText(var[4]) -> text
1421[68]: ConstInt(val=0) -> integer
1426[72]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
1431[52]: ConstText(_value=" != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"") -> text
1477[68]: AppendText(var[28], v1: text)
1480[52]: VarText(var[28]) -> text
1483[68]: GenFreeStack(value=16, discard=24)
1487[44]: GenPanic(message: text)
1488[28]: GenReturn(ret=0, value=0, discard=28)

Execute test:
  664:[4] Text()
  665:[28] Database(size=4, db_tp=13) -> ref(1,1,0)={}[28]
  670:[40] VarRef(var[28]) -> ref(1,1,0)={}[40]
  673:[52] GetField(v1=ref(1,1,0)[40], fld=4) -> ref(1,1,4)=[][40]
  676:[52] VarRef(var[28]) -> ref(1,1,0)={}[52]
  679:[64] ConstInt(val=0) -> 0[64]
  684:[68] SetInt(v1=ref(1,1,0)[52], fld=4, val=0[64])
  687:[52] VarVector(var[40]) -> ref(1,1,4)=[][52]
  690:[64] NewRecord(data=ref(1,1,4)[52], parent_tp=14, fld=65535) -> ref(1,5,8)[52]
  695:[64] VarRef(var[52]) -> ref(1,5,8)=false[64]
  698:[76] ConstInt(val=1) -> 1[76]
  703:[80] SetInt(v1=ref(1,5,8)[64], fld=0, val=1[76])
  706:[64] VarVector(var[40]) -> ref(1,1,4)=[1][64]
  709:[76] VarRef(var[52]) -> ref(1,5,8)=true[76]
  712:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,8)[76], parent_tp=14, fld=65535)
  717:[64] VarVector(var[40]) -> ref(1,1,4)=[1][64]
  720:[76] NewRecord(data=ref(1,1,4)[64], parent_tp=14, fld=65535) -> ref(1,5,12)[64]
  725:[76] PutRef(var[52], value=ref(1,5,12)[64])
  728:[64] VarRef(var[52]) -> ref(1,5,12)=false[64]
  731:[76] ConstInt(val=2) -> 2[76]
  736:[80] SetInt(v1=ref(1,5,12)[64], fld=0, val=2[76])
  739:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2][64]
  742:[76] VarRef(var[52]) -> ref(1,5,12)=true[76]
  745:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,12)[76], parent_tp=14, fld=65535)
  750:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2][64]
  753:[76] NewRecord(data=ref(1,1,4)[64], parent_tp=14, fld=65535) -> ref(1,5,16)[64]
  758:[76] PutRef(var[52], value=ref(1,5,16)[64])
  761:[64] VarRef(var[52]) -> ref(1,5,16)=false[64]
  764:[76] ConstInt(val=4) -> 4[76]
  769:[80] SetInt(v1=ref(1,5,16)[64], fld=0, val=4[76])
  772:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4][64]
  775:[76] VarRef(var[52]) -> ref(1,5,16)=true[76]
  778:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,16)[76], parent_tp=14, fld=65535)
  783:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4][64]
  786:[76] NewRecord(data=ref(1,1,4)[64], parent_tp=14, fld=65535) -> ref(1,5,20)[64]
  791:[76] PutRef(var[52], value=ref(1,5,20)[64])
  794:[64] VarRef(var[52]) -> ref(1,5,20)=false[64]
  797:[76] ConstInt(val=8) -> 8[76]
  802:[80] SetInt(v1=ref(1,5,20)[64], fld=0, val=8[76])
  805:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4,8][64]
  808:[76] VarRef(var[52]) -> ref(1,5,20)=true[76]
  811:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,20)[76], parent_tp=14, fld=65535)
  816:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4,8][64]
  819:[76] GenFreeStack(value=12, discard=36)
  823:[40] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8][40]
  826:[52] VarVector(var[40]) -> ref(1,1,4)=[1,2,4,8][52]
  829:[64] NewRecord(data=ref(1,1,4)[52], parent_tp=14, fld=65535) -> ref(1,5,24)[52]
  834:[64] VarRef(var[52]) -> ref(1,5,24)=false[64]
  837:[76] ConstInt(val=16) -> 16[76]
  842:[80] SetInt(v1=ref(1,5,24)[64], fld=0, val=16[76])
  845:[64] VarVector(var[40]) -> ref(1,1,4)=[1,2,4,8,16][64]
  848:[76] VarRef(var[52]) -> ref(1,5,24)=true[76]
  851:[88] FinishRecord(data=ref(1,1,4)[64], rec=ref(1,5,24)[76], parent_tp=14, fld=65535)
  856:[64] GenFreeStack(value=0, discard=24)
  860:[40] Text()
  861:[64] ConstText(_value="") -> ""[64]
  863:[80] AppendText(var[40], v1=""[64])
  866:[64] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][64]
  869:[76] FormatDatabase(var[40], val=ref(1,1,4)[64], db_tp=14, pretty=false)
  875:[64] ConstText(_value=" ") -> " "[64]
  878:[80] AppendText(var[40], v1=" "[64])
  881:[64] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][64]
  884:[76] GenCall(size=0, to=328)
  328:[80] VarVector(var[64]) -> ref(1,1,4)={r:5,g:0,b:0}[80]
  331:[92] LengthVector(r=ref(1,1,4)=true[80]) -> 5[80]
  332:[84] GenReturn(ret=891[76], value=4, discard=20)
  891:[68] ConstInt(val=0) -> 0[68]
  896:[72] FormatInt(var[40], val=5[64], radix=10, width=0[68], token=32, plus=false, note=false)
  903:[64] ConstText(_value=" ") -> " "[64]
  906:[80] AppendText(var[40], v1=" "[64])
  909:[64] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][64]
  912:[76] ConstInt(val=2) -> 2[76]
  917:[80] GetVector(r=ref(1,1,4)=true[64], size=4, index=2[76]) -> ref(1,5,16)=4[64]
  920:[76] GetInt(v1=ref(1,5,16)[64], fld=0) -> 4[64]
  923:[68] ConstInt(val=0) -> 0[68]
  928:[72] FormatInt(var[40], val=4[64], radix=10, width=0[68], token=32, plus=false, note=false)
  935:[64] ConstText(_value=" ") -> " "[64]
  938:[80] AppendText(var[40], v1=" "[64])
  941:[64] ConstText(_value="[") -> "["[64]
  944:[80] AppendText(var[40], v1="["[64])
  947:[64] ConvIntFromNull() -> -2147483648[64]
  948:[68] ConstTrue() -> true[68]
  949:[69] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][69]
  952:[81] VarInt(var[64]) -> -2147483648[81]
  955:[85] ConvBoolFromInt(v1=-2147483648[81]) -> false[81]
  956:[82] Not(v1=false[81]) -> true[81]
  957:[82] GenGotoFalseWord(jump=968, if_false=true[81])
  960:[81] ConstInt(val=1) -> 1[81]
  965:[85] GenGotoWord(jump=977)
  977:[85] PutInt(var[64], value=1[81])
  980:[81] VarInt(var[64]) -> 1[81]
  983:[85] ConstInt(val=3) -> 3[85]
  988:[89] GeInt(v1=1[81], v2=3[85]) -> false[81]
  989:[82] GenGotoFalseWord(jump=999, if_false=false[81])
  999:[81] VarInt(var[64]) -> 1[81]
 1002:[85] GetVector(r=ref(1,1,4)=true[69], size=4, index=1[81]) -> ref(1,5,12)=2[69]
 1005:[81] GetInt(v1=ref(1,5,12)[69], fld=0) -> 2[69]
 1008:[73] VarBool(var[68]) -> true[73]
 1011:[74] GenGotoFalseWord(jump=1021, if_false=true[73])
 1014:[73] ConstFalse() -> false[73]
 1015:[74] PutBool(var=6, value=false[73])
 1018:[73] GenGotoWord(jump=1027)
 1027:[73] VarInt(var[69]) -> 2[73]
 1030:[77] ConstInt(val=0) -> 0[77]
 1035:[81] FormatInt(var[40], val=2[73], radix=10, width=0[77], token=32, plus=false, note=false)
 1042:[73] GenFreeStack(value=0, discard=4)
 1046:[69] GenGotoWord(jump=949)
  949:[69] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][69]
  952:[81] VarInt(var[64]) -> 1[81]
  955:[85] ConvBoolFromInt(v1=1[81]) -> true[81]
  956:[82] Not(v1=true[81]) -> false[81]
  957:[82] GenGotoFalseWord(jump=968, if_false=false[81])
  968:[81] VarInt(var[64]) -> 1[81]
  971:[85] ConstInt(val=1) -> 1[85]
  976:[89] AddInt(v1=1[81], v2=1[85]) -> 2[81]
  977:[85] PutInt(var[64], value=2[81])
  980:[81] VarInt(var[64]) -> 2[81]
  983:[85] ConstInt(val=3) -> 3[85]
  988:[89] GeInt(v1=2[81], v2=3[85]) -> false[81]
  989:[82] GenGotoFalseWord(jump=999, if_false=false[81])
  999:[81] VarInt(var[64]) -> 2[81]
 1002:[85] GetVector(r=ref(1,1,4)=true[69], size=4, index=2[81]) -> ref(1,5,16)=4[69]
 1005:[81] GetInt(v1=ref(1,5,16)[69], fld=0) -> 4[69]
 1008:[73] VarBool(var[68]) -> false[73]
 1011:[74] GenGotoFalseWord(jump=1021, if_false=false[73])
 1021:[73] ConstText(_value=",") -> ","[73]
 1024:[89] AppendText(var[40], v1=","[73])
 1027:[73] VarInt(var[69]) -> 4[73]
 1030:[77] ConstInt(val=0) -> 0[77]
 1035:[81] FormatInt(var[40], val=4[73], radix=10, width=0[77], token=32, plus=false, note=false)
 1042:[73] GenFreeStack(value=0, discard=4)
 1046:[69] GenGotoWord(jump=949)
  949:[69] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][69]
  952:[81] VarInt(var[64]) -> 2[81]
  955:[85] ConvBoolFromInt(v1=2[81]) -> true[81]
  956:[82] Not(v1=true[81]) -> false[81]
  957:[82] GenGotoFalseWord(jump=968, if_false=false[81])
  968:[81] VarInt(var[64]) -> 2[81]
  971:[85] ConstInt(val=1) -> 1[85]
  976:[89] AddInt(v1=2[81], v2=1[85]) -> 3[81]
  977:[85] PutInt(var[64], value=3[81])
  980:[81] VarInt(var[64]) -> 3[81]
  983:[85] ConstInt(val=3) -> 3[85]
  988:[89] GeInt(v1=3[81], v2=3[85]) -> true[81]
  989:[82] GenGotoFalseWord(jump=999, if_false=true[81])
  992:[81] GenFreeStack(value=0, discard=12)
  996:[69] GenGotoWord(jump=1049)
 1049:[69] ConstText(_value="]") -> "]"[69]
 1052:[85] AppendText(var[40], v1="]"[69])
 1055:[69] ConstText(_value=" ") -> " "[69]
 1058:[85] AppendText(var[40], v1=" "[69])
 1061:[69] ConstText(_value="[") -> "["[69]
 1064:[85] AppendText(var[40], v1="["[69])
 1067:[69] ConvIntFromNull() -> -2147483648[69]
 1068:[73] ConstTrue() -> true[73]
 1069:[74] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][74]
 1072:[86] VarInt(var[69]) -> -2147483648[86]
 1075:[90] ConvBoolFromInt(v1=-2147483648[86]) -> false[86]
 1076:[87] Not(v1=false[86]) -> true[86]
 1077:[87] GenGotoFalseWord(jump=1088, if_false=true[86])
 1080:[86] ConstInt(val=3) -> 3[86]
 1085:[90] GenGotoWord(jump=1097)
 1097:[90] PutInt(var[69], value=3[86])
 1100:[86] VarInt(var[69]) -> 3[86]
 1103:[90] ConstInt(val=1) -> 1[90]
 1108:[94] LtInt(v1=3[86], v2=1[90]) -> false[86]
 1109:[87] GenGotoFalseWord(jump=1119, if_false=false[86])
 1119:[86] VarInt(var[69]) -> 3[86]
 1122:[90] GetVector(r=ref(1,1,4)=true[74], size=4, index=3[86]) -> ref(1,5,20)=8[74]
 1125:[86] GetInt(v1=ref(1,5,20)[74], fld=0) -> 8[74]
 1128:[78] VarBool(var[73]) -> true[78]
 1131:[79] GenGotoFalseWord(jump=1141, if_false=true[78])
 1134:[78] ConstFalse() -> false[78]
 1135:[79] PutBool(var=6, value=false[78])
 1138:[78] GenGotoWord(jump=1147)
 1147:[78] VarInt(var[74]) -> 8[78]
 1150:[82] ConstInt(val=0) -> 0[82]
 1155:[86] FormatInt(var[40], val=8[78], radix=10, width=0[82], token=32, plus=false, note=false)
 1162:[78] GenFreeStack(value=0, discard=4)
 1166:[74] GenGotoWord(jump=1069)
 1069:[74] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][74]
 1072:[86] VarInt(var[69]) -> 3[86]
 1075:[90] ConvBoolFromInt(v1=3[86]) -> true[86]
 1076:[87] Not(v1=true[86]) -> false[86]
 1077:[87] GenGotoFalseWord(jump=1088, if_false=false[86])
 1088:[86] VarInt(var[69]) -> 3[86]
 1091:[90] ConstInt(val=1) -> 1[90]
 1096:[94] MinInt(v1=3[86], v2=1[90]) -> 2[86]
 1097:[90] PutInt(var[69], value=2[86])
 1100:[86] VarInt(var[69]) -> 2[86]
 1103:[90] ConstInt(val=1) -> 1[90]
 1108:[94] LtInt(v1=2[86], v2=1[90]) -> false[86]
 1109:[87] GenGotoFalseWord(jump=1119, if_false=false[86])
 1119:[86] VarInt(var[69]) -> 2[86]
 1122:[90] GetVector(r=ref(1,1,4)=true[74], size=4, index=2[86]) -> ref(1,5,16)=4[74]
 1125:[86] GetInt(v1=ref(1,5,16)[74], fld=0) -> 4[74]
 1128:[78] VarBool(var[73]) -> false[78]
 1131:[79] GenGotoFalseWord(jump=1141, if_false=false[78])
 1141:[78] ConstText(_value=",") -> ","[78]
 1144:[94] AppendText(var[40], v1=","[78])
 1147:[78] VarInt(var[74]) -> 4[78]
 1150:[82] ConstInt(val=0) -> 0[82]
 1155:[86] FormatInt(var[40], val=4[78], radix=10, width=0[82], token=32, plus=false, note=false)
 1162:[78] GenFreeStack(value=0, discard=4)
 1166:[74] GenGotoWord(jump=1069)
 1069:[74] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][74]
 1072:[86] VarInt(var[69]) -> 2[86]
 1075:[90] ConvBoolFromInt(v1=2[86]) -> true[86]
 1076:[87] Not(v1=true[86]) -> false[86]
 1077:[87] GenGotoFalseWord(jump=1088, if_false=false[86])
 1088:[86] VarInt(var[69]) -> 2[86]
 1091:[90] ConstInt(val=1) -> 1[90]
 1096:[94] MinInt(v1=2[86], v2=1[90]) -> 1[86]
 1097:[90] PutInt(var[69], value=1[86])
 1100:[86] VarInt(var[69]) -> 1[86]
 1103:[90] ConstInt(val=1) -> 1[90]
 1108:[94] LtInt(v1=1[86], v2=1[90]) -> false[86]
 1109:[87] GenGotoFalseWord(jump=1119, if_false=false[86])
 1119:[86] VarInt(var[69]) -> 1[86]
 1122:[90] GetVector(r=ref(1,1,4)=true[74], size=4, index=1[86]) -> ref(1,5,12)=2[74]
 1125:[86] GetInt(v1=ref(1,5,12)[74], fld=0) -> 2[74]
 1128:[78] VarBool(var[73]) -> false[78]
 1131:[79] GenGotoFalseWord(jump=1141, if_false=false[78])
 1141:[78] ConstText(_value=",") -> ","[78]
 1144:[94] AppendText(var[40], v1=","[78])
 1147:[78] VarInt(var[74]) -> 2[78]
 1150:[82] ConstInt(val=0) -> 0[82]
 1155:[86] FormatInt(var[40], val=2[78], radix=10, width=0[82], token=32, plus=false, note=false)
 1162:[78] GenFreeStack(value=0, discard=4)
 1166:[74] GenGotoWord(jump=1069)
 1069:[74] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][74]
 1072:[86] VarInt(var[69]) -> 1[86]
 1075:[90] ConvBoolFromInt(v1=1[86]) -> true[86]
 1076:[87] Not(v1=true[86]) -> false[86]
 1077:[87] GenGotoFalseWord(jump=1088, if_false=false[86])
 1088:[86] VarInt(var[69]) -> 1[86]
 1091:[90] ConstInt(val=1) -> 1[90]
 1096:[94] MinInt(v1=1[86], v2=1[90]) -> 0[86]
 1097:[90] PutInt(var[69], value=0[86])
 1100:[86] VarInt(var[69]) -> 0[86]
 1103:[90] ConstInt(val=1) -> 1[90]
 1108:[94] LtInt(v1=0[86], v2=1[90]) -> true[86]
 1109:[87] GenGotoFalseWord(jump=1119, if_false=true[86])
 1112:[86] GenFreeStack(value=0, discard=12)
 1116:[74] GenGotoWord(jump=1169)
 1169:[74] ConstText(_value="]") -> "]"[74]
 1172:[90] AppendText(var[40], v1="]"[74])
 1175:[74] ConstText(_value=" ") -> " "[74]
 1178:[90] AppendText(var[40], v1=" "[74])
 1181:[74] ConstText(_value="[") -> "["[74]
 1184:[90] AppendText(var[40], v1="["[74])
 1187:[74] ConstInt(val=0) -> 0[74]
 1192:[78] ConstTrue() -> true[78]
 1193:[79] VarInt(var[74]) -> 0[79]
 1196:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1199:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1200:[87] GeInt(v1=0[79], v2=5[83]) -> false[79]
 1201:[80] GenGotoFalseWord(jump=1208, if_false=false[79])
 1208:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1211:[91] VarInt(var[74]) -> 0[91]
 1214:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=0[91]) -> ref(1,5,8)=1[79]
 1217:[91] GetInt(v1=ref(1,5,8)[79], fld=0) -> 1[79]
 1220:[83] VarInt(var[74]) -> 0[83]
 1223:[87] ConstInt(val=1) -> 1[87]
 1228:[91] AddInt(v1=0[83], v2=1[87]) -> 1[83]
 1229:[87] PutInt(var[74], value=1[83])
 1232:[83] VarInt(var[79]) -> 1[83]
 1235:[87] GenFreeStack(value=4, discard=4)
 1239:[83] VarInt(var[79]) -> 1[83]
 1242:[87] ConvBoolFromInt(v1=1[83]) -> true[83]
 1243:[84] Not(v1=true[83]) -> false[83]
 1244:[84] GenGotoFalseWord(jump=1254, if_false=false[83])
 1254:[83] VarInt(var[79]) -> 1[83]
 1257:[87] ConstInt(val=4) -> 4[87]
 1262:[91] GeInt(v1=1[83], v2=4[87]) -> false[83]
 1263:[84] GenGotoFalseWord(jump=1269, if_false=false[83])
 1269:[83] GenFreeStack(value=0, discard=4)
 1273:[79] GenGotoWord(jump=1193)
 1193:[79] VarInt(var[74]) -> 1[79]
 1196:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1199:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1200:[87] GeInt(v1=1[79], v2=5[83]) -> false[79]
 1201:[80] GenGotoFalseWord(jump=1208, if_false=false[79])
 1208:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1211:[91] VarInt(var[74]) -> 1[91]
 1214:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=1[91]) -> ref(1,5,12)=2[79]
 1217:[91] GetInt(v1=ref(1,5,12)[79], fld=0) -> 2[79]
 1220:[83] VarInt(var[74]) -> 1[83]
 1223:[87] ConstInt(val=1) -> 1[87]
 1228:[91] AddInt(v1=1[83], v2=1[87]) -> 2[83]
 1229:[87] PutInt(var[74], value=2[83])
 1232:[83] VarInt(var[79]) -> 2[83]
 1235:[87] GenFreeStack(value=4, discard=4)
 1239:[83] VarInt(var[79]) -> 2[83]
 1242:[87] ConvBoolFromInt(v1=2[83]) -> true[83]
 1243:[84] Not(v1=true[83]) -> false[83]
 1244:[84] GenGotoFalseWord(jump=1254, if_false=false[83])
 1254:[83] VarInt(var[79]) -> 2[83]
 1257:[87] ConstInt(val=4) -> 4[87]
 1262:[91] GeInt(v1=2[83], v2=4[87]) -> false[83]
 1263:[84] GenGotoFalseWord(jump=1269, if_false=false[83])
 1269:[83] GenFreeStack(value=0, discard=4)
 1273:[79] GenGotoWord(jump=1193)
 1193:[79] VarInt(var[74]) -> 2[79]
 1196:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1199:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1200:[87] GeInt(v1=2[79], v2=5[83]) -> false[79]
 1201:[80] GenGotoFalseWord(jump=1208, if_false=false[79])
 1208:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1211:[91] VarInt(var[74]) -> 2[91]
 1214:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=2[91]) -> ref(1,5,16)=4[79]
 1217:[91] GetInt(v1=ref(1,5,16)[79], fld=0) -> 4[79]
 1220:[83] VarInt(var[74]) -> 2[83]
 1223:[87] ConstInt(val=1) -> 1[87]
 1228:[91] AddInt(v1=2[83], v2=1[87]) -> 3[83]
 1229:[87] PutInt(var[74], value=3[83])
 1232:[83] VarInt(var[79]) -> 4[83]
 1235:[87] GenFreeStack(value=4, discard=4)
 1239:[83] VarInt(var[79]) -> 4[83]
 1242:[87] ConvBoolFromInt(v1=4[83]) -> true[83]
 1243:[84] Not(v1=true[83]) -> false[83]
 1244:[84] GenGotoFalseWord(jump=1254, if_false=false[83])
 1254:[83] VarInt(var[79]) -> 4[83]
 1257:[87] ConstInt(val=4) -> 4[87]
 1262:[91] GeInt(v1=4[83], v2=4[87]) -> true[83]
 1263:[84] GenGotoFalseWord(jump=1269, if_false=true[83])
 1266:[83] GenGotoWord(jump=1276)
 1276:[83] VarInt(var[79]) -> 4[83]
 1279:[87] ConstInt(val=2) -> 2[87]
 1284:[91] DivInt(v1=4[83], v2=2[87]) -> 2[83]
 1285:[87] GenFreeStack(value=4, discard=4)
 1289:[83] VarBool(var[78]) -> true[83]
 1292:[84] GenGotoFalseWord(jump=1302, if_false=true[83])
 1295:[83] ConstFalse() -> false[83]
 1296:[84] PutBool(var=6, value=false[83])
 1299:[83] GenGotoWord(jump=1308)
 1308:[83] VarInt(var[79]) -> 2[83]
 1311:[87] ConstInt(val=0) -> 0[87]
 1316:[91] FormatInt(var[40], val=2[83], radix=10, width=0[87], token=32, plus=false, note=false)
 1323:[83] GenFreeStack(value=0, discard=4)
 1327:[79] GenGotoWord(jump=1193)
 1193:[79] VarInt(var[74]) -> 3[79]
 1196:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1199:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1200:[87] GeInt(v1=3[79], v2=5[83]) -> false[79]
 1201:[80] GenGotoFalseWord(jump=1208, if_false=false[79])
 1208:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1211:[91] VarInt(var[74]) -> 3[91]
 1214:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=3[91]) -> ref(1,5,20)=8[79]
 1217:[91] GetInt(v1=ref(1,5,20)[79], fld=0) -> 8[79]
 1220:[83] VarInt(var[74]) -> 3[83]
 1223:[87] ConstInt(val=1) -> 1[87]
 1228:[91] AddInt(v1=3[83], v2=1[87]) -> 4[83]
 1229:[87] PutInt(var[74], value=4[83])
 1232:[83] VarInt(var[79]) -> 8[83]
 1235:[87] GenFreeStack(value=4, discard=4)
 1239:[83] VarInt(var[79]) -> 8[83]
 1242:[87] ConvBoolFromInt(v1=8[83]) -> true[83]
 1243:[84] Not(v1=true[83]) -> false[83]
 1244:[84] GenGotoFalseWord(jump=1254, if_false=false[83])
 1254:[83] VarInt(var[79]) -> 8[83]
 1257:[87] ConstInt(val=4) -> 4[87]
 1262:[91] GeInt(v1=8[83], v2=4[87]) -> true[83]
 1263:[84] GenGotoFalseWord(jump=1269, if_false=true[83])
 1266:[83] GenGotoWord(jump=1276)
 1276:[83] VarInt(var[79]) -> 8[83]
 1279:[87] ConstInt(val=2) -> 2[87]
 1284:[91] DivInt(v1=8[83], v2=2[87]) -> 4[83]
 1285:[87] GenFreeStack(value=4, discard=4)
 1289:[83] VarBool(var[78]) -> false[83]
 1292:[84] GenGotoFalseWord(jump=1302, if_false=false[83])
 1302:[83] ConstText(_value=",") -> ","[83]
 1305:[99] AppendText(var[40], v1=","[83])
 1308:[83] VarInt(var[79]) -> 4[83]
 1311:[87] ConstInt(val=0) -> 0[87]
 1316:[91] FormatInt(var[40], val=4[83], radix=10, width=0[87], token=32, plus=false, note=false)
 1323:[83] GenFreeStack(value=0, discard=4)
 1327:[79] GenGotoWord(jump=1193)
 1193:[79] VarInt(var[74]) -> 4[79]
 1196:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1199:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1200:[87] GeInt(v1=4[79], v2=5[83]) -> false[79]
 1201:[80] GenGotoFalseWord(jump=1208, if_false=false[79])
 1208:[79] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][79]
 1211:[91] VarInt(var[74]) -> 4[91]
 1214:[95] GetVector(r=ref(1,1,4)=true[79], size=4, index=4[91]) -> ref(1,5,24)=16[79]
 1217:[91] GetInt(v1=ref(1,5,24)[79], fld=0) -> 16[79]
 1220:[83] VarInt(var[74]) -> 4[83]
 1223:[87] ConstInt(val=1) -> 1[87]
 1228:[91] AddInt(v1=4[83], v2=1[87]) -> 5[83]
 1229:[87] PutInt(var[74], value=5[83])
 1232:[83] VarInt(var[79]) -> 16[83]
 1235:[87] GenFreeStack(value=4, discard=4)
 1239:[83] VarInt(var[79]) -> 16[83]
 1242:[87] ConvBoolFromInt(v1=16[83]) -> true[83]
 1243:[84] Not(v1=true[83]) -> false[83]
 1244:[84] GenGotoFalseWord(jump=1254, if_false=false[83])
 1254:[83] VarInt(var[79]) -> 16[83]
 1257:[87] ConstInt(val=4) -> 4[87]
 1262:[91] GeInt(v1=16[83], v2=4[87]) -> true[83]
 1263:[84] GenGotoFalseWord(jump=1269, if_false=true[83])
 1266:[83] GenGotoWord(jump=1276)
 1276:[83] VarInt(var[79]) -> 16[83]
 1279:[87] ConstInt(val=2) -> 2[87]
 1284:[91] DivInt(v1=16[83], v2=2[87]) -> 8[83]
 1285:[87] GenFreeStack(value=4, discard=4)
 1289:[83] VarBool(var[78]) -> false[83]
 1292:[84] GenGotoFalseWord(jump=1302, if_false=false[83])
 1302:[83] ConstText(_value=",") -> ","[83]
 1305:[99] AppendText(var[40], v1=","[83])
 1308:[83] VarInt(var[79]) -> 8[83]
 1311:[87] ConstInt(val=0) -> 0[87]
 1316:[91] FormatInt(var[40], val=8[83], radix=10, width=0[87], token=32, plus=false, note=false)
 1323:[83] GenFreeStack(value=0, discard=4)
 1327:[79] GenGotoWord(jump=1193)
 1193:[79] VarInt(var[74]) -> 5[79]
 1196:[83] VarVector(var[28]) -> ref(1,1,4)=[1,2,4,8,16][83]
 1199:[95] LengthVector(r=ref(1,1,4)=true[83]) -> 5[83]
 1200:[87] GeInt(v1=5[79], v2=5[83]) -> true[79]
 1201:[80] GenGotoFalseWord(jump=1208, if_false=true[79])
 1204:[79] ConvIntFromNull() -> -2147483648[79]
 1205:[83] GenGotoWord(jump=1239)
 1239:[83] VarInt(var[79]) -> -2147483648[83]
 1242:[87] ConvBoolFromInt(v1=-2147483648[83]) -> false[83]
 1243:[84] Not(v1=false[83]) -> true[83]
 1244:[84] GenGotoFalseWord(jump=1254, if_false=true[83])
 1247:[83] GenFreeStack(value=0, discard=4)
 1251:[79] GenGotoWord(jump=1330)
 1330:[79] ConstText(_value="]") -> "]"[79]
 1333:[95] AppendText(var[40], v1="]"[79])
 1336:[79] VarText(var[40]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[79]
 1339:[95] GenFreeStack(value=16, discard=39)
 1343:[56] GenFreeStack(value=16, discard=12)
 1347:[44] AppendText(var[4], v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[28])
 1350:[28] VarText(var[4]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[28]
 1353:[44] ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[44]
 1393:[60] EqText(v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[28], v2="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[44]) -> true[28]
 1394:[29] GenGotoFalseWord(jump=1400, if_false=true[28])
 1397:[28] GenGotoWord(jump=1488)
 1488:[28] GenReturn(ret=4294967295[0], value=0, discard=28)
Finished
