pub fn test() {
    test_value = {v=[1, 2, 4, 8];
v += [16];
"{v} {v.len()} {v[2]} {v[1..3]} {v[rev(1..=3)]} {for x in v if x >= 4 {x/2}}"};
    assert(
        test_value == "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]",
        "Test failed {test_value} != \"[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]\""
    );
}
Type 12:vector<integer>[4]:Vector(0)

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __ref_1:main_vector<integer> = null;
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    v:vector<integer> = {#3 vector
      OpDatabase(__ref_1, 13i32);
      _vec_2:vector<integer> = OpGetField(__ref_1, 4i32, 65535i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 4i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _elm_1:boolean = OpNewRecord(_vec_2, 12i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 8i32);
      OpFinishRecord(_vec_2, _elm_1, 12i32, 65535i32);
      _vec_2;
    }#3:vector<integer>;
    {#4 vector
      _elm_3:boolean = OpNewRecord(v, 12i32, 65535i32);
      OpSetInt(_elm_3, 0i32, 16i32);
      OpFinishRecord(v, _elm_3, 12i32, 65535i32);
    }#4;
    {#5 formatting string
      __work_1:text = "";
      OpFormatDatabase(__work_1, v, 12i32, false);
      OpAppendText(__work_1, " ");
      OpFormatInt(__work_1, _tp_vector_len(v), 10i32, 0i32, 32i32, false, false);
      OpAppendText(__work_1, " ");
      OpFormatInt(__work_1, OpGetInt(OpGetVector(v, 4i32, 2i32), 0i32), 10i32, 0i32, 32i32, false, false);
      OpAppendText(__work_1, " ");
      OpAppendText(__work_1, "[");
      _index_4:integer = OpConvIntFromNull();
      _first_5:boolean = true;
      loop {#6 append iter loop
        _val_6:integer = {#7 append iter next
          OpGetInt(OpGetVector(v, 4i32, {#8 next block
            _index_4:integer = if OpNot(OpConvBoolFromInt(_index_4)) 1i32 else OpAddInt(_index_4, 1i32);
            if OpGeInt(_index_4, 3i32) break(0) else null;
            _index_4;
          }#8:integer), 0i32);
        }#7:integer;
        if _first_5 _first_5:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_6, 10i32, 0i32, 32i32, false, false);
      }#6;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, " ");
      OpAppendText(__work_1, "[");
      _index_7:integer = OpConvIntFromNull();
      _first_8:boolean = true;
      loop {#9 append iter loop
        _val_9:integer = {#10 append iter next
          OpGetInt(OpGetVector(v, 4i32, {#11 next block
            _index_7:integer = if OpNot(OpConvBoolFromInt(_index_7)) 3i32 else OpMinInt(_index_7, 1i32);
            if OpLtInt(_index_7, 1i32) break(0) else null;
            _index_7;
          }#11:integer), 0i32);
        }#10:integer;
        if _first_8 _first_8:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_9, 10i32, 0i32, 32i32, false, false);
      }#9;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, " ");
      OpAppendText(__work_1, "[");
      x#index:integer = 0i32;
      _first_12:boolean = true;
      loop {#12 iter for loop
        _val_10:integer = {#13 iter for fill
          x:integer = if OpGeInt(x#index, OpLengthVector(v)) OpConvIntFromNull() else {#14 iter next
            _res_11:integer = OpGetInt(OpGetVector(v, 4i32, x#index), 0i32);
            x#index:integer = OpAddInt(x#index, 1i32);
            _res_11;
          }#14:integer;
          if OpNot(OpConvBoolFromInt(x)) break(0) else null;
          if OpGeInt(x, 4i32) null else continue(0);
          {#15 block
            OpDivInt(x, 2i32);
          }#15:integer;
        }#13:integer;
        if _first_12 _first_12:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_10, 10i32, 0i32, 32i32, false, false);
      }#12;
      OpAppendText(__work_1, "]");
      __work_1;
    }#5:text;
  }#2:text;
  if OpEqText(test_value, "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") null else OpPanic({#16 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"");
    __work_2;
  }#16:text);
}#1

byte-code for format_vector:test()
 691[0]: return-address
 691[4]: ConvRefFromNull() -> reference
 692[16]: Text()
 693[40]: Text()
 694[64]: Text()
 695[88]: Database(var[4], db_tp=13) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 700[88]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 703[100]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 706[100]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 709[112]: ConstInt(val=0) -> integer
 714[116]: SetInt(v1: reference, fld=4, val: integer)
 717[100]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 720[112]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 725[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 728[124]: ConstInt(val=1) -> integer
 733[128]: SetInt(v1: reference, fld=0, val: integer)
 736[112]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 739[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 742[136]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 747[112]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 750[124]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 755[124]: PutRef(var[100], value: reference)
 758[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 761[124]: ConstInt(val=2) -> integer
 766[128]: SetInt(v1: reference, fld=0, val: integer)
 769[112]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 772[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 775[136]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 780[112]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 783[124]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 788[124]: PutRef(var[100], value: reference)
 791[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 794[124]: ConstInt(val=4) -> integer
 799[128]: SetInt(v1: reference, fld=0, val: integer)
 802[112]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 805[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 808[136]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 813[112]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 816[124]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 821[124]: PutRef(var[100], value: reference)
 824[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 827[124]: ConstInt(val=8) -> integer
 832[128]: SetInt(v1: reference, fld=0, val: integer)
 835[112]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 838[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 841[136]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 846[112]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 849[124]: FreeStack(value=12, discard=36) type=Variable[12]:{name:text[4], value:text[8]}[6]
 853[100]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 856[112]: NewRecord(data: reference, parent_tp=12, fld=65535) -> reference
 861[112]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 864[124]: ConstInt(val=16) -> integer
 869[128]: SetInt(v1: reference, fld=0, val: integer)
 872[112]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 875[124]: VarRef(var[100]) -> reference type=boolean[1]:Base[4]
 878[136]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=65535)
 883[112]: FreeStack(value=0, discard=12)
 887[100]: ClearText(var[40])
 890[100]: ConstText(_value="") -> text
 892[116]: AppendText(var[40], v1: text)
 895[100]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 898[112]: FormatDatabase(var[40], val: reference, db_tp=12, pretty=false)
 904[100]: ConstText(_value=" ") -> text
 907[116]: AppendText(var[40], v1: text)
 910[100]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 913[112]: Call(size=0, to=328)
 920[104]: ConstInt(val=0) -> integer
 925[108]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 932[100]: ConstText(_value=" ") -> text
 935[116]: AppendText(var[40], v1: text)
 938[100]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 941[112]: ConstInt(val=2) -> integer
 946[116]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 949[112]: GetInt(v1: reference, fld=0) -> integer
 952[104]: ConstInt(val=0) -> integer
 957[108]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 964[100]: ConstText(_value=" ") -> text
 967[116]: AppendText(var[40], v1: text)
 970[100]: ConstText(_value="[") -> text
 973[116]: AppendText(var[40], v1: text)
 976[100]: ConvIntFromNull() -> integer
 977[104]: ConstTrue() -> boolean
 978[105]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
 981[117]: VarInt(var[100]) -> integer
 984[121]: ConvBoolFromInt(v1: integer) -> boolean
 985[118]: Not(v1: boolean) -> boolean
 986[118]: GotoFalseWord(jump=997, if_false: boolean)
 989[117]: ConstInt(val=1) -> integer
 994[121]: GotoWord(jump=1006)
 997[117]: VarInt(var[100]) -> integer
1000[121]: ConstInt(val=1) -> integer
1005[125]: AddInt(v1: integer, v2: integer) -> integer
1006[121]: PutInt(var[100], value: integer)
1009[117]: VarInt(var[100]) -> integer
1012[121]: ConstInt(val=3) -> integer
1017[125]: GeInt(v1: integer, v2: integer) -> boolean
1018[118]: GotoFalseWord(jump=1028, if_false: boolean)
1021[117]: FreeStack(value=0, discard=12)
1025[105]: GotoWord(jump=1078)
1028[117]: VarInt(var[100]) -> integer
1031[121]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1034[117]: GetInt(v1: reference, fld=0) -> integer
1037[109]: VarBool(var[104]) -> boolean
1040[110]: GotoFalseWord(jump=1050, if_false: boolean)
1043[109]: ConstFalse() -> boolean
1044[110]: PutBool(var=6, value: boolean)
1047[109]: GotoWord(jump=1056)
1050[109]: ConstText(_value=",") -> text
1053[125]: AppendText(var[40], v1: text)
1056[109]: VarInt(var[105]) -> integer
1059[113]: ConstInt(val=0) -> integer
1064[117]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1071[109]: FreeStack(value=0, discard=4)
1075[105]: GotoWord(jump=978)
1078[105]: ConstText(_value="]") -> text
1081[121]: AppendText(var[40], v1: text)
1084[105]: ConstText(_value=" ") -> text
1087[121]: AppendText(var[40], v1: text)
1090[105]: ConstText(_value="[") -> text
1093[121]: AppendText(var[40], v1: text)
1096[105]: ConvIntFromNull() -> integer
1097[109]: ConstTrue() -> boolean
1098[110]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
1101[122]: VarInt(var[105]) -> integer
1104[126]: ConvBoolFromInt(v1: integer) -> boolean
1105[123]: Not(v1: boolean) -> boolean
1106[123]: GotoFalseWord(jump=1117, if_false: boolean)
1109[122]: ConstInt(val=3) -> integer
1114[126]: GotoWord(jump=1126)
1117[122]: VarInt(var[105]) -> integer
1120[126]: ConstInt(val=1) -> integer
1125[130]: MinInt(v1: integer, v2: integer) -> integer
1126[126]: PutInt(var[105], value: integer)
1129[122]: VarInt(var[105]) -> integer
1132[126]: ConstInt(val=1) -> integer
1137[130]: LtInt(v1: integer, v2: integer) -> boolean
1138[123]: GotoFalseWord(jump=1148, if_false: boolean)
1141[122]: FreeStack(value=0, discard=12)
1145[110]: GotoWord(jump=1198)
1148[122]: VarInt(var[105]) -> integer
1151[126]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1154[122]: GetInt(v1: reference, fld=0) -> integer
1157[114]: VarBool(var[109]) -> boolean
1160[115]: GotoFalseWord(jump=1170, if_false: boolean)
1163[114]: ConstFalse() -> boolean
1164[115]: PutBool(var=6, value: boolean)
1167[114]: GotoWord(jump=1176)
1170[114]: ConstText(_value=",") -> text
1173[130]: AppendText(var[40], v1: text)
1176[114]: VarInt(var[110]) -> integer
1179[118]: ConstInt(val=0) -> integer
1184[122]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1191[114]: FreeStack(value=0, discard=4)
1195[110]: GotoWord(jump=1098)
1198[110]: ConstText(_value="]") -> text
1201[126]: AppendText(var[40], v1: text)
1204[110]: ConstText(_value=" ") -> text
1207[126]: AppendText(var[40], v1: text)
1210[110]: ConstText(_value="[") -> text
1213[126]: AppendText(var[40], v1: text)
1216[110]: ConstInt(val=0) -> integer
1221[114]: ConstTrue() -> boolean
1222[115]: VarInt(var[110]) -> integer
1225[119]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
1228[131]: LengthVector(r: vector) -> integer
1229[123]: GeInt(v1: integer, v2: integer) -> boolean
1230[116]: GotoFalseWord(jump=1237, if_false: boolean)
1233[115]: ConvIntFromNull() -> integer
1234[119]: GotoWord(jump=1268)
1237[115]: VarVector(var[88]) -> vector type=vector<integer>[4]:Vector(0)[12]
1240[127]: VarInt(var[110]) -> integer
1243[131]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
1246[127]: GetInt(v1: reference, fld=0) -> integer
1249[119]: VarInt(var[110]) -> integer
1252[123]: ConstInt(val=1) -> integer
1257[127]: AddInt(v1: integer, v2: integer) -> integer
1258[123]: PutInt(var[110], value: integer)
1261[119]: VarInt(var[115]) -> integer
1264[123]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
1268[119]: VarInt(var[115]) -> integer
1271[123]: ConvBoolFromInt(v1: integer) -> boolean
1272[120]: Not(v1: boolean) -> boolean
1273[120]: GotoFalseWord(jump=1283, if_false: boolean)
1276[119]: FreeStack(value=0, discard=4)
1280[115]: GotoWord(jump=1359)
1283[119]: VarInt(var[115]) -> integer
1286[123]: ConstInt(val=4) -> integer
1291[127]: GeInt(v1: integer, v2: integer) -> boolean
1292[120]: GotoFalseWord(jump=1298, if_false: boolean)
1295[119]: GotoWord(jump=1305)
1298[119]: FreeStack(value=0, discard=4)
1302[115]: GotoWord(jump=1222)
1305[119]: VarInt(var[115]) -> integer
1308[123]: ConstInt(val=2) -> integer
1313[127]: DivInt(v1: integer, v2: integer) -> integer
1314[123]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
1318[119]: VarBool(var[114]) -> boolean
1321[120]: GotoFalseWord(jump=1331, if_false: boolean)
1324[119]: ConstFalse() -> boolean
1325[120]: PutBool(var=6, value: boolean)
1328[119]: GotoWord(jump=1337)
1331[119]: ConstText(_value=",") -> text
1334[135]: AppendText(var[40], v1: text)
1337[119]: VarInt(var[115]) -> integer
1340[123]: ConstInt(val=0) -> integer
1345[127]: FormatInt(var[40], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1352[119]: FreeStack(value=0, discard=4)
1356[115]: GotoWord(jump=1222)
1359[115]: ConstText(_value="]") -> text
1362[131]: AppendText(var[40], v1: text)
1365[115]: VarText(var[40]) -> text
1368[131]: FreeStack(value=16, discard=31) type=text[4]:Base[5]
1372[116]: FreeStack(value=16, discard=28) type=text[4]:Base[5]
1376[104]: AppendText(var[64], v1: text)
1379[88]: VarText(var[64]) -> text
1382[104]: ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> text
1422[120]: EqText(v1: text, v2: text) -> boolean
1423[89]: GotoFalseWord(jump=1429, if_false: boolean)
1426[88]: GotoWord(jump=1515)
1429[88]: ClearText(var[16])
1432[88]: ConstText(_value="Test failed ") -> text
1446[104]: AppendText(var[16], v1: text)
1449[88]: VarText(var[64]) -> text
1452[104]: ConstInt(val=0) -> integer
1457[108]: FormatText(var[16], val: text, width: integer, dir=-1, token=32)
1462[88]: ConstText(_value=" != "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"") -> text
1508[104]: AppendText(var[16], v1: text)
1511[88]: VarText(var[16]) -> text
1514[104]: Panic(message: text)
1515[88]: FreeText(var[64])
1518[88]: FreeText(var[40])
1521[88]: FreeText(var[16])
1524[88]: Return(ret=0, value=0, discard=88)

Execute test:
  691:[8] ConvRefFromNull() -> ref(65535,0,0)[8]
  692:[20] Text()
  693:[44] Text()
  694:[68] Text()
  695:[92] Database(var[8], db_tp=13)
  700:[92] VarRef(var[8]) -> ref(1,1,0)={}[92]
  703:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)[92]
  706:[104] VarRef(var[8]) -> ref(1,1,0)={}[104]
  709:[116] ConstInt(val=0) -> 0[116]
  714:[120] SetInt(v1=ref(1,1,0)[104], fld=4, val=0[116])
  717:[104] VarVector(var[92]) -> ref(1,1,4)=[][104]
  720:[116] NewRecord(data=ref(1,1,4)[104], parent_tp=12, fld=65535) -> ref(1,9,8)[104]
  725:[116] VarRef(var[104]) -> ref(1,9,8)=false[116]
  728:[128] ConstInt(val=1) -> 1[128]
  733:[132] SetInt(v1=ref(1,9,8)[116], fld=0, val=1[128])
  736:[116] VarVector(var[92]) -> ref(1,1,4)=[1][116]
  739:[128] VarRef(var[104]) -> ref(1,9,8)=true[128]
  742:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,9,8)[128], parent_tp=12, fld=65535)
  747:[116] VarVector(var[92]) -> ref(1,1,4)=[1][116]
  750:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=12, fld=65535) -> ref(1,9,12)[116]
  755:[128] PutRef(var[104], value=ref(1,9,12)[116])
  758:[116] VarRef(var[104]) -> ref(1,9,12)=false[116]
  761:[128] ConstInt(val=2) -> 2[128]
  766:[132] SetInt(v1=ref(1,9,12)[116], fld=0, val=2[128])
  769:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2][116]
  772:[128] VarRef(var[104]) -> ref(1,9,12)=true[128]
  775:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,9,12)[128], parent_tp=12, fld=65535)
  780:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2][116]
  783:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=12, fld=65535) -> ref(1,9,16)[116]
  788:[128] PutRef(var[104], value=ref(1,9,16)[116])
  791:[116] VarRef(var[104]) -> ref(1,9,16)=false[116]
  794:[128] ConstInt(val=4) -> 4[128]
  799:[132] SetInt(v1=ref(1,9,16)[116], fld=0, val=4[128])
  802:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2,4][116]
  805:[128] VarRef(var[104]) -> ref(1,9,16)=true[128]
  808:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,9,16)[128], parent_tp=12, fld=65535)
  813:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2,4][116]
  816:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=12, fld=65535) -> ref(1,9,20)[116]
  821:[128] PutRef(var[104], value=ref(1,9,20)[116])
  824:[116] VarRef(var[104]) -> ref(1,9,20)=false[116]
  827:[128] ConstInt(val=8) -> 8[128]
  832:[132] SetInt(v1=ref(1,9,20)[116], fld=0, val=8[128])
  835:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8][116]
  838:[128] VarRef(var[104]) -> ref(1,9,20)=true[128]
  841:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,9,20)[128], parent_tp=12, fld=65535)
  846:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8][116]
  849:[128] FreeStack(value=12, discard=36)
  853:[104] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8][104]
  856:[116] NewRecord(data=ref(1,1,4)[104], parent_tp=12, fld=65535) -> ref(1,9,24)[104]
  861:[116] VarRef(var[104]) -> ref(1,9,24)=false[116]
  864:[128] ConstInt(val=16) -> 16[128]
  869:[132] SetInt(v1=ref(1,9,24)[116], fld=0, val=16[128])
  872:[116] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][116]
  875:[128] VarRef(var[104]) -> ref(1,9,24)=true[128]
  878:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,9,24)[128], parent_tp=12, fld=65535)
  883:[116] FreeStack(value=0, discard=12)
  887:[104] ClearText(var[44])
  890:[104] ConstText(_value="") -> ""[104]
  892:[120] AppendText(var[44], v1=""[104])
  895:[104] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][104]
  898:[116] FormatDatabase(var[44], val=ref(1,1,4)[104], db_tp=12, pretty=false)
  904:[104] ConstText(_value=" ") -> " "[104]
  907:[120] AppendText(var[44], v1=" "[104])
  910:[104] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][104]
  913:[116] Call(size=0, to=328)
  328:[120] VarVector(var[104]) -> ref(1,1,4)=true[120]
  331:[132] LengthVector(r=ref(1,1,4)=true[120]) -> 5[120]
  332:[124] Return(ret=920[116], value=4, discard=20) -> 5[104]
  920:[108] ConstInt(val=0) -> 0[108]
  925:[112] FormatInt(var[44], val=5[104], radix=10, width=0[108], token=32, plus=false, note=false)
  932:[104] ConstText(_value=" ") -> " "[104]
  935:[120] AppendText(var[44], v1=" "[104])
  938:[104] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][104]
  941:[116] ConstInt(val=2) -> 2[116]
  946:[120] GetVector(r=ref(1,1,4)=true[104], size=4, index=2[116]) -> ref(1,9,16)=4[104]
  949:[116] GetInt(v1=ref(1,9,16)[104], fld=0) -> 4[104]
  952:[108] ConstInt(val=0) -> 0[108]
  957:[112] FormatInt(var[44], val=4[104], radix=10, width=0[108], token=32, plus=false, note=false)
  964:[104] ConstText(_value=" ") -> " "[104]
  967:[120] AppendText(var[44], v1=" "[104])
  970:[104] ConstText(_value="[") -> "["[104]
  973:[120] AppendText(var[44], v1="["[104])
  976:[104] ConvIntFromNull() -> -2147483648[104]
  977:[108] ConstTrue() -> true[108]
  978:[109] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][109]
  981:[121] VarInt(var[104]) -> -2147483648[121]
  984:[125] ConvBoolFromInt(v1=-2147483648[121]) -> false[121]
  985:[122] Not(v1=false[121]) -> true[121]
  986:[122] GotoFalseWord(jump=997, if_false=true[121])
  989:[121] ConstInt(val=1) -> 1[121]
  994:[125] GotoWord(jump=1006)
 1006:[125] PutInt(var[104], value=1[121])
 1009:[121] VarInt(var[104]) -> 1[121]
 1012:[125] ConstInt(val=3) -> 3[125]
 1017:[129] GeInt(v1=1[121], v2=3[125]) -> false[121]
 1018:[122] GotoFalseWord(jump=1028, if_false=false[121])
 1028:[121] VarInt(var[104]) -> 1[121]
 1031:[125] GetVector(r=ref(1,1,4)=true[109], size=4, index=1[121]) -> ref(1,9,12)=2[109]
 1034:[121] GetInt(v1=ref(1,9,12)[109], fld=0) -> 2[109]
 1037:[113] VarBool(var[108]) -> true[113]
 1040:[114] GotoFalseWord(jump=1050, if_false=true[113])
 1043:[113] ConstFalse() -> false[113]
 1044:[114] PutBool(var=6, value=false[113])
 1047:[113] GotoWord(jump=1056)
 1056:[113] VarInt(var[109]) -> 2[113]
 1059:[117] ConstInt(val=0) -> 0[117]
 1064:[121] FormatInt(var[44], val=2[113], radix=10, width=0[117], token=32, plus=false, note=false)
 1071:[113] FreeStack(value=0, discard=4)
 1075:[109] GotoWord(jump=978)
  978:[109] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][109]
  981:[121] VarInt(var[104]) -> 1[121]
  984:[125] ConvBoolFromInt(v1=1[121]) -> true[121]
  985:[122] Not(v1=true[121]) -> false[121]
  986:[122] GotoFalseWord(jump=997, if_false=false[121])
  997:[121] VarInt(var[104]) -> 1[121]
 1000:[125] ConstInt(val=1) -> 1[125]
 1005:[129] AddInt(v1=1[121], v2=1[125]) -> 2[121]
 1006:[125] PutInt(var[104], value=2[121])
 1009:[121] VarInt(var[104]) -> 2[121]
 1012:[125] ConstInt(val=3) -> 3[125]
 1017:[129] GeInt(v1=2[121], v2=3[125]) -> false[121]
 1018:[122] GotoFalseWord(jump=1028, if_false=false[121])
 1028:[121] VarInt(var[104]) -> 2[121]
 1031:[125] GetVector(r=ref(1,1,4)=true[109], size=4, index=2[121]) -> ref(1,9,16)=4[109]
 1034:[121] GetInt(v1=ref(1,9,16)[109], fld=0) -> 4[109]
 1037:[113] VarBool(var[108]) -> false[113]
 1040:[114] GotoFalseWord(jump=1050, if_false=false[113])
 1050:[113] ConstText(_value=",") -> ","[113]
 1053:[129] AppendText(var[44], v1=","[113])
 1056:[113] VarInt(var[109]) -> 4[113]
 1059:[117] ConstInt(val=0) -> 0[117]
 1064:[121] FormatInt(var[44], val=4[113], radix=10, width=0[117], token=32, plus=false, note=false)
 1071:[113] FreeStack(value=0, discard=4)
 1075:[109] GotoWord(jump=978)
  978:[109] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][109]
  981:[121] VarInt(var[104]) -> 2[121]
  984:[125] ConvBoolFromInt(v1=2[121]) -> true[121]
  985:[122] Not(v1=true[121]) -> false[121]
  986:[122] GotoFalseWord(jump=997, if_false=false[121])
  997:[121] VarInt(var[104]) -> 2[121]
 1000:[125] ConstInt(val=1) -> 1[125]
 1005:[129] AddInt(v1=2[121], v2=1[125]) -> 3[121]
 1006:[125] PutInt(var[104], value=3[121])
 1009:[121] VarInt(var[104]) -> 3[121]
 1012:[125] ConstInt(val=3) -> 3[125]
 1017:[129] GeInt(v1=3[121], v2=3[125]) -> true[121]
 1018:[122] GotoFalseWord(jump=1028, if_false=true[121])
 1021:[121] FreeStack(value=0, discard=12)
 1025:[109] GotoWord(jump=1078)
 1078:[109] ConstText(_value="]") -> "]"[109]
 1081:[125] AppendText(var[44], v1="]"[109])
 1084:[109] ConstText(_value=" ") -> " "[109]
 1087:[125] AppendText(var[44], v1=" "[109])
 1090:[109] ConstText(_value="[") -> "["[109]
 1093:[125] AppendText(var[44], v1="["[109])
 1096:[109] ConvIntFromNull() -> -2147483648[109]
 1097:[113] ConstTrue() -> true[113]
 1098:[114] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][114]
 1101:[126] VarInt(var[109]) -> -2147483648[126]
 1104:[130] ConvBoolFromInt(v1=-2147483648[126]) -> false[126]
 1105:[127] Not(v1=false[126]) -> true[126]
 1106:[127] GotoFalseWord(jump=1117, if_false=true[126])
 1109:[126] ConstInt(val=3) -> 3[126]
 1114:[130] GotoWord(jump=1126)
 1126:[130] PutInt(var[109], value=3[126])
 1129:[126] VarInt(var[109]) -> 3[126]
 1132:[130] ConstInt(val=1) -> 1[130]
 1137:[134] LtInt(v1=3[126], v2=1[130]) -> false[126]
 1138:[127] GotoFalseWord(jump=1148, if_false=false[126])
 1148:[126] VarInt(var[109]) -> 3[126]
 1151:[130] GetVector(r=ref(1,1,4)=true[114], size=4, index=3[126]) -> ref(1,9,20)=8[114]
 1154:[126] GetInt(v1=ref(1,9,20)[114], fld=0) -> 8[114]
 1157:[118] VarBool(var[113]) -> true[118]
 1160:[119] GotoFalseWord(jump=1170, if_false=true[118])
 1163:[118] ConstFalse() -> false[118]
 1164:[119] PutBool(var=6, value=false[118])
 1167:[118] GotoWord(jump=1176)
 1176:[118] VarInt(var[114]) -> 8[118]
 1179:[122] ConstInt(val=0) -> 0[122]
 1184:[126] FormatInt(var[44], val=8[118], radix=10, width=0[122], token=32, plus=false, note=false)
 1191:[118] FreeStack(value=0, discard=4)
 1195:[114] GotoWord(jump=1098)
 1098:[114] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][114]
 1101:[126] VarInt(var[109]) -> 3[126]
 1104:[130] ConvBoolFromInt(v1=3[126]) -> true[126]
 1105:[127] Not(v1=true[126]) -> false[126]
 1106:[127] GotoFalseWord(jump=1117, if_false=false[126])
 1117:[126] VarInt(var[109]) -> 3[126]
 1120:[130] ConstInt(val=1) -> 1[130]
 1125:[134] MinInt(v1=3[126], v2=1[130]) -> 2[126]
 1126:[130] PutInt(var[109], value=2[126])
 1129:[126] VarInt(var[109]) -> 2[126]
 1132:[130] ConstInt(val=1) -> 1[130]
 1137:[134] LtInt(v1=2[126], v2=1[130]) -> false[126]
 1138:[127] GotoFalseWord(jump=1148, if_false=false[126])
 1148:[126] VarInt(var[109]) -> 2[126]
 1151:[130] GetVector(r=ref(1,1,4)=true[114], size=4, index=2[126]) -> ref(1,9,16)=4[114]
 1154:[126] GetInt(v1=ref(1,9,16)[114], fld=0) -> 4[114]
 1157:[118] VarBool(var[113]) -> false[118]
 1160:[119] GotoFalseWord(jump=1170, if_false=false[118])
 1170:[118] ConstText(_value=",") -> ","[118]
 1173:[134] AppendText(var[44], v1=","[118])
 1176:[118] VarInt(var[114]) -> 4[118]
 1179:[122] ConstInt(val=0) -> 0[122]
 1184:[126] FormatInt(var[44], val=4[118], radix=10, width=0[122], token=32, plus=false, note=false)
 1191:[118] FreeStack(value=0, discard=4)
 1195:[114] GotoWord(jump=1098)
 1098:[114] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][114]
 1101:[126] VarInt(var[109]) -> 2[126]
 1104:[130] ConvBoolFromInt(v1=2[126]) -> true[126]
 1105:[127] Not(v1=true[126]) -> false[126]
 1106:[127] GotoFalseWord(jump=1117, if_false=false[126])
 1117:[126] VarInt(var[109]) -> 2[126]
 1120:[130] ConstInt(val=1) -> 1[130]
 1125:[134] MinInt(v1=2[126], v2=1[130]) -> 1[126]
 1126:[130] PutInt(var[109], value=1[126])
 1129:[126] VarInt(var[109]) -> 1[126]
 1132:[130] ConstInt(val=1) -> 1[130]
 1137:[134] LtInt(v1=1[126], v2=1[130]) -> false[126]
 1138:[127] GotoFalseWord(jump=1148, if_false=false[126])
 1148:[126] VarInt(var[109]) -> 1[126]
 1151:[130] GetVector(r=ref(1,1,4)=true[114], size=4, index=1[126]) -> ref(1,9,12)=2[114]
 1154:[126] GetInt(v1=ref(1,9,12)[114], fld=0) -> 2[114]
 1157:[118] VarBool(var[113]) -> false[118]
 1160:[119] GotoFalseWord(jump=1170, if_false=false[118])
 1170:[118] ConstText(_value=",") -> ","[118]
 1173:[134] AppendText(var[44], v1=","[118])
 1176:[118] VarInt(var[114]) -> 2[118]
 1179:[122] ConstInt(val=0) -> 0[122]
 1184:[126] FormatInt(var[44], val=2[118], radix=10, width=0[122], token=32, plus=false, note=false)
 1191:[118] FreeStack(value=0, discard=4)
 1195:[114] GotoWord(jump=1098)
 1098:[114] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][114]
 1101:[126] VarInt(var[109]) -> 1[126]
 1104:[130] ConvBoolFromInt(v1=1[126]) -> true[126]
 1105:[127] Not(v1=true[126]) -> false[126]
 1106:[127] GotoFalseWord(jump=1117, if_false=false[126])
 1117:[126] VarInt(var[109]) -> 1[126]
 1120:[130] ConstInt(val=1) -> 1[130]
 1125:[134] MinInt(v1=1[126], v2=1[130]) -> 0[126]
 1126:[130] PutInt(var[109], value=0[126])
 1129:[126] VarInt(var[109]) -> 0[126]
 1132:[130] ConstInt(val=1) -> 1[130]
 1137:[134] LtInt(v1=0[126], v2=1[130]) -> true[126]
 1138:[127] GotoFalseWord(jump=1148, if_false=true[126])
 1141:[126] FreeStack(value=0, discard=12)
 1145:[114] GotoWord(jump=1198)
 1198:[114] ConstText(_value="]") -> "]"[114]
 1201:[130] AppendText(var[44], v1="]"[114])
 1204:[114] ConstText(_value=" ") -> " "[114]
 1207:[130] AppendText(var[44], v1=" "[114])
 1210:[114] ConstText(_value="[") -> "["[114]
 1213:[130] AppendText(var[44], v1="["[114])
 1216:[114] ConstInt(val=0) -> 0[114]
 1221:[118] ConstTrue() -> true[118]
 1222:[119] VarInt(var[114]) -> 0[119]
 1225:[123] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][123]
 1228:[135] LengthVector(r=ref(1,1,4)=true[123]) -> 5[123]
 1229:[127] GeInt(v1=0[119], v2=5[123]) -> false[119]
 1230:[120] GotoFalseWord(jump=1237, if_false=false[119])
 1237:[119] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][119]
 1240:[131] VarInt(var[114]) -> 0[131]
 1243:[135] GetVector(r=ref(1,1,4)=true[119], size=4, index=0[131]) -> ref(1,9,8)=1[119]
 1246:[131] GetInt(v1=ref(1,9,8)[119], fld=0) -> 1[119]
 1249:[123] VarInt(var[114]) -> 0[123]
 1252:[127] ConstInt(val=1) -> 1[127]
 1257:[131] AddInt(v1=0[123], v2=1[127]) -> 1[123]
 1258:[127] PutInt(var[114], value=1[123])
 1261:[123] VarInt(var[119]) -> 1[123]
 1264:[127] FreeStack(value=4, discard=8)
 1268:[123] VarInt(var[119]) -> 1[123]
 1271:[127] ConvBoolFromInt(v1=1[123]) -> true[123]
 1272:[124] Not(v1=true[123]) -> false[123]
 1273:[124] GotoFalseWord(jump=1283, if_false=false[123])
 1283:[123] VarInt(var[119]) -> 1[123]
 1286:[127] ConstInt(val=4) -> 4[127]
 1291:[131] GeInt(v1=1[123], v2=4[127]) -> false[123]
 1292:[124] GotoFalseWord(jump=1298, if_false=false[123])
 1298:[123] FreeStack(value=0, discard=4)
 1302:[119] GotoWord(jump=1222)
 1222:[119] VarInt(var[114]) -> 1[119]
 1225:[123] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][123]
 1228:[135] LengthVector(r=ref(1,1,4)=true[123]) -> 5[123]
 1229:[127] GeInt(v1=1[119], v2=5[123]) -> false[119]
 1230:[120] GotoFalseWord(jump=1237, if_false=false[119])
 1237:[119] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][119]
 1240:[131] VarInt(var[114]) -> 1[131]
 1243:[135] GetVector(r=ref(1,1,4)=true[119], size=4, index=1[131]) -> ref(1,9,12)=2[119]
 1246:[131] GetInt(v1=ref(1,9,12)[119], fld=0) -> 2[119]
 1249:[123] VarInt(var[114]) -> 1[123]
 1252:[127] ConstInt(val=1) -> 1[127]
 1257:[131] AddInt(v1=1[123], v2=1[127]) -> 2[123]
 1258:[127] PutInt(var[114], value=2[123])
 1261:[123] VarInt(var[119]) -> 2[123]
 1264:[127] FreeStack(value=4, discard=8)
 1268:[123] VarInt(var[119]) -> 2[123]
 1271:[127] ConvBoolFromInt(v1=2[123]) -> true[123]
 1272:[124] Not(v1=true[123]) -> false[123]
 1273:[124] GotoFalseWord(jump=1283, if_false=false[123])
 1283:[123] VarInt(var[119]) -> 2[123]
 1286:[127] ConstInt(val=4) -> 4[127]
 1291:[131] GeInt(v1=2[123], v2=4[127]) -> false[123]
 1292:[124] GotoFalseWord(jump=1298, if_false=false[123])
 1298:[123] FreeStack(value=0, discard=4)
 1302:[119] GotoWord(jump=1222)
 1222:[119] VarInt(var[114]) -> 2[119]
 1225:[123] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][123]
 1228:[135] LengthVector(r=ref(1,1,4)=true[123]) -> 5[123]
 1229:[127] GeInt(v1=2[119], v2=5[123]) -> false[119]
 1230:[120] GotoFalseWord(jump=1237, if_false=false[119])
 1237:[119] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][119]
 1240:[131] VarInt(var[114]) -> 2[131]
 1243:[135] GetVector(r=ref(1,1,4)=true[119], size=4, index=2[131]) -> ref(1,9,16)=4[119]
 1246:[131] GetInt(v1=ref(1,9,16)[119], fld=0) -> 4[119]
 1249:[123] VarInt(var[114]) -> 2[123]
 1252:[127] ConstInt(val=1) -> 1[127]
 1257:[131] AddInt(v1=2[123], v2=1[127]) -> 3[123]
 1258:[127] PutInt(var[114], value=3[123])
 1261:[123] VarInt(var[119]) -> 4[123]
 1264:[127] FreeStack(value=4, discard=8)
 1268:[123] VarInt(var[119]) -> 4[123]
 1271:[127] ConvBoolFromInt(v1=4[123]) -> true[123]
 1272:[124] Not(v1=true[123]) -> false[123]
 1273:[124] GotoFalseWord(jump=1283, if_false=false[123])
 1283:[123] VarInt(var[119]) -> 4[123]
 1286:[127] ConstInt(val=4) -> 4[127]
 1291:[131] GeInt(v1=4[123], v2=4[127]) -> true[123]
 1292:[124] GotoFalseWord(jump=1298, if_false=true[123])
 1295:[123] GotoWord(jump=1305)
 1305:[123] VarInt(var[119]) -> 4[123]
 1308:[127] ConstInt(val=2) -> 2[127]
 1313:[131] DivInt(v1=4[123], v2=2[127]) -> 2[123]
 1314:[127] FreeStack(value=4, discard=8)
 1318:[123] VarBool(var[118]) -> true[123]
 1321:[124] GotoFalseWord(jump=1331, if_false=true[123])
 1324:[123] ConstFalse() -> false[123]
 1325:[124] PutBool(var=6, value=false[123])
 1328:[123] GotoWord(jump=1337)
 1337:[123] VarInt(var[119]) -> 2[123]
 1340:[127] ConstInt(val=0) -> 0[127]
 1345:[131] FormatInt(var[44], val=2[123], radix=10, width=0[127], token=32, plus=false, note=false)
 1352:[123] FreeStack(value=0, discard=4)
 1356:[119] GotoWord(jump=1222)
 1222:[119] VarInt(var[114]) -> 3[119]
 1225:[123] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][123]
 1228:[135] LengthVector(r=ref(1,1,4)=true[123]) -> 5[123]
 1229:[127] GeInt(v1=3[119], v2=5[123]) -> false[119]
 1230:[120] GotoFalseWord(jump=1237, if_false=false[119])
 1237:[119] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][119]
 1240:[131] VarInt(var[114]) -> 3[131]
 1243:[135] GetVector(r=ref(1,1,4)=true[119], size=4, index=3[131]) -> ref(1,9,20)=8[119]
 1246:[131] GetInt(v1=ref(1,9,20)[119], fld=0) -> 8[119]
 1249:[123] VarInt(var[114]) -> 3[123]
 1252:[127] ConstInt(val=1) -> 1[127]
 1257:[131] AddInt(v1=3[123], v2=1[127]) -> 4[123]
 1258:[127] PutInt(var[114], value=4[123])
 1261:[123] VarInt(var[119]) -> 8[123]
 1264:[127] FreeStack(value=4, discard=8)
 1268:[123] VarInt(var[119]) -> 8[123]
 1271:[127] ConvBoolFromInt(v1=8[123]) -> true[123]
 1272:[124] Not(v1=true[123]) -> false[123]
 1273:[124] GotoFalseWord(jump=1283, if_false=false[123])
 1283:[123] VarInt(var[119]) -> 8[123]
 1286:[127] ConstInt(val=4) -> 4[127]
 1291:[131] GeInt(v1=8[123], v2=4[127]) -> true[123]
 1292:[124] GotoFalseWord(jump=1298, if_false=true[123])
 1295:[123] GotoWord(jump=1305)
 1305:[123] VarInt(var[119]) -> 8[123]
 1308:[127] ConstInt(val=2) -> 2[127]
 1313:[131] DivInt(v1=8[123], v2=2[127]) -> 4[123]
 1314:[127] FreeStack(value=4, discard=8)
 1318:[123] VarBool(var[118]) -> false[123]
 1321:[124] GotoFalseWord(jump=1331, if_false=false[123])
 1331:[123] ConstText(_value=",") -> ","[123]
 1334:[139] AppendText(var[44], v1=","[123])
 1337:[123] VarInt(var[119]) -> 4[123]
 1340:[127] ConstInt(val=0) -> 0[127]
 1345:[131] FormatInt(var[44], val=4[123], radix=10, width=0[127], token=32, plus=false, note=false)
 1352:[123] FreeStack(value=0, discard=4)
 1356:[119] GotoWord(jump=1222)
 1222:[119] VarInt(var[114]) -> 4[119]
 1225:[123] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][123]
 1228:[135] LengthVector(r=ref(1,1,4)=true[123]) -> 5[123]
 1229:[127] GeInt(v1=4[119], v2=5[123]) -> false[119]
 1230:[120] GotoFalseWord(jump=1237, if_false=false[119])
 1237:[119] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][119]
 1240:[131] VarInt(var[114]) -> 4[131]
 1243:[135] GetVector(r=ref(1,1,4)=true[119], size=4, index=4[131]) -> ref(1,9,24)=16[119]
 1246:[131] GetInt(v1=ref(1,9,24)[119], fld=0) -> 16[119]
 1249:[123] VarInt(var[114]) -> 4[123]
 1252:[127] ConstInt(val=1) -> 1[127]
 1257:[131] AddInt(v1=4[123], v2=1[127]) -> 5[123]
 1258:[127] PutInt(var[114], value=5[123])
 1261:[123] VarInt(var[119]) -> 16[123]
 1264:[127] FreeStack(value=4, discard=8)
 1268:[123] VarInt(var[119]) -> 16[123]
 1271:[127] ConvBoolFromInt(v1=16[123]) -> true[123]
 1272:[124] Not(v1=true[123]) -> false[123]
 1273:[124] GotoFalseWord(jump=1283, if_false=false[123])
 1283:[123] VarInt(var[119]) -> 16[123]
 1286:[127] ConstInt(val=4) -> 4[127]
 1291:[131] GeInt(v1=16[123], v2=4[127]) -> true[123]
 1292:[124] GotoFalseWord(jump=1298, if_false=true[123])
 1295:[123] GotoWord(jump=1305)
 1305:[123] VarInt(var[119]) -> 16[123]
 1308:[127] ConstInt(val=2) -> 2[127]
 1313:[131] DivInt(v1=16[123], v2=2[127]) -> 8[123]
 1314:[127] FreeStack(value=4, discard=8)
 1318:[123] VarBool(var[118]) -> false[123]
 1321:[124] GotoFalseWord(jump=1331, if_false=false[123])
 1331:[123] ConstText(_value=",") -> ","[123]
 1334:[139] AppendText(var[44], v1=","[123])
 1337:[123] VarInt(var[119]) -> 8[123]
 1340:[127] ConstInt(val=0) -> 0[127]
 1345:[131] FormatInt(var[44], val=8[123], radix=10, width=0[127], token=32, plus=false, note=false)
 1352:[123] FreeStack(value=0, discard=4)
 1356:[119] GotoWord(jump=1222)
 1222:[119] VarInt(var[114]) -> 5[119]
 1225:[123] VarVector(var[92]) -> ref(1,1,4)=[1,2,4,8,16][123]
 1228:[135] LengthVector(r=ref(1,1,4)=true[123]) -> 5[123]
 1229:[127] GeInt(v1=5[119], v2=5[123]) -> true[119]
 1230:[120] GotoFalseWord(jump=1237, if_false=true[119])
 1233:[119] ConvIntFromNull() -> -2147483648[119]
 1234:[123] GotoWord(jump=1268)
 1268:[123] VarInt(var[119]) -> -2147483648[123]
 1271:[127] ConvBoolFromInt(v1=-2147483648[123]) -> false[123]
 1272:[124] Not(v1=false[123]) -> true[123]
 1273:[124] GotoFalseWord(jump=1283, if_false=true[123])
 1276:[123] FreeStack(value=0, discard=4)
 1280:[119] GotoWord(jump=1359)
 1359:[119] ConstText(_value="]") -> "]"[119]
 1362:[135] AppendText(var[44], v1="]"[119])
 1365:[119] VarText(var[44]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[119]
 1368:[135] FreeStack(value=16, discard=31)
 1372:[120] FreeStack(value=16, discard=28)
 1376:[108] AppendText(var[68], v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[92])
 1379:[92] VarText(var[68]) -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[92]
 1382:[108] ConstText(_value="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]") -> "[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[108]
 1422:[124] EqText(v1="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[92], v2="[1,2,4,8,16] 5 4 [2,4] [8,4,2] [2,4,8]"[108]) -> true[92]
 1423:[93] GotoFalseWord(jump=1429, if_false=true[92])
 1426:[92] GotoWord(jump=1515)
 1515:[92] FreeText(var[68])
 1518:[92] FreeText(var[44])
 1521:[92] FreeText(var[20])
 1524:[92] Return(ret=4294967295[4], value=0, discard=88)
Finished
