pub fn test() {
    test_value = {v = "someth" + "ing"; v.ends_with("thing")};
    assert(
        test_value == true,
        "Test failed {test_value} != true"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:boolean = {#2 block
    v:text = "someth";
    OpAppendText(v, "ing");
    _tp_text_ends_with(v, "thing");
  }#2:boolean;
  if OpEqBool(test_value, true) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatBool(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != true");
    __work_1;
  }#3:text);
}#1

byte-code for ends:test()
 692[0]: return-address
 692[4]: Text()
 693[28]: Text()
 694[52]: ConstText(_value="someth") -> text
 702[68]: AppendText(var[28], v1: text)
 705[52]: ConstText(_value="ing") -> text
 710[68]: AppendText(var[28], v1: text)
 713[52]: VarText(var[28]) -> text
 716[68]: ConstText(_value="thing") -> text
 723[84]: StaticCall(_tp_text_ends_with)
 726[53]: FreeText(var[28])
 729[53]: FreeStack(value=1, discard=25) type=boolean[1]:Base[4]
 733[29]: VarBool(var[28]) -> boolean
 736[30]: ConstTrue() -> boolean
 737[31]: EqBool(v1: boolean, v2: boolean) -> boolean
 738[30]: GotoFalseWord(jump=744, if_false: boolean)
 741[29]: GotoWord(jump=794)
 744[29]: ClearText(var[4])
 747[29]: ConstText(_value="Test failed ") -> text
 761[45]: AppendText(var[4], v1: text)
 764[29]: VarBool(var[28]) -> boolean
 767[30]: ConstInt(val=0) -> integer
 772[34]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 777[29]: ConstText(_value=" != true") -> text
 787[45]: AppendText(var[4], v1: text)
 790[29]: VarText(var[4]) -> text
 793[45]: Panic(message: text)
 794[29]: FreeText(var[4])
 797[29]: Return(ret=0, value=0, discard=29)

Execute test:
  692:[8] Text()
  693:[32] Text()
  694:[56] ConstText(_value="someth") -> "someth"[56]
  702:[72] AppendText(var[32], v1="someth"[56])
  705:[56] ConstText(_value="ing") -> "ing"[56]
  710:[72] AppendText(var[32], v1="ing"[56])
  713:[56] VarText(var[32]) -> "something"[56]
  716:[72] ConstText(_value="thing") -> "thing"[72]
  723:[88] StaticCall(call=5)
  726:[57] FreeText(var[32])
  729:[57] FreeStack(value=1, discard=25)
  733:[33] VarBool(var[32]) -> true[33]
  736:[34] ConstTrue() -> true[34]
  737:[35] EqBool(v1=true[33], v2=true[34]) -> true[33]
  738:[34] GotoFalseWord(jump=744, if_false=true[33])
  741:[33] GotoWord(jump=794)
  794:[33] FreeText(var[8])
  797:[33] Return(ret=4294967295[4], value=0, discard=29)
Finished
