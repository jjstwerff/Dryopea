pub fn test() {
    test_value = {v = "someth" + "ing"; v.ends_with("thing")};
    assert(
        test_value == true,
        "Test failed {test_value} != true"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:boolean = {#2 block
    v:text = "someth";
    OpAppendText(v, "ing");
    _tp_text_ends_with(v, "thing");
  }#2:boolean;
  if OpEqBool(test_value, true) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatBool(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != true");
    __work_1;
  }#3:text);
}#1

byte-code for ends:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: Text()
 693[52]: ConstText(_value="someth") -> text
 701[68]: AppendText(var[28], v1: text)
 704[52]: ConstText(_value="ing") -> text
 709[68]: AppendText(var[28], v1: text)
 712[52]: VarText(var[28]) -> text
 715[68]: ConstText(_value="thing") -> text
 722[84]: StaticCall(_tp_text_ends_with)
 725[53]: FreeText(var[28])
 728[53]: FreeStack(value=1, discard=25) type=boolean[1]:Base[4]
 732[29]: VarBool(var[28]) -> boolean
 735[30]: ConstTrue() -> boolean
 736[31]: EqBool(v1: boolean, v2: boolean) -> boolean
 737[30]: GotoFalseWord(jump=743, if_false: boolean)
 740[29]: GotoWord(jump=793)
 743[29]: ClearText(var[4])
 746[29]: ConstText(_value="Test failed ") -> text
 760[45]: AppendText(var[4], v1: text)
 763[29]: VarBool(var[28]) -> boolean
 766[30]: ConstInt(val=0) -> integer
 771[34]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 776[29]: ConstText(_value=" != true") -> text
 786[45]: AppendText(var[4], v1: text)
 789[29]: VarText(var[4]) -> text
 792[45]: Panic(message: text)
 793[29]: FreeText(var[4])
 796[29]: Return(ret=0, value=0, discard=29)

Execute test:
  691:[8] Text()
  692:[32] Text()
  693:[56] ConstText(_value="someth") -> "someth"[56]
  701:[72] AppendText(var[32], v1="someth"[56])
  704:[56] ConstText(_value="ing") -> "ing"[56]
  709:[72] AppendText(var[32], v1="ing"[56])
  712:[56] VarText(var[32]) -> "something"[56]
  715:[72] ConstText(_value="thing") -> "thing"[72]
  722:[88] StaticCall(call=5)
  725:[57] FreeText(var[32])
  728:[57] FreeStack(value=1, discard=25)
  732:[33] VarBool(var[32]) -> true[33]
  735:[34] ConstTrue() -> true[34]
  736:[35] EqBool(v1=true[33], v2=true[34]) -> true[33]
  737:[34] GotoFalseWord(jump=743, if_false=true[33])
  740:[33] GotoWord(jump=793)
  793:[33] FreeText(var[8])
  796:[33] Return(ret=4294967295[4], value=0, discard=29)
Finished
