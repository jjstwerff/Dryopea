pub fn test() {
    test_value = {v = "someth" + "ing"; v.ends_with("thing")};
    assert(
        test_value == true,
        "Test failed {test_value} != true"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:boolean = {#2 block
    v:text = "someth";
    OpAppendText(v, "ing");
    _tp_text_ends_with(v, "thing");
  }#2:boolean;
  if OpEqBool(test_value, true) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatBool(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != true");
    __work_1;
  }#3:text);
}#1

byte-code for ends:test()
 645[0]: return-address
 645[4]: Text() var=__work_1[4]:text in 1
 646[28]: Text() var=v[28]:text in 2
 647[52]: ConstText(_value="someth") -> text
 655[68]: AppendText(var[28], v1: text)
 658[52]: ConstText(_value="ing") -> text
 663[68]: AppendText(var[28], v1: text)
 666[52]: VarText(var[28]) -> text var=v[28]:text in 2
 669[68]: ConstText(_value="thing") -> text
 676[84]: StaticCall(_tp_text_ends_with)
 679[53]: FreeText(var[28])
 682[53]: FreeStack(value=1, discard=25) type=boolean[1]:Base[4]
 686[29]: VarBool(var[28]) -> boolean var=test_value[28]:boolean in 1
 689[30]: ConstTrue() -> boolean
 690[31]: EqBool(v1: boolean, v2: boolean) -> boolean
 691[30]: GotoFalseWord(jump=697, if_false: boolean)
 694[29]: GotoWord(jump=747)
 697[29]: ClearText(var[4]) var=__work_1[4]:text in 1
 700[29]: ConstText(_value="Test failed ") -> text
 714[45]: AppendText(var[4], v1: text)
 717[29]: VarBool(var[28]) -> boolean var=test_value[28]:boolean in 1
 720[30]: ConstInt(val=0) -> integer
 725[34]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 730[29]: ConstText(_value=" != true") -> text
 740[45]: AppendText(var[4], v1: text)
 743[29]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 746[45]: Panic(message: text)
 747[29]: FreeText(var[4])
 750[29]: Return(ret=0, value=0, discard=29)

Execute test:
  645:[8] Text()
  646:[32] Text()
  647:[56] ConstText(_value="someth") -> "someth"[56]
  655:[72] AppendText(var[32], v1="someth"[56])
  658:[56] ConstText(_value="ing") -> "ing"[56]
  663:[72] AppendText(var[32], v1="ing"[56])
  666:[56] VarText(var[32]) -> "something"[56]
  669:[72] ConstText(_value="thing") -> "thing"[72]
  676:[88] StaticCall(call=6)
  679:[57] FreeText(var[32])
  682:[57] FreeStack(value=1, discard=25)
  686:[33] VarBool(var[32]) -> true[33]
  689:[34] ConstTrue() -> true[34]
  690:[35] EqBool(v1=true[33], v2=true[34]) -> true[33]
  691:[34] GotoFalseWord(jump=697, if_false=true[33])
  694:[33] GotoWord(jump=747)
  747:[33] FreeText(var[8])
  750:[33] Return(ret=4294967295[4], value=0, discard=29)
Finished
