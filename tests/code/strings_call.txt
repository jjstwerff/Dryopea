fn choice(a: text, b: text) -> text { if len(a) > len(b) { a } else { b } }

pub fn test() {
    test_value = {choice("{1:03}", "{2}1") + choice("2", "")};
    assert(
        test_value == "0012",
        "Test failed {test_value} != \"0012\""
    );
}
fn choice(a:text, b:text) -> text["a", "b"] {#1 block
  if OpGtInt(_tp_text_len(a), _tp_text_len(b)) {#2 block
    a;
  }#2:text["a"] else {#3 block
    b;
  }#3:text["b"];
}#1:text["a", "b"]

byte-code for call:choice(a: text[0], b: text[16]) [1082] -> text["a", "b"]
   0[32]: return-address
   0[36]: ArgText(var[0]) -> text var=a[0]:text in 0
   3[52]: Call(size=0, to=318)
  10[40]: ArgText(var[16]) -> text var=b[16]:text in 0
  13[56]: Call(size=0, to=318)
  20[44]: GtInt(v1: integer, v2: integer) -> boolean
  21[37]: GotoFalseWord(jump=30, if_false: boolean)
  24[36]: ArgText(var[0]) -> text var=a[0]:text in 0
  27[52]: GotoWord(jump=33)
  30[36]: ArgText(var[16]) -> text var=b[16]:text in 0
  33[52]: Return(ret=32, value=16, discard=52) type=text[4]:Base[5]

fn test() {#1 block
  __work_4:text = "";
  __work_3:text = "";
  __work_2:text = "";
  __work_1:text = "";
  test_value:text["__work_3"] = {#2 block
    __work_3:text = choice({#3 formatting string
      __work_1:text = "";
      OpFormatInt(__work_1, 1i32, 10i32, 3i32, 48i32, false, false);
      __work_1;
    }#3:text, {#4 formatting string
      __work_2:text = "";
      OpFormatInt(__work_2, 2i32, 10i32, 0i32, 32i32, false, false);
      OpAppendText(__work_2, "1");
      __work_2;
    }#4:text);
    OpAppendText(__work_3, choice("2", ""));
    __work_3;
  }#2:text["__work_3"];
  if OpEqText(test_value, "0012") null else OpPanic({#5 formatting string
    __work_4:text = "Test failed ";
    OpFormatText(__work_4, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_4, " != "0012"");
    __work_4;
  }#5:text);
}#1

byte-code for call:test() [1121]
   0[0]: return-address
   0[4]: Text() var=__work_4[4]:text in 1
   1[28]: Text() var=__work_3[28]:text in 1
   2[52]: Text() var=__work_2[52]:text in 1
   3[76]: Text() var=__work_1[76]:text in 1
   4[100]: Text() var=test_value[100]:text["__work_3"] in 1
   5[124]: ClearText(var[28]) var=__work_3[28]:text in 1
   8[124]: ClearText(var[76]) var=__work_1[76]:text in 1
  11[124]: ConstText(_value="") -> text
  13[140]: AppendText(var[76], v1: text)
  16[124]: ConstInt(val=1) -> integer
  21[128]: ConstInt(val=3) -> integer
  26[132]: FormatInt(var[76], val: integer, radix=10, width: integer, token=48, plus=false, note=false)
  33[124]: VarText(var[76]) -> text var=__work_1[76]:text in 1
  36[140]: ClearText(var[52]) var=__work_2[52]:text in 1
  39[140]: ConstText(_value="") -> text
  41[156]: AppendText(var[52], v1: text)
  44[140]: ConstInt(val=2) -> integer
  49[144]: ConstInt(val=0) -> integer
  54[148]: FormatInt(var[52], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
  61[140]: ConstText(_value="1") -> text
  64[156]: AppendText(var[52], v1: text)
  67[140]: VarText(var[52]) -> text var=__work_2[52]:text in 1
  70[156]: Call(size=0, to=1082)
  77[140]: AppendText(var[28], v1: text)
  80[124]: ConstText(_value="2") -> text
  83[140]: ConstText(_value="") -> text
  85[156]: Call(size=0, to=1082)
  92[140]: AppendText(var[28], v1: text)
  95[124]: VarText(var[28]) -> text var=__work_3[28]:text in 1
  98[140]: AppendText(var[100], v1: text)
 101[124]: VarText(var[100]) -> text var=test_value[100]:text["__work_3"] in 1
 104[140]: ConstText(_value="0012") -> text
 110[156]: EqText(v1: text, v2: text) -> boolean
 111[125]: GotoFalseWord(jump=117, if_false: boolean)
 114[124]: GotoWord(jump=169)
 117[124]: ClearText(var[4]) var=__work_4[4]:text in 1
 120[124]: ConstText(_value="Test failed ") -> text
 134[140]: AppendText(var[4], v1: text)
 137[124]: VarText(var[100]) -> text var=test_value[100]:text["__work_3"] in 1
 140[140]: ConstInt(val=0) -> integer
 145[144]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 150[124]: ConstText(_value=" != "0012"") -> text
 162[140]: AppendText(var[4], v1: text)
 165[124]: VarText(var[4]) -> text var=__work_4[4]:text in 1
 168[140]: Panic(message: text)
 169[124]: FreeText(var[100])
 172[124]: FreeText(var[76])
 175[124]: FreeText(var[52])
 178[124]: FreeText(var[28])
 181[124]: FreeText(var[4])
 184[124]: Return(ret=0, value=0, discard=124)

