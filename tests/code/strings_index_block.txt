pub fn test() {
    test_value = {s = "1ðŸ˜Š2"; s[1]};
    assert(
        test_value == "ðŸ˜Š",
        "Test failed {test_value} != \"ðŸ˜Š\""
    );
}
fn test() {#1 block
  __work_1:text = "";
  s:text = "";
  test_value:text["s"] = {#2 block
    s:text = "1ðŸ˜Š2";
    OpGetTextSub(s, 1i32, -2147483648i32);
  }#2:text["s"];
  if OpEqText(test_value, "ðŸ˜Š") null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatText(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != "ðŸ˜Š"");
    __work_1;
  }#3:text);
}#1

byte-code for index_block:test()
 645[0]: return-address
 645[4]: Text() var=__work_1[4]:text in 1
 646[28]: Text() var=s[28]:text in 1
 647[52]: Text() var=test_value[52]:text["s"] in 1
 648[76]: ClearText(var[28]) var=s[28]:text in 1
 651[76]: ConstText(_value="1ðŸ˜Š2") -> text
 659[92]: AppendText(var[28], v1: text)
 662[76]: VarText(var[28]) -> text var=s[28]:text in 1
 665[92]: ConstInt(val=1) -> integer
 670[96]: ConstInt(val=-2147483648) -> integer
 675[100]: GetTextSub(v1: text, from: integer, till: integer) -> text["test_value"]
 676[92]: AppendText(var[52], v1: text)
 679[76]: VarText(var[52]) -> text var=test_value[52]:text["s"] in 1
 682[92]: ConstText(_value="ðŸ˜Š") -> text
 688[108]: EqText(v1: text, v2: text) -> boolean
 689[77]: GotoFalseWord(jump=695, if_false: boolean)
 692[76]: GotoWord(jump=747)
 695[76]: ClearText(var[4]) var=__work_1[4]:text in 1
 698[76]: ConstText(_value="Test failed ") -> text
 712[92]: AppendText(var[4], v1: text)
 715[76]: VarText(var[52]) -> text var=test_value[52]:text["s"] in 1
 718[92]: ConstInt(val=0) -> integer
 723[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 728[76]: ConstText(_value=" != "ðŸ˜Š"") -> text
 740[92]: AppendText(var[4], v1: text)
 743[76]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 746[92]: Panic(message: text)
 747[76]: FreeText(var[52])
 750[76]: FreeText(var[28])
 753[76]: FreeText(var[4])
 756[76]: Return(ret=0, value=0, discard=76)

Execute test:
  645:[8] Text()
  646:[32] Text()
  647:[56] Text()
  648:[80] ClearText(var[32])
  651:[80] ConstText(_value="1ðŸ˜Š2") -> "1ðŸ˜Š2"[80]
  659:[96] AppendText(var[32], v1="1ðŸ˜Š2"[80])
  662:[80] VarText(var[32]) -> "1ðŸ˜Š2"[80]
  665:[96] ConstInt(val=1) -> 1[96]
  670:[100] ConstInt(val=-2147483648) -> -2147483648[100]
  675:[104] GetTextSub(v1="1ðŸ˜Š2"[80], from=1[96], till=-2147483648[100]) -> "ðŸ˜Š"[80]
  676:[96] AppendText(var[56], v1="ðŸ˜Š"[80])
  679:[80] VarText(var[56]) -> "ðŸ˜Š"[80]
  682:[96] ConstText(_value="ðŸ˜Š") -> "ðŸ˜Š"[96]
  688:[112] EqText(v1="ðŸ˜Š"[80], v2="ðŸ˜Š"[96]) -> true[80]
  689:[81] GotoFalseWord(jump=695, if_false=true[80])
  692:[80] GotoWord(jump=747)
  747:[80] FreeText(var[56])
  750:[80] FreeText(var[32])
  753:[80] FreeText(var[8])
  756:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
