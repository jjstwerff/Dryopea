pub fn test() {
    test_value = {"ab{1+2+32:#x}c{12:o}d{391}e{12:+4}f{1:03}g{42:b}h"};
    assert(
        test_value == "ab0x23c14d391e +12f001g101010h",
        "Test failed {test_value} != \"ab0x23c14d391e +12f001g101010h\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "ab";
      OpFormatInt(__work_1, OpAddInt(OpAddInt(1i32, 2i32), 32i32), 16i32, 0i32, 32i32, false, true);
      OpAppendText(__work_1, "c");
      OpFormatInt(__work_1, 12i32, 8i32, 0i32, 32i32, false, false);
      OpAppendText(__work_1, "d");
      OpFormatInt(__work_1, 391i32, 10i32, 0i32, 32i32, false, false);
      OpAppendText(__work_1, "e");
      OpFormatInt(__work_1, 12i32, 10i32, 4i32, 32i32, true, false);
      OpAppendText(__work_1, "f");
      OpFormatInt(__work_1, 1i32, 10i32, 3i32, 48i32, false, false);
      OpAppendText(__work_1, "g");
      OpFormatInt(__work_1, 42i32, 2i32, 0i32, 32i32, false, false);
      OpAppendText(__work_1, "h");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "ab0x23c14d391e +12f001g101010h") null else OpPanic({#4 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "ab0x23c14d391e +12f001g101010h"");
    __work_2;
  }#4:text);
}#1

byte-code for format_expression:test() [1082]
   0[0]: return-address
   0[4]: Text() var=__work_2[4]:text in 1
   1[28]: Text() var=__work_1[28]:text in 1
   2[52]: Text() var=test_value[52]:text in 1
   3[76]: ClearText(var[28]) var=__work_1[28]:text in 1
   6[76]: ConstText(_value="ab") -> text
  10[92]: AppendText(var[28], v1: text)
  13[76]: ConstInt(val=1) -> integer
  18[80]: ConstInt(val=2) -> integer
  23[84]: AddInt(v1: integer, v2: integer) -> integer
  24[80]: ConstInt(val=32) -> integer
  29[84]: AddInt(v1: integer, v2: integer) -> integer
  30[80]: ConstInt(val=0) -> integer
  35[84]: FormatInt(var[28], val: integer, radix=16, width: integer, token=32, plus=false, note=true)
  42[76]: ConstText(_value="c") -> text
  45[92]: AppendText(var[28], v1: text)
  48[76]: ConstInt(val=12) -> integer
  53[80]: ConstInt(val=0) -> integer
  58[84]: FormatInt(var[28], val: integer, radix=8, width: integer, token=32, plus=false, note=false)
  65[76]: ConstText(_value="d") -> text
  68[92]: AppendText(var[28], v1: text)
  71[76]: ConstInt(val=391) -> integer
  76[80]: ConstInt(val=0) -> integer
  81[84]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
  88[76]: ConstText(_value="e") -> text
  91[92]: AppendText(var[28], v1: text)
  94[76]: ConstInt(val=12) -> integer
  99[80]: ConstInt(val=4) -> integer
 104[84]: FormatInt(var[28], val: integer, radix=10, width: integer, token=32, plus=true, note=false)
 111[76]: ConstText(_value="f") -> text
 114[92]: AppendText(var[28], v1: text)
 117[76]: ConstInt(val=1) -> integer
 122[80]: ConstInt(val=3) -> integer
 127[84]: FormatInt(var[28], val: integer, radix=10, width: integer, token=48, plus=false, note=false)
 134[76]: ConstText(_value="g") -> text
 137[92]: AppendText(var[28], v1: text)
 140[76]: ConstInt(val=42) -> integer
 145[80]: ConstInt(val=0) -> integer
 150[84]: FormatInt(var[28], val: integer, radix=2, width: integer, token=32, plus=false, note=false)
 157[76]: ConstText(_value="h") -> text
 160[92]: AppendText(var[28], v1: text)
 163[76]: VarText(var[28]) -> text var=__work_1[28]:text in 1
 166[92]: AppendText(var[52], v1: text)
 169[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 172[92]: ConstText(_value="ab0x23c14d391e +12f001g101010h") -> text
 204[108]: EqText(v1: text, v2: text) -> boolean
 205[77]: GotoFalseWord(jump=211, if_false: boolean)
 208[76]: GotoWord(jump=289)
 211[76]: ClearText(var[4]) var=__work_2[4]:text in 1
 214[76]: ConstText(_value="Test failed ") -> text
 228[92]: AppendText(var[4], v1: text)
 231[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 234[92]: ConstInt(val=0) -> integer
 239[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 244[76]: ConstText(_value=" != "ab0x23c14d391e +12f001g101010h"") -> text
 282[92]: AppendText(var[4], v1: text)
 285[76]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 288[92]: Panic(message: text)
 289[76]: FreeText(var[52])
 292[76]: FreeText(var[28])
 295[76]: FreeText(var[4])
 298[76]: Return(ret=0, value=0, discard=76)

