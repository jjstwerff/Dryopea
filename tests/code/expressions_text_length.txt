pub fn test() {
    test_value = {t = "some"; t+="thing"; t.len() + len(t)};
    assert(
        test_value == 18,
        "Test failed {test_value} != 18"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    t:text = "some";
    OpAppendText(t, "thing");
    OpAddInt(_tp_text_len(t), _tp_text_len(t));
  }#2:integer;
  if OpEqInt(test_value, 18i32) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 18");
    __work_1;
  }#3:text);
}#1

byte-code for text_length:test()
   0[0]: return-address
   0[4]: Text() var=__work_1[4]:text in 1
   1[28]: Text() var=t[28]:text in 2
   2[52]: ConstText(_value="some") -> text
   8[68]: AppendText(var[28], v1: text)
  11[52]: ConstText(_value="thing") -> text
  18[68]: AppendText(var[28], v1: text)
  21[52]: VarText(var[28]) -> text var=t[28]:text in 2
  24[68]: Call(size=0, to=318)
  31[56]: VarText(var[28]) -> text var=t[28]:text in 2
  34[72]: Call(size=0, to=318)
  41[60]: AddInt(v1: integer, v2: integer) -> integer
  42[56]: FreeText(var[28])
  45[56]: FreeStack(value=4, discard=28) type=integer[4]:Base[0]
  49[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
  52[36]: ConstInt(val=18) -> integer
  57[40]: EqInt(v1: integer, v2: integer) -> boolean
  58[33]: GotoFalseWord(jump=64, if_false: boolean)
  61[32]: GotoWord(jump=114)
  64[32]: ClearText(var[4]) var=__work_1[4]:text in 1
  67[32]: ConstText(_value="Test failed ") -> text
  81[48]: AppendText(var[4], v1: text)
  84[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
  87[36]: ConstInt(val=0) -> integer
  92[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
  99[32]: ConstText(_value=" != 18") -> text
 107[48]: AppendText(var[4], v1: text)
 110[32]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 113[48]: Panic(message: text)
 114[32]: FreeText(var[4])
 117[32]: Return(ret=0, value=0, discard=32)

