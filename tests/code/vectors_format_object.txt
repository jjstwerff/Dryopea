struct Elm {a:integer, b:integer}

pub fn test() {
    test_value = {v=[
    Elm{a:1, b:2},
    Elm{a:12, b:13},
    Elm{a:4, b:5}
];
v[2].b=6;
"{v} sizeof {sizeof(Elm)}"};
    assert(
        test_value == "[{{a:1,b:2}},{{a:12,b:13}},{{a:4,b:6}}] sizeof 8",
        "Test failed {test_value} != \"[{{a:1,b:2}},{{a:12,b:13}},{{a:4,b:6}}] sizeof 8\""
    );
}
Type 17:Elm[8]:
    a:integer[0]
    b:integer[4]

Type 18:main_vector<Elm>[8]:
    vector:vector<Elm>[4]

Type 19:vector<Elm>[4]:Vector(17)

fn test() {#block(1):void
  __ref_1(1):ref(main_vector<Elm>) = null;
  __work_2(1):text = "";
  __work_1(1):text = "";
  test_value(1):text = {#block(2):text
    OpDatabase(__ref_1(1), 18i32);
    v(2):vector<ref(Elm)>["__ref_1"] = OpGetField(__ref_1(1), 4i32, 19i32);
    OpSetInt(__ref_1(1), 4i32, 0i32);
    _elm_1(2):ref(Elm)["v"] = OpNewRecord(v(2), 19i32, 65535i32);
    OpSetInt(_elm_1(2), 0i32, 1i32);
    OpSetInt(_elm_1(2), 4i32, 2i32);
    OpFinishRecord(v(2), _elm_1(2), 19i32, 65535i32);
    _elm_1(2):ref(Elm)["v"] = OpNewRecord(v(2), 19i32, 65535i32);
    OpSetInt(_elm_1(2), 0i32, 12i32);
    OpSetInt(_elm_1(2), 4i32, 13i32);
    OpFinishRecord(v(2), _elm_1(2), 19i32, 65535i32);
    _elm_1(2):ref(Elm)["v"] = OpNewRecord(v(2), 19i32, 65535i32);
    OpSetInt(_elm_1(2), 0i32, 4i32);
    OpSetInt(_elm_1(2), 4i32, 5i32);
    OpFinishRecord(v(2), _elm_1(2), 19i32, 65535i32);
    OpSetInt(OpGetVector(v(2), 8i32, 2i32), 4i32, 6i32);
    {#Formatted string(3):text
      __work_1(1):text = "";
      OpFormatDatabase(__work_1(1), v(2), 19i32, false);
      OpAppendText(__work_1(1), " sizeof ");
      OpFormatInt(__work_1(1), 8i32, 10i32, 0i32, 32i32, false, false);
      __work_1(1);
    }#Formatted string(3):text;
  }#block(2):text;
  if OpEqText(test_value(1), "[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8") null else OpPanic({#Formatted string(4):text
    __work_2(1):text = "Test failed ";
    OpFormatText(__work_2(1), test_value(1), 0i32, -1i32, 32i32);
    OpAppendText(__work_2(1), " != "[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8"");
    __work_2(1);
  }#Formatted string(4):text);
  OpFreeText(test_value(1));
  OpFreeRef(__ref_1(1));
  OpFreeText(__work_1(1));
  OpFreeText(__work_2(1));
}#block(1):void

byte-code for format_object:test() [1119]
   0[4]: return-address
   0[8]: ConvRefFromNull() -> ref(reference) var=__ref_1[8]:ref(main_vector<Elm>)
   1[20]: Text() var=__work_2[20]:text
   2[44]: Text() var=__work_1[44]:text
   3[68]: Text() var=test_value[68]:text
   4[92]: Database(var[8], db_tp=18) type=main_vector<Elm>[8]:{vector:vector<Elm>[4]}[18]
   9[92]: VarRef(var[8]) -> ref(reference) type=main_vector<Elm>[8]:{vector:vector<Elm>[4]}[18] var=__ref_1[8]:ref(main_vector<Elm>)
  12[104]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=vector<Elm>[4]:Vector(17)[19]
  15[104]: VarRef(var[8]) -> ref(reference) type=main_vector<Elm>[8]:{vector:vector<Elm>[4]}[18] var=__ref_1[8]:ref(main_vector<Elm>)
  18[116]: ConstInt(val=0) -> integer
  23[120]: SetInt(v1: ref(reference), fld=4, val: integer)
  26[104]: VarVector(var[92]) -> vector type=vector<Elm>[4]:Vector(17)[19] var=v[92]:vector<ref(Elm)>["__ref_1"]
  29[116]: NewRecord(data: ref(reference), parent_tp=19, fld=65535) -> ref(reference)
  34[116]: VarRef(var[104]) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17] var=_elm_1[104]:ref(Elm)["v"]
  37[128]: ConstInt(val=1) -> integer
  42[132]: SetInt(v1: ref(reference), fld=0, val: integer)
  45[116]: VarRef(var[104]) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17] var=_elm_1[104]:ref(Elm)["v"]
  48[128]: ConstInt(val=2) -> integer
  53[132]: SetInt(v1: ref(reference), fld=4, val: integer)
  56[116]: VarVector(var[92]) -> vector type=vector<Elm>[4]:Vector(17)[19] var=v[92]:vector<ref(Elm)>["__ref_1"]
  59[128]: VarRef(var[104]) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17] var=_elm_1[104]:ref(Elm)["v"]
  62[140]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=19, fld=65535)
  67[116]: VarVector(var[92]) -> vector type=vector<Elm>[4]:Vector(17)[19] var=v[92]:vector<ref(Elm)>["__ref_1"]
  70[128]: NewRecord(data: ref(reference), parent_tp=19, fld=65535) -> ref(reference)
  75[128]: PutRef(var[104], value: ref(reference))
  78[116]: VarRef(var[104]) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17] var=_elm_1[104]:ref(Elm)["v"]
  81[128]: ConstInt(val=12) -> integer
  86[132]: SetInt(v1: ref(reference), fld=0, val: integer)
  89[116]: VarRef(var[104]) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17] var=_elm_1[104]:ref(Elm)["v"]
  92[128]: ConstInt(val=13) -> integer
  97[132]: SetInt(v1: ref(reference), fld=4, val: integer)
 100[116]: VarVector(var[92]) -> vector type=vector<Elm>[4]:Vector(17)[19] var=v[92]:vector<ref(Elm)>["__ref_1"]
 103[128]: VarRef(var[104]) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17] var=_elm_1[104]:ref(Elm)["v"]
 106[140]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=19, fld=65535)
 111[116]: VarVector(var[92]) -> vector type=vector<Elm>[4]:Vector(17)[19] var=v[92]:vector<ref(Elm)>["__ref_1"]
 114[128]: NewRecord(data: ref(reference), parent_tp=19, fld=65535) -> ref(reference)
 119[128]: PutRef(var[104], value: ref(reference))
 122[116]: VarRef(var[104]) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17] var=_elm_1[104]:ref(Elm)["v"]
 125[128]: ConstInt(val=4) -> integer
 130[132]: SetInt(v1: ref(reference), fld=0, val: integer)
 133[116]: VarRef(var[104]) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17] var=_elm_1[104]:ref(Elm)["v"]
 136[128]: ConstInt(val=5) -> integer
 141[132]: SetInt(v1: ref(reference), fld=4, val: integer)
 144[116]: VarVector(var[92]) -> vector type=vector<Elm>[4]:Vector(17)[19] var=v[92]:vector<ref(Elm)>["__ref_1"]
 147[128]: VarRef(var[104]) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17] var=_elm_1[104]:ref(Elm)["v"]
 150[140]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=19, fld=65535)
 155[116]: VarVector(var[92]) -> vector type=vector<Elm>[4]:Vector(17)[19] var=v[92]:vector<ref(Elm)>["__ref_1"]
 158[128]: ConstInt(val=2) -> integer
 163[132]: GetVector(r: vector, size=8, index: integer) -> ref(reference) type=Elm[8]:{a:integer[0], b:integer[4]}[17]
 166[128]: ConstInt(val=6) -> integer
 171[132]: SetInt(v1: ref(reference), fld=4, val: integer)
 174[116]: ClearText(var[44]) var=__work_1[44]:text
 177[116]: ConstText(_value="") -> text
 179[132]: AppendText(var[44], v1: text)
 182[116]: VarVector(var[92]) -> vector type=vector<Elm>[4]:Vector(17)[19] var=v[92]:vector<ref(Elm)>["__ref_1"]
 185[128]: FormatDatabase(var[44], val: ref(reference), db_tp=19, pretty=false)
 191[116]: ConstText(_value=" sizeof ") -> text
 201[132]: AppendText(var[44], v1: text)
 204[116]: ConstInt(val=8) -> integer
 209[120]: ConstInt(val=0) -> integer
 214[124]: FormatInt(var[44], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 221[116]: VarText(var[44]) -> text var=__work_1[44]:text
 224[132]: FreeStack(value=16, discard=40)
 228[108]: AppendText(var[68], v1: text)
 231[92]: VarText(var[68]) -> text var=test_value[68]:text
 234[108]: ConstText(_value="[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8") -> text
 278[124]: EqText(v1: text, v2: text) -> boolean
 279[93]: GotoFalseWord(jump=285, if_false: boolean)
 282[92]: GotoWord(jump=375)
 285[92]: ClearText(var[20]) var=__work_2[20]:text
 288[92]: ConstText(_value="Test failed ") -> text
 302[108]: AppendText(var[20], v1: text)
 305[92]: VarText(var[68]) -> text var=test_value[68]:text
 308[108]: ConstInt(val=0) -> integer
 313[112]: FormatText(var[20], val: text, width: integer, dir=-1, token=32)
 318[92]: ConstText(_value=" != "[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8"") -> text
 368[108]: AppendText(var[20], v1: text)
 371[92]: VarText(var[20]) -> text var=__work_2[20]:text
 374[108]: Panic(message: text)
 375[92]: FreeText(var[68])
 378[92]: VarRef(var[8]) -> ref(reference) type=main_vector<Elm>[8]:{vector:vector<Elm>[4]}[18] var=__ref_1[8]:ref(main_vector<Elm>)
 381[104]: FreeRef(v1: ref(reference))
 382[92]: FreeText(var[44])
 385[92]: FreeText(var[20])
 388[92]: Return(ret=0, value=0, discard=88)

Execute test:
    0:[8] ConvRefFromNull() -> ref(1,0,0)[8]
    1:[20] Text()
    2:[44] Text()
    3:[68] Text()
    4:[92] Database(var[8], db_tp=18)
    9:[92] VarRef(var[8]) -> ref(1,1,0)={}[92]
   12:[104] GetField(v1=ref(1,1,0)[92], fld=4) -> ref(1,1,4)=[][92]
   15:[104] VarRef(var[8]) -> ref(1,1,0)={}[104]
   18:[116] ConstInt(val=0) -> 0[116]
   23:[120] SetInt(v1=ref(1,1,0)[104], fld=4, val=0[116])
   26:[104] VarVector(var[92]) -> ref(1,1,4)=[][104]
   29:[116] NewRecord(data=ref(1,1,4)[104], parent_tp=19, fld=65535) -> ref(1,9,8)[104]
   34:[116] VarRef(var[104]) -> ref(1,9,8)={}[116]
   37:[128] ConstInt(val=1) -> 1[128]
   42:[132] SetInt(v1=ref(1,9,8)[116], fld=0, val=1[128])
   45:[116] VarRef(var[104]) -> ref(1,9,8)={a:1}[116]
   48:[128] ConstInt(val=2) -> 2[128]
   53:[132] SetInt(v1=ref(1,9,8)[116], fld=4, val=2[128])
   56:[116] VarVector(var[92]) -> ref(1,1,4)=[{a:1,b:2}][116]
   59:[128] VarRef(var[104]) -> ref(1,9,8)={a:1,b:2}[128]
   62:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,9,8)[128], parent_tp=19, fld=65535)
   67:[116] VarVector(var[92]) -> ref(1,1,4)=[{a:1,b:2}][116]
   70:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=19, fld=65535) -> ref(1,9,16)[116]
   75:[128] PutRef(var[104], value=ref(1,9,16)[116])
   78:[116] VarRef(var[104]) -> ref(1,9,16)={}[116]
   81:[128] ConstInt(val=12) -> 12[128]
   86:[132] SetInt(v1=ref(1,9,16)[116], fld=0, val=12[128])
   89:[116] VarRef(var[104]) -> ref(1,9,16)={a:12}[116]
   92:[128] ConstInt(val=13) -> 13[128]
   97:[132] SetInt(v1=ref(1,9,16)[116], fld=4, val=13[128])
  100:[116] VarVector(var[92]) -> ref(1,1,4)=[{a:1,b:2},{a:12,b:13}][116]
  103:[128] VarRef(var[104]) -> ref(1,9,16)={a:12,b:13}[128]
  106:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,9,16)[128], parent_tp=19, fld=65535)
  111:[116] VarVector(var[92]) -> ref(1,1,4)=[{a:1,b:2},{a:12,b:13}][116]
  114:[128] NewRecord(data=ref(1,1,4)[116], parent_tp=19, fld=65535) -> ref(1,9,24)[116]
  119:[128] PutRef(var[104], value=ref(1,9,24)[116])
  122:[116] VarRef(var[104]) -> ref(1,9,24)={}[116]
  125:[128] ConstInt(val=4) -> 4[128]
  130:[132] SetInt(v1=ref(1,9,24)[116], fld=0, val=4[128])
  133:[116] VarRef(var[104]) -> ref(1,9,24)={a:4}[116]
  136:[128] ConstInt(val=5) -> 5[128]
  141:[132] SetInt(v1=ref(1,9,24)[116], fld=4, val=5[128])
  144:[116] VarVector(var[92]) -> ref(1,1,4)=[{a:1,b:2},{a:12,b:13},{a:4,b:5}][116]
  147:[128] VarRef(var[104]) -> ref(1,9,24)={a:4,b:5}[128]
  150:[140] FinishRecord(data=ref(1,1,4)[116], rec=ref(1,9,24)[128], parent_tp=19, fld=65535)
  155:[116] VarVector(var[92]) -> ref(1,1,4)=[{a:1,b:2},{a:12,b:13},{a:4,b:5}][116]
  158:[128] ConstInt(val=2) -> 2[128]
  163:[132] GetVector(r=ref(1,1,4)[116], size=8, index=2[128]) -> ref(1,9,24)={a:4,b:5}[116]
  166:[128] ConstInt(val=6) -> 6[128]
  171:[132] SetInt(v1=ref(1,9,24)[116], fld=4, val=6[128])
  174:[116] ClearText(var[44])
  177:[116] ConstText(_value="") -> ""[116]
  179:[132] AppendText(var[44], v1=""[116])
  182:[116] VarVector(var[92]) -> ref(1,1,4)=[{a:1,b:2},{a:12,b:13},{a:4,b:6}][116]
  185:[128] FormatDatabase(var[44], val=ref(1,1,4)[116], db_tp=19, pretty=false)
  191:[116] ConstText(_value=" sizeof ") -> " sizeof "[116]
  201:[132] AppendText(var[44], v1=" sizeof "[116])
  204:[116] ConstInt(val=8) -> 8[116]
  209:[120] ConstInt(val=0) -> 0[120]
  214:[124] FormatInt(var[44], val=8[116], radix=10, width=0[120], token=32, plus=false, note=false)
  221:[116] VarText(var[44]) -> "[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8"[116]
  224:[132] FreeStack(value=16, discard=40)
  228:[108] AppendText(var[68], v1="[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8"[92])
  231:[92] VarText(var[68]) -> "[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8"[92]
  234:[108] ConstText(_value="[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8") -> "[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8"[108]
  278:[124] EqText(v1="[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8"[92], v2="[{a:1,b:2},{a:12,b:13},{a:4,b:6}] sizeof 8"[108]) -> true[92]
  279:[93] GotoFalseWord(jump=285, if_false=true[92])
  282:[92] GotoWord(jump=375)
  375:[92] FreeText(var[68])
  378:[92] VarRef(var[8]) -> ref(1,1,0)={vector:[{a:1,b:2},{a:12,b:13},{a:4,b:6}]}[92]
  381:[104] FreeRef(v1=ref(1,1,0)[92])
  382:[92] FreeText(var[44])
  385:[92] FreeText(var[20])
  388:[92] Return(ret=4294967295[4], value=0, discard=88)
Finished
