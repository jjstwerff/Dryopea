enum Number { One, Two, Three, Four }

pub fn test() {
    test_value = {null < 3 as Number};
    assert(
        test_value == false,
        "Test failed {test_value} != false"
    );
}
Type 11:Number[1]:Enum(["One", "Two", "Three", "Four"])

fn test() {#1 block
  __work_1:text = "";
  test_value:boolean = {#2 block
    OpLtEnum(OpConvEnumFromNull(), OpCastEnumFromInt(3i32, 11i32));
  }#2:boolean;
  if OpEqBool(test_value, false) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatBool(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != false");
    __work_1;
  }#3:text);
}#1

byte-code for null_enum:test()
 675[0]: return-address
 675[4]: Text()
 676[28]: ConvEnumFromNull() -> enumerate type=integer[4]:Base[0]
 677[29]: ConstInt(val=3) -> integer
 682[33]: CastEnumFromInt(v1: integer) -> enumerate type=Number[1]:Enum(["One", "Two", "Three", "Four"])[11]
 683[30]: LtEnum(v1: enumerate, v2: enumerate) -> boolean
 684[29]: VarBool(var[28]) -> boolean
 687[30]: ConstFalse() -> boolean
 688[31]: EqBool(v1: boolean, v2: boolean) -> boolean
 689[30]: GotoFalseWord(jump=695, if_false: boolean)
 692[29]: GotoWord(jump=746)
 695[29]: ClearText(var[4])
 698[29]: ConstText(_value="Test failed ") -> text
 712[45]: AppendText(var[4], v1: text)
 715[29]: VarBool(var[28]) -> boolean
 718[30]: ConstInt(val=0) -> integer
 723[34]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 728[29]: ConstText(_value=" != false") -> text
 739[45]: AppendText(var[4], v1: text)
 742[29]: VarText(var[4]) -> text
 745[45]: Panic(message: text)
 746[29]: Return(ret=0, value=0, discard=29)

Execute test:
  675:[8] Text()
  676:[32] ConvEnumFromNull() -> null(255)[32]
  677:[33] ConstInt(val=3) -> 3[33]
  682:[37] CastEnumFromInt(v1=3[33]) -> Three(3)[33]
  683:[34] LtEnum(v1=255[32], v2=3[33]) -> false[32]
  684:[33] VarBool(var[32]) -> false[33]
  687:[34] ConstFalse() -> false[34]
  688:[35] EqBool(v1=false[33], v2=false[34]) -> true[33]
  689:[34] GotoFalseWord(jump=695, if_false=true[33])
  692:[33] GotoWord(jump=746)
  746:[33] Return(ret=4294967295[4], value=0, discard=29)
Finished
