Test code:
enum Number { One, Two, Three, Four }

pub fn test() {
    test_value = {null < 3 as Number};
    assert(
        test_value == false,
        "Test failed {test_value} != false"
    );
}

Type 13:Number[1]:Enum(["One", "Two", "Three", "Four"])

fn test {
  let test_value = {
    OpLtEnum(OpConvEnumFromNull(), OpCastEnumFromInt(3i32, 13i32));
  };
  if OpEqBool(test_value, false) {null} else {OpGenPanic({
    let append_7 = "Test failed ";
    OpFormatBool(append_7, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_7, " != false");
    append_7;
  })};
}

byte-code for null_enum:test()
 664[0]: return-address
 664[4]: ConvEnumFromNull() -> enumerate type=integer[4]:Base[0]
 665[5]: ConstInt(val=3) -> integer
 670[9]: CastEnumFromInt(v1: integer) -> enumerate type=Number[1]:Enum(["One", "Two", "Three", "Four"])[13]
 671[6]: LtEnum(v1: enumerate, v2: enumerate) -> boolean
 672[5]: VarBool(var[4]) -> boolean
 675[6]: ConstFalse() -> boolean
 676[7]: EqBool(v1: boolean, v2: boolean) -> boolean
 677[6]: GenGotoFalseWord(jump=683, if_false: boolean)
 680[5]: GenGotoWord(jump=736)
 683[5]: Text()
 684[29]: ConstText(_value="Test failed ") -> text
 698[45]: AppendText(var[5], v1: text)
 701[29]: VarBool(var[4]) -> boolean
 704[30]: ConstInt(val=0) -> integer
 709[34]: FormatBool(var[5], val: boolean, width: integer, dir=-1, token=32)
 714[29]: ConstText(_value=" != false") -> text
 725[45]: AppendText(var[5], v1: text)
 728[29]: VarText(var[5]) -> text
 731[45]: GenFreeStack(value=16, discard=24)
 735[21]: GenPanic(message: text)
 736[5]: GenReturn(ret=0, value=0, discard=5)

Execute test:
  664:[4] ConvEnumFromNull() -> null(255)[4]
  665:[5] ConstInt(val=3) -> 3[5]
  670:[9] CastEnumFromInt(v1=3[5]) -> Three(3)[5]
  671:[6] LtEnum(v1=255[4], v2=3[5]) -> false[4]
  672:[5] VarBool(var[4]) -> false[5]
  675:[6] ConstFalse() -> false[6]
  676:[7] EqBool(v1=false[5], v2=false[6]) -> true[5]
  677:[6] GenGotoFalseWord(jump=683, if_false=true[5])
  680:[5] GenGotoWord(jump=736)
  736:[5] GenReturn(ret=4294967295[0], value=0, discard=5)
Finished
