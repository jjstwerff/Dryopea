enum Number { One, Two, Three, Four }

pub fn test() {
    test_value = {null < 3 as Number};
    assert(
        test_value == false,
        "Test failed {test_value} != false"
    );
}
Type 12:Number[1]:Enum(["One", "Two", "Three", "Four"])

fn test() {#1 block
  __work_1:text = "";
  test_value:boolean = {#2 block
    OpLtEnum(OpConvEnumFromNull(), OpCastEnumFromInt(3i32, 12i32));
  }#2:boolean;
  if OpEqBool(test_value, false) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatBool(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != false");
    __work_1;
  }#3:text);
}#1

byte-code for null_enum:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: ConvEnumFromNull() -> enumerate type=integer[4]:Base[0]
 693[29]: ConstInt(val=3) -> integer
 698[33]: CastEnumFromInt(v1: integer) -> enumerate type=Number[1]:Enum(["One", "Two", "Three", "Four"])[12]
 699[30]: LtEnum(v1: enumerate, v2: enumerate) -> boolean
 700[29]: VarBool(var[28]) -> boolean
 703[30]: ConstFalse() -> boolean
 704[31]: EqBool(v1: boolean, v2: boolean) -> boolean
 705[30]: GotoFalseWord(jump=711, if_false: boolean)
 708[29]: GotoWord(jump=762)
 711[29]: ClearText(var[4])
 714[29]: ConstText(_value="Test failed ") -> text
 728[45]: AppendText(var[4], v1: text)
 731[29]: VarBool(var[28]) -> boolean
 734[30]: ConstInt(val=0) -> integer
 739[34]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 744[29]: ConstText(_value=" != false") -> text
 755[45]: AppendText(var[4], v1: text)
 758[29]: VarText(var[4]) -> text
 761[45]: Panic(message: text)
 762[29]: FreeText(var[4])
 765[29]: Return(ret=0, value=0, discard=29)

Execute test:
  691:[8] Text()
  692:[32] ConvEnumFromNull() -> null(255)[32]
  693:[33] ConstInt(val=3) -> 3[33]
  698:[37] CastEnumFromInt(v1=3[33]) -> Three(3)[33]
  699:[34] LtEnum(v1=255[32], v2=3[33]) -> false[32]
  700:[33] VarBool(var[32]) -> false[33]
  703:[34] ConstFalse() -> false[34]
  704:[35] EqBool(v1=false[33], v2=false[34]) -> true[33]
  705:[34] GotoFalseWord(jump=711, if_false=true[33])
  708:[33] GotoWord(jump=762)
  762:[33] FreeText(var[8])
  765:[33] Return(ret=4294967295[4], value=0, discard=29)
Finished
