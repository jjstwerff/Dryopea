pub fn test() {
    test_value = {"something".starts_with("someone")};
    assert(
        test_value == false,
        "Test failed {test_value} != false"
    );
}
fn test() {#block(1):void
  __work_1(1):text = "";
  test_value(1):boolean = {#block(2):boolean
    _tp_text_starts_with("something", "someone");
  }#block(2):boolean;
  if OpEqBool(test_value(1), false) null else OpPanic({#Formatted string(3):text
    __work_1(1):text = "Test failed ";
    OpFormatBool(__work_1(1), test_value(1), 0i32, -1i32, 32i32);
    OpAppendText(__work_1(1), " != false");
    __work_1(1);
  }#Formatted string(3):text);
  OpFreeText(__work_1(1));
}#block(1):void

byte-code for starts:test() [1119]
   0[4]: return-address
   0[8]: Text() var=__work_1[8]:text
   1[32]: ConstText(_value="something") -> text var=test_value[32]:boolean
  12[48]: ConstText(_value="someone") -> text
  21[64]: StaticCall(_tp_text_starts_with)
  24[33]: VarBool(var[32]) -> boolean var=test_value[32]:boolean
  27[34]: ConstFalse() -> boolean
  28[35]: EqBool(v1: boolean, v2: boolean) -> boolean
  29[34]: GotoFalseWord(jump=35, if_false: boolean)
  32[33]: GotoWord(jump=86)
  35[33]: ClearText(var[8]) var=__work_1[8]:text
  38[33]: ConstText(_value="Test failed ") -> text
  52[49]: AppendText(var[8], v1: text)
  55[33]: VarBool(var[32]) -> boolean var=test_value[32]:boolean
  58[34]: ConstInt(val=0) -> integer
  63[38]: FormatBool(var[8], val: boolean, width: integer, dir=-1, token=32)
  68[33]: ConstText(_value=" != false") -> text
  79[49]: AppendText(var[8], v1: text)
  82[33]: VarText(var[8]) -> text var=__work_1[8]:text
  85[49]: Panic(message: text)
  86[33]: FreeText(var[8])
  89[33]: Return(ret=0, value=0, discard=29)

Execute test:
    0:[8] Text()
    1:[32] ConstText(_value="something") -> "something"[32]
   12:[48] ConstText(_value="someone") -> "someone"[48]
   21:[64] StaticCall(_tp_text_starts_with)
   24:[33] VarBool(var[32]) -> false[33]
   27:[34] ConstFalse() -> false[34]
   28:[35] EqBool(v1=false[33], v2=false[34]) -> true[33]
   29:[34] GotoFalseWord(jump=35, if_false=true[33])
   32:[33] GotoWord(jump=86)
   86:[33] FreeText(var[8])
   89:[33] Return(ret=4294967295[4], value=0, discard=29)
Finished
