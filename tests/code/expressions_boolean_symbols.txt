pub fn test() {
    test_value = {123 || (12 && false)};
    assert(
        test_value == true,
        "Test failed {test_value} != true"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:boolean = {#2 block
    if OpConvBoolFromInt(123i32) true else if OpConvBoolFromInt(12i32) false else false;
  }#2:boolean;
  if OpEqBool(test_value, true) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatBool(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != true");
    __work_1;
  }#3:text);
}#1

byte-code for boolean_symbols:test()
 691[0]: return-address
 691[4]: Text()
 692[28]: ConstInt(val=123) -> integer
 697[32]: ConvBoolFromInt(v1: integer) -> boolean
 698[29]: GotoFalseWord(jump=705, if_false: boolean)
 701[28]: ConstTrue() -> boolean
 702[29]: GotoWord(jump=719)
 705[28]: ConstInt(val=12) -> integer
 710[32]: ConvBoolFromInt(v1: integer) -> boolean
 711[29]: GotoFalseWord(jump=718, if_false: boolean)
 714[28]: ConstFalse() -> boolean
 715[29]: GotoWord(jump=719)
 718[28]: ConstFalse() -> boolean
 719[29]: VarBool(var[28]) -> boolean
 722[30]: ConstTrue() -> boolean
 723[31]: EqBool(v1: boolean, v2: boolean) -> boolean
 724[30]: GotoFalseWord(jump=730, if_false: boolean)
 727[29]: GotoWord(jump=780)
 730[29]: ClearText(var[4])
 733[29]: ConstText(_value="Test failed ") -> text
 747[45]: AppendText(var[4], v1: text)
 750[29]: VarBool(var[28]) -> boolean
 753[30]: ConstInt(val=0) -> integer
 758[34]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 763[29]: ConstText(_value=" != true") -> text
 773[45]: AppendText(var[4], v1: text)
 776[29]: VarText(var[4]) -> text
 779[45]: Panic(message: text)
 780[29]: FreeText(var[4])
 783[29]: Return(ret=0, value=0, discard=29)

Execute test:
  691:[8] Text()
  692:[32] ConstInt(val=123) -> 123[32]
  697:[36] ConvBoolFromInt(v1=123[32]) -> true[32]
  698:[33] GotoFalseWord(jump=705, if_false=true[32])
  701:[32] ConstTrue() -> true[32]
  702:[33] GotoWord(jump=719)
  719:[33] VarBool(var[32]) -> true[33]
  722:[34] ConstTrue() -> true[34]
  723:[35] EqBool(v1=true[33], v2=true[34]) -> true[33]
  724:[34] GotoFalseWord(jump=730, if_false=true[33])
  727:[33] GotoWord(jump=780)
  780:[33] FreeText(var[8])
  783:[33] Return(ret=4294967295[4], value=0, discard=29)
Finished
