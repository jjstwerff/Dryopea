pub fn test() {
    test_value = {123 || (12 && false)};
    assert(
        test_value == true,
        "Test failed {test_value} != true"
    );
}
fn test {#1 block
  let __work_1 = "";
  let test_value = {#2 block
    if OpConvBoolFromInt(123i32) true else if OpConvBoolFromInt(12i32) false else false;
  }#2;
  if OpEqBool(test_value, true) null else OpGenPanic({#3 formatting string
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatBool(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != true");
    __work_1;
  }#3);
}#1

byte-code for boolean_symbols:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstInt(val=123) -> integer
 674[32]: ConvBoolFromInt(v1: integer) -> boolean
 675[29]: GenGotoFalseWord(jump=682, if_false: boolean)
 678[28]: ConstTrue() -> boolean
 679[29]: GenGotoWord(jump=696)
 682[28]: ConstInt(val=12) -> integer
 687[32]: ConvBoolFromInt(v1: integer) -> boolean
 688[29]: GenGotoFalseWord(jump=695, if_false: boolean)
 691[28]: ConstFalse() -> boolean
 692[29]: GenGotoWord(jump=696)
 695[28]: ConstFalse() -> boolean
 696[29]: VarBool(var[28]) -> boolean
 699[30]: ConstTrue() -> boolean
 700[31]: EqBool(v1: boolean, v2: boolean) -> boolean
 701[30]: GenGotoFalseWord(jump=707, if_false: boolean)
 704[29]: GenGotoWord(jump=757)
 707[29]: ClearText(var[4])
 710[29]: ConstText(_value="Test failed ") -> text(false, [])
 724[45]: AppendText(var[4], v1: text(false, []))
 727[29]: VarBool(var[28]) -> boolean
 730[30]: ConstInt(val=0) -> integer
 735[34]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 740[29]: ConstText(_value=" != true") -> text(false, [])
 750[45]: AppendText(var[4], v1: text(false, []))
 753[29]: VarText(var[4]) -> text(false, [])
 756[45]: GenPanic(message: text(false, []))
 757[29]: GenReturn(ret=0, value=0, discard=29)

Execute test:
  668:[8] Text()
  669:[32] ConstInt(val=123) -> 123[32]
  674:[36] ConvBoolFromInt(v1=123[32]) -> true[32]
  675:[33] GenGotoFalseWord(jump=682, if_false=true[32])
  678:[32] ConstTrue() -> true[32]
  679:[33] GenGotoWord(jump=696)
  696:[33] VarBool(var[32]) -> true[33]
  699:[34] ConstTrue() -> true[34]
  700:[35] EqBool(v1=true[33], v2=true[34]) -> true[33]
  701:[34] GenGotoFalseWord(jump=707, if_false=true[33])
  704:[33] GenGotoWord(jump=757)
  757:[33] GenReturn(ret=4294967295[4], value=0, discard=29)
Finished
