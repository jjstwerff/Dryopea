Test code:
fn first(s: State, c: integer) -> integer {
	if s == Start {
		s = Ongoing
	} else if c > 10 {
		s = Halt
	}
	second(s, c)
}

fn second(s: State, c: integer) -> integer {
	if s != Halt {
		first(s, c + 1)
	} else {
		1 + c
	}
}

enum State {
	Start,
	Ongoing,
	Halt
}

pub fn test() {
    test_value = {first(Start, 0)};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}

Type 13:State[1]:Enum(["Start", "Ongoing", "Halt"])

fn first {
  if OpEqEnum(s, 1u8(13)) {{
    s = 2u8(13);
  }} else {if OpGtInt(c, 10i32) {{
    s = 3u8(13);
  }} else {null}};
  second(s, c);
}

byte-code for recursion:first(s: State[0], c: integer[1]) -> integer
 668[5]: return-address
 668[9]: VarEnum(var[0]) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[13]
 671[10]: ConstEnum(val=1) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[13]
 673[11]: EqEnum(v1: enumerate, v2: enumerate) -> boolean
 674[10]: GenGotoFalseWord(jump=685, if_false: boolean)
 677[9]: ConstEnum(val=2) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[13]
 679[10]: PutEnum(var[0], value: enumerate)
 682[9]: GenGotoWord(jump=702)
 685[9]: VarInt(var[1]) -> integer
 688[13]: ConstInt(val=10) -> integer
 693[17]: GtInt(v1: integer, v2: integer) -> boolean
 694[10]: GenGotoFalseWord(jump=702, if_false: boolean)
 697[9]: ConstEnum(val=3) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[13]
 699[10]: PutEnum(var[0], value: enumerate)
 702[9]: VarEnum(var[0]) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[13]
 705[10]: VarInt(var[1]) -> integer
 708[14]: GenCall(size=0, to=0)
 715[13]: GenReturn(ret=5, value=4, discard=13)

fn second {
  if OpNeEnum(s, 3u8(13)) {{
    first(s, OpAddInt(c, 1i32));
  }} else {{
    OpAddInt(1i32, c);
  }};
}

byte-code for recursion:second(s: State[0], c: integer[1]) -> integer
 721[5]: return-address
 721[9]: VarEnum(var[0]) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[13]
 724[10]: ConstEnum(val=3) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[13]
 726[11]: NeEnum(v1: enumerate, v2: enumerate) -> boolean
 727[10]: GenGotoFalseWord(jump=752, if_false: boolean)
 730[9]: VarEnum(var[0]) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[13]
 733[10]: VarInt(var[1]) -> integer
 736[14]: ConstInt(val=1) -> integer
 741[18]: AddInt(v1: integer, v2: integer) -> integer
 742[14]: GenCall(size=0, to=668)
 749[13]: GenGotoWord(jump=761)
 752[9]: ConstInt(val=1) -> integer
 757[13]: VarInt(var[1]) -> integer
 760[17]: AddInt(v1: integer, v2: integer) -> integer
 761[13]: GenReturn(ret=5, value=4, discard=13)

fn test {
  let test_value = {
    first(1u8(13), 0i32);
  };
  if OpEqInt(test_value, 12i32) {null} else {OpGenPanic({
    let append_7 = "Test failed ";
    OpFormatInt(append_7, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_7, " != 12");
    append_7;
  })};
}

byte-code for recursion:test()
 767[0]: return-address
 767[4]: ConstEnum(val=1) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[13]
 769[5]: ConstInt(val=0) -> integer
 774[9]: GenCall(size=0, to=668)
 781[8]: VarInt(var[4]) -> integer
 784[12]: ConstInt(val=12) -> integer
 789[16]: EqInt(v1: integer, v2: integer) -> boolean
 790[9]: GenGotoFalseWord(jump=796, if_false: boolean)
 793[8]: GenGotoWord(jump=848)
 796[8]: Text()
 797[32]: ConstText(_value="Test failed ") -> text
 811[48]: AppendText(var[8], v1: text)
 814[32]: VarInt(var[4]) -> integer
 817[36]: ConstInt(val=0) -> integer
 822[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 829[32]: ConstText(_value=" != 12") -> text
 837[48]: AppendText(var[8], v1: text)
 840[32]: VarText(var[8]) -> text
 843[48]: GenFreeStack(value=16, discard=24)
 847[24]: GenPanic(message: text)
 848[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
  767:[4] ConstEnum(val=1) -> Start(1)[4]
  769:[5] ConstInt(val=0) -> 0[5]
  774:[9] GenCall(size=0, to=668)
  668:[13] VarEnum(var[4]) -> Start(1)[13]
  671:[14] ConstEnum(val=1) -> Start(1)[14]
  673:[15] EqEnum(v1=1[13], v2=1[14]) -> true[13]
  674:[14] GenGotoFalseWord(jump=685, if_false=true[13])
  677:[13] ConstEnum(val=2) -> Ongoing(2)[13]
  679:[14] PutEnum(var[4], value=2[13])
  682:[13] GenGotoWord(jump=702)
  702:[13] VarEnum(var[4]) -> Ongoing(2)[13]
  705:[14] VarInt(var[5]) -> 0[14]
  708:[18] GenCall(size=0, to=721)
  721:[22] VarEnum(var[13]) -> Ongoing(2)[22]
  724:[23] ConstEnum(val=3) -> Halt(3)[23]
  726:[24] NeEnum(v1=2[22], v2=3[23]) -> true[22]
  727:[23] GenGotoFalseWord(jump=752, if_false=true[22])
  730:[22] VarEnum(var[13]) -> Ongoing(2)[22]
  733:[23] VarInt(var[14]) -> 0[23]
  736:[27] ConstInt(val=1) -> 1[27]
  741:[31] AddInt(v1=0[23], v2=1[27]) -> 1[23]
  742:[27] GenCall(size=0, to=668)
  668:[31] VarEnum(var[22]) -> Ongoing(2)[31]
  671:[32] ConstEnum(val=1) -> Start(1)[32]
  673:[33] EqEnum(v1=2[31], v2=1[32]) -> false[31]
  674:[32] GenGotoFalseWord(jump=685, if_false=false[31])
  685:[31] VarInt(var[23]) -> 1[31]
  688:[35] ConstInt(val=10) -> 10[35]
  693:[39] GtInt(v1=1[31], v2=10[35]) -> false[31]
  694:[32] GenGotoFalseWord(jump=702, if_false=false[31])
  702:[31] VarEnum(var[22]) -> Ongoing(2)[31]
  705:[32] VarInt(var[23]) -> 1[32]
  708:[36] GenCall(size=0, to=721)
  721:[40] VarEnum(var[31]) -> Ongoing(2)[40]
  724:[41] ConstEnum(val=3) -> Halt(3)[41]
  726:[42] NeEnum(v1=2[40], v2=3[41]) -> true[40]
  727:[41] GenGotoFalseWord(jump=752, if_false=true[40])
  730:[40] VarEnum(var[31]) -> Ongoing(2)[40]
  733:[41] VarInt(var[32]) -> 1[41]
  736:[45] ConstInt(val=1) -> 1[45]
  741:[49] AddInt(v1=1[41], v2=1[45]) -> 2[41]
  742:[45] GenCall(size=0, to=668)
  668:[49] VarEnum(var[40]) -> Ongoing(2)[49]
  671:[50] ConstEnum(val=1) -> Start(1)[50]
  673:[51] EqEnum(v1=2[49], v2=1[50]) -> false[49]
  674:[50] GenGotoFalseWord(jump=685, if_false=false[49])
  685:[49] VarInt(var[41]) -> 2[49]
  688:[53] ConstInt(val=10) -> 10[53]
  693:[57] GtInt(v1=2[49], v2=10[53]) -> false[49]
  694:[50] GenGotoFalseWord(jump=702, if_false=false[49])
  702:[49] VarEnum(var[40]) -> Ongoing(2)[49]
  705:[50] VarInt(var[41]) -> 2[50]
  708:[54] GenCall(size=0, to=721)
  721:[58] VarEnum(var[49]) -> Ongoing(2)[58]
  724:[59] ConstEnum(val=3) -> Halt(3)[59]
  726:[60] NeEnum(v1=2[58], v2=3[59]) -> true[58]
  727:[59] GenGotoFalseWord(jump=752, if_false=true[58])
  730:[58] VarEnum(var[49]) -> Ongoing(2)[58]
  733:[59] VarInt(var[50]) -> 2[59]
  736:[63] ConstInt(val=1) -> 1[63]
  741:[67] AddInt(v1=2[59], v2=1[63]) -> 3[59]
  742:[63] GenCall(size=0, to=668)
  668:[67] VarEnum(var[58]) -> Ongoing(2)[67]
  671:[68] ConstEnum(val=1) -> Start(1)[68]
  673:[69] EqEnum(v1=2[67], v2=1[68]) -> false[67]
  674:[68] GenGotoFalseWord(jump=685, if_false=false[67])
  685:[67] VarInt(var[59]) -> 3[67]
  688:[71] ConstInt(val=10) -> 10[71]
  693:[75] GtInt(v1=3[67], v2=10[71]) -> false[67]
  694:[68] GenGotoFalseWord(jump=702, if_false=false[67])
  702:[67] VarEnum(var[58]) -> Ongoing(2)[67]
  705:[68] VarInt(var[59]) -> 3[68]
  708:[72] GenCall(size=0, to=721)
  721:[76] VarEnum(var[67]) -> Ongoing(2)[76]
  724:[77] ConstEnum(val=3) -> Halt(3)[77]
  726:[78] NeEnum(v1=2[76], v2=3[77]) -> true[76]
  727:[77] GenGotoFalseWord(jump=752, if_false=true[76])
  730:[76] VarEnum(var[67]) -> Ongoing(2)[76]
  733:[77] VarInt(var[68]) -> 3[77]
  736:[81] ConstInt(val=1) -> 1[81]
  741:[85] AddInt(v1=3[77], v2=1[81]) -> 4[77]
  742:[81] GenCall(size=0, to=668)
  668:[85] VarEnum(var[76]) -> Ongoing(2)[85]
  671:[86] ConstEnum(val=1) -> Start(1)[86]
  673:[87] EqEnum(v1=2[85], v2=1[86]) -> false[85]
  674:[86] GenGotoFalseWord(jump=685, if_false=false[85])
  685:[85] VarInt(var[77]) -> 4[85]
  688:[89] ConstInt(val=10) -> 10[89]
  693:[93] GtInt(v1=4[85], v2=10[89]) -> false[85]
  694:[86] GenGotoFalseWord(jump=702, if_false=false[85])
  702:[85] VarEnum(var[76]) -> Ongoing(2)[85]
  705:[86] VarInt(var[77]) -> 4[86]
  708:[90] GenCall(size=0, to=721)
  721:[94] VarEnum(var[85]) -> Ongoing(2)[94]
  724:[95] ConstEnum(val=3) -> Halt(3)[95]
  726:[96] NeEnum(v1=2[94], v2=3[95]) -> true[94]
  727:[95] GenGotoFalseWord(jump=752, if_false=true[94])
  730:[94] VarEnum(var[85]) -> Ongoing(2)[94]
  733:[95] VarInt(var[86]) -> 4[95]
  736:[99] ConstInt(val=1) -> 1[99]
  741:[103] AddInt(v1=4[95], v2=1[99]) -> 5[95]
  742:[99] GenCall(size=0, to=668)
  668:[103] VarEnum(var[94]) -> Ongoing(2)[103]
  671:[104] ConstEnum(val=1) -> Start(1)[104]
  673:[105] EqEnum(v1=2[103], v2=1[104]) -> false[103]
  674:[104] GenGotoFalseWord(jump=685, if_false=false[103])
  685:[103] VarInt(var[95]) -> 5[103]
  688:[107] ConstInt(val=10) -> 10[107]
  693:[111] GtInt(v1=5[103], v2=10[107]) -> false[103]
  694:[104] GenGotoFalseWord(jump=702, if_false=false[103])
  702:[103] VarEnum(var[94]) -> Ongoing(2)[103]
  705:[104] VarInt(var[95]) -> 5[104]
  708:[108] GenCall(size=0, to=721)
  721:[112] VarEnum(var[103]) -> Ongoing(2)[112]
  724:[113] ConstEnum(val=3) -> Halt(3)[113]
  726:[114] NeEnum(v1=2[112], v2=3[113]) -> true[112]
  727:[113] GenGotoFalseWord(jump=752, if_false=true[112])
  730:[112] VarEnum(var[103]) -> Ongoing(2)[112]
  733:[113] VarInt(var[104]) -> 5[113]
  736:[117] ConstInt(val=1) -> 1[117]
  741:[121] AddInt(v1=5[113], v2=1[117]) -> 6[113]
  742:[117] GenCall(size=0, to=668)
  668:[121] VarEnum(var[112]) -> Ongoing(2)[121]
  671:[122] ConstEnum(val=1) -> Start(1)[122]
  673:[123] EqEnum(v1=2[121], v2=1[122]) -> false[121]
  674:[122] GenGotoFalseWord(jump=685, if_false=false[121])
  685:[121] VarInt(var[113]) -> 6[121]
  688:[125] ConstInt(val=10) -> 10[125]
  693:[129] GtInt(v1=6[121], v2=10[125]) -> false[121]
  694:[122] GenGotoFalseWord(jump=702, if_false=false[121])
  702:[121] VarEnum(var[112]) -> Ongoing(2)[121]
  705:[122] VarInt(var[113]) -> 6[122]
  708:[126] GenCall(size=0, to=721)
  721:[130] VarEnum(var[121]) -> Ongoing(2)[130]
  724:[131] ConstEnum(val=3) -> Halt(3)[131]
  726:[132] NeEnum(v1=2[130], v2=3[131]) -> true[130]
  727:[131] GenGotoFalseWord(jump=752, if_false=true[130])
  730:[130] VarEnum(var[121]) -> Ongoing(2)[130]
  733:[131] VarInt(var[122]) -> 6[131]
  736:[135] ConstInt(val=1) -> 1[135]
  741:[139] AddInt(v1=6[131], v2=1[135]) -> 7[131]
  742:[135] GenCall(size=0, to=668)
  668:[139] VarEnum(var[130]) -> Ongoing(2)[139]
  671:[140] ConstEnum(val=1) -> Start(1)[140]
  673:[141] EqEnum(v1=2[139], v2=1[140]) -> false[139]
  674:[140] GenGotoFalseWord(jump=685, if_false=false[139])
  685:[139] VarInt(var[131]) -> 7[139]
  688:[143] ConstInt(val=10) -> 10[143]
  693:[147] GtInt(v1=7[139], v2=10[143]) -> false[139]
  694:[140] GenGotoFalseWord(jump=702, if_false=false[139])
  702:[139] VarEnum(var[130]) -> Ongoing(2)[139]
  705:[140] VarInt(var[131]) -> 7[140]
  708:[144] GenCall(size=0, to=721)
  721:[148] VarEnum(var[139]) -> Ongoing(2)[148]
  724:[149] ConstEnum(val=3) -> Halt(3)[149]
  726:[150] NeEnum(v1=2[148], v2=3[149]) -> true[148]
  727:[149] GenGotoFalseWord(jump=752, if_false=true[148])
  730:[148] VarEnum(var[139]) -> Ongoing(2)[148]
  733:[149] VarInt(var[140]) -> 7[149]
  736:[153] ConstInt(val=1) -> 1[153]
  741:[157] AddInt(v1=7[149], v2=1[153]) -> 8[149]
  742:[153] GenCall(size=0, to=668)
  668:[157] VarEnum(var[148]) -> Ongoing(2)[157]
  671:[158] ConstEnum(val=1) -> Start(1)[158]
  673:[159] EqEnum(v1=2[157], v2=1[158]) -> false[157]
  674:[158] GenGotoFalseWord(jump=685, if_false=false[157])
  685:[157] VarInt(var[149]) -> 8[157]
  688:[161] ConstInt(val=10) -> 10[161]
  693:[165] GtInt(v1=8[157], v2=10[161]) -> false[157]
  694:[158] GenGotoFalseWord(jump=702, if_false=false[157])
  702:[157] VarEnum(var[148]) -> Ongoing(2)[157]
  705:[158] VarInt(var[149]) -> 8[158]
  708:[162] GenCall(size=0, to=721)
  721:[166] VarEnum(var[157]) -> Ongoing(2)[166]
  724:[167] ConstEnum(val=3) -> Halt(3)[167]
  726:[168] NeEnum(v1=2[166], v2=3[167]) -> true[166]
  727:[167] GenGotoFalseWord(jump=752, if_false=true[166])
  730:[166] VarEnum(var[157]) -> Ongoing(2)[166]
  733:[167] VarInt(var[158]) -> 8[167]
  736:[171] ConstInt(val=1) -> 1[171]
  741:[175] AddInt(v1=8[167], v2=1[171]) -> 9[167]
  742:[171] GenCall(size=0, to=668)
  668:[175] VarEnum(var[166]) -> Ongoing(2)[175]
  671:[176] ConstEnum(val=1) -> Start(1)[176]
  673:[177] EqEnum(v1=2[175], v2=1[176]) -> false[175]
  674:[176] GenGotoFalseWord(jump=685, if_false=false[175])
  685:[175] VarInt(var[167]) -> 9[175]
  688:[179] ConstInt(val=10) -> 10[179]
  693:[183] GtInt(v1=9[175], v2=10[179]) -> false[175]
  694:[176] GenGotoFalseWord(jump=702, if_false=false[175])
  702:[175] VarEnum(var[166]) -> Ongoing(2)[175]
  705:[176] VarInt(var[167]) -> 9[176]
  708:[180] GenCall(size=0, to=721)
  721:[184] VarEnum(var[175]) -> Ongoing(2)[184]
  724:[185] ConstEnum(val=3) -> Halt(3)[185]
  726:[186] NeEnum(v1=2[184], v2=3[185]) -> true[184]
  727:[185] GenGotoFalseWord(jump=752, if_false=true[184])
  730:[184] VarEnum(var[175]) -> Ongoing(2)[184]
  733:[185] VarInt(var[176]) -> 9[185]
  736:[189] ConstInt(val=1) -> 1[189]
  741:[193] AddInt(v1=9[185], v2=1[189]) -> 10[185]
  742:[189] GenCall(size=0, to=668)
  668:[193] VarEnum(var[184]) -> Ongoing(2)[193]
  671:[194] ConstEnum(val=1) -> Start(1)[194]
  673:[195] EqEnum(v1=2[193], v2=1[194]) -> false[193]
  674:[194] GenGotoFalseWord(jump=685, if_false=false[193])
  685:[193] VarInt(var[185]) -> 10[193]
  688:[197] ConstInt(val=10) -> 10[197]
  693:[201] GtInt(v1=10[193], v2=10[197]) -> false[193]
  694:[194] GenGotoFalseWord(jump=702, if_false=false[193])
  702:[193] VarEnum(var[184]) -> Ongoing(2)[193]
  705:[194] VarInt(var[185]) -> 10[194]
  708:[198] GenCall(size=0, to=721)
  721:[202] VarEnum(var[193]) -> Ongoing(2)[202]
  724:[203] ConstEnum(val=3) -> Halt(3)[203]
  726:[204] NeEnum(v1=2[202], v2=3[203]) -> true[202]
  727:[203] GenGotoFalseWord(jump=752, if_false=true[202])
  730:[202] VarEnum(var[193]) -> Ongoing(2)[202]
  733:[203] VarInt(var[194]) -> 10[203]
  736:[207] ConstInt(val=1) -> 1[207]
  741:[211] AddInt(v1=10[203], v2=1[207]) -> 11[203]
  742:[207] GenCall(size=0, to=668)
  668:[211] VarEnum(var[202]) -> Ongoing(2)[211]
  671:[212] ConstEnum(val=1) -> Start(1)[212]
  673:[213] EqEnum(v1=2[211], v2=1[212]) -> false[211]
  674:[212] GenGotoFalseWord(jump=685, if_false=false[211])
  685:[211] VarInt(var[203]) -> 11[211]
  688:[215] ConstInt(val=10) -> 10[215]
  693:[219] GtInt(v1=11[211], v2=10[215]) -> true[211]
  694:[212] GenGotoFalseWord(jump=702, if_false=true[211])
  697:[211] ConstEnum(val=3) -> Halt(3)[211]
  699:[212] PutEnum(var[202], value=3[211])
  702:[211] VarEnum(var[202]) -> Halt(3)[211]
  705:[212] VarInt(var[203]) -> 11[212]
  708:[216] GenCall(size=0, to=721)
  721:[220] VarEnum(var[211]) -> Halt(3)[220]
  724:[221] ConstEnum(val=3) -> Halt(3)[221]
  726:[222] NeEnum(v1=3[220], v2=3[221]) -> false[220]
  727:[221] GenGotoFalseWord(jump=752, if_false=false[220])
  752:[220] ConstInt(val=1) -> 1[220]
  757:[224] VarInt(var[212]) -> 11[224]
  760:[228] AddInt(v1=1[220], v2=11[224]) -> 12[220]
  761:[224] GenReturn(ret=715[216], value=4, discard=13)
  715:[215] GenReturn(ret=749[207], value=4, discard=13)
  749:[206] GenGotoWord(jump=761)
  761:[206] GenReturn(ret=715[198], value=4, discard=13)
  715:[197] GenReturn(ret=749[189], value=4, discard=13)
  749:[188] GenGotoWord(jump=761)
  761:[188] GenReturn(ret=715[180], value=4, discard=13)
  715:[179] GenReturn(ret=749[171], value=4, discard=13)
  749:[170] GenGotoWord(jump=761)
  761:[170] GenReturn(ret=715[162], value=4, discard=13)
  715:[161] GenReturn(ret=749[153], value=4, discard=13)
  749:[152] GenGotoWord(jump=761)
  761:[152] GenReturn(ret=715[144], value=4, discard=13)
  715:[143] GenReturn(ret=749[135], value=4, discard=13)
  749:[134] GenGotoWord(jump=761)
  761:[134] GenReturn(ret=715[126], value=4, discard=13)
  715:[125] GenReturn(ret=749[117], value=4, discard=13)
  749:[116] GenGotoWord(jump=761)
  761:[116] GenReturn(ret=715[108], value=4, discard=13)
  715:[107] GenReturn(ret=749[99], value=4, discard=13)
  749:[98] GenGotoWord(jump=761)
  761:[98] GenReturn(ret=715[90], value=4, discard=13)
  715:[89] GenReturn(ret=749[81], value=4, discard=13)
  749:[80] GenGotoWord(jump=761)
  761:[80] GenReturn(ret=715[72], value=4, discard=13)
  715:[71] GenReturn(ret=749[63], value=4, discard=13)
  749:[62] GenGotoWord(jump=761)
  761:[62] GenReturn(ret=715[54], value=4, discard=13)
  715:[53] GenReturn(ret=749[45], value=4, discard=13)
  749:[44] GenGotoWord(jump=761)
  761:[44] GenReturn(ret=715[36], value=4, discard=13)
  715:[35] GenReturn(ret=749[27], value=4, discard=13)
  749:[26] GenGotoWord(jump=761)
  761:[26] GenReturn(ret=715[18], value=4, discard=13)
  715:[17] GenReturn(ret=781[9], value=4, discard=13)
  781:[8] VarInt(var[4]) -> 12[8]
  784:[12] ConstInt(val=12) -> 12[12]
  789:[16] EqInt(v1=12[8], v2=12[12]) -> true[8]
  790:[9] GenGotoFalseWord(jump=796, if_false=true[8])
  793:[8] GenGotoWord(jump=848)
  848:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
