fn first(s: State, c: integer) -> integer {
	if s == Start {
		s = Ongoing
	} else if c > 10 {
		s = Halt
	}
	second(s, c)
}

fn second(s: State, c: integer) -> integer {
	if s != Halt {
		first(s, c + 1)
	} else {
		1 + c
	}
}

enum State {
	Start,
	Ongoing,
	Halt
}

pub fn test() {
    test_value = {first(Start, 0)};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}
Type 12:State[1]:Enum(["Start", "Ongoing", "Halt"])

fn first(s:State, c:integer) -> integer {#1 block
  if OpEqEnum(s, 1u8(12)) {#2 block
    s:State = 2u8(12);
  }#2 else if OpGtInt(c, 10i32) {#3 block
    s:State = 3u8(12);
  }#3 else null;
  second(s, c);
}#1:integer

byte-code for recursion:first(s: State[0], c: integer[1]) -> integer
 691[5]: return-address
 691[9]: VarEnum(var[0]) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[12]
 694[10]: ConstEnum(val=1) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[12]
 696[11]: EqEnum(v1: enumerate, v2: enumerate) -> boolean
 697[10]: GotoFalseWord(jump=708, if_false: boolean)
 700[9]: ConstEnum(val=2) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[12]
 702[10]: PutEnum(var[0], value: enumerate)
 705[9]: GotoWord(jump=725)
 708[9]: VarInt(var[1]) -> integer
 711[13]: ConstInt(val=10) -> integer
 716[17]: GtInt(v1: integer, v2: integer) -> boolean
 717[10]: GotoFalseWord(jump=725, if_false: boolean)
 720[9]: ConstEnum(val=3) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[12]
 722[10]: PutEnum(var[0], value: enumerate)
 725[9]: VarEnum(var[0]) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[12]
 728[10]: VarInt(var[1]) -> integer
 731[14]: Call(size=0, to=0)
 738[13]: Return(ret=5, value=4, discard=13) type=integer[4]:Base[0]

fn second(s:State, c:integer) -> integer {#1 block
  if OpNeEnum(s, 3u8(12)) {#2 block
    first(s, OpAddInt(c, 1i32));
  }#2:integer else {#3 block
    OpAddInt(1i32, c);
  }#3:integer;
}#1:integer

byte-code for recursion:second(s: State[0], c: integer[1]) -> integer
 744[5]: return-address
 744[9]: VarEnum(var[0]) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[12]
 747[10]: ConstEnum(val=3) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[12]
 749[11]: NeEnum(v1: enumerate, v2: enumerate) -> boolean
 750[10]: GotoFalseWord(jump=775, if_false: boolean)
 753[9]: VarEnum(var[0]) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[12]
 756[10]: VarInt(var[1]) -> integer
 759[14]: ConstInt(val=1) -> integer
 764[18]: AddInt(v1: integer, v2: integer) -> integer
 765[14]: Call(size=0, to=691)
 772[13]: GotoWord(jump=784)
 775[9]: ConstInt(val=1) -> integer
 780[13]: VarInt(var[1]) -> integer
 783[17]: AddInt(v1: integer, v2: integer) -> integer
 784[13]: Return(ret=5, value=4, discard=13) type=integer[4]:Base[0]

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    first(1u8(12), 0i32);
  }#2:integer;
  if OpEqInt(test_value, 12i32) null else OpPanic({#3 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 12");
    __work_1;
  }#3:text);
}#1

byte-code for recursion:test()
 790[0]: return-address
 790[4]: Text()
 791[28]: ConstEnum(val=1) -> enumerate type=State[1]:Enum(["Start", "Ongoing", "Halt"])[12]
 793[29]: ConstInt(val=0) -> integer
 798[33]: Call(size=0, to=691)
 805[32]: VarInt(var[28]) -> integer
 808[36]: ConstInt(val=12) -> integer
 813[40]: EqInt(v1: integer, v2: integer) -> boolean
 814[33]: GotoFalseWord(jump=820, if_false: boolean)
 817[32]: GotoWord(jump=870)
 820[32]: ClearText(var[4])
 823[32]: ConstText(_value="Test failed ") -> text
 837[48]: AppendText(var[4], v1: text)
 840[32]: VarInt(var[28]) -> integer
 843[36]: ConstInt(val=0) -> integer
 848[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 855[32]: ConstText(_value=" != 12") -> text
 863[48]: AppendText(var[4], v1: text)
 866[32]: VarText(var[4]) -> text
 869[48]: Panic(message: text)
 870[32]: FreeText(var[4])
 873[32]: Return(ret=0, value=0, discard=32)

Execute test:
  790:[8] Text()
  791:[32] ConstEnum(val=1) -> Start(1)[32]
  793:[33] ConstInt(val=0) -> 0[33]
  798:[37] Call(size=0, to=691)
  691:[41] VarEnum(var[32]) -> Start(1)[41]
  694:[42] ConstEnum(val=1) -> Start(1)[42]
  696:[43] EqEnum(v1=1[41], v2=1[42]) -> true[41]
  697:[42] GotoFalseWord(jump=708, if_false=true[41])
  700:[41] ConstEnum(val=2) -> Ongoing(2)[41]
  702:[42] PutEnum(var[32], value=2[41])
  705:[41] GotoWord(jump=725)
  725:[41] VarEnum(var[32]) -> Ongoing(2)[41]
  728:[42] VarInt(var[33]) -> 0[42]
  731:[46] Call(size=0, to=744)
  744:[50] VarEnum(var[41]) -> Ongoing(2)[50]
  747:[51] ConstEnum(val=3) -> Halt(3)[51]
  749:[52] NeEnum(v1=2[50], v2=3[51]) -> true[50]
  750:[51] GotoFalseWord(jump=775, if_false=true[50])
  753:[50] VarEnum(var[41]) -> Ongoing(2)[50]
  756:[51] VarInt(var[42]) -> 0[51]
  759:[55] ConstInt(val=1) -> 1[55]
  764:[59] AddInt(v1=0[51], v2=1[55]) -> 1[51]
  765:[55] Call(size=0, to=691)
  691:[59] VarEnum(var[50]) -> Ongoing(2)[59]
  694:[60] ConstEnum(val=1) -> Start(1)[60]
  696:[61] EqEnum(v1=2[59], v2=1[60]) -> false[59]
  697:[60] GotoFalseWord(jump=708, if_false=false[59])
  708:[59] VarInt(var[51]) -> 1[59]
  711:[63] ConstInt(val=10) -> 10[63]
  716:[67] GtInt(v1=1[59], v2=10[63]) -> false[59]
  717:[60] GotoFalseWord(jump=725, if_false=false[59])
  725:[59] VarEnum(var[50]) -> Ongoing(2)[59]
  728:[60] VarInt(var[51]) -> 1[60]
  731:[64] Call(size=0, to=744)
  744:[68] VarEnum(var[59]) -> Ongoing(2)[68]
  747:[69] ConstEnum(val=3) -> Halt(3)[69]
  749:[70] NeEnum(v1=2[68], v2=3[69]) -> true[68]
  750:[69] GotoFalseWord(jump=775, if_false=true[68])
  753:[68] VarEnum(var[59]) -> Ongoing(2)[68]
  756:[69] VarInt(var[60]) -> 1[69]
  759:[73] ConstInt(val=1) -> 1[73]
  764:[77] AddInt(v1=1[69], v2=1[73]) -> 2[69]
  765:[73] Call(size=0, to=691)
  691:[77] VarEnum(var[68]) -> Ongoing(2)[77]
  694:[78] ConstEnum(val=1) -> Start(1)[78]
  696:[79] EqEnum(v1=2[77], v2=1[78]) -> false[77]
  697:[78] GotoFalseWord(jump=708, if_false=false[77])
  708:[77] VarInt(var[69]) -> 2[77]
  711:[81] ConstInt(val=10) -> 10[81]
  716:[85] GtInt(v1=2[77], v2=10[81]) -> false[77]
  717:[78] GotoFalseWord(jump=725, if_false=false[77])
  725:[77] VarEnum(var[68]) -> Ongoing(2)[77]
  728:[78] VarInt(var[69]) -> 2[78]
  731:[82] Call(size=0, to=744)
  744:[86] VarEnum(var[77]) -> Ongoing(2)[86]
  747:[87] ConstEnum(val=3) -> Halt(3)[87]
  749:[88] NeEnum(v1=2[86], v2=3[87]) -> true[86]
  750:[87] GotoFalseWord(jump=775, if_false=true[86])
  753:[86] VarEnum(var[77]) -> Ongoing(2)[86]
  756:[87] VarInt(var[78]) -> 2[87]
  759:[91] ConstInt(val=1) -> 1[91]
  764:[95] AddInt(v1=2[87], v2=1[91]) -> 3[87]
  765:[91] Call(size=0, to=691)
  691:[95] VarEnum(var[86]) -> Ongoing(2)[95]
  694:[96] ConstEnum(val=1) -> Start(1)[96]
  696:[97] EqEnum(v1=2[95], v2=1[96]) -> false[95]
  697:[96] GotoFalseWord(jump=708, if_false=false[95])
  708:[95] VarInt(var[87]) -> 3[95]
  711:[99] ConstInt(val=10) -> 10[99]
  716:[103] GtInt(v1=3[95], v2=10[99]) -> false[95]
  717:[96] GotoFalseWord(jump=725, if_false=false[95])
  725:[95] VarEnum(var[86]) -> Ongoing(2)[95]
  728:[96] VarInt(var[87]) -> 3[96]
  731:[100] Call(size=0, to=744)
  744:[104] VarEnum(var[95]) -> Ongoing(2)[104]
  747:[105] ConstEnum(val=3) -> Halt(3)[105]
  749:[106] NeEnum(v1=2[104], v2=3[105]) -> true[104]
  750:[105] GotoFalseWord(jump=775, if_false=true[104])
  753:[104] VarEnum(var[95]) -> Ongoing(2)[104]
  756:[105] VarInt(var[96]) -> 3[105]
  759:[109] ConstInt(val=1) -> 1[109]
  764:[113] AddInt(v1=3[105], v2=1[109]) -> 4[105]
  765:[109] Call(size=0, to=691)
  691:[113] VarEnum(var[104]) -> Ongoing(2)[113]
  694:[114] ConstEnum(val=1) -> Start(1)[114]
  696:[115] EqEnum(v1=2[113], v2=1[114]) -> false[113]
  697:[114] GotoFalseWord(jump=708, if_false=false[113])
  708:[113] VarInt(var[105]) -> 4[113]
  711:[117] ConstInt(val=10) -> 10[117]
  716:[121] GtInt(v1=4[113], v2=10[117]) -> false[113]
  717:[114] GotoFalseWord(jump=725, if_false=false[113])
  725:[113] VarEnum(var[104]) -> Ongoing(2)[113]
  728:[114] VarInt(var[105]) -> 4[114]
  731:[118] Call(size=0, to=744)
  744:[122] VarEnum(var[113]) -> Ongoing(2)[122]
  747:[123] ConstEnum(val=3) -> Halt(3)[123]
  749:[124] NeEnum(v1=2[122], v2=3[123]) -> true[122]
  750:[123] GotoFalseWord(jump=775, if_false=true[122])
  753:[122] VarEnum(var[113]) -> Ongoing(2)[122]
  756:[123] VarInt(var[114]) -> 4[123]
  759:[127] ConstInt(val=1) -> 1[127]
  764:[131] AddInt(v1=4[123], v2=1[127]) -> 5[123]
  765:[127] Call(size=0, to=691)
  691:[131] VarEnum(var[122]) -> Ongoing(2)[131]
  694:[132] ConstEnum(val=1) -> Start(1)[132]
  696:[133] EqEnum(v1=2[131], v2=1[132]) -> false[131]
  697:[132] GotoFalseWord(jump=708, if_false=false[131])
  708:[131] VarInt(var[123]) -> 5[131]
  711:[135] ConstInt(val=10) -> 10[135]
  716:[139] GtInt(v1=5[131], v2=10[135]) -> false[131]
  717:[132] GotoFalseWord(jump=725, if_false=false[131])
  725:[131] VarEnum(var[122]) -> Ongoing(2)[131]
  728:[132] VarInt(var[123]) -> 5[132]
  731:[136] Call(size=0, to=744)
  744:[140] VarEnum(var[131]) -> Ongoing(2)[140]
  747:[141] ConstEnum(val=3) -> Halt(3)[141]
  749:[142] NeEnum(v1=2[140], v2=3[141]) -> true[140]
  750:[141] GotoFalseWord(jump=775, if_false=true[140])
  753:[140] VarEnum(var[131]) -> Ongoing(2)[140]
  756:[141] VarInt(var[132]) -> 5[141]
  759:[145] ConstInt(val=1) -> 1[145]
  764:[149] AddInt(v1=5[141], v2=1[145]) -> 6[141]
  765:[145] Call(size=0, to=691)
  691:[149] VarEnum(var[140]) -> Ongoing(2)[149]
  694:[150] ConstEnum(val=1) -> Start(1)[150]
  696:[151] EqEnum(v1=2[149], v2=1[150]) -> false[149]
  697:[150] GotoFalseWord(jump=708, if_false=false[149])
  708:[149] VarInt(var[141]) -> 6[149]
  711:[153] ConstInt(val=10) -> 10[153]
  716:[157] GtInt(v1=6[149], v2=10[153]) -> false[149]
  717:[150] GotoFalseWord(jump=725, if_false=false[149])
  725:[149] VarEnum(var[140]) -> Ongoing(2)[149]
  728:[150] VarInt(var[141]) -> 6[150]
  731:[154] Call(size=0, to=744)
  744:[158] VarEnum(var[149]) -> Ongoing(2)[158]
  747:[159] ConstEnum(val=3) -> Halt(3)[159]
  749:[160] NeEnum(v1=2[158], v2=3[159]) -> true[158]
  750:[159] GotoFalseWord(jump=775, if_false=true[158])
  753:[158] VarEnum(var[149]) -> Ongoing(2)[158]
  756:[159] VarInt(var[150]) -> 6[159]
  759:[163] ConstInt(val=1) -> 1[163]
  764:[167] AddInt(v1=6[159], v2=1[163]) -> 7[159]
  765:[163] Call(size=0, to=691)
  691:[167] VarEnum(var[158]) -> Ongoing(2)[167]
  694:[168] ConstEnum(val=1) -> Start(1)[168]
  696:[169] EqEnum(v1=2[167], v2=1[168]) -> false[167]
  697:[168] GotoFalseWord(jump=708, if_false=false[167])
  708:[167] VarInt(var[159]) -> 7[167]
  711:[171] ConstInt(val=10) -> 10[171]
  716:[175] GtInt(v1=7[167], v2=10[171]) -> false[167]
  717:[168] GotoFalseWord(jump=725, if_false=false[167])
  725:[167] VarEnum(var[158]) -> Ongoing(2)[167]
  728:[168] VarInt(var[159]) -> 7[168]
  731:[172] Call(size=0, to=744)
  744:[176] VarEnum(var[167]) -> Ongoing(2)[176]
  747:[177] ConstEnum(val=3) -> Halt(3)[177]
  749:[178] NeEnum(v1=2[176], v2=3[177]) -> true[176]
  750:[177] GotoFalseWord(jump=775, if_false=true[176])
  753:[176] VarEnum(var[167]) -> Ongoing(2)[176]
  756:[177] VarInt(var[168]) -> 7[177]
  759:[181] ConstInt(val=1) -> 1[181]
  764:[185] AddInt(v1=7[177], v2=1[181]) -> 8[177]
  765:[181] Call(size=0, to=691)
  691:[185] VarEnum(var[176]) -> Ongoing(2)[185]
  694:[186] ConstEnum(val=1) -> Start(1)[186]
  696:[187] EqEnum(v1=2[185], v2=1[186]) -> false[185]
  697:[186] GotoFalseWord(jump=708, if_false=false[185])
  708:[185] VarInt(var[177]) -> 8[185]
  711:[189] ConstInt(val=10) -> 10[189]
  716:[193] GtInt(v1=8[185], v2=10[189]) -> false[185]
  717:[186] GotoFalseWord(jump=725, if_false=false[185])
  725:[185] VarEnum(var[176]) -> Ongoing(2)[185]
  728:[186] VarInt(var[177]) -> 8[186]
  731:[190] Call(size=0, to=744)
  744:[194] VarEnum(var[185]) -> Ongoing(2)[194]
  747:[195] ConstEnum(val=3) -> Halt(3)[195]
  749:[196] NeEnum(v1=2[194], v2=3[195]) -> true[194]
  750:[195] GotoFalseWord(jump=775, if_false=true[194])
  753:[194] VarEnum(var[185]) -> Ongoing(2)[194]
  756:[195] VarInt(var[186]) -> 8[195]
  759:[199] ConstInt(val=1) -> 1[199]
  764:[203] AddInt(v1=8[195], v2=1[199]) -> 9[195]
  765:[199] Call(size=0, to=691)
  691:[203] VarEnum(var[194]) -> Ongoing(2)[203]
  694:[204] ConstEnum(val=1) -> Start(1)[204]
  696:[205] EqEnum(v1=2[203], v2=1[204]) -> false[203]
  697:[204] GotoFalseWord(jump=708, if_false=false[203])
  708:[203] VarInt(var[195]) -> 9[203]
  711:[207] ConstInt(val=10) -> 10[207]
  716:[211] GtInt(v1=9[203], v2=10[207]) -> false[203]
  717:[204] GotoFalseWord(jump=725, if_false=false[203])
  725:[203] VarEnum(var[194]) -> Ongoing(2)[203]
  728:[204] VarInt(var[195]) -> 9[204]
  731:[208] Call(size=0, to=744)
  744:[212] VarEnum(var[203]) -> Ongoing(2)[212]
  747:[213] ConstEnum(val=3) -> Halt(3)[213]
  749:[214] NeEnum(v1=2[212], v2=3[213]) -> true[212]
  750:[213] GotoFalseWord(jump=775, if_false=true[212])
  753:[212] VarEnum(var[203]) -> Ongoing(2)[212]
  756:[213] VarInt(var[204]) -> 9[213]
  759:[217] ConstInt(val=1) -> 1[217]
  764:[221] AddInt(v1=9[213], v2=1[217]) -> 10[213]
  765:[217] Call(size=0, to=691)
  691:[221] VarEnum(var[212]) -> Ongoing(2)[221]
  694:[222] ConstEnum(val=1) -> Start(1)[222]
  696:[223] EqEnum(v1=2[221], v2=1[222]) -> false[221]
  697:[222] GotoFalseWord(jump=708, if_false=false[221])
  708:[221] VarInt(var[213]) -> 10[221]
  711:[225] ConstInt(val=10) -> 10[225]
  716:[229] GtInt(v1=10[221], v2=10[225]) -> false[221]
  717:[222] GotoFalseWord(jump=725, if_false=false[221])
  725:[221] VarEnum(var[212]) -> Ongoing(2)[221]
  728:[222] VarInt(var[213]) -> 10[222]
  731:[226] Call(size=0, to=744)
  744:[230] VarEnum(var[221]) -> Ongoing(2)[230]
  747:[231] ConstEnum(val=3) -> Halt(3)[231]
  749:[232] NeEnum(v1=2[230], v2=3[231]) -> true[230]
  750:[231] GotoFalseWord(jump=775, if_false=true[230])
  753:[230] VarEnum(var[221]) -> Ongoing(2)[230]
  756:[231] VarInt(var[222]) -> 10[231]
  759:[235] ConstInt(val=1) -> 1[235]
  764:[239] AddInt(v1=10[231], v2=1[235]) -> 11[231]
  765:[235] Call(size=0, to=691)
  691:[239] VarEnum(var[230]) -> Ongoing(2)[239]
  694:[240] ConstEnum(val=1) -> Start(1)[240]
  696:[241] EqEnum(v1=2[239], v2=1[240]) -> false[239]
  697:[240] GotoFalseWord(jump=708, if_false=false[239])
  708:[239] VarInt(var[231]) -> 11[239]
  711:[243] ConstInt(val=10) -> 10[243]
  716:[247] GtInt(v1=11[239], v2=10[243]) -> true[239]
  717:[240] GotoFalseWord(jump=725, if_false=true[239])
  720:[239] ConstEnum(val=3) -> Halt(3)[239]
  722:[240] PutEnum(var[230], value=3[239])
  725:[239] VarEnum(var[230]) -> Halt(3)[239]
  728:[240] VarInt(var[231]) -> 11[240]
  731:[244] Call(size=0, to=744)
  744:[248] VarEnum(var[239]) -> Halt(3)[248]
  747:[249] ConstEnum(val=3) -> Halt(3)[249]
  749:[250] NeEnum(v1=3[248], v2=3[249]) -> false[248]
  750:[249] GotoFalseWord(jump=775, if_false=false[248])
  775:[248] ConstInt(val=1) -> 1[248]
  780:[252] VarInt(var[240]) -> 11[252]
  783:[256] AddInt(v1=1[248], v2=11[252]) -> 12[248]
  784:[252] Return(ret=738[244], value=4, discard=13) -> 12[239]
  738:[243] Return(ret=772[235], value=4, discard=13) -> 12[230]
  772:[234] GotoWord(jump=784)
  784:[234] Return(ret=738[226], value=4, discard=13) -> 12[221]
  738:[225] Return(ret=772[217], value=4, discard=13) -> 12[212]
  772:[216] GotoWord(jump=784)
  784:[216] Return(ret=738[208], value=4, discard=13) -> 12[203]
  738:[207] Return(ret=772[199], value=4, discard=13) -> 12[194]
  772:[198] GotoWord(jump=784)
  784:[198] Return(ret=738[190], value=4, discard=13) -> 12[185]
  738:[189] Return(ret=772[181], value=4, discard=13) -> 12[176]
  772:[180] GotoWord(jump=784)
  784:[180] Return(ret=738[172], value=4, discard=13) -> 12[167]
  738:[171] Return(ret=772[163], value=4, discard=13) -> 12[158]
  772:[162] GotoWord(jump=784)
  784:[162] Return(ret=738[154], value=4, discard=13) -> 12[149]
  738:[153] Return(ret=772[145], value=4, discard=13) -> 12[140]
  772:[144] GotoWord(jump=784)
  784:[144] Return(ret=738[136], value=4, discard=13) -> 12[131]
  738:[135] Return(ret=772[127], value=4, discard=13) -> 12[122]
  772:[126] GotoWord(jump=784)
  784:[126] Return(ret=738[118], value=4, discard=13) -> 12[113]
  738:[117] Return(ret=772[109], value=4, discard=13) -> 12[104]
  772:[108] GotoWord(jump=784)
  784:[108] Return(ret=738[100], value=4, discard=13) -> 12[95]
  738:[99] Return(ret=772[91], value=4, discard=13) -> 12[86]
  772:[90] GotoWord(jump=784)
  784:[90] Return(ret=738[82], value=4, discard=13) -> 12[77]
  738:[81] Return(ret=772[73], value=4, discard=13) -> 12[68]
  772:[72] GotoWord(jump=784)
  784:[72] Return(ret=738[64], value=4, discard=13) -> 12[59]
  738:[63] Return(ret=772[55], value=4, discard=13) -> 12[50]
  772:[54] GotoWord(jump=784)
  784:[54] Return(ret=738[46], value=4, discard=13) -> 12[41]
  738:[45] Return(ret=805[37], value=4, discard=13) -> 12[32]
  805:[36] VarInt(var[32]) -> 12[36]
  808:[40] ConstInt(val=12) -> 12[40]
  813:[44] EqInt(v1=12[36], v2=12[40]) -> true[36]
  814:[37] GotoFalseWord(jump=820, if_false=true[36])
  817:[36] GotoWord(jump=870)
  870:[36] FreeText(var[8])
  873:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
