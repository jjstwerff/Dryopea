pub fn test() {
    test_value = {b = 0; for a in 0..=5 { b+=a }; b};
    assert(
        test_value == 15,
        "Test failed {test_value} != 15"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    b:integer = 0i32;
    {#3 for
      a#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        a:integer = {#5 for next
          a#index:integer = if OpNot(OpConvBoolFromInt(a#index)) 0i32 else OpAddInt(a#index, 1i32);
          if OpGtInt(a#index, 5i32) break(0) else null;
          a#index;
        }#5:integer;
        {#6 block
          b:integer = OpAddInt(b, a);
        }#6;
      }#4;
    }#3;
    b;
  }#2:integer;
  if OpEqInt(test_value, 15i32) null else OpPanic({#7 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 15");
    __work_1;
  }#7:text);
}#1

byte-code for extended_for:test()
 645[0]: return-address
 645[4]: Text() var=__work_1[4]:text in 1
 646[28]: ConstInt(val=0) -> integer var=b[28]:integer in 2
 651[32]: ConvIntFromNull() -> integer var=a#index[32]:integer in 3
 652[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 655[40]: ConvBoolFromInt(v1: integer) -> boolean
 656[37]: Not(v1: boolean) -> boolean
 657[37]: GotoFalseWord(jump=668, if_false: boolean)
 660[36]: ConstInt(val=0) -> integer
 665[40]: GotoWord(jump=677)
 668[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 671[40]: ConstInt(val=1) -> integer
 676[44]: AddInt(v1: integer, v2: integer) -> integer
 677[40]: PutInt(var[32], value: integer)
 680[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 683[40]: ConstInt(val=5) -> integer
 688[44]: GtInt(v1: integer, v2: integer) -> boolean
 689[37]: GotoFalseWord(jump=695, if_false: boolean)
 692[36]: GotoWord(jump=715)
 695[36]: VarInt(var[32]) -> integer var=a#index[32]:integer in 3
 698[40]: VarInt(var[28]) -> integer var=b[28]:integer in 2
 701[44]: VarInt(var[36]) -> integer var=a[36]:integer in 4
 704[48]: AddInt(v1: integer, v2: integer) -> integer
 705[44]: PutInt(var[28], value: integer)
 708[40]: FreeStack(value=0, discard=4)
 712[36]: GotoWord(jump=652)
 715[36]: FreeStack(value=0, discard=4)
 719[32]: VarInt(var[28]) -> integer var=b[28]:integer in 2
 722[36]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 726[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 729[36]: ConstInt(val=15) -> integer
 734[40]: EqInt(v1: integer, v2: integer) -> boolean
 735[33]: GotoFalseWord(jump=741, if_false: boolean)
 738[32]: GotoWord(jump=791)
 741[32]: ClearText(var[4]) var=__work_1[4]:text in 1
 744[32]: ConstText(_value="Test failed ") -> text
 758[48]: AppendText(var[4], v1: text)
 761[32]: VarInt(var[28]) -> integer var=test_value[28]:integer in 1
 764[36]: ConstInt(val=0) -> integer
 769[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 776[32]: ConstText(_value=" != 15") -> text
 784[48]: AppendText(var[4], v1: text)
 787[32]: VarText(var[4]) -> text var=__work_1[4]:text in 1
 790[48]: Panic(message: text)
 791[32]: FreeText(var[4])
 794[32]: Return(ret=0, value=0, discard=32)

Execute test:
  645:[8] Text()
  646:[32] ConstInt(val=0) -> 0[32]
  651:[36] ConvIntFromNull() -> -2147483648[36]
  652:[40] VarInt(var[36]) -> -2147483648[40]
  655:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  656:[41] Not(v1=false[40]) -> true[40]
  657:[41] GotoFalseWord(jump=668, if_false=true[40])
  660:[40] ConstInt(val=0) -> 0[40]
  665:[44] GotoWord(jump=677)
  677:[44] PutInt(var[36], value=0[40])
  680:[40] VarInt(var[36]) -> 0[40]
  683:[44] ConstInt(val=5) -> 5[44]
  688:[48] GtInt(v1=0[40], v2=5[44]) -> false[40]
  689:[41] GotoFalseWord(jump=695, if_false=false[40])
  695:[40] VarInt(var[36]) -> 0[40]
  698:[44] VarInt(var[32]) -> 0[44]
  701:[48] VarInt(var[40]) -> 0[48]
  704:[52] AddInt(v1=0[44], v2=0[48]) -> 0[44]
  705:[48] PutInt(var[32], value=0[44])
  708:[44] FreeStack(value=0, discard=4)
  712:[40] GotoWord(jump=652)
  652:[40] VarInt(var[36]) -> 0[40]
  655:[44] ConvBoolFromInt(v1=0[40]) -> true[40]
  656:[41] Not(v1=true[40]) -> false[40]
  657:[41] GotoFalseWord(jump=668, if_false=false[40])
  668:[40] VarInt(var[36]) -> 0[40]
  671:[44] ConstInt(val=1) -> 1[44]
  676:[48] AddInt(v1=0[40], v2=1[44]) -> 1[40]
  677:[44] PutInt(var[36], value=1[40])
  680:[40] VarInt(var[36]) -> 1[40]
  683:[44] ConstInt(val=5) -> 5[44]
  688:[48] GtInt(v1=1[40], v2=5[44]) -> false[40]
  689:[41] GotoFalseWord(jump=695, if_false=false[40])
  695:[40] VarInt(var[36]) -> 1[40]
  698:[44] VarInt(var[32]) -> 0[44]
  701:[48] VarInt(var[40]) -> 1[48]
  704:[52] AddInt(v1=0[44], v2=1[48]) -> 1[44]
  705:[48] PutInt(var[32], value=1[44])
  708:[44] FreeStack(value=0, discard=4)
  712:[40] GotoWord(jump=652)
  652:[40] VarInt(var[36]) -> 1[40]
  655:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  656:[41] Not(v1=true[40]) -> false[40]
  657:[41] GotoFalseWord(jump=668, if_false=false[40])
  668:[40] VarInt(var[36]) -> 1[40]
  671:[44] ConstInt(val=1) -> 1[44]
  676:[48] AddInt(v1=1[40], v2=1[44]) -> 2[40]
  677:[44] PutInt(var[36], value=2[40])
  680:[40] VarInt(var[36]) -> 2[40]
  683:[44] ConstInt(val=5) -> 5[44]
  688:[48] GtInt(v1=2[40], v2=5[44]) -> false[40]
  689:[41] GotoFalseWord(jump=695, if_false=false[40])
  695:[40] VarInt(var[36]) -> 2[40]
  698:[44] VarInt(var[32]) -> 1[44]
  701:[48] VarInt(var[40]) -> 2[48]
  704:[52] AddInt(v1=1[44], v2=2[48]) -> 3[44]
  705:[48] PutInt(var[32], value=3[44])
  708:[44] FreeStack(value=0, discard=4)
  712:[40] GotoWord(jump=652)
  652:[40] VarInt(var[36]) -> 2[40]
  655:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
  656:[41] Not(v1=true[40]) -> false[40]
  657:[41] GotoFalseWord(jump=668, if_false=false[40])
  668:[40] VarInt(var[36]) -> 2[40]
  671:[44] ConstInt(val=1) -> 1[44]
  676:[48] AddInt(v1=2[40], v2=1[44]) -> 3[40]
  677:[44] PutInt(var[36], value=3[40])
  680:[40] VarInt(var[36]) -> 3[40]
  683:[44] ConstInt(val=5) -> 5[44]
  688:[48] GtInt(v1=3[40], v2=5[44]) -> false[40]
  689:[41] GotoFalseWord(jump=695, if_false=false[40])
  695:[40] VarInt(var[36]) -> 3[40]
  698:[44] VarInt(var[32]) -> 3[44]
  701:[48] VarInt(var[40]) -> 3[48]
  704:[52] AddInt(v1=3[44], v2=3[48]) -> 6[44]
  705:[48] PutInt(var[32], value=6[44])
  708:[44] FreeStack(value=0, discard=4)
  712:[40] GotoWord(jump=652)
  652:[40] VarInt(var[36]) -> 3[40]
  655:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
  656:[41] Not(v1=true[40]) -> false[40]
  657:[41] GotoFalseWord(jump=668, if_false=false[40])
  668:[40] VarInt(var[36]) -> 3[40]
  671:[44] ConstInt(val=1) -> 1[44]
  676:[48] AddInt(v1=3[40], v2=1[44]) -> 4[40]
  677:[44] PutInt(var[36], value=4[40])
  680:[40] VarInt(var[36]) -> 4[40]
  683:[44] ConstInt(val=5) -> 5[44]
  688:[48] GtInt(v1=4[40], v2=5[44]) -> false[40]
  689:[41] GotoFalseWord(jump=695, if_false=false[40])
  695:[40] VarInt(var[36]) -> 4[40]
  698:[44] VarInt(var[32]) -> 6[44]
  701:[48] VarInt(var[40]) -> 4[48]
  704:[52] AddInt(v1=6[44], v2=4[48]) -> 10[44]
  705:[48] PutInt(var[32], value=10[44])
  708:[44] FreeStack(value=0, discard=4)
  712:[40] GotoWord(jump=652)
  652:[40] VarInt(var[36]) -> 4[40]
  655:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
  656:[41] Not(v1=true[40]) -> false[40]
  657:[41] GotoFalseWord(jump=668, if_false=false[40])
  668:[40] VarInt(var[36]) -> 4[40]
  671:[44] ConstInt(val=1) -> 1[44]
  676:[48] AddInt(v1=4[40], v2=1[44]) -> 5[40]
  677:[44] PutInt(var[36], value=5[40])
  680:[40] VarInt(var[36]) -> 5[40]
  683:[44] ConstInt(val=5) -> 5[44]
  688:[48] GtInt(v1=5[40], v2=5[44]) -> false[40]
  689:[41] GotoFalseWord(jump=695, if_false=false[40])
  695:[40] VarInt(var[36]) -> 5[40]
  698:[44] VarInt(var[32]) -> 10[44]
  701:[48] VarInt(var[40]) -> 5[48]
  704:[52] AddInt(v1=10[44], v2=5[48]) -> 15[44]
  705:[48] PutInt(var[32], value=15[44])
  708:[44] FreeStack(value=0, discard=4)
  712:[40] GotoWord(jump=652)
  652:[40] VarInt(var[36]) -> 5[40]
  655:[44] ConvBoolFromInt(v1=5[40]) -> true[40]
  656:[41] Not(v1=true[40]) -> false[40]
  657:[41] GotoFalseWord(jump=668, if_false=false[40])
  668:[40] VarInt(var[36]) -> 5[40]
  671:[44] ConstInt(val=1) -> 1[44]
  676:[48] AddInt(v1=5[40], v2=1[44]) -> 6[40]
  677:[44] PutInt(var[36], value=6[40])
  680:[40] VarInt(var[36]) -> 6[40]
  683:[44] ConstInt(val=5) -> 5[44]
  688:[48] GtInt(v1=6[40], v2=5[44]) -> true[40]
  689:[41] GotoFalseWord(jump=695, if_false=true[40])
  692:[40] GotoWord(jump=715)
  715:[40] FreeStack(value=0, discard=4)
  719:[36] VarInt(var[32]) -> 15[36]
  722:[40] FreeStack(value=4, discard=8)
  726:[36] VarInt(var[32]) -> 15[36]
  729:[40] ConstInt(val=15) -> 15[40]
  734:[44] EqInt(v1=15[36], v2=15[40]) -> true[36]
  735:[37] GotoFalseWord(jump=741, if_false=true[36])
  738:[36] GotoWord(jump=791)
  791:[36] FreeText(var[8])
  794:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
