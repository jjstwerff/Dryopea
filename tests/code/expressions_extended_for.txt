pub fn test() {
    test_value = {b = 0; for a in 0..=5 { b+=a }; b};
    assert(
        test_value == 15,
        "Test failed {test_value} != 15"
    );
}
fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    b:integer = 0i32;
    {#3 for
      a#index:integer = OpConvIntFromNull();
      loop {#4 for loop
        a:integer = {#5 for next
          a#index:integer = if OpNot(OpConvBoolFromInt(a#index)) 0i32 else OpAddInt(a#index, 1i32);
          if OpGtInt(a#index, 5i32) break(0) else null;
          a#index;
        }#5:integer;
        {#6 block
          b:integer = OpAddInt(b, a);
        }#6;
      }#4;
    }#3;
    b;
  }#2:integer;
  if OpEqInt(test_value, 15i32) null else OpPanic({#7 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 15");
    __work_1;
  }#7:text);
}#1

byte-code for extended_for:test()
 682[0]: return-address
 682[4]: Text()
 683[28]: ConstInt(val=0) -> integer
 688[32]: ConvIntFromNull() -> integer
 689[36]: VarInt(var[32]) -> integer
 692[40]: ConvBoolFromInt(v1: integer) -> boolean
 693[37]: Not(v1: boolean) -> boolean
 694[37]: GotoFalseWord(jump=705, if_false: boolean)
 697[36]: ConstInt(val=0) -> integer
 702[40]: GotoWord(jump=714)
 705[36]: VarInt(var[32]) -> integer
 708[40]: ConstInt(val=1) -> integer
 713[44]: AddInt(v1: integer, v2: integer) -> integer
 714[40]: PutInt(var[32], value: integer)
 717[36]: VarInt(var[32]) -> integer
 720[40]: ConstInt(val=5) -> integer
 725[44]: GtInt(v1: integer, v2: integer) -> boolean
 726[37]: GotoFalseWord(jump=732, if_false: boolean)
 729[36]: GotoWord(jump=752)
 732[36]: VarInt(var[32]) -> integer
 735[40]: VarInt(var[28]) -> integer
 738[44]: VarInt(var[36]) -> integer
 741[48]: AddInt(v1: integer, v2: integer) -> integer
 742[44]: PutInt(var[28], value: integer)
 745[40]: FreeStack(value=0, discard=4)
 749[36]: GotoWord(jump=689)
 752[36]: FreeStack(value=0, discard=4)
 756[32]: VarInt(var[28]) -> integer
 759[36]: FreeStack(value=4, discard=4) type=integer[4]:Base[0]
 763[32]: VarInt(var[28]) -> integer
 766[36]: ConstInt(val=15) -> integer
 771[40]: EqInt(v1: integer, v2: integer) -> boolean
 772[33]: GotoFalseWord(jump=778, if_false: boolean)
 775[32]: GotoWord(jump=828)
 778[32]: ClearText(var[4])
 781[32]: ConstText(_value="Test failed ") -> text
 795[48]: AppendText(var[4], v1: text)
 798[32]: VarInt(var[28]) -> integer
 801[36]: ConstInt(val=0) -> integer
 806[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 813[32]: ConstText(_value=" != 15") -> text
 821[48]: AppendText(var[4], v1: text)
 824[32]: VarText(var[4]) -> text
 827[48]: Panic(message: text)
 828[32]: Return(ret=0, value=0, discard=32)

Execute test:
  682:[8] Text()
  683:[32] ConstInt(val=0) -> 0[32]
  688:[36] ConvIntFromNull() -> -2147483648[36]
  689:[40] VarInt(var[36]) -> -2147483648[40]
  692:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  693:[41] Not(v1=false[40]) -> true[40]
  694:[41] GotoFalseWord(jump=705, if_false=true[40])
  697:[40] ConstInt(val=0) -> 0[40]
  702:[44] GotoWord(jump=714)
  714:[44] PutInt(var[36], value=0[40])
  717:[40] VarInt(var[36]) -> 0[40]
  720:[44] ConstInt(val=5) -> 5[44]
  725:[48] GtInt(v1=0[40], v2=5[44]) -> false[40]
  726:[41] GotoFalseWord(jump=732, if_false=false[40])
  732:[40] VarInt(var[36]) -> 0[40]
  735:[44] VarInt(var[32]) -> 0[44]
  738:[48] VarInt(var[40]) -> 0[48]
  741:[52] AddInt(v1=0[44], v2=0[48]) -> 0[44]
  742:[48] PutInt(var[32], value=0[44])
  745:[44] FreeStack(value=0, discard=4)
  749:[40] GotoWord(jump=689)
  689:[40] VarInt(var[36]) -> 0[40]
  692:[44] ConvBoolFromInt(v1=0[40]) -> true[40]
  693:[41] Not(v1=true[40]) -> false[40]
  694:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 0[40]
  708:[44] ConstInt(val=1) -> 1[44]
  713:[48] AddInt(v1=0[40], v2=1[44]) -> 1[40]
  714:[44] PutInt(var[36], value=1[40])
  717:[40] VarInt(var[36]) -> 1[40]
  720:[44] ConstInt(val=5) -> 5[44]
  725:[48] GtInt(v1=1[40], v2=5[44]) -> false[40]
  726:[41] GotoFalseWord(jump=732, if_false=false[40])
  732:[40] VarInt(var[36]) -> 1[40]
  735:[44] VarInt(var[32]) -> 0[44]
  738:[48] VarInt(var[40]) -> 1[48]
  741:[52] AddInt(v1=0[44], v2=1[48]) -> 1[44]
  742:[48] PutInt(var[32], value=1[44])
  745:[44] FreeStack(value=0, discard=4)
  749:[40] GotoWord(jump=689)
  689:[40] VarInt(var[36]) -> 1[40]
  692:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  693:[41] Not(v1=true[40]) -> false[40]
  694:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 1[40]
  708:[44] ConstInt(val=1) -> 1[44]
  713:[48] AddInt(v1=1[40], v2=1[44]) -> 2[40]
  714:[44] PutInt(var[36], value=2[40])
  717:[40] VarInt(var[36]) -> 2[40]
  720:[44] ConstInt(val=5) -> 5[44]
  725:[48] GtInt(v1=2[40], v2=5[44]) -> false[40]
  726:[41] GotoFalseWord(jump=732, if_false=false[40])
  732:[40] VarInt(var[36]) -> 2[40]
  735:[44] VarInt(var[32]) -> 1[44]
  738:[48] VarInt(var[40]) -> 2[48]
  741:[52] AddInt(v1=1[44], v2=2[48]) -> 3[44]
  742:[48] PutInt(var[32], value=3[44])
  745:[44] FreeStack(value=0, discard=4)
  749:[40] GotoWord(jump=689)
  689:[40] VarInt(var[36]) -> 2[40]
  692:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
  693:[41] Not(v1=true[40]) -> false[40]
  694:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 2[40]
  708:[44] ConstInt(val=1) -> 1[44]
  713:[48] AddInt(v1=2[40], v2=1[44]) -> 3[40]
  714:[44] PutInt(var[36], value=3[40])
  717:[40] VarInt(var[36]) -> 3[40]
  720:[44] ConstInt(val=5) -> 5[44]
  725:[48] GtInt(v1=3[40], v2=5[44]) -> false[40]
  726:[41] GotoFalseWord(jump=732, if_false=false[40])
  732:[40] VarInt(var[36]) -> 3[40]
  735:[44] VarInt(var[32]) -> 3[44]
  738:[48] VarInt(var[40]) -> 3[48]
  741:[52] AddInt(v1=3[44], v2=3[48]) -> 6[44]
  742:[48] PutInt(var[32], value=6[44])
  745:[44] FreeStack(value=0, discard=4)
  749:[40] GotoWord(jump=689)
  689:[40] VarInt(var[36]) -> 3[40]
  692:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
  693:[41] Not(v1=true[40]) -> false[40]
  694:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 3[40]
  708:[44] ConstInt(val=1) -> 1[44]
  713:[48] AddInt(v1=3[40], v2=1[44]) -> 4[40]
  714:[44] PutInt(var[36], value=4[40])
  717:[40] VarInt(var[36]) -> 4[40]
  720:[44] ConstInt(val=5) -> 5[44]
  725:[48] GtInt(v1=4[40], v2=5[44]) -> false[40]
  726:[41] GotoFalseWord(jump=732, if_false=false[40])
  732:[40] VarInt(var[36]) -> 4[40]
  735:[44] VarInt(var[32]) -> 6[44]
  738:[48] VarInt(var[40]) -> 4[48]
  741:[52] AddInt(v1=6[44], v2=4[48]) -> 10[44]
  742:[48] PutInt(var[32], value=10[44])
  745:[44] FreeStack(value=0, discard=4)
  749:[40] GotoWord(jump=689)
  689:[40] VarInt(var[36]) -> 4[40]
  692:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
  693:[41] Not(v1=true[40]) -> false[40]
  694:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 4[40]
  708:[44] ConstInt(val=1) -> 1[44]
  713:[48] AddInt(v1=4[40], v2=1[44]) -> 5[40]
  714:[44] PutInt(var[36], value=5[40])
  717:[40] VarInt(var[36]) -> 5[40]
  720:[44] ConstInt(val=5) -> 5[44]
  725:[48] GtInt(v1=5[40], v2=5[44]) -> false[40]
  726:[41] GotoFalseWord(jump=732, if_false=false[40])
  732:[40] VarInt(var[36]) -> 5[40]
  735:[44] VarInt(var[32]) -> 10[44]
  738:[48] VarInt(var[40]) -> 5[48]
  741:[52] AddInt(v1=10[44], v2=5[48]) -> 15[44]
  742:[48] PutInt(var[32], value=15[44])
  745:[44] FreeStack(value=0, discard=4)
  749:[40] GotoWord(jump=689)
  689:[40] VarInt(var[36]) -> 5[40]
  692:[44] ConvBoolFromInt(v1=5[40]) -> true[40]
  693:[41] Not(v1=true[40]) -> false[40]
  694:[41] GotoFalseWord(jump=705, if_false=false[40])
  705:[40] VarInt(var[36]) -> 5[40]
  708:[44] ConstInt(val=1) -> 1[44]
  713:[48] AddInt(v1=5[40], v2=1[44]) -> 6[40]
  714:[44] PutInt(var[36], value=6[40])
  717:[40] VarInt(var[36]) -> 6[40]
  720:[44] ConstInt(val=5) -> 5[44]
  725:[48] GtInt(v1=6[40], v2=5[44]) -> true[40]
  726:[41] GotoFalseWord(jump=732, if_false=true[40])
  729:[40] GotoWord(jump=752)
  752:[40] FreeStack(value=0, discard=4)
  756:[36] VarInt(var[32]) -> 15[36]
  759:[40] FreeStack(value=4, discard=4)
  763:[36] VarInt(var[32]) -> 15[36]
  766:[40] ConstInt(val=15) -> 15[40]
  771:[44] EqInt(v1=15[36], v2=15[40]) -> true[36]
  772:[37] GotoFalseWord(jump=778, if_false=true[36])
  775:[36] GotoWord(jump=828)
  828:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
