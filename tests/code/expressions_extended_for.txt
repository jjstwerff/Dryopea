Test code:
pub fn test() {
    test_value = {b = 0; for a in 0..=5 { b+=a }; b};
    assert(
        test_value == 15,
        "Test failed {test_value} != 15"
    );
}

fn test {
  let test_value = {
    let b = 0i32;
    {
      let a#index = OpConvIntFromNull();
      loop {
        let a = {
          a#index = if OpNot(OpConvBoolFromInt(a#index)) {0i32} else {OpAddInt(a#index, 1i32)};
          if OpGtInt(a#index, 5i32) {break(0)} else {null};
          a#index;
        };
        {
          b = OpAddInt(b, a);
        };
      };
    };
    b;
  };
  if OpEqInt(test_value, 15i32) {null} else {OpGenPanic({
    let append_10 = "Test failed ";
    OpFormatInt(append_10, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_10, " != 15");
    append_10;
  })};
}

byte-code for extended_for:test()
 664[0]: return-address
 664[4]: ConstInt(val=0) -> integer
 669[8]: ConvIntFromNull() -> integer
 670[12]: VarInt(var[8]) -> integer
 673[16]: ConvBoolFromInt(v1: integer) -> boolean
 674[13]: Not(v1: boolean) -> boolean
 675[13]: GenGotoFalseWord(jump=686, if_false: boolean)
 678[12]: ConstInt(val=0) -> integer
 683[16]: GenGotoWord(jump=695)
 686[12]: VarInt(var[8]) -> integer
 689[16]: ConstInt(val=1) -> integer
 694[20]: AddInt(v1: integer, v2: integer) -> integer
 695[16]: PutInt(var[8], value: integer)
 698[12]: VarInt(var[8]) -> integer
 701[16]: ConstInt(val=5) -> integer
 706[20]: GtInt(v1: integer, v2: integer) -> boolean
 707[13]: GenGotoFalseWord(jump=713, if_false: boolean)
 710[12]: GenGotoWord(jump=733)
 713[12]: VarInt(var[8]) -> integer
 716[16]: VarInt(var[4]) -> integer
 719[20]: VarInt(var[12]) -> integer
 722[24]: AddInt(v1: integer, v2: integer) -> integer
 723[20]: PutInt(var[4], value: integer)
 726[16]: GenFreeStack(value=0, discard=4)
 730[12]: GenGotoWord(jump=670)
 733[12]: GenFreeStack(value=0, discard=4)
 737[8]: VarInt(var[4]) -> integer
 740[12]: GenFreeStack(value=4, discard=4)
 744[8]: VarInt(var[4]) -> integer
 747[12]: ConstInt(val=15) -> integer
 752[16]: EqInt(v1: integer, v2: integer) -> boolean
 753[9]: GenGotoFalseWord(jump=759, if_false: boolean)
 756[8]: GenGotoWord(jump=811)
 759[8]: Text()
 760[32]: ConstText(_value="Test failed ") -> text
 774[48]: AppendText(var[8], v1: text)
 777[32]: VarInt(var[4]) -> integer
 780[36]: ConstInt(val=0) -> integer
 785[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 792[32]: ConstText(_value=" != 15") -> text
 800[48]: AppendText(var[8], v1: text)
 803[32]: VarText(var[8]) -> text
 806[48]: GenFreeStack(value=16, discard=24)
 810[24]: GenPanic(message: text)
 811[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
  664:[4] ConstInt(val=0) -> 0[4]
  669:[8] ConvIntFromNull() -> -2147483648[8]
  670:[12] VarInt(var[8]) -> -2147483648[12]
  673:[16] ConvBoolFromInt(v1=-2147483648[12]) -> false[12]
  674:[13] Not(v1=false[12]) -> true[12]
  675:[13] GenGotoFalseWord(jump=686, if_false=true[12])
  678:[12] ConstInt(val=0) -> 0[12]
  683:[16] GenGotoWord(jump=695)
  695:[16] PutInt(var[8], value=0[12])
  698:[12] VarInt(var[8]) -> 0[12]
  701:[16] ConstInt(val=5) -> 5[16]
  706:[20] GtInt(v1=0[12], v2=5[16]) -> false[12]
  707:[13] GenGotoFalseWord(jump=713, if_false=false[12])
  713:[12] VarInt(var[8]) -> 0[12]
  716:[16] VarInt(var[4]) -> 0[16]
  719:[20] VarInt(var[12]) -> 0[20]
  722:[24] AddInt(v1=0[16], v2=0[20]) -> 0[16]
  723:[20] PutInt(var[4], value=0[16])
  726:[16] GenFreeStack(value=0, discard=4)
  730:[12] GenGotoWord(jump=670)
  670:[12] VarInt(var[8]) -> 0[12]
  673:[16] ConvBoolFromInt(v1=0[12]) -> true[12]
  674:[13] Not(v1=true[12]) -> false[12]
  675:[13] GenGotoFalseWord(jump=686, if_false=false[12])
  686:[12] VarInt(var[8]) -> 0[12]
  689:[16] ConstInt(val=1) -> 1[16]
  694:[20] AddInt(v1=0[12], v2=1[16]) -> 1[12]
  695:[16] PutInt(var[8], value=1[12])
  698:[12] VarInt(var[8]) -> 1[12]
  701:[16] ConstInt(val=5) -> 5[16]
  706:[20] GtInt(v1=1[12], v2=5[16]) -> false[12]
  707:[13] GenGotoFalseWord(jump=713, if_false=false[12])
  713:[12] VarInt(var[8]) -> 1[12]
  716:[16] VarInt(var[4]) -> 0[16]
  719:[20] VarInt(var[12]) -> 1[20]
  722:[24] AddInt(v1=0[16], v2=1[20]) -> 1[16]
  723:[20] PutInt(var[4], value=1[16])
  726:[16] GenFreeStack(value=0, discard=4)
  730:[12] GenGotoWord(jump=670)
  670:[12] VarInt(var[8]) -> 1[12]
  673:[16] ConvBoolFromInt(v1=1[12]) -> true[12]
  674:[13] Not(v1=true[12]) -> false[12]
  675:[13] GenGotoFalseWord(jump=686, if_false=false[12])
  686:[12] VarInt(var[8]) -> 1[12]
  689:[16] ConstInt(val=1) -> 1[16]
  694:[20] AddInt(v1=1[12], v2=1[16]) -> 2[12]
  695:[16] PutInt(var[8], value=2[12])
  698:[12] VarInt(var[8]) -> 2[12]
  701:[16] ConstInt(val=5) -> 5[16]
  706:[20] GtInt(v1=2[12], v2=5[16]) -> false[12]
  707:[13] GenGotoFalseWord(jump=713, if_false=false[12])
  713:[12] VarInt(var[8]) -> 2[12]
  716:[16] VarInt(var[4]) -> 1[16]
  719:[20] VarInt(var[12]) -> 2[20]
  722:[24] AddInt(v1=1[16], v2=2[20]) -> 3[16]
  723:[20] PutInt(var[4], value=3[16])
  726:[16] GenFreeStack(value=0, discard=4)
  730:[12] GenGotoWord(jump=670)
  670:[12] VarInt(var[8]) -> 2[12]
  673:[16] ConvBoolFromInt(v1=2[12]) -> true[12]
  674:[13] Not(v1=true[12]) -> false[12]
  675:[13] GenGotoFalseWord(jump=686, if_false=false[12])
  686:[12] VarInt(var[8]) -> 2[12]
  689:[16] ConstInt(val=1) -> 1[16]
  694:[20] AddInt(v1=2[12], v2=1[16]) -> 3[12]
  695:[16] PutInt(var[8], value=3[12])
  698:[12] VarInt(var[8]) -> 3[12]
  701:[16] ConstInt(val=5) -> 5[16]
  706:[20] GtInt(v1=3[12], v2=5[16]) -> false[12]
  707:[13] GenGotoFalseWord(jump=713, if_false=false[12])
  713:[12] VarInt(var[8]) -> 3[12]
  716:[16] VarInt(var[4]) -> 3[16]
  719:[20] VarInt(var[12]) -> 3[20]
  722:[24] AddInt(v1=3[16], v2=3[20]) -> 6[16]
  723:[20] PutInt(var[4], value=6[16])
  726:[16] GenFreeStack(value=0, discard=4)
  730:[12] GenGotoWord(jump=670)
  670:[12] VarInt(var[8]) -> 3[12]
  673:[16] ConvBoolFromInt(v1=3[12]) -> true[12]
  674:[13] Not(v1=true[12]) -> false[12]
  675:[13] GenGotoFalseWord(jump=686, if_false=false[12])
  686:[12] VarInt(var[8]) -> 3[12]
  689:[16] ConstInt(val=1) -> 1[16]
  694:[20] AddInt(v1=3[12], v2=1[16]) -> 4[12]
  695:[16] PutInt(var[8], value=4[12])
  698:[12] VarInt(var[8]) -> 4[12]
  701:[16] ConstInt(val=5) -> 5[16]
  706:[20] GtInt(v1=4[12], v2=5[16]) -> false[12]
  707:[13] GenGotoFalseWord(jump=713, if_false=false[12])
  713:[12] VarInt(var[8]) -> 4[12]
  716:[16] VarInt(var[4]) -> 6[16]
  719:[20] VarInt(var[12]) -> 4[20]
  722:[24] AddInt(v1=6[16], v2=4[20]) -> 10[16]
  723:[20] PutInt(var[4], value=10[16])
  726:[16] GenFreeStack(value=0, discard=4)
  730:[12] GenGotoWord(jump=670)
  670:[12] VarInt(var[8]) -> 4[12]
  673:[16] ConvBoolFromInt(v1=4[12]) -> true[12]
  674:[13] Not(v1=true[12]) -> false[12]
  675:[13] GenGotoFalseWord(jump=686, if_false=false[12])
  686:[12] VarInt(var[8]) -> 4[12]
  689:[16] ConstInt(val=1) -> 1[16]
  694:[20] AddInt(v1=4[12], v2=1[16]) -> 5[12]
  695:[16] PutInt(var[8], value=5[12])
  698:[12] VarInt(var[8]) -> 5[12]
  701:[16] ConstInt(val=5) -> 5[16]
  706:[20] GtInt(v1=5[12], v2=5[16]) -> false[12]
  707:[13] GenGotoFalseWord(jump=713, if_false=false[12])
  713:[12] VarInt(var[8]) -> 5[12]
  716:[16] VarInt(var[4]) -> 10[16]
  719:[20] VarInt(var[12]) -> 5[20]
  722:[24] AddInt(v1=10[16], v2=5[20]) -> 15[16]
  723:[20] PutInt(var[4], value=15[16])
  726:[16] GenFreeStack(value=0, discard=4)
  730:[12] GenGotoWord(jump=670)
  670:[12] VarInt(var[8]) -> 5[12]
  673:[16] ConvBoolFromInt(v1=5[12]) -> true[12]
  674:[13] Not(v1=true[12]) -> false[12]
  675:[13] GenGotoFalseWord(jump=686, if_false=false[12])
  686:[12] VarInt(var[8]) -> 5[12]
  689:[16] ConstInt(val=1) -> 1[16]
  694:[20] AddInt(v1=5[12], v2=1[16]) -> 6[12]
  695:[16] PutInt(var[8], value=6[12])
  698:[12] VarInt(var[8]) -> 6[12]
  701:[16] ConstInt(val=5) -> 5[16]
  706:[20] GtInt(v1=6[12], v2=5[16]) -> true[12]
  707:[13] GenGotoFalseWord(jump=713, if_false=true[12])
  710:[12] GenGotoWord(jump=733)
  733:[12] GenFreeStack(value=0, discard=4)
  737:[8] VarInt(var[4]) -> 15[8]
  740:[12] GenFreeStack(value=4, discard=4)
  744:[8] VarInt(var[4]) -> 15[8]
  747:[12] ConstInt(val=15) -> 15[12]
  752:[16] EqInt(v1=15[8], v2=15[12]) -> true[8]
  753:[9] GenGotoFalseWord(jump=759, if_false=true[8])
  756:[8] GenGotoWord(jump=811)
  811:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
