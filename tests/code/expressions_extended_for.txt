Test code:
pub fn test() {
    test_value = {b = 0; for a in 0..=5 { b+=a }; b};
    assert(
        test_value == 15,
        "Test failed {test_value} != 15"
    );
}

fn test {
  let __work_4 = "";
  let test_value = {
    let b = 0i32;
    {
      let a#index = OpConvIntFromNull();
      loop {
        let a = {
          a#index = if OpNot(OpConvBoolFromInt(a#index)) {0i32} else {OpAddInt(a#index, 1i32)};
          if OpGtInt(a#index, 5i32) {break(0)} else {null};
          a#index;
        };
        {
          b = OpAddInt(b, a);
        };
      };
    };
    b;
  };
  if OpEqInt(test_value, 15i32) {null} else {OpGenPanic({
    OpClearText(__work_4);
    OpAppendText(__work_4, "Test failed ");
    OpFormatInt(__work_4, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_4, " != 15");
    __work_4;
  })};
}

byte-code for extended_for:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstText(_value="") -> text(false)
 671[44]: AppendText(var[4], v1: text(false))
 674[28]: ConstInt(val=0) -> integer
 679[32]: ConvIntFromNull() -> integer
 680[36]: VarInt(var[32]) -> integer
 683[40]: ConvBoolFromInt(v1: integer) -> boolean
 684[37]: Not(v1: boolean) -> boolean
 685[37]: GenGotoFalseWord(jump=696, if_false: boolean)
 688[36]: ConstInt(val=0) -> integer
 693[40]: GenGotoWord(jump=705)
 696[36]: VarInt(var[32]) -> integer
 699[40]: ConstInt(val=1) -> integer
 704[44]: AddInt(v1: integer, v2: integer) -> integer
 705[40]: PutInt(var[32], value: integer)
 708[36]: VarInt(var[32]) -> integer
 711[40]: ConstInt(val=5) -> integer
 716[44]: GtInt(v1: integer, v2: integer) -> boolean
 717[37]: GenGotoFalseWord(jump=723, if_false: boolean)
 720[36]: GenGotoWord(jump=743)
 723[36]: VarInt(var[32]) -> integer
 726[40]: VarInt(var[28]) -> integer
 729[44]: VarInt(var[36]) -> integer
 732[48]: AddInt(v1: integer, v2: integer) -> integer
 733[44]: PutInt(var[28], value: integer)
 736[40]: GenFreeStack(value=0, discard=4)
 740[36]: GenGotoWord(jump=680)
 743[36]: GenFreeStack(value=0, discard=4)
 747[32]: VarInt(var[28]) -> integer
 750[36]: GenFreeStack(value=4, discard=4)
 754[32]: VarInt(var[28]) -> integer
 757[36]: ConstInt(val=15) -> integer
 762[40]: EqInt(v1: integer, v2: integer) -> boolean
 763[33]: GenGotoFalseWord(jump=769, if_false: boolean)
 766[32]: GenGotoWord(jump=819)
 769[32]: ClearText(var[4])
 772[32]: ConstText(_value="Test failed ") -> text(false)
 786[48]: AppendText(var[4], v1: text(false))
 789[32]: VarInt(var[28]) -> integer
 792[36]: ConstInt(val=0) -> integer
 797[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 804[32]: ConstText(_value=" != 15") -> text(false)
 812[48]: AppendText(var[4], v1: text(false))
 815[32]: VarText(var[4]) -> text(false)
 818[48]: GenPanic(message: text(false))
 819[32]: GenReturn(ret=0, value=0, discard=32)

Execute test:
  668:[8] Text()
  669:[32] ConstText(_value="") -> ""[32]
  671:[48] AppendText(var[8], v1=""[32])
  674:[32] ConstInt(val=0) -> 0[32]
  679:[36] ConvIntFromNull() -> -2147483648[36]
  680:[40] VarInt(var[36]) -> -2147483648[40]
  683:[44] ConvBoolFromInt(v1=-2147483648[40]) -> false[40]
  684:[41] Not(v1=false[40]) -> true[40]
  685:[41] GenGotoFalseWord(jump=696, if_false=true[40])
  688:[40] ConstInt(val=0) -> 0[40]
  693:[44] GenGotoWord(jump=705)
  705:[44] PutInt(var[36], value=0[40])
  708:[40] VarInt(var[36]) -> 0[40]
  711:[44] ConstInt(val=5) -> 5[44]
  716:[48] GtInt(v1=0[40], v2=5[44]) -> false[40]
  717:[41] GenGotoFalseWord(jump=723, if_false=false[40])
  723:[40] VarInt(var[36]) -> 0[40]
  726:[44] VarInt(var[32]) -> 0[44]
  729:[48] VarInt(var[40]) -> 0[48]
  732:[52] AddInt(v1=0[44], v2=0[48]) -> 0[44]
  733:[48] PutInt(var[32], value=0[44])
  736:[44] GenFreeStack(value=0, discard=4)
  740:[40] GenGotoWord(jump=680)
  680:[40] VarInt(var[36]) -> 0[40]
  683:[44] ConvBoolFromInt(v1=0[40]) -> true[40]
  684:[41] Not(v1=true[40]) -> false[40]
  685:[41] GenGotoFalseWord(jump=696, if_false=false[40])
  696:[40] VarInt(var[36]) -> 0[40]
  699:[44] ConstInt(val=1) -> 1[44]
  704:[48] AddInt(v1=0[40], v2=1[44]) -> 1[40]
  705:[44] PutInt(var[36], value=1[40])
  708:[40] VarInt(var[36]) -> 1[40]
  711:[44] ConstInt(val=5) -> 5[44]
  716:[48] GtInt(v1=1[40], v2=5[44]) -> false[40]
  717:[41] GenGotoFalseWord(jump=723, if_false=false[40])
  723:[40] VarInt(var[36]) -> 1[40]
  726:[44] VarInt(var[32]) -> 0[44]
  729:[48] VarInt(var[40]) -> 1[48]
  732:[52] AddInt(v1=0[44], v2=1[48]) -> 1[44]
  733:[48] PutInt(var[32], value=1[44])
  736:[44] GenFreeStack(value=0, discard=4)
  740:[40] GenGotoWord(jump=680)
  680:[40] VarInt(var[36]) -> 1[40]
  683:[44] ConvBoolFromInt(v1=1[40]) -> true[40]
  684:[41] Not(v1=true[40]) -> false[40]
  685:[41] GenGotoFalseWord(jump=696, if_false=false[40])
  696:[40] VarInt(var[36]) -> 1[40]
  699:[44] ConstInt(val=1) -> 1[44]
  704:[48] AddInt(v1=1[40], v2=1[44]) -> 2[40]
  705:[44] PutInt(var[36], value=2[40])
  708:[40] VarInt(var[36]) -> 2[40]
  711:[44] ConstInt(val=5) -> 5[44]
  716:[48] GtInt(v1=2[40], v2=5[44]) -> false[40]
  717:[41] GenGotoFalseWord(jump=723, if_false=false[40])
  723:[40] VarInt(var[36]) -> 2[40]
  726:[44] VarInt(var[32]) -> 1[44]
  729:[48] VarInt(var[40]) -> 2[48]
  732:[52] AddInt(v1=1[44], v2=2[48]) -> 3[44]
  733:[48] PutInt(var[32], value=3[44])
  736:[44] GenFreeStack(value=0, discard=4)
  740:[40] GenGotoWord(jump=680)
  680:[40] VarInt(var[36]) -> 2[40]
  683:[44] ConvBoolFromInt(v1=2[40]) -> true[40]
  684:[41] Not(v1=true[40]) -> false[40]
  685:[41] GenGotoFalseWord(jump=696, if_false=false[40])
  696:[40] VarInt(var[36]) -> 2[40]
  699:[44] ConstInt(val=1) -> 1[44]
  704:[48] AddInt(v1=2[40], v2=1[44]) -> 3[40]
  705:[44] PutInt(var[36], value=3[40])
  708:[40] VarInt(var[36]) -> 3[40]
  711:[44] ConstInt(val=5) -> 5[44]
  716:[48] GtInt(v1=3[40], v2=5[44]) -> false[40]
  717:[41] GenGotoFalseWord(jump=723, if_false=false[40])
  723:[40] VarInt(var[36]) -> 3[40]
  726:[44] VarInt(var[32]) -> 3[44]
  729:[48] VarInt(var[40]) -> 3[48]
  732:[52] AddInt(v1=3[44], v2=3[48]) -> 6[44]
  733:[48] PutInt(var[32], value=6[44])
  736:[44] GenFreeStack(value=0, discard=4)
  740:[40] GenGotoWord(jump=680)
  680:[40] VarInt(var[36]) -> 3[40]
  683:[44] ConvBoolFromInt(v1=3[40]) -> true[40]
  684:[41] Not(v1=true[40]) -> false[40]
  685:[41] GenGotoFalseWord(jump=696, if_false=false[40])
  696:[40] VarInt(var[36]) -> 3[40]
  699:[44] ConstInt(val=1) -> 1[44]
  704:[48] AddInt(v1=3[40], v2=1[44]) -> 4[40]
  705:[44] PutInt(var[36], value=4[40])
  708:[40] VarInt(var[36]) -> 4[40]
  711:[44] ConstInt(val=5) -> 5[44]
  716:[48] GtInt(v1=4[40], v2=5[44]) -> false[40]
  717:[41] GenGotoFalseWord(jump=723, if_false=false[40])
  723:[40] VarInt(var[36]) -> 4[40]
  726:[44] VarInt(var[32]) -> 6[44]
  729:[48] VarInt(var[40]) -> 4[48]
  732:[52] AddInt(v1=6[44], v2=4[48]) -> 10[44]
  733:[48] PutInt(var[32], value=10[44])
  736:[44] GenFreeStack(value=0, discard=4)
  740:[40] GenGotoWord(jump=680)
  680:[40] VarInt(var[36]) -> 4[40]
  683:[44] ConvBoolFromInt(v1=4[40]) -> true[40]
  684:[41] Not(v1=true[40]) -> false[40]
  685:[41] GenGotoFalseWord(jump=696, if_false=false[40])
  696:[40] VarInt(var[36]) -> 4[40]
  699:[44] ConstInt(val=1) -> 1[44]
  704:[48] AddInt(v1=4[40], v2=1[44]) -> 5[40]
  705:[44] PutInt(var[36], value=5[40])
  708:[40] VarInt(var[36]) -> 5[40]
  711:[44] ConstInt(val=5) -> 5[44]
  716:[48] GtInt(v1=5[40], v2=5[44]) -> false[40]
  717:[41] GenGotoFalseWord(jump=723, if_false=false[40])
  723:[40] VarInt(var[36]) -> 5[40]
  726:[44] VarInt(var[32]) -> 10[44]
  729:[48] VarInt(var[40]) -> 5[48]
  732:[52] AddInt(v1=10[44], v2=5[48]) -> 15[44]
  733:[48] PutInt(var[32], value=15[44])
  736:[44] GenFreeStack(value=0, discard=4)
  740:[40] GenGotoWord(jump=680)
  680:[40] VarInt(var[36]) -> 5[40]
  683:[44] ConvBoolFromInt(v1=5[40]) -> true[40]
  684:[41] Not(v1=true[40]) -> false[40]
  685:[41] GenGotoFalseWord(jump=696, if_false=false[40])
  696:[40] VarInt(var[36]) -> 5[40]
  699:[44] ConstInt(val=1) -> 1[44]
  704:[48] AddInt(v1=5[40], v2=1[44]) -> 6[40]
  705:[44] PutInt(var[36], value=6[40])
  708:[40] VarInt(var[36]) -> 6[40]
  711:[44] ConstInt(val=5) -> 5[44]
  716:[48] GtInt(v1=6[40], v2=5[44]) -> true[40]
  717:[41] GenGotoFalseWord(jump=723, if_false=true[40])
  720:[40] GenGotoWord(jump=743)
  743:[40] GenFreeStack(value=0, discard=4)
  747:[36] VarInt(var[32]) -> 15[36]
  750:[40] GenFreeStack(value=4, discard=4)
  754:[36] VarInt(var[32]) -> 15[36]
  757:[40] ConstInt(val=15) -> 15[40]
  762:[44] EqInt(v1=15[36], v2=15[40]) -> true[36]
  763:[37] GenGotoFalseWord(jump=769, if_false=true[36])
  766:[36] GenGotoWord(jump=819)
  819:[36] GenReturn(ret=4294967295[4], value=0, discard=32)
Finished
