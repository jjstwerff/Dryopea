Test code:
pub fn test() {
    test_value = {123 and (12 or false)};
    assert(
        test_value == true,
        "Test failed {test_value} != true"
    );
}

fn test {
  let __work_1 = "";
  let test_value = {
    if OpConvBoolFromInt(123i32) {if OpConvBoolFromInt(12i32) {true} else {false}} else {false};
  };
  if OpEqBool(test_value, true) {null} else {OpGenPanic({
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatBool(__work_1, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_1, " != true");
    __work_1;
  })};
}

byte-code for boolean_named:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstText(_value="") -> text(false)
 671[44]: AppendText(var[4], v1: text(false))
 674[28]: ConstInt(val=123) -> integer
 679[32]: ConvBoolFromInt(v1: integer) -> boolean
 680[29]: GenGotoFalseWord(jump=700, if_false: boolean)
 683[28]: ConstInt(val=12) -> integer
 688[32]: ConvBoolFromInt(v1: integer) -> boolean
 689[29]: GenGotoFalseWord(jump=696, if_false: boolean)
 692[28]: ConstTrue() -> boolean
 693[29]: GenGotoWord(jump=697)
 696[28]: ConstFalse() -> boolean
 697[29]: GenGotoWord(jump=701)
 700[28]: ConstFalse() -> boolean
 701[29]: VarBool(var[28]) -> boolean
 704[30]: ConstTrue() -> boolean
 705[31]: EqBool(v1: boolean, v2: boolean) -> boolean
 706[30]: GenGotoFalseWord(jump=712, if_false: boolean)
 709[29]: GenGotoWord(jump=762)
 712[29]: ClearText(var[4])
 715[29]: ConstText(_value="Test failed ") -> text(false)
 729[45]: AppendText(var[4], v1: text(false))
 732[29]: VarBool(var[28]) -> boolean
 735[30]: ConstInt(val=0) -> integer
 740[34]: FormatBool(var[4], val: boolean, width: integer, dir=-1, token=32)
 745[29]: ConstText(_value=" != true") -> text(false)
 755[45]: AppendText(var[4], v1: text(false))
 758[29]: VarText(var[4]) -> text(false)
 761[45]: GenPanic(message: text(false))
 762[29]: GenReturn(ret=0, value=0, discard=29)

Execute test:
  668:[8] Text()
  669:[32] ConstText(_value="") -> ""[32]
  671:[48] AppendText(var[8], v1=""[32])
  674:[32] ConstInt(val=123) -> 123[32]
  679:[36] ConvBoolFromInt(v1=123[32]) -> true[32]
  680:[33] GenGotoFalseWord(jump=700, if_false=true[32])
  683:[32] ConstInt(val=12) -> 12[32]
  688:[36] ConvBoolFromInt(v1=12[32]) -> true[32]
  689:[33] GenGotoFalseWord(jump=696, if_false=true[32])
  692:[32] ConstTrue() -> true[32]
  693:[33] GenGotoWord(jump=697)
  697:[33] GenGotoWord(jump=701)
  701:[33] VarBool(var[32]) -> true[33]
  704:[34] ConstTrue() -> true[34]
  705:[35] EqBool(v1=true[33], v2=true[34]) -> true[33]
  706:[34] GenGotoFalseWord(jump=712, if_false=true[33])
  709:[33] GenGotoWord(jump=762)
  762:[33] GenReturn(ret=4294967295[4], value=0, discard=29)
Finished
