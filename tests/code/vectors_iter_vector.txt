Test code:
pub fn test() {
    test_value = {v=[1, 2, 4, 8];
c = 0;
for e in v[1..3] {
  c = c * 10 + e;
}
for e in v[2..] {
  c = c * 10 + e;
}
c};
    assert(
        test_value == 2448,
        "Test failed {test_value} != 2448"
    );
}

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

Type 14:vector<integer>[4]:Vector(0)

fn test {
  let __work_9 = "";
  let test_value = {
    let v = {
      let db_16 = OpDatabase(4i32, 13i32);
      let vec_15 = OpGetField(db_16, 4i32, 14i32);
      OpSetInt(db_16, 4i32, 0i32);
      let elm_14 = OpNewRecord(vec_15, 14i32, 65535i32);
      OpSetInt(elm_14, 0i32, 1i32);
      OpFinishRecord(vec_15, elm_14, 14i32, 65535i32);
      elm_14 = OpNewRecord(vec_15, 14i32, 65535i32);
      OpSetInt(elm_14, 0i32, 2i32);
      OpFinishRecord(vec_15, elm_14, 14i32, 65535i32);
      elm_14 = OpNewRecord(vec_15, 14i32, 65535i32);
      OpSetInt(elm_14, 0i32, 4i32);
      OpFinishRecord(vec_15, elm_14, 14i32, 65535i32);
      elm_14 = OpNewRecord(vec_15, 14i32, 65535i32);
      OpSetInt(elm_14, 0i32, 8i32);
      OpFinishRecord(vec_15, elm_14, 14i32, 65535i32);
      vec_15;
    };
    let c = 0i32;
    {
      let index_17 = OpConvIntFromNull();
      loop {
        let e = OpGetInt(OpGetVector(v, 4i32, {
          index_17 = if OpNot(OpConvBoolFromInt(index_17)) {1i32} else {OpAddInt(index_17, 1i32)};
          if OpGeInt(index_17, 3i32) {break(0)} else {null};
          index_17;
        }), 0i32);
        {
          c = OpAddInt(OpMulInt(c, 10i32), e);
        };
      };
    };
    {
      let index_18 = OpConvIntFromNull();
      loop {
        let e = OpGetInt(OpGetVector(v, 4i32, {
          index_18 = if OpNot(OpConvBoolFromInt(index_18)) {2i32} else {OpAddInt(index_18, 1i32)};
          if OpGeInt(index_18, OpLengthVector(v)) {break(0)} else {null};
          index_18;
        }), 0i32);
        {
          c = OpAddInt(OpMulInt(c, 10i32), e);
        };
      };
    };
    c;
  };
  if OpEqInt(test_value, 2448i32) {null} else {OpGenPanic({
    OpClearText(__work_9);
    OpAppendText(__work_9, "Test failed ");
    OpFormatInt(__work_9, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_9, " != 2448");
    __work_9;
  })};
}

byte-code for iter_vector:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstText(_value="") -> text(false)
 671[44]: AppendText(var[4], v1: text(false))
 674[28]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 679[40]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 682[52]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[14]
 685[52]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 688[64]: ConstInt(val=0) -> integer
 693[68]: SetInt(v1: reference, fld=4, val: integer)
 696[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 699[64]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 704[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 707[76]: ConstInt(val=1) -> integer
 712[80]: SetInt(v1: reference, fld=0, val: integer)
 715[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 718[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 721[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 726[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 729[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 734[76]: PutRef(var[52], value: reference)
 737[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 740[76]: ConstInt(val=2) -> integer
 745[80]: SetInt(v1: reference, fld=0, val: integer)
 748[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 751[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 754[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 759[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 762[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 767[76]: PutRef(var[52], value: reference)
 770[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 773[76]: ConstInt(val=4) -> integer
 778[80]: SetInt(v1: reference, fld=0, val: integer)
 781[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 784[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 787[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 792[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 795[76]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 800[76]: PutRef(var[52], value: reference)
 803[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 806[76]: ConstInt(val=8) -> integer
 811[80]: SetInt(v1: reference, fld=0, val: integer)
 814[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 817[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 820[88]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 825[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14]
 828[76]: GenFreeStack(value=12, discard=36)
 832[40]: ConstInt(val=0) -> integer
 837[44]: ConvIntFromNull() -> integer
 838[48]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 841[60]: VarInt(var[44]) -> integer
 844[64]: ConvBoolFromInt(v1: integer) -> boolean
 845[61]: Not(v1: boolean) -> boolean
 846[61]: GenGotoFalseWord(jump=857, if_false: boolean)
 849[60]: ConstInt(val=1) -> integer
 854[64]: GenGotoWord(jump=866)
 857[60]: VarInt(var[44]) -> integer
 860[64]: ConstInt(val=1) -> integer
 865[68]: AddInt(v1: integer, v2: integer) -> integer
 866[64]: PutInt(var[44], value: integer)
 869[60]: VarInt(var[44]) -> integer
 872[64]: ConstInt(val=3) -> integer
 877[68]: GeInt(v1: integer, v2: integer) -> boolean
 878[61]: GenGotoFalseWord(jump=888, if_false: boolean)
 881[60]: GenFreeStack(value=0, discard=12)
 885[48]: GenGotoWord(jump=920)
 888[60]: VarInt(var[44]) -> integer
 891[64]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 894[60]: GetInt(v1: reference, fld=0) -> integer
 897[52]: VarInt(var[40]) -> integer
 900[56]: ConstInt(val=10) -> integer
 905[60]: MulInt(v1: integer, v2: integer) -> integer
 906[56]: VarInt(var[48]) -> integer
 909[60]: AddInt(v1: integer, v2: integer) -> integer
 910[56]: PutInt(var[40], value: integer)
 913[52]: GenFreeStack(value=0, discard=4)
 917[48]: GenGotoWord(jump=838)
 920[48]: GenFreeStack(value=0, discard=4)
 924[44]: ConvIntFromNull() -> integer
 925[48]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 928[60]: VarInt(var[44]) -> integer
 931[64]: ConvBoolFromInt(v1: integer) -> boolean
 932[61]: Not(v1: boolean) -> boolean
 933[61]: GenGotoFalseWord(jump=944, if_false: boolean)
 936[60]: ConstInt(val=2) -> integer
 941[64]: GenGotoWord(jump=953)
 944[60]: VarInt(var[44]) -> integer
 947[64]: ConstInt(val=1) -> integer
 952[68]: AddInt(v1: integer, v2: integer) -> integer
 953[64]: PutInt(var[44], value: integer)
 956[60]: VarInt(var[44]) -> integer
 959[64]: VarVector(var[28]) -> vector type=vector<integer>[4]:Vector(0)[14]
 962[76]: LengthVector(r: vector) -> integer
 963[68]: GeInt(v1: integer, v2: integer) -> boolean
 964[61]: GenGotoFalseWord(jump=974, if_false: boolean)
 967[60]: GenFreeStack(value=0, discard=12)
 971[48]: GenGotoWord(jump=1006)
 974[60]: VarInt(var[44]) -> integer
 977[64]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 980[60]: GetInt(v1: reference, fld=0) -> integer
 983[52]: VarInt(var[40]) -> integer
 986[56]: ConstInt(val=10) -> integer
 991[60]: MulInt(v1: integer, v2: integer) -> integer
 992[56]: VarInt(var[48]) -> integer
 995[60]: AddInt(v1: integer, v2: integer) -> integer
 996[56]: PutInt(var[40], value: integer)
 999[52]: GenFreeStack(value=0, discard=4)
1003[48]: GenGotoWord(jump=925)
1006[48]: GenFreeStack(value=0, discard=4)
1010[44]: VarInt(var[40]) -> integer
1013[48]: GenFreeStack(value=4, discard=16)
1017[32]: VarInt(var[28]) -> integer
1020[36]: ConstInt(val=2448) -> integer
1025[40]: EqInt(v1: integer, v2: integer) -> boolean
1026[33]: GenGotoFalseWord(jump=1032, if_false: boolean)
1029[32]: GenGotoWord(jump=1084)
1032[32]: ClearText(var[4])
1035[32]: ConstText(_value="Test failed ") -> text(false)
1049[48]: AppendText(var[4], v1: text(false))
1052[32]: VarInt(var[28]) -> integer
1055[36]: ConstInt(val=0) -> integer
1060[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1067[32]: ConstText(_value=" != 2448") -> text(false)
1077[48]: AppendText(var[4], v1: text(false))
1080[32]: VarText(var[4]) -> text(false)
1083[48]: GenPanic(message: text(false))
1084[32]: GenReturn(ret=0, value=0, discard=32)

Execute test:
  668:[8] Text()
  669:[32] ConstText(_value="") -> ""[32]
  671:[48] AppendText(var[8], v1=""[32])
  674:[32] Database(size=4, db_tp=13) -> ref(1,1,0)={}[32]
  679:[44] VarRef(var[32]) -> ref(1,1,0)={}[44]
  682:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)=[][44]
  685:[56] VarRef(var[32]) -> ref(1,1,0)={}[56]
  688:[68] ConstInt(val=0) -> 0[68]
  693:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  696:[56] VarVector(var[44]) -> ref(1,1,4)=[][56]
  699:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=14, fld=65535) -> ref(1,5,8)[56]
  704:[68] VarRef(var[56]) -> ref(1,5,8)=false[68]
  707:[80] ConstInt(val=1) -> 1[80]
  712:[84] SetInt(v1=ref(1,5,8)[68], fld=0, val=1[80])
  715:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  718:[80] VarRef(var[56]) -> ref(1,5,8)=true[80]
  721:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,8)[80], parent_tp=14, fld=65535)
  726:[68] VarVector(var[44]) -> ref(1,1,4)=[1][68]
  729:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=14, fld=65535) -> ref(1,5,12)[68]
  734:[80] PutRef(var[56], value=ref(1,5,12)[68])
  737:[68] VarRef(var[56]) -> ref(1,5,12)=false[68]
  740:[80] ConstInt(val=2) -> 2[80]
  745:[84] SetInt(v1=ref(1,5,12)[68], fld=0, val=2[80])
  748:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  751:[80] VarRef(var[56]) -> ref(1,5,12)=true[80]
  754:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,12)[80], parent_tp=14, fld=65535)
  759:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2][68]
  762:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=14, fld=65535) -> ref(1,5,16)[68]
  767:[80] PutRef(var[56], value=ref(1,5,16)[68])
  770:[68] VarRef(var[56]) -> ref(1,5,16)=false[68]
  773:[80] ConstInt(val=4) -> 4[80]
  778:[84] SetInt(v1=ref(1,5,16)[68], fld=0, val=4[80])
  781:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4][68]
  784:[80] VarRef(var[56]) -> ref(1,5,16)=true[80]
  787:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,16)[80], parent_tp=14, fld=65535)
  792:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4][68]
  795:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=14, fld=65535) -> ref(1,5,20)[68]
  800:[80] PutRef(var[56], value=ref(1,5,20)[68])
  803:[68] VarRef(var[56]) -> ref(1,5,20)=false[68]
  806:[80] ConstInt(val=8) -> 8[80]
  811:[84] SetInt(v1=ref(1,5,20)[68], fld=0, val=8[80])
  814:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][68]
  817:[80] VarRef(var[56]) -> ref(1,5,20)=true[80]
  820:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,20)[80], parent_tp=14, fld=65535)
  825:[68] VarVector(var[44]) -> ref(1,1,4)=[1,2,4,8][68]
  828:[80] GenFreeStack(value=12, discard=36)
  832:[44] ConstInt(val=0) -> 0[44]
  837:[48] ConvIntFromNull() -> -2147483648[48]
  838:[52] VarVector(var[32]) -> ref(1,1,4)=[1,2,4,8][52]
  841:[64] VarInt(var[48]) -> -2147483648[64]
  844:[68] ConvBoolFromInt(v1=-2147483648[64]) -> false[64]
  845:[65] Not(v1=false[64]) -> true[64]
  846:[65] GenGotoFalseWord(jump=857, if_false=true[64])
  849:[64] ConstInt(val=1) -> 1[64]
  854:[68] GenGotoWord(jump=866)
  866:[68] PutInt(var[48], value=1[64])
  869:[64] VarInt(var[48]) -> 1[64]
  872:[68] ConstInt(val=3) -> 3[68]
  877:[72] GeInt(v1=1[64], v2=3[68]) -> false[64]
  878:[65] GenGotoFalseWord(jump=888, if_false=false[64])
  888:[64] VarInt(var[48]) -> 1[64]
  891:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=1[64]) -> ref(1,5,12)=2[52]
  894:[64] GetInt(v1=ref(1,5,12)[52], fld=0) -> 2[52]
  897:[56] VarInt(var[44]) -> 0[56]
  900:[60] ConstInt(val=10) -> 10[60]
  905:[64] MulInt(v1=0[56], v2=10[60]) -> 0[56]
  906:[60] VarInt(var[52]) -> 2[60]
  909:[64] AddInt(v1=0[56], v2=2[60]) -> 2[56]
  910:[60] PutInt(var[44], value=2[56])
  913:[56] GenFreeStack(value=0, discard=4)
  917:[52] GenGotoWord(jump=838)
  838:[52] VarVector(var[32]) -> ref(1,1,4)=[1,2,4,8][52]
  841:[64] VarInt(var[48]) -> 1[64]
  844:[68] ConvBoolFromInt(v1=1[64]) -> true[64]
  845:[65] Not(v1=true[64]) -> false[64]
  846:[65] GenGotoFalseWord(jump=857, if_false=false[64])
  857:[64] VarInt(var[48]) -> 1[64]
  860:[68] ConstInt(val=1) -> 1[68]
  865:[72] AddInt(v1=1[64], v2=1[68]) -> 2[64]
  866:[68] PutInt(var[48], value=2[64])
  869:[64] VarInt(var[48]) -> 2[64]
  872:[68] ConstInt(val=3) -> 3[68]
  877:[72] GeInt(v1=2[64], v2=3[68]) -> false[64]
  878:[65] GenGotoFalseWord(jump=888, if_false=false[64])
  888:[64] VarInt(var[48]) -> 2[64]
  891:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=2[64]) -> ref(1,5,16)=4[52]
  894:[64] GetInt(v1=ref(1,5,16)[52], fld=0) -> 4[52]
  897:[56] VarInt(var[44]) -> 2[56]
  900:[60] ConstInt(val=10) -> 10[60]
  905:[64] MulInt(v1=2[56], v2=10[60]) -> 20[56]
  906:[60] VarInt(var[52]) -> 4[60]
  909:[64] AddInt(v1=20[56], v2=4[60]) -> 24[56]
  910:[60] PutInt(var[44], value=24[56])
  913:[56] GenFreeStack(value=0, discard=4)
  917:[52] GenGotoWord(jump=838)
  838:[52] VarVector(var[32]) -> ref(1,1,4)=[1,2,4,8][52]
  841:[64] VarInt(var[48]) -> 2[64]
  844:[68] ConvBoolFromInt(v1=2[64]) -> true[64]
  845:[65] Not(v1=true[64]) -> false[64]
  846:[65] GenGotoFalseWord(jump=857, if_false=false[64])
  857:[64] VarInt(var[48]) -> 2[64]
  860:[68] ConstInt(val=1) -> 1[68]
  865:[72] AddInt(v1=2[64], v2=1[68]) -> 3[64]
  866:[68] PutInt(var[48], value=3[64])
  869:[64] VarInt(var[48]) -> 3[64]
  872:[68] ConstInt(val=3) -> 3[68]
  877:[72] GeInt(v1=3[64], v2=3[68]) -> true[64]
  878:[65] GenGotoFalseWord(jump=888, if_false=true[64])
  881:[64] GenFreeStack(value=0, discard=12)
  885:[52] GenGotoWord(jump=920)
  920:[52] GenFreeStack(value=0, discard=4)
  924:[48] ConvIntFromNull() -> -2147483648[48]
  925:[52] VarVector(var[32]) -> ref(1,1,4)=[1,2,4,8][52]
  928:[64] VarInt(var[48]) -> -2147483648[64]
  931:[68] ConvBoolFromInt(v1=-2147483648[64]) -> false[64]
  932:[65] Not(v1=false[64]) -> true[64]
  933:[65] GenGotoFalseWord(jump=944, if_false=true[64])
  936:[64] ConstInt(val=2) -> 2[64]
  941:[68] GenGotoWord(jump=953)
  953:[68] PutInt(var[48], value=2[64])
  956:[64] VarInt(var[48]) -> 2[64]
  959:[68] VarVector(var[32]) -> ref(1,1,4)=[1,2,4,8][68]
  962:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  963:[72] GeInt(v1=2[64], v2=4[68]) -> false[64]
  964:[65] GenGotoFalseWord(jump=974, if_false=false[64])
  974:[64] VarInt(var[48]) -> 2[64]
  977:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=2[64]) -> ref(1,5,16)=4[52]
  980:[64] GetInt(v1=ref(1,5,16)[52], fld=0) -> 4[52]
  983:[56] VarInt(var[44]) -> 24[56]
  986:[60] ConstInt(val=10) -> 10[60]
  991:[64] MulInt(v1=24[56], v2=10[60]) -> 240[56]
  992:[60] VarInt(var[52]) -> 4[60]
  995:[64] AddInt(v1=240[56], v2=4[60]) -> 244[56]
  996:[60] PutInt(var[44], value=244[56])
  999:[56] GenFreeStack(value=0, discard=4)
 1003:[52] GenGotoWord(jump=925)
  925:[52] VarVector(var[32]) -> ref(1,1,4)=[1,2,4,8][52]
  928:[64] VarInt(var[48]) -> 2[64]
  931:[68] ConvBoolFromInt(v1=2[64]) -> true[64]
  932:[65] Not(v1=true[64]) -> false[64]
  933:[65] GenGotoFalseWord(jump=944, if_false=false[64])
  944:[64] VarInt(var[48]) -> 2[64]
  947:[68] ConstInt(val=1) -> 1[68]
  952:[72] AddInt(v1=2[64], v2=1[68]) -> 3[64]
  953:[68] PutInt(var[48], value=3[64])
  956:[64] VarInt(var[48]) -> 3[64]
  959:[68] VarVector(var[32]) -> ref(1,1,4)=[1,2,4,8][68]
  962:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  963:[72] GeInt(v1=3[64], v2=4[68]) -> false[64]
  964:[65] GenGotoFalseWord(jump=974, if_false=false[64])
  974:[64] VarInt(var[48]) -> 3[64]
  977:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=3[64]) -> ref(1,5,20)=8[52]
  980:[64] GetInt(v1=ref(1,5,20)[52], fld=0) -> 8[52]
  983:[56] VarInt(var[44]) -> 244[56]
  986:[60] ConstInt(val=10) -> 10[60]
  991:[64] MulInt(v1=244[56], v2=10[60]) -> 2440[56]
  992:[60] VarInt(var[52]) -> 8[60]
  995:[64] AddInt(v1=2440[56], v2=8[60]) -> 2448[56]
  996:[60] PutInt(var[44], value=2448[56])
  999:[56] GenFreeStack(value=0, discard=4)
 1003:[52] GenGotoWord(jump=925)
  925:[52] VarVector(var[32]) -> ref(1,1,4)=[1,2,4,8][52]
  928:[64] VarInt(var[48]) -> 3[64]
  931:[68] ConvBoolFromInt(v1=3[64]) -> true[64]
  932:[65] Not(v1=true[64]) -> false[64]
  933:[65] GenGotoFalseWord(jump=944, if_false=false[64])
  944:[64] VarInt(var[48]) -> 3[64]
  947:[68] ConstInt(val=1) -> 1[68]
  952:[72] AddInt(v1=3[64], v2=1[68]) -> 4[64]
  953:[68] PutInt(var[48], value=4[64])
  956:[64] VarInt(var[48]) -> 4[64]
  959:[68] VarVector(var[32]) -> ref(1,1,4)=[1,2,4,8][68]
  962:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  963:[72] GeInt(v1=4[64], v2=4[68]) -> true[64]
  964:[65] GenGotoFalseWord(jump=974, if_false=true[64])
  967:[64] GenFreeStack(value=0, discard=12)
  971:[52] GenGotoWord(jump=1006)
 1006:[52] GenFreeStack(value=0, discard=4)
 1010:[48] VarInt(var[44]) -> 2448[48]
 1013:[52] GenFreeStack(value=4, discard=16)
 1017:[36] VarInt(var[32]) -> 2448[36]
 1020:[40] ConstInt(val=2448) -> 2448[40]
 1025:[44] EqInt(v1=2448[36], v2=2448[40]) -> true[36]
 1026:[37] GenGotoFalseWord(jump=1032, if_false=true[36])
 1029:[36] GenGotoWord(jump=1084)
 1084:[36] GenReturn(ret=4294967295[4], value=0, discard=32)
Finished
