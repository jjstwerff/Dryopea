pub fn test() {
    test_value = {v=[1, 2, 4, 8];
c = 0;
for e in v[1..3] {
  c = c * 10 + e;
}
for e in v[2..] {
  c = c * 10 + e;
}
assert(!v[4], "Incorrect reading outside vector bounds");
c};
    assert(
        test_value == 2448,
        "Test failed {test_value} != 2448"
    );
}
Type 14:vector<integer>[4]:Vector(0)

Type 15:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  __ref_1:ref(main_vector<integer>) = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    v:vector<integer>["__ref_1"] = {#3 vector
      OpDatabase(__ref_1, 15i32);
      _vec_1:vector<integer>["__ref_1"] = OpGetField(__ref_1, 4i32, 65535i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 1i32);
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 2i32);
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 4i32);
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _elm_2:ref(boolean)["__ref_1"] = OpNewRecord(_vec_1, 14i32, 65535i32);
      OpSetInt(_elm_2, 0i32, 8i32);
      OpFinishRecord(_vec_1, _elm_2, 14i32, 65535i32);
      _vec_1;
    }#3:vector<integer>["__ref_1"];
    c:integer = 0i32;
    {#4 for
      _index_3:integer = OpConvIntFromNull();
      loop {#5 for loop
        e:integer = {#6 for next
          OpGetInt(OpGetVector(v, 4i32, {#7 for next block
            _index_3:integer = if OpNot(OpConvBoolFromInt(_index_3)) 1i32 else OpAddInt(_index_3, 1i32);
            if OpGeInt(_index_3, 3i32) break(0) else null;
            _index_3;
          }#7:integer), 0i32);
        }#6:integer;
        {#8 block
          c:integer = OpAddInt(OpMulInt(c, 10i32), e);
        }#8;
      }#5;
    }#4;
    {#9 for
      _index_4:integer = OpConvIntFromNull();
      loop {#10 for loop
        e:integer = {#11 for next
          OpGetInt(OpGetVector(v, 4i32, {#12 for next block
            _index_4:integer = if OpNot(OpConvBoolFromInt(_index_4)) 2i32 else OpAddInt(_index_4, 1i32);
            if OpGeInt(_index_4, OpLengthVector(v)) break(0) else null;
            _index_4;
          }#12:integer), 0i32);
        }#11:integer;
        {#13 block
          c:integer = OpAddInt(OpMulInt(c, 10i32), e);
        }#13;
      }#10;
    }#9;
    if OpNot(OpConvBoolFromInt(OpGetInt(OpGetVector(v, 4i32, 4i32), 0i32))) null else OpPanic("Incorrect reading outside vector bounds");
    c;
  }#2:integer;
  if OpEqInt(test_value, 2448i32) null else OpPanic({#14 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 2448");
    __work_1;
  }#14:text);
}#1

byte-code for iter_vector:test()
   0[0]: return-address
   0[4]: ConvRefFromNull() -> ref(reference) var=__ref_1[4]:ref(main_vector<integer>) in 1
   1[16]: Text() var=__work_1[16]:text in 1
   2[40]: Database(var[4], db_tp=15) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=v[40]:vector<integer>["__ref_1"] in 2
   7[40]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=__ref_1[4]:ref(main_vector<integer>) in 1
  10[52]: GetField(v1: ref(reference), fld=4) -> ref(reference) type=Unknown type(65535)[65535]
  13[52]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=__ref_1[4]:ref(main_vector<integer>) in 1
  16[64]: ConstInt(val=0) -> integer
  21[68]: SetInt(v1: ref(reference), fld=4, val: integer)
  24[52]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  27[64]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
  32[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  35[76]: ConstInt(val=1) -> integer
  40[80]: SetInt(v1: ref(reference), fld=0, val: integer)
  43[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  46[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  49[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
  54[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  57[76]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
  62[76]: PutRef(var[52], value: ref(reference))
  65[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  68[76]: ConstInt(val=2) -> integer
  73[80]: SetInt(v1: ref(reference), fld=0, val: integer)
  76[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  79[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
  82[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
  87[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
  90[76]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
  95[76]: PutRef(var[52], value: ref(reference))
  98[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 101[76]: ConstInt(val=4) -> integer
 106[80]: SetInt(v1: ref(reference), fld=0, val: integer)
 109[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 112[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 115[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
 120[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 123[76]: NewRecord(data: ref(reference), parent_tp=14, fld=65535) -> ref(reference)
 128[76]: PutRef(var[52], value: ref(reference))
 131[64]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 134[76]: ConstInt(val=8) -> integer
 139[80]: SetInt(v1: ref(reference), fld=0, val: integer)
 142[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 145[76]: VarRef(var[52]) -> ref(reference) type=boolean[1]:Base[4] var=_elm_2[52]:ref(boolean)["__ref_1"] in 3
 148[88]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=14, fld=65535)
 153[64]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=_vec_1[40]:vector<integer>["__ref_1"] in 3
 156[76]: FreeStack(value=12, discard=36) type=vector<text>[4]:Vector(5)[6]
 160[52]: ConstInt(val=0) -> integer var=c[52]:integer in 2
 165[56]: ConvIntFromNull() -> integer var=_index_3[56]:integer in 4
 166[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 169[72]: VarInt(var[56]) -> integer var=_index_3[56]:integer in 4
 172[76]: ConvBoolFromInt(v1: integer) -> boolean
 173[73]: Not(v1: boolean) -> boolean
 174[73]: GotoFalseWord(jump=185, if_false: boolean)
 177[72]: ConstInt(val=1) -> integer
 182[76]: GotoWord(jump=194)
 185[72]: VarInt(var[56]) -> integer var=_index_3[56]:integer in 4
 188[76]: ConstInt(val=1) -> integer
 193[80]: AddInt(v1: integer, v2: integer) -> integer
 194[76]: PutInt(var[56], value: integer)
 197[72]: VarInt(var[56]) -> integer var=_index_3[56]:integer in 4
 200[76]: ConstInt(val=3) -> integer
 205[80]: GeInt(v1: integer, v2: integer) -> boolean
 206[73]: GotoFalseWord(jump=216, if_false: boolean)
 209[72]: FreeStack(value=0, discard=12)
 213[60]: GotoWord(jump=248)
 216[72]: VarInt(var[56]) -> integer var=_index_3[56]:integer in 4
 219[76]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 222[72]: GetInt(v1: ref(reference), fld=0) -> integer
 225[64]: VarInt(var[52]) -> integer var=c[52]:integer in 2
 228[68]: ConstInt(val=10) -> integer
 233[72]: MulInt(v1: integer, v2: integer) -> integer
 234[68]: VarInt(var[60]) -> integer var=e[60]:integer in 5
 237[72]: AddInt(v1: integer, v2: integer) -> integer
 238[68]: PutInt(var[52], value: integer)
 241[64]: FreeStack(value=0, discard=4)
 245[60]: GotoWord(jump=166)
 248[60]: FreeStack(value=0, discard=4)
 252[56]: ConvIntFromNull() -> integer var=_index_4[56]:integer in 9
 253[60]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 256[72]: VarInt(var[56]) -> integer var=_index_4[56]:integer in 9
 259[76]: ConvBoolFromInt(v1: integer) -> boolean
 260[73]: Not(v1: boolean) -> boolean
 261[73]: GotoFalseWord(jump=272, if_false: boolean)
 264[72]: ConstInt(val=2) -> integer
 269[76]: GotoWord(jump=281)
 272[72]: VarInt(var[56]) -> integer var=_index_4[56]:integer in 9
 275[76]: ConstInt(val=1) -> integer
 280[80]: AddInt(v1: integer, v2: integer) -> integer
 281[76]: PutInt(var[56], value: integer)
 284[72]: VarInt(var[56]) -> integer var=_index_4[56]:integer in 9
 287[76]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 290[88]: LengthVector(r: vector) -> integer
 291[80]: GeInt(v1: integer, v2: integer) -> boolean
 292[73]: GotoFalseWord(jump=302, if_false: boolean)
 295[72]: FreeStack(value=0, discard=12)
 299[60]: GotoWord(jump=334)
 302[72]: VarInt(var[56]) -> integer var=_index_4[56]:integer in 9
 305[76]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 308[72]: GetInt(v1: ref(reference), fld=0) -> integer
 311[64]: VarInt(var[52]) -> integer var=c[52]:integer in 2
 314[68]: ConstInt(val=10) -> integer
 319[72]: MulInt(v1: integer, v2: integer) -> integer
 320[68]: VarInt(var[60]) -> integer var=e[60]:integer in 10
 323[72]: AddInt(v1: integer, v2: integer) -> integer
 324[68]: PutInt(var[52], value: integer)
 327[64]: FreeStack(value=0, discard=4)
 331[60]: GotoWord(jump=253)
 334[60]: FreeStack(value=0, discard=4)
 338[56]: VarVector(var[40]) -> vector type=vector<integer>[4]:Vector(0)[14] var=v[40]:vector<integer>["__ref_1"] in 2
 341[68]: ConstInt(val=4) -> integer
 346[72]: GetVector(r: vector, size=4, index: integer) -> ref(reference) type=integer[4]:Base[0]
 349[68]: GetInt(v1: ref(reference), fld=0) -> integer
 352[60]: ConvBoolFromInt(v1: integer) -> boolean
 353[57]: Not(v1: boolean) -> boolean
 354[57]: GotoFalseWord(jump=360, if_false: boolean)
 357[56]: GotoWord(jump=402)
 360[56]: ConstText(_value="Incorrect reading outside vector bounds") -> text
 401[72]: Panic(message: text)
 402[56]: VarInt(var[52]) -> integer var=c[52]:integer in 2
 405[60]: FreeStack(value=4, discard=20) type=integer[4]:Base[0]
 409[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
 412[48]: ConstInt(val=2448) -> integer
 417[52]: EqInt(v1: integer, v2: integer) -> boolean
 418[45]: GotoFalseWord(jump=424, if_false: boolean)
 421[44]: GotoWord(jump=476)
 424[44]: ClearText(var[16]) var=__work_1[16]:text in 1
 427[44]: ConstText(_value="Test failed ") -> text
 441[60]: AppendText(var[16], v1: text)
 444[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
 447[48]: ConstInt(val=0) -> integer
 452[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
 459[44]: ConstText(_value=" != 2448") -> text
 469[60]: AppendText(var[16], v1: text)
 472[44]: VarText(var[16]) -> text var=__work_1[16]:text in 1
 475[60]: Panic(message: text)
 476[44]: VarRef(var[4]) -> ref(reference) type=main_vector<integer>[8]:{vector:vector<integer>[4]}[15] var=__ref_1[4]:ref(main_vector<integer>) in 1
 479[56]: FreeRef(v1: ref(reference))
 480[44]: FreeText(var[16])
 483[44]: Return(ret=0, value=0, discard=44)

