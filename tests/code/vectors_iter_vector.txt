pub fn test() {
    test_value = {v=[1, 2, 4, 8];
c = 0;
for e in v[1..3] {
  c = c * 10 + e;
}
for e in v[2..] {
  c = c * 10 + e;
}
c};
    assert(
        test_value == 2448,
        "Test failed {test_value} != 2448"
    );
}
Type 11:vector<integer>[4]:Vector(0)

Type 12:main_vector<integer>[8]:
    vector:vector<integer>[4]

fn test() {#1 block
  let __work_1:text = "";
  let test_value:integer = {#2 block
    let v:vector<integer>#[] = {#3 vector
      let _db_3:main_vector<integer> = OpDatabase(4i32, 12i32);
      let _vec_2:vector<integer>#[] = OpGetField(_db_3, 4i32, 65535i32);
      OpSetInt(_db_3, 4i32, 0i32);
      let _elm_1:boolean = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 1i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1 = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 2i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1 = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 4i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _elm_1 = OpNewRecord(_vec_2, 11i32, 65535i32);
      OpSetInt(_elm_1, 0i32, 8i32);
      OpFinishRecord(_vec_2, _elm_1, 11i32, 65535i32);
      _vec_2;
    }#3:vector<integer>#[];
    let c:integer = 0i32;
    {#4 for
      let _index_4:integer = OpConvIntFromNull();
      loop {#5 for loop
        let e:integer = {#6 for next
          OpGetInt(OpGetVector(v, 4i32, {#7 for next block
            _index_4 = if OpNot(OpConvBoolFromInt(_index_4)) 1i32 else OpAddInt(_index_4, 1i32);
            if OpGeInt(_index_4, 3i32) break(0) else null;
            _index_4;
          }#7:integer), 0i32);
        }#6:integer;
        {#8 block
          c = OpAddInt(OpMulInt(c, 10i32), e);
        }#8;
      }#5;
    }#4;
    {#9 for
      let _index_5:integer = OpConvIntFromNull();
      loop {#10 for loop
        let e:integer = {#11 for next
          OpGetInt(OpGetVector(v, 4i32, {#12 for next block
            _index_5 = if OpNot(OpConvBoolFromInt(_index_5)) 2i32 else OpAddInt(_index_5, 1i32);
            if OpGeInt(_index_5, OpLengthVector(v)) break(0) else null;
            _index_5;
          }#12:integer), 0i32);
        }#11:integer;
        {#13 block
          c = OpAddInt(OpMulInt(c, 10i32), e);
        }#13;
      }#10;
    }#9;
    c;
  }#2:integer;
  if OpEqInt(test_value, 2448i32) null else OpPanic({#14 formatting string
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 2448");
    __work_1;
  }#14:text);
}#1

byte-code for iter_vector:test()
 675[0]: return-address
 675[4]: Text()
 676[28]: Database(size=4, db_tp=12) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 681[40]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 684[52]: GetField(v1: reference, fld=4) -> reference type=Unknown type(65535)[65535]
 687[52]: VarRef(var[28]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[12]
 690[64]: ConstInt(val=0) -> integer
 695[68]: SetInt(v1: reference, fld=4, val: integer)
 698[52]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 701[64]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 706[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 709[76]: ConstInt(val=1) -> integer
 714[80]: SetInt(v1: reference, fld=0, val: integer)
 717[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 720[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 723[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 728[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 731[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 736[76]: PutRef(var[52], value: reference)
 739[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 742[76]: ConstInt(val=2) -> integer
 747[80]: SetInt(v1: reference, fld=0, val: integer)
 750[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 753[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 756[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 761[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 764[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 769[76]: PutRef(var[52], value: reference)
 772[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 775[76]: ConstInt(val=4) -> integer
 780[80]: SetInt(v1: reference, fld=0, val: integer)
 783[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 786[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 789[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 794[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 797[76]: NewRecord(data: reference, parent_tp=11, fld=65535) -> reference
 802[76]: PutRef(var[52], value: reference)
 805[64]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 808[76]: ConstInt(val=8) -> integer
 813[80]: SetInt(v1: reference, fld=0, val: integer)
 816[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 819[76]: VarRef(var[52]) -> reference type=boolean[1]:Base[4]
 822[88]: FinishRecord(data: reference, rec: reference, parent_tp=11, fld=65535)
 827[64]: VarVector(var[40]) -> vector#[] type=Unknown type(65535)[65535]
 830[76]: FreeStack(value=12, discard=36) type=Pixel[3]:{r:byte[0], g:byte[1], b:byte[2]}[6]
 834[40]: ConstInt(val=0) -> integer
 839[44]: ConvIntFromNull() -> integer
 840[48]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 843[60]: VarInt(var[44]) -> integer
 846[64]: ConvBoolFromInt(v1: integer) -> boolean
 847[61]: Not(v1: boolean) -> boolean
 848[61]: GotoFalseWord(jump=859, if_false: boolean)
 851[60]: ConstInt(val=1) -> integer
 856[64]: GotoWord(jump=868)
 859[60]: VarInt(var[44]) -> integer
 862[64]: ConstInt(val=1) -> integer
 867[68]: AddInt(v1: integer, v2: integer) -> integer
 868[64]: PutInt(var[44], value: integer)
 871[60]: VarInt(var[44]) -> integer
 874[64]: ConstInt(val=3) -> integer
 879[68]: GeInt(v1: integer, v2: integer) -> boolean
 880[61]: GotoFalseWord(jump=890, if_false: boolean)
 883[60]: FreeStack(value=0, discard=12)
 887[48]: GotoWord(jump=922)
 890[60]: VarInt(var[44]) -> integer
 893[64]: GetVector(r: vector#[], size=4, index: integer) -> reference type=integer[4]:Base[0]
 896[60]: GetInt(v1: reference, fld=0) -> integer
 899[52]: VarInt(var[40]) -> integer
 902[56]: ConstInt(val=10) -> integer
 907[60]: MulInt(v1: integer, v2: integer) -> integer
 908[56]: VarInt(var[48]) -> integer
 911[60]: AddInt(v1: integer, v2: integer) -> integer
 912[56]: PutInt(var[40], value: integer)
 915[52]: FreeStack(value=0, discard=4)
 919[48]: GotoWord(jump=840)
 922[48]: FreeStack(value=0, discard=4)
 926[44]: ConvIntFromNull() -> integer
 927[48]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 930[60]: VarInt(var[44]) -> integer
 933[64]: ConvBoolFromInt(v1: integer) -> boolean
 934[61]: Not(v1: boolean) -> boolean
 935[61]: GotoFalseWord(jump=946, if_false: boolean)
 938[60]: ConstInt(val=2) -> integer
 943[64]: GotoWord(jump=955)
 946[60]: VarInt(var[44]) -> integer
 949[64]: ConstInt(val=1) -> integer
 954[68]: AddInt(v1: integer, v2: integer) -> integer
 955[64]: PutInt(var[44], value: integer)
 958[60]: VarInt(var[44]) -> integer
 961[64]: VarVector(var[28]) -> vector#[] type=Unknown type(65535)[65535]
 964[76]: LengthVector(r: vector#[]) -> integer
 965[68]: GeInt(v1: integer, v2: integer) -> boolean
 966[61]: GotoFalseWord(jump=976, if_false: boolean)
 969[60]: FreeStack(value=0, discard=12)
 973[48]: GotoWord(jump=1008)
 976[60]: VarInt(var[44]) -> integer
 979[64]: GetVector(r: vector#[], size=4, index: integer) -> reference type=integer[4]:Base[0]
 982[60]: GetInt(v1: reference, fld=0) -> integer
 985[52]: VarInt(var[40]) -> integer
 988[56]: ConstInt(val=10) -> integer
 993[60]: MulInt(v1: integer, v2: integer) -> integer
 994[56]: VarInt(var[48]) -> integer
 997[60]: AddInt(v1: integer, v2: integer) -> integer
 998[56]: PutInt(var[40], value: integer)
1001[52]: FreeStack(value=0, discard=4)
1005[48]: GotoWord(jump=927)
1008[48]: FreeStack(value=0, discard=4)
1012[44]: VarInt(var[40]) -> integer
1015[48]: FreeStack(value=4, discard=16) type=integer[4]:Base[0]
1019[32]: VarInt(var[28]) -> integer
1022[36]: ConstInt(val=2448) -> integer
1027[40]: EqInt(v1: integer, v2: integer) -> boolean
1028[33]: GotoFalseWord(jump=1034, if_false: boolean)
1031[32]: GotoWord(jump=1086)
1034[32]: ClearText(var[4])
1037[32]: ConstText(_value="Test failed ") -> text
1051[48]: AppendText(var[4], v1: text)
1054[32]: VarInt(var[28]) -> integer
1057[36]: ConstInt(val=0) -> integer
1062[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1069[32]: ConstText(_value=" != 2448") -> text
1079[48]: AppendText(var[4], v1: text)
1082[32]: VarText(var[4]) -> text
1085[48]: Panic(message: text)
1086[32]: Return(ret=0, value=0, discard=32)

Execute test:
  675:[8] Text()
  676:[32] Database(size=4, db_tp=12) -> ref(1,1,0)={}[32]
  681:[44] VarRef(var[32]) -> ref(1,1,0)={}[44]
  684:[56] GetField(v1=ref(1,1,0)[44], fld=4) -> ref(1,1,4)[44]
  687:[56] VarRef(var[32]) -> ref(1,1,0)={}[56]
  690:[68] ConstInt(val=0) -> 0[68]
  695:[72] SetInt(v1=ref(1,1,0)[56], fld=4, val=0[68])
  698:[56] VarVector(var[44]) -> ref(1,1,4)[56]
  701:[68] NewRecord(data=ref(1,1,4)[56], parent_tp=11, fld=65535) -> ref(1,5,8)[56]
  706:[68] VarRef(var[56]) -> ref(1,5,8)=false[68]
  709:[80] ConstInt(val=1) -> 1[80]
  714:[84] SetInt(v1=ref(1,5,8)[68], fld=0, val=1[80])
  717:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  720:[80] VarRef(var[56]) -> ref(1,5,8)=true[80]
  723:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,8)[80], parent_tp=11, fld=65535)
  728:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  731:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,12)[68]
  736:[80] PutRef(var[56], value=ref(1,5,12)[68])
  739:[68] VarRef(var[56]) -> ref(1,5,12)=false[68]
  742:[80] ConstInt(val=2) -> 2[80]
  747:[84] SetInt(v1=ref(1,5,12)[68], fld=0, val=2[80])
  750:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  753:[80] VarRef(var[56]) -> ref(1,5,12)=true[80]
  756:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,12)[80], parent_tp=11, fld=65535)
  761:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  764:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,16)[68]
  769:[80] PutRef(var[56], value=ref(1,5,16)[68])
  772:[68] VarRef(var[56]) -> ref(1,5,16)=false[68]
  775:[80] ConstInt(val=4) -> 4[80]
  780:[84] SetInt(v1=ref(1,5,16)[68], fld=0, val=4[80])
  783:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  786:[80] VarRef(var[56]) -> ref(1,5,16)=true[80]
  789:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,16)[80], parent_tp=11, fld=65535)
  794:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  797:[80] NewRecord(data=ref(1,1,4)[68], parent_tp=11, fld=65535) -> ref(1,5,20)[68]
  802:[80] PutRef(var[56], value=ref(1,5,20)[68])
  805:[68] VarRef(var[56]) -> ref(1,5,20)=false[68]
  808:[80] ConstInt(val=8) -> 8[80]
  813:[84] SetInt(v1=ref(1,5,20)[68], fld=0, val=8[80])
  816:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  819:[80] VarRef(var[56]) -> ref(1,5,20)=true[80]
  822:[92] FinishRecord(data=ref(1,1,4)[68], rec=ref(1,5,20)[80], parent_tp=11, fld=65535)
  827:[68] VarVector(var[44]) -> ref(1,1,4)[68]
  830:[80] FreeStack(value=12, discard=36)
  834:[44] ConstInt(val=0) -> 0[44]
  839:[48] ConvIntFromNull() -> -2147483648[48]
  840:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  843:[64] VarInt(var[48]) -> -2147483648[64]
  846:[68] ConvBoolFromInt(v1=-2147483648[64]) -> false[64]
  847:[65] Not(v1=false[64]) -> true[64]
  848:[65] GotoFalseWord(jump=859, if_false=true[64])
  851:[64] ConstInt(val=1) -> 1[64]
  856:[68] GotoWord(jump=868)
  868:[68] PutInt(var[48], value=1[64])
  871:[64] VarInt(var[48]) -> 1[64]
  874:[68] ConstInt(val=3) -> 3[68]
  879:[72] GeInt(v1=1[64], v2=3[68]) -> false[64]
  880:[65] GotoFalseWord(jump=890, if_false=false[64])
  890:[64] VarInt(var[48]) -> 1[64]
  893:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=1[64]) -> ref(1,5,12)=2[52]
  896:[64] GetInt(v1=ref(1,5,12)[52], fld=0) -> 2[52]
  899:[56] VarInt(var[44]) -> 0[56]
  902:[60] ConstInt(val=10) -> 10[60]
  907:[64] MulInt(v1=0[56], v2=10[60]) -> 0[56]
  908:[60] VarInt(var[52]) -> 2[60]
  911:[64] AddInt(v1=0[56], v2=2[60]) -> 2[56]
  912:[60] PutInt(var[44], value=2[56])
  915:[56] FreeStack(value=0, discard=4)
  919:[52] GotoWord(jump=840)
  840:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  843:[64] VarInt(var[48]) -> 1[64]
  846:[68] ConvBoolFromInt(v1=1[64]) -> true[64]
  847:[65] Not(v1=true[64]) -> false[64]
  848:[65] GotoFalseWord(jump=859, if_false=false[64])
  859:[64] VarInt(var[48]) -> 1[64]
  862:[68] ConstInt(val=1) -> 1[68]
  867:[72] AddInt(v1=1[64], v2=1[68]) -> 2[64]
  868:[68] PutInt(var[48], value=2[64])
  871:[64] VarInt(var[48]) -> 2[64]
  874:[68] ConstInt(val=3) -> 3[68]
  879:[72] GeInt(v1=2[64], v2=3[68]) -> false[64]
  880:[65] GotoFalseWord(jump=890, if_false=false[64])
  890:[64] VarInt(var[48]) -> 2[64]
  893:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=2[64]) -> ref(1,5,16)=4[52]
  896:[64] GetInt(v1=ref(1,5,16)[52], fld=0) -> 4[52]
  899:[56] VarInt(var[44]) -> 2[56]
  902:[60] ConstInt(val=10) -> 10[60]
  907:[64] MulInt(v1=2[56], v2=10[60]) -> 20[56]
  908:[60] VarInt(var[52]) -> 4[60]
  911:[64] AddInt(v1=20[56], v2=4[60]) -> 24[56]
  912:[60] PutInt(var[44], value=24[56])
  915:[56] FreeStack(value=0, discard=4)
  919:[52] GotoWord(jump=840)
  840:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  843:[64] VarInt(var[48]) -> 2[64]
  846:[68] ConvBoolFromInt(v1=2[64]) -> true[64]
  847:[65] Not(v1=true[64]) -> false[64]
  848:[65] GotoFalseWord(jump=859, if_false=false[64])
  859:[64] VarInt(var[48]) -> 2[64]
  862:[68] ConstInt(val=1) -> 1[68]
  867:[72] AddInt(v1=2[64], v2=1[68]) -> 3[64]
  868:[68] PutInt(var[48], value=3[64])
  871:[64] VarInt(var[48]) -> 3[64]
  874:[68] ConstInt(val=3) -> 3[68]
  879:[72] GeInt(v1=3[64], v2=3[68]) -> true[64]
  880:[65] GotoFalseWord(jump=890, if_false=true[64])
  883:[64] FreeStack(value=0, discard=12)
  887:[52] GotoWord(jump=922)
  922:[52] FreeStack(value=0, discard=4)
  926:[48] ConvIntFromNull() -> -2147483648[48]
  927:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  930:[64] VarInt(var[48]) -> -2147483648[64]
  933:[68] ConvBoolFromInt(v1=-2147483648[64]) -> false[64]
  934:[65] Not(v1=false[64]) -> true[64]
  935:[65] GotoFalseWord(jump=946, if_false=true[64])
  938:[64] ConstInt(val=2) -> 2[64]
  943:[68] GotoWord(jump=955)
  955:[68] PutInt(var[48], value=2[64])
  958:[64] VarInt(var[48]) -> 2[64]
  961:[68] VarVector(var[32]) -> ref(1,1,4)[68]
  964:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  965:[72] GeInt(v1=2[64], v2=4[68]) -> false[64]
  966:[65] GotoFalseWord(jump=976, if_false=false[64])
  976:[64] VarInt(var[48]) -> 2[64]
  979:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=2[64]) -> ref(1,5,16)=4[52]
  982:[64] GetInt(v1=ref(1,5,16)[52], fld=0) -> 4[52]
  985:[56] VarInt(var[44]) -> 24[56]
  988:[60] ConstInt(val=10) -> 10[60]
  993:[64] MulInt(v1=24[56], v2=10[60]) -> 240[56]
  994:[60] VarInt(var[52]) -> 4[60]
  997:[64] AddInt(v1=240[56], v2=4[60]) -> 244[56]
  998:[60] PutInt(var[44], value=244[56])
 1001:[56] FreeStack(value=0, discard=4)
 1005:[52] GotoWord(jump=927)
  927:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  930:[64] VarInt(var[48]) -> 2[64]
  933:[68] ConvBoolFromInt(v1=2[64]) -> true[64]
  934:[65] Not(v1=true[64]) -> false[64]
  935:[65] GotoFalseWord(jump=946, if_false=false[64])
  946:[64] VarInt(var[48]) -> 2[64]
  949:[68] ConstInt(val=1) -> 1[68]
  954:[72] AddInt(v1=2[64], v2=1[68]) -> 3[64]
  955:[68] PutInt(var[48], value=3[64])
  958:[64] VarInt(var[48]) -> 3[64]
  961:[68] VarVector(var[32]) -> ref(1,1,4)[68]
  964:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  965:[72] GeInt(v1=3[64], v2=4[68]) -> false[64]
  966:[65] GotoFalseWord(jump=976, if_false=false[64])
  976:[64] VarInt(var[48]) -> 3[64]
  979:[68] GetVector(r=ref(1,1,4)=true[52], size=4, index=3[64]) -> ref(1,5,20)=8[52]
  982:[64] GetInt(v1=ref(1,5,20)[52], fld=0) -> 8[52]
  985:[56] VarInt(var[44]) -> 244[56]
  988:[60] ConstInt(val=10) -> 10[60]
  993:[64] MulInt(v1=244[56], v2=10[60]) -> 2440[56]
  994:[60] VarInt(var[52]) -> 8[60]
  997:[64] AddInt(v1=2440[56], v2=8[60]) -> 2448[56]
  998:[60] PutInt(var[44], value=2448[56])
 1001:[56] FreeStack(value=0, discard=4)
 1005:[52] GotoWord(jump=927)
  927:[52] VarVector(var[32]) -> ref(1,1,4)[52]
  930:[64] VarInt(var[48]) -> 3[64]
  933:[68] ConvBoolFromInt(v1=3[64]) -> true[64]
  934:[65] Not(v1=true[64]) -> false[64]
  935:[65] GotoFalseWord(jump=946, if_false=false[64])
  946:[64] VarInt(var[48]) -> 3[64]
  949:[68] ConstInt(val=1) -> 1[68]
  954:[72] AddInt(v1=3[64], v2=1[68]) -> 4[64]
  955:[68] PutInt(var[48], value=4[64])
  958:[64] VarInt(var[48]) -> 4[64]
  961:[68] VarVector(var[32]) -> ref(1,1,4)[68]
  964:[80] LengthVector(r=ref(1,1,4)=true[68]) -> 4[68]
  965:[72] GeInt(v1=4[64], v2=4[68]) -> true[64]
  966:[65] GotoFalseWord(jump=976, if_false=true[64])
  969:[64] FreeStack(value=0, discard=12)
  973:[52] GotoWord(jump=1008)
 1008:[52] FreeStack(value=0, discard=4)
 1012:[48] VarInt(var[44]) -> 2448[48]
 1015:[52] FreeStack(value=4, discard=16)
 1019:[36] VarInt(var[32]) -> 2448[36]
 1022:[40] ConstInt(val=2448) -> 2448[40]
 1027:[44] EqInt(v1=2448[36], v2=2448[40]) -> true[36]
 1028:[37] GotoFalseWord(jump=1034, if_false=true[36])
 1031:[36] GotoWord(jump=1086)
 1086:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
