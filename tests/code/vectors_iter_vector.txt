Test code:
pub fn test() {
    test_value = {v=[1, 2, 4, 8];
c = 0;
for e in v[1..3] {
  c = c * 10 + e;
}
for e in v[2..] {
  c = c * 10 + e;
}
c};
    assert(
        test_value == 2448,
        "Test failed {test_value} != 2448"
    );
}

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

Type 14:vector<integer>[4]:Vector(0)

fn test {
  let test_value = {
    let v = {
      let db_17 = OpDatabase(4i32, 13i32);
      let vec_16 = OpGetField(db_17, 4i32, 14i32);
      OpSetInt(db_17, 4i32, 0i32);
      let elm_15 = OpNewRecord(vec_16, 14i32, 65535i32);
      OpSetInt(elm_15, 0i32, 1i32);
      OpFinishRecord(vec_16, elm_15, 14i32, 65535i32);
      elm_15 = OpNewRecord(vec_16, 14i32, 65535i32);
      OpSetInt(elm_15, 0i32, 2i32);
      OpFinishRecord(vec_16, elm_15, 14i32, 65535i32);
      elm_15 = OpNewRecord(vec_16, 14i32, 65535i32);
      OpSetInt(elm_15, 0i32, 4i32);
      OpFinishRecord(vec_16, elm_15, 14i32, 65535i32);
      elm_15 = OpNewRecord(vec_16, 14i32, 65535i32);
      OpSetInt(elm_15, 0i32, 8i32);
      OpFinishRecord(vec_16, elm_15, 14i32, 65535i32);
      vec_16;
    };
    let c = 0i32;
    {
      let index_18 = OpConvIntFromNull();
      loop {
        let e = OpGetInt(OpGetVector(v, 4i32, {
          index_18 = if OpNot(OpConvBoolFromInt(index_18)) {1i32} else {OpAddInt(index_18, 1i32)};
          if OpGeInt(index_18, 3i32) {break(0)} else {null};
          index_18;
        }), 0i32);
        {
          c = OpAddInt(OpMulInt(c, 10i32), e);
        };
      };
    };
    {
      let index_19 = OpConvIntFromNull();
      loop {
        let e = OpGetInt(OpGetVector(v, 4i32, {
          index_19 = if OpNot(OpConvBoolFromInt(index_19)) {2i32} else {OpAddInt(index_19, 1i32)};
          if OpGeInt(index_19, OpLengthVector(v)) {break(0)} else {null};
          index_19;
        }), 0i32);
        {
          c = OpAddInt(OpMulInt(c, 10i32), e);
        };
      };
    };
    c;
  };
  if OpEqInt(test_value, 2448i32) {null} else {OpGenPanic({
    let append_20 = "Test failed ";
    OpFormatInt(append_20, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_20, " != 2448");
    append_20;
  })};
}

byte-code for iter_vector:test()
 668[0]: return-address
 668[4]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 673[16]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 676[28]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[14]
 679[28]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 682[40]: ConstInt(val=0) -> integer
 687[44]: SetInt(v1: reference, fld=4, val: integer)
 690[28]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 693[40]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 698[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 701[52]: ConstInt(val=1) -> integer
 706[56]: SetInt(v1: reference, fld=0, val: integer)
 709[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 712[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 715[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 720[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 723[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 728[52]: PutRef(var[28], value: reference)
 731[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 734[52]: ConstInt(val=2) -> integer
 739[56]: SetInt(v1: reference, fld=0, val: integer)
 742[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 745[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 748[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 753[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 756[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 761[52]: PutRef(var[28], value: reference)
 764[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 767[52]: ConstInt(val=4) -> integer
 772[56]: SetInt(v1: reference, fld=0, val: integer)
 775[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 778[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 781[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 786[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 789[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 794[52]: PutRef(var[28], value: reference)
 797[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 800[52]: ConstInt(val=8) -> integer
 805[56]: SetInt(v1: reference, fld=0, val: integer)
 808[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 811[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 814[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 819[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 822[52]: GenFreeStack(value=12, discard=36)
 826[16]: ConstInt(val=0) -> integer
 831[20]: ConvIntFromNull() -> integer
 832[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 835[36]: VarInt(var[20]) -> integer
 838[40]: ConvBoolFromInt(v1: integer) -> boolean
 839[37]: Not(v1: boolean) -> boolean
 840[37]: GenGotoFalseWord(jump=851, if_false: boolean)
 843[36]: ConstInt(val=1) -> integer
 848[40]: GenGotoWord(jump=860)
 851[36]: VarInt(var[20]) -> integer
 854[40]: ConstInt(val=1) -> integer
 859[44]: AddInt(v1: integer, v2: integer) -> integer
 860[40]: PutInt(var[20], value: integer)
 863[36]: VarInt(var[20]) -> integer
 866[40]: ConstInt(val=3) -> integer
 871[44]: GeInt(v1: integer, v2: integer) -> boolean
 872[37]: GenGotoFalseWord(jump=882, if_false: boolean)
 875[36]: GenFreeStack(value=0, discard=12)
 879[24]: GenGotoWord(jump=914)
 882[36]: VarInt(var[20]) -> integer
 885[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 888[36]: GetInt(v1: reference, fld=0) -> integer
 891[28]: VarInt(var[16]) -> integer
 894[32]: ConstInt(val=10) -> integer
 899[36]: MulInt(v1: integer, v2: integer) -> integer
 900[32]: VarInt(var[24]) -> integer
 903[36]: AddInt(v1: integer, v2: integer) -> integer
 904[32]: PutInt(var[16], value: integer)
 907[28]: GenFreeStack(value=0, discard=4)
 911[24]: GenGotoWord(jump=832)
 914[24]: GenFreeStack(value=0, discard=4)
 918[20]: ConvIntFromNull() -> integer
 919[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 922[36]: VarInt(var[20]) -> integer
 925[40]: ConvBoolFromInt(v1: integer) -> boolean
 926[37]: Not(v1: boolean) -> boolean
 927[37]: GenGotoFalseWord(jump=938, if_false: boolean)
 930[36]: ConstInt(val=2) -> integer
 935[40]: GenGotoWord(jump=947)
 938[36]: VarInt(var[20]) -> integer
 941[40]: ConstInt(val=1) -> integer
 946[44]: AddInt(v1: integer, v2: integer) -> integer
 947[40]: PutInt(var[20], value: integer)
 950[36]: VarInt(var[20]) -> integer
 953[40]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 956[52]: LengthVector(r: vector) -> integer
 957[44]: GeInt(v1: integer, v2: integer) -> boolean
 958[37]: GenGotoFalseWord(jump=968, if_false: boolean)
 961[36]: GenFreeStack(value=0, discard=12)
 965[24]: GenGotoWord(jump=1000)
 968[36]: VarInt(var[20]) -> integer
 971[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 974[36]: GetInt(v1: reference, fld=0) -> integer
 977[28]: VarInt(var[16]) -> integer
 980[32]: ConstInt(val=10) -> integer
 985[36]: MulInt(v1: integer, v2: integer) -> integer
 986[32]: VarInt(var[24]) -> integer
 989[36]: AddInt(v1: integer, v2: integer) -> integer
 990[32]: PutInt(var[16], value: integer)
 993[28]: GenFreeStack(value=0, discard=4)
 997[24]: GenGotoWord(jump=919)
1000[24]: GenFreeStack(value=0, discard=4)
1004[20]: VarInt(var[16]) -> integer
1007[24]: GenFreeStack(value=4, discard=16)
1011[8]: VarInt(var[4]) -> integer
1014[12]: ConstInt(val=2448) -> integer
1019[16]: EqInt(v1: integer, v2: integer) -> boolean
1020[9]: GenGotoFalseWord(jump=1026, if_false: boolean)
1023[8]: GenGotoWord(jump=1080)
1026[8]: Text()
1027[32]: ConstText(_value="Test failed ") -> text
1041[48]: AppendText(var[8], v1: text)
1044[32]: VarInt(var[4]) -> integer
1047[36]: ConstInt(val=0) -> integer
1052[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1059[32]: ConstText(_value=" != 2448") -> text
1069[48]: AppendText(var[8], v1: text)
1072[32]: VarText(var[8]) -> text
1075[48]: GenFreeStack(value=16, discard=24)
1079[24]: GenPanic(message: text)
1080[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
  668:[4] Database(size=4, db_tp=13) -> ref(1,1,0)={}[4]
  673:[16] VarRef(var[4]) -> ref(1,1,0)={}[16]
  676:[28] GetField(v1=ref(1,1,0)[16], fld=4) -> ref(1,1,4)=[][16]
  679:[28] VarRef(var[4]) -> ref(1,1,0)={}[28]
  682:[40] ConstInt(val=0) -> 0[40]
  687:[44] SetInt(v1=ref(1,1,0)[28], fld=4, val=0[40])
  690:[28] VarVector(var[16]) -> ref(1,1,4)=[][28]
  693:[40] NewRecord(data=ref(1,1,4)[28], parent_tp=14, fld=65535) -> ref(1,5,8)[28]
  698:[40] VarRef(var[28]) -> ref(1,5,8)=false[40]
  701:[52] ConstInt(val=1) -> 1[52]
  706:[56] SetInt(v1=ref(1,5,8)[40], fld=0, val=1[52])
  709:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  712:[52] VarRef(var[28]) -> ref(1,5,8)=true[52]
  715:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,8)[52], parent_tp=14, fld=65535)
  720:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  723:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,12)[40]
  728:[52] PutRef(var[28], value=ref(1,5,12)[40])
  731:[40] VarRef(var[28]) -> ref(1,5,12)=false[40]
  734:[52] ConstInt(val=2) -> 2[52]
  739:[56] SetInt(v1=ref(1,5,12)[40], fld=0, val=2[52])
  742:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  745:[52] VarRef(var[28]) -> ref(1,5,12)=true[52]
  748:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,12)[52], parent_tp=14, fld=65535)
  753:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  756:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,16)[40]
  761:[52] PutRef(var[28], value=ref(1,5,16)[40])
  764:[40] VarRef(var[28]) -> ref(1,5,16)=false[40]
  767:[52] ConstInt(val=4) -> 4[52]
  772:[56] SetInt(v1=ref(1,5,16)[40], fld=0, val=4[52])
  775:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4][40]
  778:[52] VarRef(var[28]) -> ref(1,5,16)=true[52]
  781:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,16)[52], parent_tp=14, fld=65535)
  786:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4][40]
  789:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,20)[40]
  794:[52] PutRef(var[28], value=ref(1,5,20)[40])
  797:[40] VarRef(var[28]) -> ref(1,5,20)=false[40]
  800:[52] ConstInt(val=8) -> 8[52]
  805:[56] SetInt(v1=ref(1,5,20)[40], fld=0, val=8[52])
  808:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4,8][40]
  811:[52] VarRef(var[28]) -> ref(1,5,20)=true[52]
  814:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,20)[52], parent_tp=14, fld=65535)
  819:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4,8][40]
  822:[52] GenFreeStack(value=12, discard=36)
  826:[16] ConstInt(val=0) -> 0[16]
  831:[20] ConvIntFromNull() -> -2147483648[20]
  832:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  835:[36] VarInt(var[20]) -> -2147483648[36]
  838:[40] ConvBoolFromInt(v1=-2147483648[36]) -> false[36]
  839:[37] Not(v1=false[36]) -> true[36]
  840:[37] GenGotoFalseWord(jump=851, if_false=true[36])
  843:[36] ConstInt(val=1) -> 1[36]
  848:[40] GenGotoWord(jump=860)
  860:[40] PutInt(var[20], value=1[36])
  863:[36] VarInt(var[20]) -> 1[36]
  866:[40] ConstInt(val=3) -> 3[40]
  871:[44] GeInt(v1=1[36], v2=3[40]) -> false[36]
  872:[37] GenGotoFalseWord(jump=882, if_false=false[36])
  882:[36] VarInt(var[20]) -> 1[36]
  885:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=1[36]) -> ref(1,5,12)=2[24]
  888:[36] GetInt(v1=ref(1,5,12)[24], fld=0) -> 2[24]
  891:[28] VarInt(var[16]) -> 0[28]
  894:[32] ConstInt(val=10) -> 10[32]
  899:[36] MulInt(v1=0[28], v2=10[32]) -> 0[28]
  900:[32] VarInt(var[24]) -> 2[32]
  903:[36] AddInt(v1=0[28], v2=2[32]) -> 2[28]
  904:[32] PutInt(var[16], value=2[28])
  907:[28] GenFreeStack(value=0, discard=4)
  911:[24] GenGotoWord(jump=832)
  832:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  835:[36] VarInt(var[20]) -> 1[36]
  838:[40] ConvBoolFromInt(v1=1[36]) -> true[36]
  839:[37] Not(v1=true[36]) -> false[36]
  840:[37] GenGotoFalseWord(jump=851, if_false=false[36])
  851:[36] VarInt(var[20]) -> 1[36]
  854:[40] ConstInt(val=1) -> 1[40]
  859:[44] AddInt(v1=1[36], v2=1[40]) -> 2[36]
  860:[40] PutInt(var[20], value=2[36])
  863:[36] VarInt(var[20]) -> 2[36]
  866:[40] ConstInt(val=3) -> 3[40]
  871:[44] GeInt(v1=2[36], v2=3[40]) -> false[36]
  872:[37] GenGotoFalseWord(jump=882, if_false=false[36])
  882:[36] VarInt(var[20]) -> 2[36]
  885:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=2[36]) -> ref(1,5,16)=4[24]
  888:[36] GetInt(v1=ref(1,5,16)[24], fld=0) -> 4[24]
  891:[28] VarInt(var[16]) -> 2[28]
  894:[32] ConstInt(val=10) -> 10[32]
  899:[36] MulInt(v1=2[28], v2=10[32]) -> 20[28]
  900:[32] VarInt(var[24]) -> 4[32]
  903:[36] AddInt(v1=20[28], v2=4[32]) -> 24[28]
  904:[32] PutInt(var[16], value=24[28])
  907:[28] GenFreeStack(value=0, discard=4)
  911:[24] GenGotoWord(jump=832)
  832:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  835:[36] VarInt(var[20]) -> 2[36]
  838:[40] ConvBoolFromInt(v1=2[36]) -> true[36]
  839:[37] Not(v1=true[36]) -> false[36]
  840:[37] GenGotoFalseWord(jump=851, if_false=false[36])
  851:[36] VarInt(var[20]) -> 2[36]
  854:[40] ConstInt(val=1) -> 1[40]
  859:[44] AddInt(v1=2[36], v2=1[40]) -> 3[36]
  860:[40] PutInt(var[20], value=3[36])
  863:[36] VarInt(var[20]) -> 3[36]
  866:[40] ConstInt(val=3) -> 3[40]
  871:[44] GeInt(v1=3[36], v2=3[40]) -> true[36]
  872:[37] GenGotoFalseWord(jump=882, if_false=true[36])
  875:[36] GenFreeStack(value=0, discard=12)
  879:[24] GenGotoWord(jump=914)
  914:[24] GenFreeStack(value=0, discard=4)
  918:[20] ConvIntFromNull() -> -2147483648[20]
  919:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  922:[36] VarInt(var[20]) -> -2147483648[36]
  925:[40] ConvBoolFromInt(v1=-2147483648[36]) -> false[36]
  926:[37] Not(v1=false[36]) -> true[36]
  927:[37] GenGotoFalseWord(jump=938, if_false=true[36])
  930:[36] ConstInt(val=2) -> 2[36]
  935:[40] GenGotoWord(jump=947)
  947:[40] PutInt(var[20], value=2[36])
  950:[36] VarInt(var[20]) -> 2[36]
  953:[40] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][40]
  956:[52] LengthVector(r=ref(1,1,4)=true[40]) -> 4[40]
  957:[44] GeInt(v1=2[36], v2=4[40]) -> false[36]
  958:[37] GenGotoFalseWord(jump=968, if_false=false[36])
  968:[36] VarInt(var[20]) -> 2[36]
  971:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=2[36]) -> ref(1,5,16)=4[24]
  974:[36] GetInt(v1=ref(1,5,16)[24], fld=0) -> 4[24]
  977:[28] VarInt(var[16]) -> 24[28]
  980:[32] ConstInt(val=10) -> 10[32]
  985:[36] MulInt(v1=24[28], v2=10[32]) -> 240[28]
  986:[32] VarInt(var[24]) -> 4[32]
  989:[36] AddInt(v1=240[28], v2=4[32]) -> 244[28]
  990:[32] PutInt(var[16], value=244[28])
  993:[28] GenFreeStack(value=0, discard=4)
  997:[24] GenGotoWord(jump=919)
  919:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  922:[36] VarInt(var[20]) -> 2[36]
  925:[40] ConvBoolFromInt(v1=2[36]) -> true[36]
  926:[37] Not(v1=true[36]) -> false[36]
  927:[37] GenGotoFalseWord(jump=938, if_false=false[36])
  938:[36] VarInt(var[20]) -> 2[36]
  941:[40] ConstInt(val=1) -> 1[40]
  946:[44] AddInt(v1=2[36], v2=1[40]) -> 3[36]
  947:[40] PutInt(var[20], value=3[36])
  950:[36] VarInt(var[20]) -> 3[36]
  953:[40] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][40]
  956:[52] LengthVector(r=ref(1,1,4)=true[40]) -> 4[40]
  957:[44] GeInt(v1=3[36], v2=4[40]) -> false[36]
  958:[37] GenGotoFalseWord(jump=968, if_false=false[36])
  968:[36] VarInt(var[20]) -> 3[36]
  971:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=3[36]) -> ref(1,5,20)=8[24]
  974:[36] GetInt(v1=ref(1,5,20)[24], fld=0) -> 8[24]
  977:[28] VarInt(var[16]) -> 244[28]
  980:[32] ConstInt(val=10) -> 10[32]
  985:[36] MulInt(v1=244[28], v2=10[32]) -> 2440[28]
  986:[32] VarInt(var[24]) -> 8[32]
  989:[36] AddInt(v1=2440[28], v2=8[32]) -> 2448[28]
  990:[32] PutInt(var[16], value=2448[28])
  993:[28] GenFreeStack(value=0, discard=4)
  997:[24] GenGotoWord(jump=919)
  919:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  922:[36] VarInt(var[20]) -> 3[36]
  925:[40] ConvBoolFromInt(v1=3[36]) -> true[36]
  926:[37] Not(v1=true[36]) -> false[36]
  927:[37] GenGotoFalseWord(jump=938, if_false=false[36])
  938:[36] VarInt(var[20]) -> 3[36]
  941:[40] ConstInt(val=1) -> 1[40]
  946:[44] AddInt(v1=3[36], v2=1[40]) -> 4[36]
  947:[40] PutInt(var[20], value=4[36])
  950:[36] VarInt(var[20]) -> 4[36]
  953:[40] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][40]
  956:[52] LengthVector(r=ref(1,1,4)=true[40]) -> 4[40]
  957:[44] GeInt(v1=4[36], v2=4[40]) -> true[36]
  958:[37] GenGotoFalseWord(jump=968, if_false=true[36])
  961:[36] GenFreeStack(value=0, discard=12)
  965:[24] GenGotoWord(jump=1000)
 1000:[24] GenFreeStack(value=0, discard=4)
 1004:[20] VarInt(var[16]) -> 2448[20]
 1007:[24] GenFreeStack(value=4, discard=16)
 1011:[8] VarInt(var[4]) -> 2448[8]
 1014:[12] ConstInt(val=2448) -> 2448[12]
 1019:[16] EqInt(v1=2448[8], v2=2448[12]) -> true[8]
 1020:[9] GenGotoFalseWord(jump=1026, if_false=true[8])
 1023:[8] GenGotoWord(jump=1080)
 1080:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
