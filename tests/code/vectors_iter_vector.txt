Test code:
pub fn test() {
    test_value = {v=[1, 2, 4, 8];
c = 0;
for e in v[1..3] {
  c = c * 10 + e;
}
for e in v[2..] {
  c = c * 10 + e;
}
c};
    assert(
        test_value == 2448,
        "Test failed {test_value} != 2448"
    );
}

Type 13:main_vector<integer>[8]:
    vector:vector<integer>[4]

Type 14:vector<integer>[4]:Vector(0)

fn test {
  let test_value = {
    let v = {
      let db_17 = OpDatabase(4i32, 13i32);
      let vec_16 = OpGetField(db_17, 4i32, 14i32);
      OpSetInt(db_17, 4i32, 0i32);
      let elm_15 = OpNewRecord(vec_16, 14i32, 65535i32);
      OpSetInt(elm_15, 0i32, 1i32);
      OpFinishRecord(vec_16, elm_15, 14i32, 65535i32);
      elm_15 = OpNewRecord(vec_16, 14i32, 65535i32);
      OpSetInt(elm_15, 0i32, 2i32);
      OpFinishRecord(vec_16, elm_15, 14i32, 65535i32);
      elm_15 = OpNewRecord(vec_16, 14i32, 65535i32);
      OpSetInt(elm_15, 0i32, 4i32);
      OpFinishRecord(vec_16, elm_15, 14i32, 65535i32);
      elm_15 = OpNewRecord(vec_16, 14i32, 65535i32);
      OpSetInt(elm_15, 0i32, 8i32);
      OpFinishRecord(vec_16, elm_15, 14i32, 65535i32);
      vec_16;
    };
    let c = 0i32;
    {
      let index_18 = OpConvIntFromNull();
      loop {
        let e = OpGetInt(OpGetVector(v, 4i32, {
          index_18 = if OpNot(OpConvBoolFromInt(index_18)) {1i32} else {OpAddInt(index_18, 1i32)};
          if OpGeInt(index_18, 3i32) {break(0)} else {null};
          index_18;
        }), 0i32);
        {
          c = OpAddInt(OpMulInt(c, 10i32), e);
        };
      };
    };
    {
      let index_19 = OpConvIntFromNull();
      loop {
        let e = OpGetInt(OpGetVector(v, 4i32, {
          index_19 = if OpNot(OpConvBoolFromInt(index_19)) {2i32} else {OpAddInt(index_19, 1i32)};
          if OpGeInt(index_19, OpLengthVector(v)) {break(0)} else {null};
          index_19;
        }), 0i32);
        {
          c = OpAddInt(OpMulInt(c, 10i32), e);
        };
      };
    };
    c;
  };
  if OpEqInt(test_value, 2448i32) {null} else {OpGenPanic({
    let append_20 = "Test failed ";
    OpFormatInt(append_20, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_20, " != 2448");
    append_20;
  })};
}

byte-code for iter_vector:test()
 664[0]: return-address
 664[4]: Database(size=4, db_tp=13) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 669[16]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 672[28]: GetField(v1: reference, fld=4) -> reference type=vector<integer>[4]:Vector(0)[14]
 675[28]: VarRef(var[4]) -> reference type=main_vector<integer>[8]:{vector:vector<integer>[4]}[13]
 678[40]: ConstInt(val=0) -> integer
 683[44]: SetInt(v1: reference, fld=4, val: integer)
 686[28]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 689[40]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 694[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 697[52]: ConstInt(val=1) -> integer
 702[56]: SetInt(v1: reference, fld=0, val: integer)
 705[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 708[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 711[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 716[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 719[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 724[52]: PutRef(var[28], value: reference)
 727[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 730[52]: ConstInt(val=2) -> integer
 735[56]: SetInt(v1: reference, fld=0, val: integer)
 738[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 741[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 744[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 749[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 752[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 757[52]: PutRef(var[28], value: reference)
 760[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 763[52]: ConstInt(val=4) -> integer
 768[56]: SetInt(v1: reference, fld=0, val: integer)
 771[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 774[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 777[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 782[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 785[52]: NewRecord(data: reference, parent_tp=14, fld=65535) -> reference
 790[52]: PutRef(var[28], value: reference)
 793[40]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 796[52]: ConstInt(val=8) -> integer
 801[56]: SetInt(v1: reference, fld=0, val: integer)
 804[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 807[52]: VarRef(var[28]) -> reference type=boolean[1]:Base[4]
 810[64]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=65535)
 815[40]: VarVector(var[16]) -> vector type=vector<integer>[4]:Vector(0)[14]
 818[52]: GenFreeStack(value=12, discard=36)
 822[16]: ConstInt(val=0) -> integer
 827[20]: ConvIntFromNull() -> integer
 828[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 831[36]: VarInt(var[20]) -> integer
 834[40]: ConvBoolFromInt(v1: integer) -> boolean
 835[37]: Not(v1: boolean) -> boolean
 836[37]: GenGotoFalseWord(jump=847, if_false: boolean)
 839[36]: ConstInt(val=1) -> integer
 844[40]: GenGotoWord(jump=856)
 847[36]: VarInt(var[20]) -> integer
 850[40]: ConstInt(val=1) -> integer
 855[44]: AddInt(v1: integer, v2: integer) -> integer
 856[40]: PutInt(var[20], value: integer)
 859[36]: VarInt(var[20]) -> integer
 862[40]: ConstInt(val=3) -> integer
 867[44]: GeInt(v1: integer, v2: integer) -> boolean
 868[37]: GenGotoFalseWord(jump=878, if_false: boolean)
 871[36]: GenFreeStack(value=0, discard=12)
 875[24]: GenGotoWord(jump=910)
 878[36]: VarInt(var[20]) -> integer
 881[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 884[36]: GetInt(v1: reference, fld=0) -> integer
 887[28]: VarInt(var[16]) -> integer
 890[32]: ConstInt(val=10) -> integer
 895[36]: MulInt(v1: integer, v2: integer) -> integer
 896[32]: VarInt(var[24]) -> integer
 899[36]: AddInt(v1: integer, v2: integer) -> integer
 900[32]: PutInt(var[16], value: integer)
 903[28]: GenFreeStack(value=0, discard=4)
 907[24]: GenGotoWord(jump=828)
 910[24]: GenFreeStack(value=0, discard=4)
 914[20]: ConvIntFromNull() -> integer
 915[24]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 918[36]: VarInt(var[20]) -> integer
 921[40]: ConvBoolFromInt(v1: integer) -> boolean
 922[37]: Not(v1: boolean) -> boolean
 923[37]: GenGotoFalseWord(jump=934, if_false: boolean)
 926[36]: ConstInt(val=2) -> integer
 931[40]: GenGotoWord(jump=943)
 934[36]: VarInt(var[20]) -> integer
 937[40]: ConstInt(val=1) -> integer
 942[44]: AddInt(v1: integer, v2: integer) -> integer
 943[40]: PutInt(var[20], value: integer)
 946[36]: VarInt(var[20]) -> integer
 949[40]: VarVector(var[4]) -> vector type=vector<integer>[4]:Vector(0)[14]
 952[52]: LengthVector(r: vector) -> integer
 953[44]: GeInt(v1: integer, v2: integer) -> boolean
 954[37]: GenGotoFalseWord(jump=964, if_false: boolean)
 957[36]: GenFreeStack(value=0, discard=12)
 961[24]: GenGotoWord(jump=996)
 964[36]: VarInt(var[20]) -> integer
 967[40]: GetVector(r: vector, size=4, index: integer) -> reference type=integer[4]:Base[0]
 970[36]: GetInt(v1: reference, fld=0) -> integer
 973[28]: VarInt(var[16]) -> integer
 976[32]: ConstInt(val=10) -> integer
 981[36]: MulInt(v1: integer, v2: integer) -> integer
 982[32]: VarInt(var[24]) -> integer
 985[36]: AddInt(v1: integer, v2: integer) -> integer
 986[32]: PutInt(var[16], value: integer)
 989[28]: GenFreeStack(value=0, discard=4)
 993[24]: GenGotoWord(jump=915)
 996[24]: GenFreeStack(value=0, discard=4)
1000[20]: VarInt(var[16]) -> integer
1003[24]: GenFreeStack(value=4, discard=16)
1007[8]: VarInt(var[4]) -> integer
1010[12]: ConstInt(val=2448) -> integer
1015[16]: EqInt(v1: integer, v2: integer) -> boolean
1016[9]: GenGotoFalseWord(jump=1022, if_false: boolean)
1019[8]: GenGotoWord(jump=1076)
1022[8]: Text()
1023[32]: ConstText(_value="Test failed ") -> text
1037[48]: AppendText(var[8], v1: text)
1040[32]: VarInt(var[4]) -> integer
1043[36]: ConstInt(val=0) -> integer
1048[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1055[32]: ConstText(_value=" != 2448") -> text
1065[48]: AppendText(var[8], v1: text)
1068[32]: VarText(var[8]) -> text
1071[48]: GenFreeStack(value=16, discard=24)
1075[24]: GenPanic(message: text)
1076[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
  664:[4] Database(size=4, db_tp=13) -> ref(1,1,0)={}[4]
  669:[16] VarRef(var[4]) -> ref(1,1,0)={}[16]
  672:[28] GetField(v1=ref(1,1,0)[16], fld=4) -> ref(1,1,4)=[][16]
  675:[28] VarRef(var[4]) -> ref(1,1,0)={}[28]
  678:[40] ConstInt(val=0) -> 0[40]
  683:[44] SetInt(v1=ref(1,1,0)[28], fld=4, val=0[40])
  686:[28] VarVector(var[16]) -> ref(1,1,4)=[][28]
  689:[40] NewRecord(data=ref(1,1,4)[28], parent_tp=14, fld=65535) -> ref(1,5,8)[28]
  694:[40] VarRef(var[28]) -> ref(1,5,8)=false[40]
  697:[52] ConstInt(val=1) -> 1[52]
  702:[56] SetInt(v1=ref(1,5,8)[40], fld=0, val=1[52])
  705:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  708:[52] VarRef(var[28]) -> ref(1,5,8)=true[52]
  711:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,8)[52], parent_tp=14, fld=65535)
  716:[40] VarVector(var[16]) -> ref(1,1,4)=[1][40]
  719:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,12)[40]
  724:[52] PutRef(var[28], value=ref(1,5,12)[40])
  727:[40] VarRef(var[28]) -> ref(1,5,12)=false[40]
  730:[52] ConstInt(val=2) -> 2[52]
  735:[56] SetInt(v1=ref(1,5,12)[40], fld=0, val=2[52])
  738:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  741:[52] VarRef(var[28]) -> ref(1,5,12)=true[52]
  744:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,12)[52], parent_tp=14, fld=65535)
  749:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2][40]
  752:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,16)[40]
  757:[52] PutRef(var[28], value=ref(1,5,16)[40])
  760:[40] VarRef(var[28]) -> ref(1,5,16)=false[40]
  763:[52] ConstInt(val=4) -> 4[52]
  768:[56] SetInt(v1=ref(1,5,16)[40], fld=0, val=4[52])
  771:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4][40]
  774:[52] VarRef(var[28]) -> ref(1,5,16)=true[52]
  777:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,16)[52], parent_tp=14, fld=65535)
  782:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4][40]
  785:[52] NewRecord(data=ref(1,1,4)[40], parent_tp=14, fld=65535) -> ref(1,5,20)[40]
  790:[52] PutRef(var[28], value=ref(1,5,20)[40])
  793:[40] VarRef(var[28]) -> ref(1,5,20)=false[40]
  796:[52] ConstInt(val=8) -> 8[52]
  801:[56] SetInt(v1=ref(1,5,20)[40], fld=0, val=8[52])
  804:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4,8][40]
  807:[52] VarRef(var[28]) -> ref(1,5,20)=true[52]
  810:[64] FinishRecord(data=ref(1,1,4)[40], rec=ref(1,5,20)[52], parent_tp=14, fld=65535)
  815:[40] VarVector(var[16]) -> ref(1,1,4)=[1,2,4,8][40]
  818:[52] GenFreeStack(value=12, discard=36)
  822:[16] ConstInt(val=0) -> 0[16]
  827:[20] ConvIntFromNull() -> -2147483648[20]
  828:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  831:[36] VarInt(var[20]) -> -2147483648[36]
  834:[40] ConvBoolFromInt(v1=-2147483648[36]) -> false[36]
  835:[37] Not(v1=false[36]) -> true[36]
  836:[37] GenGotoFalseWord(jump=847, if_false=true[36])
  839:[36] ConstInt(val=1) -> 1[36]
  844:[40] GenGotoWord(jump=856)
  856:[40] PutInt(var[20], value=1[36])
  859:[36] VarInt(var[20]) -> 1[36]
  862:[40] ConstInt(val=3) -> 3[40]
  867:[44] GeInt(v1=1[36], v2=3[40]) -> false[36]
  868:[37] GenGotoFalseWord(jump=878, if_false=false[36])
  878:[36] VarInt(var[20]) -> 1[36]
  881:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=1[36]) -> ref(1,5,12)=2[24]
  884:[36] GetInt(v1=ref(1,5,12)[24], fld=0) -> 2[24]
  887:[28] VarInt(var[16]) -> 0[28]
  890:[32] ConstInt(val=10) -> 10[32]
  895:[36] MulInt(v1=0[28], v2=10[32]) -> 0[28]
  896:[32] VarInt(var[24]) -> 2[32]
  899:[36] AddInt(v1=0[28], v2=2[32]) -> 2[28]
  900:[32] PutInt(var[16], value=2[28])
  903:[28] GenFreeStack(value=0, discard=4)
  907:[24] GenGotoWord(jump=828)
  828:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  831:[36] VarInt(var[20]) -> 1[36]
  834:[40] ConvBoolFromInt(v1=1[36]) -> true[36]
  835:[37] Not(v1=true[36]) -> false[36]
  836:[37] GenGotoFalseWord(jump=847, if_false=false[36])
  847:[36] VarInt(var[20]) -> 1[36]
  850:[40] ConstInt(val=1) -> 1[40]
  855:[44] AddInt(v1=1[36], v2=1[40]) -> 2[36]
  856:[40] PutInt(var[20], value=2[36])
  859:[36] VarInt(var[20]) -> 2[36]
  862:[40] ConstInt(val=3) -> 3[40]
  867:[44] GeInt(v1=2[36], v2=3[40]) -> false[36]
  868:[37] GenGotoFalseWord(jump=878, if_false=false[36])
  878:[36] VarInt(var[20]) -> 2[36]
  881:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=2[36]) -> ref(1,5,16)=4[24]
  884:[36] GetInt(v1=ref(1,5,16)[24], fld=0) -> 4[24]
  887:[28] VarInt(var[16]) -> 2[28]
  890:[32] ConstInt(val=10) -> 10[32]
  895:[36] MulInt(v1=2[28], v2=10[32]) -> 20[28]
  896:[32] VarInt(var[24]) -> 4[32]
  899:[36] AddInt(v1=20[28], v2=4[32]) -> 24[28]
  900:[32] PutInt(var[16], value=24[28])
  903:[28] GenFreeStack(value=0, discard=4)
  907:[24] GenGotoWord(jump=828)
  828:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  831:[36] VarInt(var[20]) -> 2[36]
  834:[40] ConvBoolFromInt(v1=2[36]) -> true[36]
  835:[37] Not(v1=true[36]) -> false[36]
  836:[37] GenGotoFalseWord(jump=847, if_false=false[36])
  847:[36] VarInt(var[20]) -> 2[36]
  850:[40] ConstInt(val=1) -> 1[40]
  855:[44] AddInt(v1=2[36], v2=1[40]) -> 3[36]
  856:[40] PutInt(var[20], value=3[36])
  859:[36] VarInt(var[20]) -> 3[36]
  862:[40] ConstInt(val=3) -> 3[40]
  867:[44] GeInt(v1=3[36], v2=3[40]) -> true[36]
  868:[37] GenGotoFalseWord(jump=878, if_false=true[36])
  871:[36] GenFreeStack(value=0, discard=12)
  875:[24] GenGotoWord(jump=910)
  910:[24] GenFreeStack(value=0, discard=4)
  914:[20] ConvIntFromNull() -> -2147483648[20]
  915:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  918:[36] VarInt(var[20]) -> -2147483648[36]
  921:[40] ConvBoolFromInt(v1=-2147483648[36]) -> false[36]
  922:[37] Not(v1=false[36]) -> true[36]
  923:[37] GenGotoFalseWord(jump=934, if_false=true[36])
  926:[36] ConstInt(val=2) -> 2[36]
  931:[40] GenGotoWord(jump=943)
  943:[40] PutInt(var[20], value=2[36])
  946:[36] VarInt(var[20]) -> 2[36]
  949:[40] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][40]
  952:[52] LengthVector(r=ref(1,1,4)=true[40]) -> 4[40]
  953:[44] GeInt(v1=2[36], v2=4[40]) -> false[36]
  954:[37] GenGotoFalseWord(jump=964, if_false=false[36])
  964:[36] VarInt(var[20]) -> 2[36]
  967:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=2[36]) -> ref(1,5,16)=4[24]
  970:[36] GetInt(v1=ref(1,5,16)[24], fld=0) -> 4[24]
  973:[28] VarInt(var[16]) -> 24[28]
  976:[32] ConstInt(val=10) -> 10[32]
  981:[36] MulInt(v1=24[28], v2=10[32]) -> 240[28]
  982:[32] VarInt(var[24]) -> 4[32]
  985:[36] AddInt(v1=240[28], v2=4[32]) -> 244[28]
  986:[32] PutInt(var[16], value=244[28])
  989:[28] GenFreeStack(value=0, discard=4)
  993:[24] GenGotoWord(jump=915)
  915:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  918:[36] VarInt(var[20]) -> 2[36]
  921:[40] ConvBoolFromInt(v1=2[36]) -> true[36]
  922:[37] Not(v1=true[36]) -> false[36]
  923:[37] GenGotoFalseWord(jump=934, if_false=false[36])
  934:[36] VarInt(var[20]) -> 2[36]
  937:[40] ConstInt(val=1) -> 1[40]
  942:[44] AddInt(v1=2[36], v2=1[40]) -> 3[36]
  943:[40] PutInt(var[20], value=3[36])
  946:[36] VarInt(var[20]) -> 3[36]
  949:[40] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][40]
  952:[52] LengthVector(r=ref(1,1,4)=true[40]) -> 4[40]
  953:[44] GeInt(v1=3[36], v2=4[40]) -> false[36]
  954:[37] GenGotoFalseWord(jump=964, if_false=false[36])
  964:[36] VarInt(var[20]) -> 3[36]
  967:[40] GetVector(r=ref(1,1,4)=true[24], size=4, index=3[36]) -> ref(1,5,20)=8[24]
  970:[36] GetInt(v1=ref(1,5,20)[24], fld=0) -> 8[24]
  973:[28] VarInt(var[16]) -> 244[28]
  976:[32] ConstInt(val=10) -> 10[32]
  981:[36] MulInt(v1=244[28], v2=10[32]) -> 2440[28]
  982:[32] VarInt(var[24]) -> 8[32]
  985:[36] AddInt(v1=2440[28], v2=8[32]) -> 2448[28]
  986:[32] PutInt(var[16], value=2448[28])
  989:[28] GenFreeStack(value=0, discard=4)
  993:[24] GenGotoWord(jump=915)
  915:[24] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][24]
  918:[36] VarInt(var[20]) -> 3[36]
  921:[40] ConvBoolFromInt(v1=3[36]) -> true[36]
  922:[37] Not(v1=true[36]) -> false[36]
  923:[37] GenGotoFalseWord(jump=934, if_false=false[36])
  934:[36] VarInt(var[20]) -> 3[36]
  937:[40] ConstInt(val=1) -> 1[40]
  942:[44] AddInt(v1=3[36], v2=1[40]) -> 4[36]
  943:[40] PutInt(var[20], value=4[36])
  946:[36] VarInt(var[20]) -> 4[36]
  949:[40] VarVector(var[4]) -> ref(1,1,4)=[1,2,4,8][40]
  952:[52] LengthVector(r=ref(1,1,4)=true[40]) -> 4[40]
  953:[44] GeInt(v1=4[36], v2=4[40]) -> true[36]
  954:[37] GenGotoFalseWord(jump=964, if_false=true[36])
  957:[36] GenFreeStack(value=0, discard=12)
  961:[24] GenGotoWord(jump=996)
  996:[24] GenFreeStack(value=0, discard=4)
 1000:[20] VarInt(var[16]) -> 2448[20]
 1003:[24] GenFreeStack(value=4, discard=16)
 1007:[8] VarInt(var[4]) -> 2448[8]
 1010:[12] ConstInt(val=2448) -> 2448[12]
 1015:[16] EqInt(v1=2448[8], v2=2448[12]) -> true[8]
 1016:[9] GenGotoFalseWord(jump=1022, if_false=true[8])
 1019:[8] GenGotoWord(jump=1076)
 1076:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
