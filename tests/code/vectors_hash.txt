struct Count { t: text, v: integer};
struct Counting { v: vector<Count>, h: hash<Count[t]> };
fn fill(c: Counting) {
  c.v = [
    {t:"One", v:1},
    {t:"Two", v:2},
  ];
  c.v += [
    {t:"Three", v:3},
    {t:"Four", v:4},
    {t:"Five", v:5},
    {t:"Six", v:6},
    {t:"Seven", v:7},
    {t:"Eight", v:8},
    {t:"Nine", v:9},
    {t:"Ten", v:10},
    {t:"Eleven", v:11},
    {t:"Twelve", v:12},
    {t:"Thirteen", v:13}
  ];
}

pub fn test() {
    test_value = {c = Counting {};
  fill(c);
  assert(!c.h["None"], "No element");
  c.h["Five"].v + c.h["Seven"].v};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}
Type 12:Count[12]:
    t:text[4]
    v:integer[8]

Type 13:Counting[12]:
    v:array<Count>[4] other [1]
    h:hash<Count[t]>[8] other [65535]

Type 14:array<Count>[4]:Array(12)

Type 15:hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ]

fn fill(c:Counting) {#1 block
  {#2 vector
    _elm_1:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#3 object
      OpSetText(_elm_1, 4i32, "One");
      OpSetInt(_elm_1, 8i32, 1i32);
    }#3;
    OpFinishRecord(c, _elm_1, 13i32, 0i32);
    _elm_1:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#4 object
      OpSetText(_elm_1, 4i32, "Two");
      OpSetInt(_elm_1, 8i32, 2i32);
    }#4;
    OpFinishRecord(c, _elm_1, 13i32, 0i32);
  }#2;
  {#5 vector
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#6 object
      OpSetText(_elm_2, 4i32, "Three");
      OpSetInt(_elm_2, 8i32, 3i32);
    }#6;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#7 object
      OpSetText(_elm_2, 4i32, "Four");
      OpSetInt(_elm_2, 8i32, 4i32);
    }#7;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#8 object
      OpSetText(_elm_2, 4i32, "Five");
      OpSetInt(_elm_2, 8i32, 5i32);
    }#8;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#9 object
      OpSetText(_elm_2, 4i32, "Six");
      OpSetInt(_elm_2, 8i32, 6i32);
    }#9;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#10 object
      OpSetText(_elm_2, 4i32, "Seven");
      OpSetInt(_elm_2, 8i32, 7i32);
    }#10;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#11 object
      OpSetText(_elm_2, 4i32, "Eight");
      OpSetInt(_elm_2, 8i32, 8i32);
    }#11;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#12 object
      OpSetText(_elm_2, 4i32, "Nine");
      OpSetInt(_elm_2, 8i32, 9i32);
    }#12;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#13 object
      OpSetText(_elm_2, 4i32, "Ten");
      OpSetInt(_elm_2, 8i32, 10i32);
    }#13;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#14 object
      OpSetText(_elm_2, 4i32, "Eleven");
      OpSetInt(_elm_2, 8i32, 11i32);
    }#14;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#15 object
      OpSetText(_elm_2, 4i32, "Twelve");
      OpSetInt(_elm_2, 8i32, 12i32);
    }#15;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#16 object
      OpSetText(_elm_2, 4i32, "Thirteen");
      OpSetInt(_elm_2, 8i32, 13i32);
    }#16;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
  }#5;
}#1

byte-code for hash:fill(c: ref(Counting)[0])
 645[12]: return-address
 645[16]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 648[28]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 653[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 656[40]: ConstText(_value="One") -> text
 661[56]: SetText(v1: ref(reference), fld=4, val: text)
 664[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 667[40]: ConstInt(val=1) -> integer
 672[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 675[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 678[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 681[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 686[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 689[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 694[40]: PutRef(var[16], value: ref(reference))
 697[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 700[40]: ConstText(_value="Two") -> text
 705[56]: SetText(v1: ref(reference), fld=4, val: text)
 708[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 711[40]: ConstInt(val=2) -> integer
 716[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 719[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 722[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 725[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 730[28]: FreeStack(value=0, discard=12)
 734[16]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 737[28]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 742[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 745[40]: ConstText(_value="Three") -> text
 752[56]: SetText(v1: ref(reference), fld=4, val: text)
 755[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 758[40]: ConstInt(val=3) -> integer
 763[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 766[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 769[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 772[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 777[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 780[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 785[40]: PutRef(var[16], value: ref(reference))
 788[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 791[40]: ConstText(_value="Four") -> text
 797[56]: SetText(v1: ref(reference), fld=4, val: text)
 800[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 803[40]: ConstInt(val=4) -> integer
 808[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 811[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 814[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 817[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 822[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 825[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 830[40]: PutRef(var[16], value: ref(reference))
 833[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 836[40]: ConstText(_value="Five") -> text
 842[56]: SetText(v1: ref(reference), fld=4, val: text)
 845[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 848[40]: ConstInt(val=5) -> integer
 853[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 856[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 859[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 862[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 867[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 870[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 875[40]: PutRef(var[16], value: ref(reference))
 878[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 881[40]: ConstText(_value="Six") -> text
 886[56]: SetText(v1: ref(reference), fld=4, val: text)
 889[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 892[40]: ConstInt(val=6) -> integer
 897[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 900[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 903[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 906[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 911[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 914[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 919[40]: PutRef(var[16], value: ref(reference))
 922[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 925[40]: ConstText(_value="Seven") -> text
 932[56]: SetText(v1: ref(reference), fld=4, val: text)
 935[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 938[40]: ConstInt(val=7) -> integer
 943[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 946[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 949[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 952[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 957[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 960[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 965[40]: PutRef(var[16], value: ref(reference))
 968[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 971[40]: ConstText(_value="Eight") -> text
 978[56]: SetText(v1: ref(reference), fld=4, val: text)
 981[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 984[40]: ConstInt(val=8) -> integer
 989[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 992[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 995[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 998[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1003[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1006[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1011[40]: PutRef(var[16], value: ref(reference))
1014[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1017[40]: ConstText(_value="Nine") -> text
1023[56]: SetText(v1: ref(reference), fld=4, val: text)
1026[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1029[40]: ConstInt(val=9) -> integer
1034[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1037[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1040[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1043[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1048[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1051[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1056[40]: PutRef(var[16], value: ref(reference))
1059[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1062[40]: ConstText(_value="Ten") -> text
1067[56]: SetText(v1: ref(reference), fld=4, val: text)
1070[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1073[40]: ConstInt(val=10) -> integer
1078[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1081[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1084[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1087[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1092[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1095[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1100[40]: PutRef(var[16], value: ref(reference))
1103[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1106[40]: ConstText(_value="Eleven") -> text
1114[56]: SetText(v1: ref(reference), fld=4, val: text)
1117[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1120[40]: ConstInt(val=11) -> integer
1125[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1128[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1131[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1134[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1139[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1142[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1147[40]: PutRef(var[16], value: ref(reference))
1150[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1153[40]: ConstText(_value="Twelve") -> text
1161[56]: SetText(v1: ref(reference), fld=4, val: text)
1164[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1167[40]: ConstInt(val=12) -> integer
1172[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1175[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1178[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1181[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1186[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1189[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1194[40]: PutRef(var[16], value: ref(reference))
1197[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1200[40]: ConstText(_value="Thirteen") -> text
1210[56]: SetText(v1: ref(reference), fld=4, val: text)
1213[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1216[40]: ConstInt(val=13) -> integer
1221[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1224[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1227[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1230[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1235[28]: FreeStack(value=0, discard=12)
1239[16]: Return(ret=12, value=0, discard=16)

fn test() {#1 block
  __ref_1:ref(Counting) = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    c:ref(Counting)["__ref_1"] = {#3 object
      OpDatabase(__ref_1, 13i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      OpSetInt(__ref_1, 8i32, 0i32);
      __ref_1;
    }#3:ref(Counting)["__ref_1"];
    fill(c);
    if OpNot(OpConvBoolFromRef(OpGetRecord(OpGetField(c, 8i32, 15i32), 15i32, 1i32, "None"))) null else OpPanic("No element");
    OpAddInt(OpGetInt(OpGetRecord(OpGetField(c, 8i32, 15i32), 15i32, 1i32, "Five"), 8i32), OpGetInt(OpGetRecord(OpGetField(c, 8i32, 15i32), 15i32, 1i32, "Seven"), 8i32));
  }#2:integer;
  if OpEqInt(test_value, 12i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 12");
    __work_1;
  }#4:text);
}#1

byte-code for hash:test()
1245[0]: return-address
1245[4]: ConvRefFromNull() -> ref(reference) var=__ref_1[4]:ref(Counting) in 1
1246[16]: Text() var=__work_1[16]:text in 1
1247[40]: Database(var[4], db_tp=13) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[40]:ref(Counting)["__ref_1"] in 2
1252[40]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=__ref_1[4]:ref(Counting) in 1
1255[52]: ConstInt(val=0) -> integer
1260[56]: SetInt(v1: ref(reference), fld=4, val: integer)
1263[40]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=__ref_1[4]:ref(Counting) in 1
1266[52]: ConstInt(val=0) -> integer
1271[56]: SetInt(v1: ref(reference), fld=8, val: integer)
1274[40]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=__ref_1[4]:ref(Counting) in 1
1277[52]: VarRef(var[40]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[40]:ref(Counting)["__ref_1"] in 2
1280[64]: Call(size=0, to=645)
1287[52]: VarRef(var[40]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[40]:ref(Counting)["__ref_1"] in 2
1290[64]: GetField(v1: ref(reference), fld=8) -> ref(reference) type=hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ][15]
1293[64]: ConstText(_value="None") -> text
1299[80]: GetRecord(data: ref(reference), db_tp=15, no_keys=1) -> ref(reference)
1303[64]: ConvBoolFromRef(val: ref(reference)) -> boolean
1304[53]: Not(v1: boolean) -> boolean
1305[53]: GotoFalseWord(jump=1311, if_false: boolean)
1308[52]: GotoWord(jump=1324)
1311[52]: ConstText(_value="No element") -> text
1323[68]: Panic(message: text)
1324[52]: VarRef(var[40]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[40]:ref(Counting)["__ref_1"] in 2
1327[64]: GetField(v1: ref(reference), fld=8) -> ref(reference) type=hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ][15]
1330[64]: ConstText(_value="Five") -> text
1336[80]: GetRecord(data: ref(reference), db_tp=15, no_keys=1) -> ref(reference)
1340[64]: GetInt(v1: ref(reference), fld=8) -> integer
1343[56]: VarRef(var[40]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[40]:ref(Counting)["__ref_1"] in 2
1346[68]: GetField(v1: ref(reference), fld=8) -> ref(reference) type=hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ][15]
1349[68]: ConstText(_value="Seven") -> text
1356[84]: GetRecord(data: ref(reference), db_tp=15, no_keys=1) -> ref(reference)
1360[68]: GetInt(v1: ref(reference), fld=8) -> integer
1363[60]: AddInt(v1: integer, v2: integer) -> integer
1364[56]: FreeStack(value=4, discard=16) type=integer[4]:Base[0]
1368[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
1371[48]: ConstInt(val=12) -> integer
1376[52]: EqInt(v1: integer, v2: integer) -> boolean
1377[45]: GotoFalseWord(jump=1383, if_false: boolean)
1380[44]: GotoWord(jump=1433)
1383[44]: ClearText(var[16]) var=__work_1[16]:text in 1
1386[44]: ConstText(_value="Test failed ") -> text
1400[60]: AppendText(var[16], v1: text)
1403[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
1406[48]: ConstInt(val=0) -> integer
1411[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1418[44]: ConstText(_value=" != 12") -> text
1426[60]: AppendText(var[16], v1: text)
1429[44]: VarText(var[16]) -> text var=__work_1[16]:text in 1
1432[60]: Panic(message: text)
1433[44]: FreeText(var[16])
1436[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=__ref_1[4]:ref(Counting) in 1
1439[56]: FreeRef(v1: ref(reference))
1440[44]: Return(ret=0, value=0, discard=44)

Execute test:
 1245:[8] ConvRefFromNull() -> ref(1,0,0)[8]
 1246:[20] Text()
 1247:[44] Database(var[8], db_tp=13)
 1252:[44] VarRef(var[8]) -> ref(1,1,0)={v:[]}[44]
 1255:[56] ConstInt(val=0) -> 0[56]
 1260:[60] SetInt(v1=ref(1,1,0)[44], fld=4, val=0[56])
 1263:[44] VarRef(var[8]) -> ref(1,1,0)={v:[]}[44]
 1266:[56] ConstInt(val=0) -> 0[56]
 1271:[60] SetInt(v1=ref(1,1,0)[44], fld=8, val=0[56])
 1274:[44] VarRef(var[8]) -> ref(1,1,0)={v:[]}[44]
 1277:[56] VarRef(var[44]) -> ref(1,1,0)={v:[]}[56]
 1280:[68] Call(size=0, to=645)
  645:[72] VarRef(var[56]) -> ref(1,1,0)={v:[]}[72]
  648:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,13,0)[72]
  653:[84] VarRef(var[72]) -> ref(1,13,0)={}[84]
  656:[96] ConstText(_value="One") -> "One"[96]
  661:[112] SetText(v1=ref(1,13,0)[84], fld=4, val="One"[96])
  664:[84] VarRef(var[72]) -> ref(1,13,0)={t:"One"}[84]
  667:[96] ConstInt(val=1) -> 1[96]
  672:[100] SetInt(v1=ref(1,13,0)[84], fld=8, val=1[96])
  675:[84] VarRef(var[56]) -> ref(1,1,0)={v:[]}[84]
  678:[96] VarRef(var[72]) -> ref(1,13,0)={t:"One",v:1}[96]
  681:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,13,0)[96], parent_tp=13, fld=0)
  686:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[84]
  689:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,33,0)[84]
  694:[96] PutRef(var[72], value=ref(1,33,0)[84])
  697:[84] VarRef(var[72]) -> ref(1,33,0)={}[84]
  700:[96] ConstText(_value="Two") -> "Two"[96]
  705:[112] SetText(v1=ref(1,33,0)[84], fld=4, val="Two"[96])
  708:[84] VarRef(var[72]) -> ref(1,33,0)={t:"Two"}[84]
  711:[96] ConstInt(val=2) -> 2[96]
  716:[100] SetInt(v1=ref(1,33,0)[84], fld=8, val=2[96])
  719:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[84]
  722:[96] VarRef(var[72]) -> ref(1,33,0)={t:"Two",v:2}[96]
  725:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,33,0)[96], parent_tp=13, fld=0)
  730:[84] FreeStack(value=0, discard=12)
  734:[72] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[72]
  737:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,37,0)[72]
  742:[84] VarRef(var[72]) -> ref(1,37,0)={}[84]
  745:[96] ConstText(_value="Three") -> "Three"[96]
  752:[112] SetText(v1=ref(1,37,0)[84], fld=4, val="Three"[96])
  755:[84] VarRef(var[72]) -> ref(1,37,0)={t:"Three"}[84]
  758:[96] ConstInt(val=3) -> 3[96]
  763:[100] SetInt(v1=ref(1,37,0)[84], fld=8, val=3[96])
  766:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[84]
  769:[96] VarRef(var[72]) -> ref(1,37,0)={t:"Three",v:3}[96]
  772:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,37,0)[96], parent_tp=13, fld=0)
  777:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[84]
  780:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,41,0)[84]
  785:[96] PutRef(var[72], value=ref(1,41,0)[84])
  788:[84] VarRef(var[72]) -> ref(1,41,0)={}[84]
  791:[96] ConstText(_value="Four") -> "Four"[96]
  797:[112] SetText(v1=ref(1,41,0)[84], fld=4, val="Four"[96])
  800:[84] VarRef(var[72]) -> ref(1,41,0)={t:"Four"}[84]
  803:[96] ConstInt(val=4) -> 4[96]
  808:[100] SetInt(v1=ref(1,41,0)[84], fld=8, val=4[96])
  811:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[84]
  814:[96] VarRef(var[72]) -> ref(1,41,0)={t:"Four",v:4}[96]
  817:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,41,0)[96], parent_tp=13, fld=0)
  822:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[84]
  825:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,45,0)[84]
  830:[96] PutRef(var[72], value=ref(1,45,0)[84])
  833:[84] VarRef(var[72]) -> ref(1,45,0)={}[84]
  836:[96] ConstText(_value="Five") -> "Five"[96]
  842:[112] SetText(v1=ref(1,45,0)[84], fld=4, val="Five"[96])
  845:[84] VarRef(var[72]) -> ref(1,45,0)={t:"Five"}[84]
  848:[96] ConstInt(val=5) -> 5[96]
  853:[100] SetInt(v1=ref(1,45,0)[84], fld=8, val=5[96])
  856:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[84]
  859:[96] VarRef(var[72]) -> ref(1,45,0)={t:"Five",v:5}[96]
  862:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,45,0)[96], parent_tp=13, fld=0)
  867:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[84]
  870:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,49,0)[84]
  875:[96] PutRef(var[72], value=ref(1,49,0)[84])
  878:[84] VarRef(var[72]) -> ref(1,49,0)={}[84]
  881:[96] ConstText(_value="Six") -> "Six"[96]
  886:[112] SetText(v1=ref(1,49,0)[84], fld=4, val="Six"[96])
  889:[84] VarRef(var[72]) -> ref(1,49,0)={t:"Six"}[84]
  892:[96] ConstInt(val=6) -> 6[96]
  897:[100] SetInt(v1=ref(1,49,0)[84], fld=8, val=6[96])
  900:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[84]
  903:[96] VarRef(var[72]) -> ref(1,49,0)={t:"Six",v:6}[96]
  906:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,49,0)[96], parent_tp=13, fld=0)
  911:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[84]
  914:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,53,0)[84]
  919:[96] PutRef(var[72], value=ref(1,53,0)[84])
  922:[84] VarRef(var[72]) -> ref(1,53,0)={}[84]
  925:[96] ConstText(_value="Seven") -> "Seven"[96]
  932:[112] SetText(v1=ref(1,53,0)[84], fld=4, val="Seven"[96])
  935:[84] VarRef(var[72]) -> ref(1,53,0)={t:"Seven"}[84]
  938:[96] ConstInt(val=7) -> 7[96]
  943:[100] SetInt(v1=ref(1,53,0)[84], fld=8, val=7[96])
  946:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[84]
  949:[96] VarRef(var[72]) -> ref(1,53,0)={t:"Seven",v:7}[96]
  952:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,53,0)[96], parent_tp=13, fld=0)
  957:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[84]
  960:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,57,0)[84]
  965:[96] PutRef(var[72], value=ref(1,57,0)[84])
  968:[84] VarRef(var[72]) -> ref(1,57,0)={}[84]
  971:[96] ConstText(_value="Eight") -> "Eight"[96]
  978:[112] SetText(v1=ref(1,57,0)[84], fld=4, val="Eight"[96])
  981:[84] VarRef(var[72]) -> ref(1,57,0)={t:"Eight"}[84]
  984:[96] ConstInt(val=8) -> 8[96]
  989:[100] SetInt(v1=ref(1,57,0)[84], fld=8, val=8[96])
  992:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[84]
  995:[96] VarRef(var[72]) -> ref(1,57,0)={t:"Eight",v:8}[96]
  998:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,57,0)[96], parent_tp=13, fld=0)
 1003:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[84]
 1006:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,61,0)[84]
 1011:[96] PutRef(var[72], value=ref(1,61,0)[84])
 1014:[84] VarRef(var[72]) -> ref(1,61,0)={}[84]
 1017:[96] ConstText(_value="Nine") -> "Nine"[96]
 1023:[112] SetText(v1=ref(1,61,0)[84], fld=4, val="Nine"[96])
 1026:[84] VarRef(var[72]) -> ref(1,61,0)={t:"Nine"}[84]
 1029:[96] ConstInt(val=9) -> 9[96]
 1034:[100] SetInt(v1=ref(1,61,0)[84], fld=8, val=9[96])
 1037:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[84]
 1040:[96] VarRef(var[72]) -> ref(1,61,0)={t:"Nine",v:9}[96]
 1043:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,61,0)[96], parent_tp=13, fld=0)
 1048:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[84]
 1051:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,65,0)[84]
 1056:[96] PutRef(var[72], value=ref(1,65,0)[84])
 1059:[84] VarRef(var[72]) -> ref(1,65,0)={}[84]
 1062:[96] ConstText(_value="Ten") -> "Ten"[96]
 1067:[112] SetText(v1=ref(1,65,0)[84], fld=4, val="Ten"[96])
 1070:[84] VarRef(var[72]) -> ref(1,65,0)={t:"Ten"}[84]
 1073:[96] ConstInt(val=10) -> 10[96]
 1078:[100] SetInt(v1=ref(1,65,0)[84], fld=8, val=10[96])
 1081:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[84]
 1084:[96] VarRef(var[72]) -> ref(1,65,0)={t:"Ten",v:10}[96]
 1087:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,65,0)[96], parent_tp=13, fld=0)
 1092:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[84]
 1095:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,69,0)[84]
 1100:[96] PutRef(var[72], value=ref(1,69,0)[84])
 1103:[84] VarRef(var[72]) -> ref(1,69,0)={}[84]
 1106:[96] ConstText(_value="Eleven") -> "Eleven"[96]
 1114:[112] SetText(v1=ref(1,69,0)[84], fld=4, val="Eleven"[96])
 1117:[84] VarRef(var[72]) -> ref(1,69,0)={t:"Eleven"}[84]
 1120:[96] ConstInt(val=11) -> 11[96]
 1125:[100] SetInt(v1=ref(1,69,0)[84], fld=8, val=11[96])
 1128:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[84]
 1131:[96] VarRef(var[72]) -> ref(1,69,0)={t:"Eleven",v:11}[96]
 1134:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,69,0)[96], parent_tp=13, fld=0)
 1139:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[84]
 1142:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,90,0)[84]
 1147:[96] PutRef(var[72], value=ref(1,90,0)[84])
 1150:[84] VarRef(var[72]) -> ref(1,90,0)={}[84]
 1153:[96] ConstText(_value="Twelve") -> "Twelve"[96]
 1161:[112] SetText(v1=ref(1,90,0)[84], fld=4, val="Twelve"[96])
 1164:[84] VarRef(var[72]) -> ref(1,90,0)={t:"Twelve"}[84]
 1167:[96] ConstInt(val=12) -> 12[96]
 1172:[100] SetInt(v1=ref(1,90,0)[84], fld=8, val=12[96])
 1175:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[84]
 1178:[96] VarRef(var[72]) -> ref(1,90,0)={t:"Twelve",v:12}[96]
 1181:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,90,0)[96], parent_tp=13, fld=0)
 1186:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[84]
 1189:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,94,0)[84]
 1194:[96] PutRef(var[72], value=ref(1,94,0)[84])
 1197:[84] VarRef(var[72]) -> ref(1,94,0)={}[84]
 1200:[96] ConstText(_value="Thirteen") -> "Thirteen"[96]
 1210:[112] SetText(v1=ref(1,94,0)[84], fld=4, val="Thirteen"[96])
 1213:[84] VarRef(var[72]) -> ref(1,94,0)={t:"Thirteen"}[84]
 1216:[96] ConstInt(val=13) -> 13[96]
 1221:[100] SetInt(v1=ref(1,94,0)[84], fld=8, val=13[96])
 1224:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[84]
 1227:[96] VarRef(var[72]) -> ref(1,94,0)={t:"Thirteen",v:13}[96]
 1230:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,94,0)[96], parent_tp=13, fld=0)
 1235:[84] FreeStack(value=0, discard=12)
 1239:[72] Return(ret=1287[68], value=0, discard=16)
 1287:[56] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[56]
 1290:[68] GetField(v1=ref(1,1,0)[56], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][56]
 1293:[68] ConstText(_value="None") -> "None"[68]
 1299:[84] GetRecord(data=ref(1,1,8)[56], db_tp=15, no_keys=1, key1="None"[68]) -> ref(1,0,0)[56]
 1303:[68] ConvBoolFromRef(val=ref(1,0,0)[56]) -> false[56]
 1304:[57] Not(v1=false[56]) -> true[56]
 1305:[57] GotoFalseWord(jump=1311, if_false=true[56])
 1308:[56] GotoWord(jump=1324)
 1324:[56] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[56]
 1327:[68] GetField(v1=ref(1,1,0)[56], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][56]
 1330:[68] ConstText(_value="Five") -> "Five"[68]
 1336:[84] GetRecord(data=ref(1,1,8)[56], db_tp=15, no_keys=1, key1="Five"[68]) -> ref(1,45,0)[56]
 1340:[68] GetInt(v1=ref(1,45,0)[56], fld=8) -> 5[56]
 1343:[60] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[60]
 1346:[72] GetField(v1=ref(1,1,0)[60], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][60]
 1349:[72] ConstText(_value="Seven") -> "Seven"[72]
 1356:[88] GetRecord(data=ref(1,1,8)[60], db_tp=15, no_keys=1, key1="Seven"[72]) -> ref(1,53,0)[60]
 1360:[72] GetInt(v1=ref(1,53,0)[60], fld=8) -> 7[60]
 1363:[64] AddInt(v1=5[56], v2=7[60]) -> 12[56]
 1364:[60] FreeStack(value=4, discard=16)
 1368:[48] VarInt(var[44]) -> 12[48]
 1371:[52] ConstInt(val=12) -> 12[52]
 1376:[56] EqInt(v1=12[48], v2=12[52]) -> true[48]
 1377:[49] GotoFalseWord(jump=1383, if_false=true[48])
 1380:[48] GotoWord(jump=1433)
 1433:[48] FreeText(var[20])
 1436:[48] VarRef(var[8]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[48]
 1439:[60] FreeRef(v1=ref(1,1,0)[48])
 1440:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
