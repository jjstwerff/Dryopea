Test code:
struct Count { t: text, v: integer};
struct Counting { v: vector<Count>, h: hash<Count[t]> };
fn fill(c: Counting) {
  c.v = [
    {t:"One", v:1},
    {t:"Two", v:2},
  ];
  c.v += [
    {t:"Three", v:3},
    {t:"Four", v:4},
    {t:"Five", v:5},
    {t:"Six", v:6},
    {t:"Seven", v:7},
    {t:"Eight", v:8},
    {t:"Nine", v:9},
    {t:"Ten", v:10},
    {t:"Eleven", v:11},
    {t:"Twelve", v:12},
    {t:"Thirteen", v:13}
  ];
}

pub fn test() {
    test_value = {c = Counting {}; fill(c); c.h["Five"].v + c.h["Seven"].v};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}

Type 13:Count[12]:
    t:text[4]
    v:integer[8]

Type 14:Counting[12]:
    v:array<Count>[4] other [1]
    h:hash<Count[t]>[8] other [65535]

Type 15:array<Count>[4]:Array(13)

Type 16:hash<Count[t]>[4]:Hash(13, [0]) keys [tp:5 desc:false field:4, ]

fn fill {
  {
    let elm_10 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_10, 4i32, "One");
    OpSetInt(elm_10, 8i32, 1i32);
    OpFinishRecord(c, elm_10, 14i32, 0i32);
    elm_10 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_10, 4i32, "Two");
    OpSetInt(elm_10, 8i32, 2i32);
    OpFinishRecord(c, elm_10, 14i32, 0i32);
  };
  {
    let elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Three");
    OpSetInt(elm_11, 8i32, 3i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Four");
    OpSetInt(elm_11, 8i32, 4i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Five");
    OpSetInt(elm_11, 8i32, 5i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Six");
    OpSetInt(elm_11, 8i32, 6i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Seven");
    OpSetInt(elm_11, 8i32, 7i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Eight");
    OpSetInt(elm_11, 8i32, 8i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Nine");
    OpSetInt(elm_11, 8i32, 9i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Ten");
    OpSetInt(elm_11, 8i32, 10i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Eleven");
    OpSetInt(elm_11, 8i32, 11i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Twelve");
    OpSetInt(elm_11, 8i32, 12i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
    elm_11 = OpNewRecord(c, 14i32, 0i32);
    OpSetText(elm_11, 4i32, "Thirteen");
    OpSetInt(elm_11, 8i32, 13i32);
    OpFinishRecord(c, elm_11, 14i32, 0i32);
  };
}

byte-code for hash:fill(c: Counting[0])
 668[12]: return-address
 668[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 671[28]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 676[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 679[40]: ConstText(_value="One") -> text
 684[56]: SetText(v1: reference, fld=4, val: text)
 687[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 690[40]: ConstInt(val=1) -> integer
 695[44]: SetInt(v1: reference, fld=8, val: integer)
 698[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 701[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 704[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 709[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 712[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 717[40]: PutRef(var[16], value: reference)
 720[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 723[40]: ConstText(_value="Two") -> text
 728[56]: SetText(v1: reference, fld=4, val: text)
 731[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 734[40]: ConstInt(val=2) -> integer
 739[44]: SetInt(v1: reference, fld=8, val: integer)
 742[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 745[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 748[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 753[28]: GenFreeStack(value=0, discard=12)
 757[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 760[28]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 765[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 768[40]: ConstText(_value="Three") -> text
 775[56]: SetText(v1: reference, fld=4, val: text)
 778[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 781[40]: ConstInt(val=3) -> integer
 786[44]: SetInt(v1: reference, fld=8, val: integer)
 789[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 792[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 795[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 800[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 803[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 808[40]: PutRef(var[16], value: reference)
 811[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 814[40]: ConstText(_value="Four") -> text
 820[56]: SetText(v1: reference, fld=4, val: text)
 823[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 826[40]: ConstInt(val=4) -> integer
 831[44]: SetInt(v1: reference, fld=8, val: integer)
 834[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 837[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 840[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 845[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 848[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 853[40]: PutRef(var[16], value: reference)
 856[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 859[40]: ConstText(_value="Five") -> text
 865[56]: SetText(v1: reference, fld=4, val: text)
 868[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 871[40]: ConstInt(val=5) -> integer
 876[44]: SetInt(v1: reference, fld=8, val: integer)
 879[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 882[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 885[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 890[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 893[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 898[40]: PutRef(var[16], value: reference)
 901[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 904[40]: ConstText(_value="Six") -> text
 909[56]: SetText(v1: reference, fld=4, val: text)
 912[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 915[40]: ConstInt(val=6) -> integer
 920[44]: SetInt(v1: reference, fld=8, val: integer)
 923[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 926[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 929[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 934[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 937[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 942[40]: PutRef(var[16], value: reference)
 945[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 948[40]: ConstText(_value="Seven") -> text
 955[56]: SetText(v1: reference, fld=4, val: text)
 958[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 961[40]: ConstInt(val=7) -> integer
 966[44]: SetInt(v1: reference, fld=8, val: integer)
 969[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 972[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 975[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
 980[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
 983[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
 988[40]: PutRef(var[16], value: reference)
 991[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
 994[40]: ConstText(_value="Eight") -> text
1001[56]: SetText(v1: reference, fld=4, val: text)
1004[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1007[40]: ConstInt(val=8) -> integer
1012[44]: SetInt(v1: reference, fld=8, val: integer)
1015[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1018[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1021[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
1026[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1029[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
1034[40]: PutRef(var[16], value: reference)
1037[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1040[40]: ConstText(_value="Nine") -> text
1046[56]: SetText(v1: reference, fld=4, val: text)
1049[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1052[40]: ConstInt(val=9) -> integer
1057[44]: SetInt(v1: reference, fld=8, val: integer)
1060[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1063[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1066[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
1071[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1074[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
1079[40]: PutRef(var[16], value: reference)
1082[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1085[40]: ConstText(_value="Ten") -> text
1090[56]: SetText(v1: reference, fld=4, val: text)
1093[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1096[40]: ConstInt(val=10) -> integer
1101[44]: SetInt(v1: reference, fld=8, val: integer)
1104[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1107[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1110[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
1115[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1118[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
1123[40]: PutRef(var[16], value: reference)
1126[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1129[40]: ConstText(_value="Eleven") -> text
1137[56]: SetText(v1: reference, fld=4, val: text)
1140[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1143[40]: ConstInt(val=11) -> integer
1148[44]: SetInt(v1: reference, fld=8, val: integer)
1151[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1154[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1157[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
1162[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1165[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
1170[40]: PutRef(var[16], value: reference)
1173[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1176[40]: ConstText(_value="Twelve") -> text
1184[56]: SetText(v1: reference, fld=4, val: text)
1187[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1190[40]: ConstInt(val=12) -> integer
1195[44]: SetInt(v1: reference, fld=8, val: integer)
1198[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1201[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1204[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
1209[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1212[40]: NewRecord(data: reference, parent_tp=14, fld=0) -> reference
1217[40]: PutRef(var[16], value: reference)
1220[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1223[40]: ConstText(_value="Thirteen") -> text
1233[56]: SetText(v1: reference, fld=4, val: text)
1236[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1239[40]: ConstInt(val=13) -> integer
1244[44]: SetInt(v1: reference, fld=8, val: integer)
1247[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1250[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[13]
1253[52]: FinishRecord(data: reference, rec: reference, parent_tp=14, fld=0)
1258[28]: GenFreeStack(value=0, discard=12)
1262[16]: GenReturn(ret=12, value=0, discard=16)

fn test {
  let test_value = {
    let c = {
      let val = OpDatabase(12i32, 14i32);
      OpSetInt(val, 4i32, 0i32);
      OpSetInt(val, 8i32, 0i32);
      val;
    };
    fill(c);
    OpAddInt(OpGetInt(OpGetRecord(OpGetField(c, 8i32, 16i32), 16i32, 1i32, "Five"), 8i32), OpGetInt(OpGetRecord(OpGetField(c, 8i32, 16i32), 16i32, 1i32, "Seven"), 8i32));
  };
  if OpEqInt(test_value, 12i32) {null} else {OpGenPanic({
    let append_10 = "Test failed ";
    OpFormatInt(append_10, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(append_10, " != 12");
    append_10;
  })};
}

byte-code for hash:test()
1268[0]: return-address
1268[4]: Database(size=12, db_tp=14) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1273[16]: VarRef(var[4]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1276[28]: ConstInt(val=0) -> integer
1281[32]: SetInt(v1: reference, fld=4, val: integer)
1284[16]: VarRef(var[4]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1287[28]: ConstInt(val=0) -> integer
1292[32]: SetInt(v1: reference, fld=8, val: integer)
1295[16]: VarRef(var[4]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1298[28]: GenFreeStack(value=12, discard=12)
1302[16]: VarRef(var[4]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1305[28]: GenCall(size=0, to=668)
1312[16]: VarRef(var[4]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1315[28]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(13, [0]) keys [tp:5 desc:false field:4, ][16]
1318[28]: ConstText(_value="Five") -> text
1324[44]: GetRecord(data: reference, db_tp=16, no_keys=1) -> reference
1328[28]: GetInt(v1: reference, fld=8) -> integer
1331[20]: VarRef(var[4]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[14]
1334[32]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(13, [0]) keys [tp:5 desc:false field:4, ][16]
1337[32]: ConstText(_value="Seven") -> text
1344[48]: GetRecord(data: reference, db_tp=16, no_keys=1) -> reference
1348[32]: GetInt(v1: reference, fld=8) -> integer
1351[24]: AddInt(v1: integer, v2: integer) -> integer
1352[20]: GenFreeStack(value=4, discard=12)
1356[8]: VarInt(var[4]) -> integer
1359[12]: ConstInt(val=12) -> integer
1364[16]: EqInt(v1: integer, v2: integer) -> boolean
1365[9]: GenGotoFalseWord(jump=1371, if_false: boolean)
1368[8]: GenGotoWord(jump=1423)
1371[8]: Text()
1372[32]: ConstText(_value="Test failed ") -> text
1386[48]: AppendText(var[8], v1: text)
1389[32]: VarInt(var[4]) -> integer
1392[36]: ConstInt(val=0) -> integer
1397[40]: FormatInt(var[8], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1404[32]: ConstText(_value=" != 12") -> text
1412[48]: AppendText(var[8], v1: text)
1415[32]: VarText(var[8]) -> text
1418[48]: GenFreeStack(value=16, discard=24)
1422[24]: GenPanic(message: text)
1423[8]: GenReturn(ret=0, value=0, discard=8)

Execute test:
 1268:[4] Database(size=12, db_tp=14) -> ref(1,1,0)={v:[]}[4]
 1273:[16] VarRef(var[4]) -> ref(1,1,0)={v:[]}[16]
 1276:[28] ConstInt(val=0) -> 0[28]
 1281:[32] SetInt(v1=ref(1,1,0)[16], fld=4, val=0[28])
 1284:[16] VarRef(var[4]) -> ref(1,1,0)={v:[]}[16]
 1287:[28] ConstInt(val=0) -> 0[28]
 1292:[32] SetInt(v1=ref(1,1,0)[16], fld=8, val=0[28])
 1295:[16] VarRef(var[4]) -> ref(1,1,0)={v:[]}[16]
 1298:[28] GenFreeStack(value=12, discard=12)
 1302:[16] VarRef(var[4]) -> ref(1,1,0)={v:[]}[16]
 1305:[28] GenCall(size=0, to=668)
  668:[32] VarRef(var[16]) -> ref(1,1,0)={v:[]}[32]
  671:[44] NewRecord(data=ref(1,1,0)[32], parent_tp=14, fld=0) -> ref(1,13,0)[32]
  676:[44] VarRef(var[32]) -> ref(1,13,0)={}[44]
  679:[56] ConstText(_value="One") -> "One"[56]
  684:[72] SetText(v1=ref(1,13,0)[44], fld=4, val="One"[56])
  687:[44] VarRef(var[32]) -> ref(1,13,0)={t:"One"}[44]
  690:[56] ConstInt(val=1) -> 1[56]
  695:[60] SetInt(v1=ref(1,13,0)[44], fld=8, val=1[56])
  698:[44] VarRef(var[16]) -> ref(1,1,0)={v:[]}[44]
  701:[56] VarRef(var[32]) -> ref(1,13,0)={t:"One",v:1}[56]
  704:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,13,0)[56], parent_tp=14, fld=0)
  709:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[44]
  712:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,33,0)[44]
  717:[56] PutRef(var[32], value=ref(1,33,0)[44])
  720:[44] VarRef(var[32]) -> ref(1,33,0)={}[44]
  723:[56] ConstText(_value="Two") -> "Two"[56]
  728:[72] SetText(v1=ref(1,33,0)[44], fld=4, val="Two"[56])
  731:[44] VarRef(var[32]) -> ref(1,33,0)={t:"Two"}[44]
  734:[56] ConstInt(val=2) -> 2[56]
  739:[60] SetInt(v1=ref(1,33,0)[44], fld=8, val=2[56])
  742:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[44]
  745:[56] VarRef(var[32]) -> ref(1,33,0)={t:"Two",v:2}[56]
  748:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,33,0)[56], parent_tp=14, fld=0)
  753:[44] GenFreeStack(value=0, discard=12)
  757:[32] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[32]
  760:[44] NewRecord(data=ref(1,1,0)[32], parent_tp=14, fld=0) -> ref(1,37,0)[32]
  765:[44] VarRef(var[32]) -> ref(1,37,0)={}[44]
  768:[56] ConstText(_value="Three") -> "Three"[56]
  775:[72] SetText(v1=ref(1,37,0)[44], fld=4, val="Three"[56])
  778:[44] VarRef(var[32]) -> ref(1,37,0)={t:"Three"}[44]
  781:[56] ConstInt(val=3) -> 3[56]
  786:[60] SetInt(v1=ref(1,37,0)[44], fld=8, val=3[56])
  789:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[44]
  792:[56] VarRef(var[32]) -> ref(1,37,0)={t:"Three",v:3}[56]
  795:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,37,0)[56], parent_tp=14, fld=0)
  800:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[44]
  803:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,41,0)[44]
  808:[56] PutRef(var[32], value=ref(1,41,0)[44])
  811:[44] VarRef(var[32]) -> ref(1,41,0)={}[44]
  814:[56] ConstText(_value="Four") -> "Four"[56]
  820:[72] SetText(v1=ref(1,41,0)[44], fld=4, val="Four"[56])
  823:[44] VarRef(var[32]) -> ref(1,41,0)={t:"Four"}[44]
  826:[56] ConstInt(val=4) -> 4[56]
  831:[60] SetInt(v1=ref(1,41,0)[44], fld=8, val=4[56])
  834:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[44]
  837:[56] VarRef(var[32]) -> ref(1,41,0)={t:"Four",v:4}[56]
  840:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,41,0)[56], parent_tp=14, fld=0)
  845:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[44]
  848:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,45,0)[44]
  853:[56] PutRef(var[32], value=ref(1,45,0)[44])
  856:[44] VarRef(var[32]) -> ref(1,45,0)={}[44]
  859:[56] ConstText(_value="Five") -> "Five"[56]
  865:[72] SetText(v1=ref(1,45,0)[44], fld=4, val="Five"[56])
  868:[44] VarRef(var[32]) -> ref(1,45,0)={t:"Five"}[44]
  871:[56] ConstInt(val=5) -> 5[56]
  876:[60] SetInt(v1=ref(1,45,0)[44], fld=8, val=5[56])
  879:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[44]
  882:[56] VarRef(var[32]) -> ref(1,45,0)={t:"Five",v:5}[56]
  885:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,45,0)[56], parent_tp=14, fld=0)
  890:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[44]
  893:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,49,0)[44]
  898:[56] PutRef(var[32], value=ref(1,49,0)[44])
  901:[44] VarRef(var[32]) -> ref(1,49,0)={}[44]
  904:[56] ConstText(_value="Six") -> "Six"[56]
  909:[72] SetText(v1=ref(1,49,0)[44], fld=4, val="Six"[56])
  912:[44] VarRef(var[32]) -> ref(1,49,0)={t:"Six"}[44]
  915:[56] ConstInt(val=6) -> 6[56]
  920:[60] SetInt(v1=ref(1,49,0)[44], fld=8, val=6[56])
  923:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[44]
  926:[56] VarRef(var[32]) -> ref(1,49,0)={t:"Six",v:6}[56]
  929:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,49,0)[56], parent_tp=14, fld=0)
  934:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[44]
  937:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,53,0)[44]
  942:[56] PutRef(var[32], value=ref(1,53,0)[44])
  945:[44] VarRef(var[32]) -> ref(1,53,0)={}[44]
  948:[56] ConstText(_value="Seven") -> "Seven"[56]
  955:[72] SetText(v1=ref(1,53,0)[44], fld=4, val="Seven"[56])
  958:[44] VarRef(var[32]) -> ref(1,53,0)={t:"Seven"}[44]
  961:[56] ConstInt(val=7) -> 7[56]
  966:[60] SetInt(v1=ref(1,53,0)[44], fld=8, val=7[56])
  969:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[44]
  972:[56] VarRef(var[32]) -> ref(1,53,0)={t:"Seven",v:7}[56]
  975:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,53,0)[56], parent_tp=14, fld=0)
  980:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[44]
  983:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,57,0)[44]
  988:[56] PutRef(var[32], value=ref(1,57,0)[44])
  991:[44] VarRef(var[32]) -> ref(1,57,0)={}[44]
  994:[56] ConstText(_value="Eight") -> "Eight"[56]
 1001:[72] SetText(v1=ref(1,57,0)[44], fld=4, val="Eight"[56])
 1004:[44] VarRef(var[32]) -> ref(1,57,0)={t:"Eight"}[44]
 1007:[56] ConstInt(val=8) -> 8[56]
 1012:[60] SetInt(v1=ref(1,57,0)[44], fld=8, val=8[56])
 1015:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[44]
 1018:[56] VarRef(var[32]) -> ref(1,57,0)={t:"Eight",v:8}[56]
 1021:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,57,0)[56], parent_tp=14, fld=0)
 1026:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[44]
 1029:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,61,0)[44]
 1034:[56] PutRef(var[32], value=ref(1,61,0)[44])
 1037:[44] VarRef(var[32]) -> ref(1,61,0)={}[44]
 1040:[56] ConstText(_value="Nine") -> "Nine"[56]
 1046:[72] SetText(v1=ref(1,61,0)[44], fld=4, val="Nine"[56])
 1049:[44] VarRef(var[32]) -> ref(1,61,0)={t:"Nine"}[44]
 1052:[56] ConstInt(val=9) -> 9[56]
 1057:[60] SetInt(v1=ref(1,61,0)[44], fld=8, val=9[56])
 1060:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[44]
 1063:[56] VarRef(var[32]) -> ref(1,61,0)={t:"Nine",v:9}[56]
 1066:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,61,0)[56], parent_tp=14, fld=0)
 1071:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[44]
 1074:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,65,0)[44]
 1079:[56] PutRef(var[32], value=ref(1,65,0)[44])
 1082:[44] VarRef(var[32]) -> ref(1,65,0)={}[44]
 1085:[56] ConstText(_value="Ten") -> "Ten"[56]
 1090:[72] SetText(v1=ref(1,65,0)[44], fld=4, val="Ten"[56])
 1093:[44] VarRef(var[32]) -> ref(1,65,0)={t:"Ten"}[44]
 1096:[56] ConstInt(val=10) -> 10[56]
 1101:[60] SetInt(v1=ref(1,65,0)[44], fld=8, val=10[56])
 1104:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[44]
 1107:[56] VarRef(var[32]) -> ref(1,65,0)={t:"Ten",v:10}[56]
 1110:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,65,0)[56], parent_tp=14, fld=0)
 1115:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[44]
 1118:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,69,0)[44]
 1123:[56] PutRef(var[32], value=ref(1,69,0)[44])
 1126:[44] VarRef(var[32]) -> ref(1,69,0)={}[44]
 1129:[56] ConstText(_value="Eleven") -> "Eleven"[56]
 1137:[72] SetText(v1=ref(1,69,0)[44], fld=4, val="Eleven"[56])
 1140:[44] VarRef(var[32]) -> ref(1,69,0)={t:"Eleven"}[44]
 1143:[56] ConstInt(val=11) -> 11[56]
 1148:[60] SetInt(v1=ref(1,69,0)[44], fld=8, val=11[56])
 1151:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[44]
 1154:[56] VarRef(var[32]) -> ref(1,69,0)={t:"Eleven",v:11}[56]
 1157:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,69,0)[56], parent_tp=14, fld=0)
 1162:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[44]
 1165:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,90,0)[44]
 1170:[56] PutRef(var[32], value=ref(1,90,0)[44])
 1173:[44] VarRef(var[32]) -> ref(1,90,0)={}[44]
 1176:[56] ConstText(_value="Twelve") -> "Twelve"[56]
 1184:[72] SetText(v1=ref(1,90,0)[44], fld=4, val="Twelve"[56])
 1187:[44] VarRef(var[32]) -> ref(1,90,0)={t:"Twelve"}[44]
 1190:[56] ConstInt(val=12) -> 12[56]
 1195:[60] SetInt(v1=ref(1,90,0)[44], fld=8, val=12[56])
 1198:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[44]
 1201:[56] VarRef(var[32]) -> ref(1,90,0)={t:"Twelve",v:12}[56]
 1204:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,90,0)[56], parent_tp=14, fld=0)
 1209:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[44]
 1212:[56] NewRecord(data=ref(1,1,0)[44], parent_tp=14, fld=0) -> ref(1,94,0)[44]
 1217:[56] PutRef(var[32], value=ref(1,94,0)[44])
 1220:[44] VarRef(var[32]) -> ref(1,94,0)={}[44]
 1223:[56] ConstText(_value="Thirteen") -> "Thirteen"[56]
 1233:[72] SetText(v1=ref(1,94,0)[44], fld=4, val="Thirteen"[56])
 1236:[44] VarRef(var[32]) -> ref(1,94,0)={t:"Thirteen"}[44]
 1239:[56] ConstInt(val=13) -> 13[56]
 1244:[60] SetInt(v1=ref(1,94,0)[44], fld=8, val=13[56])
 1247:[44] VarRef(var[16]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[44]
 1250:[56] VarRef(var[32]) -> ref(1,94,0)={t:"Thirteen",v:13}[56]
 1253:[68] FinishRecord(data=ref(1,1,0)[44], rec=ref(1,94,0)[56], parent_tp=14, fld=0)
 1258:[44] GenFreeStack(value=0, discard=12)
 1262:[32] GenReturn(ret=1312[28], value=0, discard=16)
 1312:[16] VarRef(var[4]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[16]
 1315:[28] GetField(v1=ref(1,1,0)[16], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][16]
 1318:[28] ConstText(_value="Five") -> "Five"[28]
 1324:[44] GetRecord(data=ref(1,1,8)[16], db_tp=16, no_keys=1, key1="Five"[28]) -> ref(1,45,0)[16]
 1328:[28] GetInt(v1=ref(1,45,0)[16], fld=8) -> 5[16]
 1331:[20] VarRef(var[4]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[20]
 1334:[32] GetField(v1=ref(1,1,0)[20], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][20]
 1337:[32] ConstText(_value="Seven") -> "Seven"[32]
 1344:[48] GetRecord(data=ref(1,1,8)[20], db_tp=16, no_keys=1, key1="Seven"[32]) -> ref(1,53,0)[20]
 1348:[32] GetInt(v1=ref(1,53,0)[20], fld=8) -> 7[20]
 1351:[24] AddInt(v1=5[16], v2=7[20]) -> 12[16]
 1352:[20] GenFreeStack(value=4, discard=12)
 1356:[8] VarInt(var[4]) -> 12[8]
 1359:[12] ConstInt(val=12) -> 12[12]
 1364:[16] EqInt(v1=12[8], v2=12[12]) -> true[8]
 1365:[9] GenGotoFalseWord(jump=1371, if_false=true[8])
 1368:[8] GenGotoWord(jump=1423)
 1423:[8] GenReturn(ret=4294967295[0], value=0, discard=8)
Finished
