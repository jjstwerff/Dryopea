struct Count { t: text, v: integer};
struct Counting { v: vector<Count>, h: hash<Count[t]> };
fn fill(c: Counting) {
  c.v = [
    {t:"One", v:1},
    {t:"Two", v:2},
  ];
  c.v += [
    {t:"Three", v:3},
    {t:"Four", v:4},
    {t:"Five", v:5},
    {t:"Six", v:6},
    {t:"Seven", v:7},
    {t:"Eight", v:8},
    {t:"Nine", v:9},
    {t:"Ten", v:10},
    {t:"Eleven", v:11},
    {t:"Twelve", v:12},
    {t:"Thirteen", v:13}
  ];
}

pub fn test() {
    test_value = {c = Counting {}; fill(c); c.h["Five"].v + c.h["Seven"].v};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}
Type 12:Count[12]:
    t:text[4]
    v:integer[8]

Type 13:Counting[12]:
    v:array<Count>[4] other [1]
    h:hash<Count[t]>[8] other [65535]

Type 14:array<Count>[4]:Array(12)

Type 15:hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ]

fn fill(c:Counting) {#1 block
  {#2 vector
    _elm_1:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#3 object
      OpSetText(_elm_1, 4i32, "One");
      OpSetInt(_elm_1, 8i32, 1i32);
    }#3;
    OpFinishRecord(c, _elm_1, 13i32, 0i32);
    _elm_1:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#4 object
      OpSetText(_elm_1, 4i32, "Two");
      OpSetInt(_elm_1, 8i32, 2i32);
    }#4;
    OpFinishRecord(c, _elm_1, 13i32, 0i32);
  }#2;
  {#5 vector
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#6 object
      OpSetText(_elm_2, 4i32, "Three");
      OpSetInt(_elm_2, 8i32, 3i32);
    }#6;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#7 object
      OpSetText(_elm_2, 4i32, "Four");
      OpSetInt(_elm_2, 8i32, 4i32);
    }#7;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#8 object
      OpSetText(_elm_2, 4i32, "Five");
      OpSetInt(_elm_2, 8i32, 5i32);
    }#8;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#9 object
      OpSetText(_elm_2, 4i32, "Six");
      OpSetInt(_elm_2, 8i32, 6i32);
    }#9;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#10 object
      OpSetText(_elm_2, 4i32, "Seven");
      OpSetInt(_elm_2, 8i32, 7i32);
    }#10;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#11 object
      OpSetText(_elm_2, 4i32, "Eight");
      OpSetInt(_elm_2, 8i32, 8i32);
    }#11;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#12 object
      OpSetText(_elm_2, 4i32, "Nine");
      OpSetInt(_elm_2, 8i32, 9i32);
    }#12;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#13 object
      OpSetText(_elm_2, 4i32, "Ten");
      OpSetInt(_elm_2, 8i32, 10i32);
    }#13;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#14 object
      OpSetText(_elm_2, 4i32, "Eleven");
      OpSetInt(_elm_2, 8i32, 11i32);
    }#14;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#15 object
      OpSetText(_elm_2, 4i32, "Twelve");
      OpSetInt(_elm_2, 8i32, 12i32);
    }#15;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:ref(Count)["c"] = OpNewRecord(c, 13i32, 0i32);
    {#16 object
      OpSetText(_elm_2, 4i32, "Thirteen");
      OpSetInt(_elm_2, 8i32, 13i32);
    }#16;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
  }#5;
}#1

byte-code for hash:fill(c: ref(Counting)[0])
 655[12]: return-address
 655[16]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 658[28]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 663[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 666[40]: ConstText(_value="One") -> text
 671[56]: SetText(v1: ref(reference), fld=4, val: text)
 674[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 677[40]: ConstInt(val=1) -> integer
 682[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 685[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 688[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 691[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 696[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 699[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 704[40]: PutRef(var[16], value: ref(reference))
 707[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 710[40]: ConstText(_value="Two") -> text
 715[56]: SetText(v1: ref(reference), fld=4, val: text)
 718[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 721[40]: ConstInt(val=2) -> integer
 726[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 729[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 732[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_1[16]:ref(Count)["c"] in 2
 735[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 740[28]: FreeStack(value=0, discard=12)
 744[16]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 747[28]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 752[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 755[40]: ConstText(_value="Three") -> text
 762[56]: SetText(v1: ref(reference), fld=4, val: text)
 765[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 768[40]: ConstInt(val=3) -> integer
 773[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 776[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 779[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 782[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 787[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 790[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 795[40]: PutRef(var[16], value: ref(reference))
 798[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 801[40]: ConstText(_value="Four") -> text
 807[56]: SetText(v1: ref(reference), fld=4, val: text)
 810[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 813[40]: ConstInt(val=4) -> integer
 818[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 821[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 824[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 827[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 832[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 835[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 840[40]: PutRef(var[16], value: ref(reference))
 843[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 846[40]: ConstText(_value="Five") -> text
 852[56]: SetText(v1: ref(reference), fld=4, val: text)
 855[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 858[40]: ConstInt(val=5) -> integer
 863[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 866[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 869[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 872[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 877[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 880[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 885[40]: PutRef(var[16], value: ref(reference))
 888[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 891[40]: ConstText(_value="Six") -> text
 896[56]: SetText(v1: ref(reference), fld=4, val: text)
 899[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 902[40]: ConstInt(val=6) -> integer
 907[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 910[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 913[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 916[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 921[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 924[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 929[40]: PutRef(var[16], value: ref(reference))
 932[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 935[40]: ConstText(_value="Seven") -> text
 942[56]: SetText(v1: ref(reference), fld=4, val: text)
 945[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 948[40]: ConstInt(val=7) -> integer
 953[44]: SetInt(v1: ref(reference), fld=8, val: integer)
 956[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 959[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 962[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
 967[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
 970[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
 975[40]: PutRef(var[16], value: ref(reference))
 978[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 981[40]: ConstText(_value="Eight") -> text
 988[56]: SetText(v1: ref(reference), fld=4, val: text)
 991[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
 994[40]: ConstInt(val=8) -> integer
 999[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1002[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1005[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1008[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1013[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1016[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1021[40]: PutRef(var[16], value: ref(reference))
1024[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1027[40]: ConstText(_value="Nine") -> text
1033[56]: SetText(v1: ref(reference), fld=4, val: text)
1036[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1039[40]: ConstInt(val=9) -> integer
1044[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1047[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1050[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1053[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1058[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1061[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1066[40]: PutRef(var[16], value: ref(reference))
1069[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1072[40]: ConstText(_value="Ten") -> text
1077[56]: SetText(v1: ref(reference), fld=4, val: text)
1080[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1083[40]: ConstInt(val=10) -> integer
1088[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1091[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1094[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1097[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1102[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1105[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1110[40]: PutRef(var[16], value: ref(reference))
1113[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1116[40]: ConstText(_value="Eleven") -> text
1124[56]: SetText(v1: ref(reference), fld=4, val: text)
1127[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1130[40]: ConstInt(val=11) -> integer
1135[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1138[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1141[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1144[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1149[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1152[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1157[40]: PutRef(var[16], value: ref(reference))
1160[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1163[40]: ConstText(_value="Twelve") -> text
1171[56]: SetText(v1: ref(reference), fld=4, val: text)
1174[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1177[40]: ConstInt(val=12) -> integer
1182[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1185[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1188[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1191[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1196[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1199[40]: NewRecord(data: ref(reference), parent_tp=13, fld=0) -> ref(reference)
1204[40]: PutRef(var[16], value: ref(reference))
1207[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1210[40]: ConstText(_value="Thirteen") -> text
1220[56]: SetText(v1: ref(reference), fld=4, val: text)
1223[28]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1226[40]: ConstInt(val=13) -> integer
1231[44]: SetInt(v1: ref(reference), fld=8, val: integer)
1234[28]: VarRef(var[0]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[0]:ref(Counting) in 0
1237[40]: VarRef(var[16]) -> ref(reference) type=Count[12]:{t:text[4], v:integer[8]}[12] var=_elm_2[16]:ref(Count)["c"] in 5
1240[52]: FinishRecord(data: ref(reference), rec: ref(reference), parent_tp=13, fld=0)
1245[28]: FreeStack(value=0, discard=12)
1249[16]: Return(ret=12, value=0, discard=16)

fn test() {#1 block
  __ref_1:ref(Counting) = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    c:ref(Counting)["__ref_1"] = {#3 object
      OpDatabase(__ref_1, 13i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      OpSetInt(__ref_1, 8i32, 0i32);
      __ref_1;
    }#3:ref(Counting)["__ref_1"];
    fill(c);
    OpAddInt(OpGetInt(OpGetRecord(OpGetField(c, 8i32, 15i32), 15i32, 1i32, "Five"), 8i32), OpGetInt(OpGetRecord(OpGetField(c, 8i32, 15i32), 15i32, 1i32, "Seven"), 8i32));
  }#2:integer;
  if OpEqInt(test_value, 12i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 12");
    __work_1;
  }#4:text);
}#1

byte-code for hash:test()
1255[0]: return-address
1255[4]: ConvRefFromNull() -> ref(reference) var=__ref_1[4]:ref(Counting) in 1
1256[16]: Text() var=__work_1[16]:text in 1
1257[40]: Database(var[4], db_tp=13) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[40]:ref(Counting)["__ref_1"] in 2
1262[40]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=__ref_1[4]:ref(Counting) in 1
1265[52]: ConstInt(val=0) -> integer
1270[56]: SetInt(v1: ref(reference), fld=4, val: integer)
1273[40]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=__ref_1[4]:ref(Counting) in 1
1276[52]: ConstInt(val=0) -> integer
1281[56]: SetInt(v1: ref(reference), fld=8, val: integer)
1284[40]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=__ref_1[4]:ref(Counting) in 1
1287[52]: VarRef(var[40]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[40]:ref(Counting)["__ref_1"] in 2
1290[64]: Call(size=0, to=655)
1297[52]: VarRef(var[40]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[40]:ref(Counting)["__ref_1"] in 2
1300[64]: GetField(v1: ref(reference), fld=8) -> ref(reference) type=hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ][15]
1303[64]: ConstText(_value="Five") -> text
1309[80]: GetRecord(data: ref(reference), db_tp=15, no_keys=1) -> ref(reference)
1313[64]: GetInt(v1: ref(reference), fld=8) -> integer
1316[56]: VarRef(var[40]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=c[40]:ref(Counting)["__ref_1"] in 2
1319[68]: GetField(v1: ref(reference), fld=8) -> ref(reference) type=hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ][15]
1322[68]: ConstText(_value="Seven") -> text
1329[84]: GetRecord(data: ref(reference), db_tp=15, no_keys=1) -> ref(reference)
1333[68]: GetInt(v1: ref(reference), fld=8) -> integer
1336[60]: AddInt(v1: integer, v2: integer) -> integer
1337[56]: FreeStack(value=4, discard=16) type=integer[4]:Base[0]
1341[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
1344[48]: ConstInt(val=12) -> integer
1349[52]: EqInt(v1: integer, v2: integer) -> boolean
1350[45]: GotoFalseWord(jump=1356, if_false: boolean)
1353[44]: GotoWord(jump=1406)
1356[44]: ClearText(var[16]) var=__work_1[16]:text in 1
1359[44]: ConstText(_value="Test failed ") -> text
1373[60]: AppendText(var[16], v1: text)
1376[44]: VarInt(var[40]) -> integer var=test_value[40]:integer in 1
1379[48]: ConstInt(val=0) -> integer
1384[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1391[44]: ConstText(_value=" != 12") -> text
1399[60]: AppendText(var[16], v1: text)
1402[44]: VarText(var[16]) -> text var=__work_1[16]:text in 1
1405[60]: Panic(message: text)
1406[44]: FreeText(var[16])
1409[44]: VarRef(var[4]) -> ref(reference) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13] var=__ref_1[4]:ref(Counting) in 1
1412[56]: FreeRef(v1: ref(reference))
1413[44]: Return(ret=0, value=0, discard=44)

Execute test:
 1255:[8] ConvRefFromNull() -> ref(1,0,0)[8]
 1256:[20] Text()
 1257:[44] Database(var[8], db_tp=13)
 1262:[44] VarRef(var[8]) -> ref(1,1,0)={v:[]}[44]
 1265:[56] ConstInt(val=0) -> 0[56]
 1270:[60] SetInt(v1=ref(1,1,0)[44], fld=4, val=0[56])
 1273:[44] VarRef(var[8]) -> ref(1,1,0)={v:[]}[44]
 1276:[56] ConstInt(val=0) -> 0[56]
 1281:[60] SetInt(v1=ref(1,1,0)[44], fld=8, val=0[56])
 1284:[44] VarRef(var[8]) -> ref(1,1,0)={v:[]}[44]
 1287:[56] VarRef(var[44]) -> ref(1,1,0)={v:[]}[56]
 1290:[68] Call(size=0, to=655)
  655:[72] VarRef(var[56]) -> ref(1,1,0)={v:[]}[72]
  658:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,13,0)[72]
  663:[84] VarRef(var[72]) -> ref(1,13,0)={}[84]
  666:[96] ConstText(_value="One") -> "One"[96]
  671:[112] SetText(v1=ref(1,13,0)[84], fld=4, val="One"[96])
  674:[84] VarRef(var[72]) -> ref(1,13,0)={t:"One"}[84]
  677:[96] ConstInt(val=1) -> 1[96]
  682:[100] SetInt(v1=ref(1,13,0)[84], fld=8, val=1[96])
  685:[84] VarRef(var[56]) -> ref(1,1,0)={v:[]}[84]
  688:[96] VarRef(var[72]) -> ref(1,13,0)={t:"One",v:1}[96]
  691:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,13,0)[96], parent_tp=13, fld=0)
  696:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[84]
  699:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,33,0)[84]
  704:[96] PutRef(var[72], value=ref(1,33,0)[84])
  707:[84] VarRef(var[72]) -> ref(1,33,0)={}[84]
  710:[96] ConstText(_value="Two") -> "Two"[96]
  715:[112] SetText(v1=ref(1,33,0)[84], fld=4, val="Two"[96])
  718:[84] VarRef(var[72]) -> ref(1,33,0)={t:"Two"}[84]
  721:[96] ConstInt(val=2) -> 2[96]
  726:[100] SetInt(v1=ref(1,33,0)[84], fld=8, val=2[96])
  729:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[84]
  732:[96] VarRef(var[72]) -> ref(1,33,0)={t:"Two",v:2}[96]
  735:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,33,0)[96], parent_tp=13, fld=0)
  740:[84] FreeStack(value=0, discard=12)
  744:[72] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[72]
  747:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,37,0)[72]
  752:[84] VarRef(var[72]) -> ref(1,37,0)={}[84]
  755:[96] ConstText(_value="Three") -> "Three"[96]
  762:[112] SetText(v1=ref(1,37,0)[84], fld=4, val="Three"[96])
  765:[84] VarRef(var[72]) -> ref(1,37,0)={t:"Three"}[84]
  768:[96] ConstInt(val=3) -> 3[96]
  773:[100] SetInt(v1=ref(1,37,0)[84], fld=8, val=3[96])
  776:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[84]
  779:[96] VarRef(var[72]) -> ref(1,37,0)={t:"Three",v:3}[96]
  782:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,37,0)[96], parent_tp=13, fld=0)
  787:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[84]
  790:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,41,0)[84]
  795:[96] PutRef(var[72], value=ref(1,41,0)[84])
  798:[84] VarRef(var[72]) -> ref(1,41,0)={}[84]
  801:[96] ConstText(_value="Four") -> "Four"[96]
  807:[112] SetText(v1=ref(1,41,0)[84], fld=4, val="Four"[96])
  810:[84] VarRef(var[72]) -> ref(1,41,0)={t:"Four"}[84]
  813:[96] ConstInt(val=4) -> 4[96]
  818:[100] SetInt(v1=ref(1,41,0)[84], fld=8, val=4[96])
  821:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[84]
  824:[96] VarRef(var[72]) -> ref(1,41,0)={t:"Four",v:4}[96]
  827:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,41,0)[96], parent_tp=13, fld=0)
  832:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[84]
  835:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,45,0)[84]
  840:[96] PutRef(var[72], value=ref(1,45,0)[84])
  843:[84] VarRef(var[72]) -> ref(1,45,0)={}[84]
  846:[96] ConstText(_value="Five") -> "Five"[96]
  852:[112] SetText(v1=ref(1,45,0)[84], fld=4, val="Five"[96])
  855:[84] VarRef(var[72]) -> ref(1,45,0)={t:"Five"}[84]
  858:[96] ConstInt(val=5) -> 5[96]
  863:[100] SetInt(v1=ref(1,45,0)[84], fld=8, val=5[96])
  866:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[84]
  869:[96] VarRef(var[72]) -> ref(1,45,0)={t:"Five",v:5}[96]
  872:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,45,0)[96], parent_tp=13, fld=0)
  877:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[84]
  880:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,49,0)[84]
  885:[96] PutRef(var[72], value=ref(1,49,0)[84])
  888:[84] VarRef(var[72]) -> ref(1,49,0)={}[84]
  891:[96] ConstText(_value="Six") -> "Six"[96]
  896:[112] SetText(v1=ref(1,49,0)[84], fld=4, val="Six"[96])
  899:[84] VarRef(var[72]) -> ref(1,49,0)={t:"Six"}[84]
  902:[96] ConstInt(val=6) -> 6[96]
  907:[100] SetInt(v1=ref(1,49,0)[84], fld=8, val=6[96])
  910:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[84]
  913:[96] VarRef(var[72]) -> ref(1,49,0)={t:"Six",v:6}[96]
  916:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,49,0)[96], parent_tp=13, fld=0)
  921:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[84]
  924:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,53,0)[84]
  929:[96] PutRef(var[72], value=ref(1,53,0)[84])
  932:[84] VarRef(var[72]) -> ref(1,53,0)={}[84]
  935:[96] ConstText(_value="Seven") -> "Seven"[96]
  942:[112] SetText(v1=ref(1,53,0)[84], fld=4, val="Seven"[96])
  945:[84] VarRef(var[72]) -> ref(1,53,0)={t:"Seven"}[84]
  948:[96] ConstInt(val=7) -> 7[96]
  953:[100] SetInt(v1=ref(1,53,0)[84], fld=8, val=7[96])
  956:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[84]
  959:[96] VarRef(var[72]) -> ref(1,53,0)={t:"Seven",v:7}[96]
  962:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,53,0)[96], parent_tp=13, fld=0)
  967:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[84]
  970:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,57,0)[84]
  975:[96] PutRef(var[72], value=ref(1,57,0)[84])
  978:[84] VarRef(var[72]) -> ref(1,57,0)={}[84]
  981:[96] ConstText(_value="Eight") -> "Eight"[96]
  988:[112] SetText(v1=ref(1,57,0)[84], fld=4, val="Eight"[96])
  991:[84] VarRef(var[72]) -> ref(1,57,0)={t:"Eight"}[84]
  994:[96] ConstInt(val=8) -> 8[96]
  999:[100] SetInt(v1=ref(1,57,0)[84], fld=8, val=8[96])
 1002:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[84]
 1005:[96] VarRef(var[72]) -> ref(1,57,0)={t:"Eight",v:8}[96]
 1008:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,57,0)[96], parent_tp=13, fld=0)
 1013:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[84]
 1016:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,61,0)[84]
 1021:[96] PutRef(var[72], value=ref(1,61,0)[84])
 1024:[84] VarRef(var[72]) -> ref(1,61,0)={}[84]
 1027:[96] ConstText(_value="Nine") -> "Nine"[96]
 1033:[112] SetText(v1=ref(1,61,0)[84], fld=4, val="Nine"[96])
 1036:[84] VarRef(var[72]) -> ref(1,61,0)={t:"Nine"}[84]
 1039:[96] ConstInt(val=9) -> 9[96]
 1044:[100] SetInt(v1=ref(1,61,0)[84], fld=8, val=9[96])
 1047:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[84]
 1050:[96] VarRef(var[72]) -> ref(1,61,0)={t:"Nine",v:9}[96]
 1053:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,61,0)[96], parent_tp=13, fld=0)
 1058:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[84]
 1061:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,65,0)[84]
 1066:[96] PutRef(var[72], value=ref(1,65,0)[84])
 1069:[84] VarRef(var[72]) -> ref(1,65,0)={}[84]
 1072:[96] ConstText(_value="Ten") -> "Ten"[96]
 1077:[112] SetText(v1=ref(1,65,0)[84], fld=4, val="Ten"[96])
 1080:[84] VarRef(var[72]) -> ref(1,65,0)={t:"Ten"}[84]
 1083:[96] ConstInt(val=10) -> 10[96]
 1088:[100] SetInt(v1=ref(1,65,0)[84], fld=8, val=10[96])
 1091:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[84]
 1094:[96] VarRef(var[72]) -> ref(1,65,0)={t:"Ten",v:10}[96]
 1097:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,65,0)[96], parent_tp=13, fld=0)
 1102:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[84]
 1105:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,69,0)[84]
 1110:[96] PutRef(var[72], value=ref(1,69,0)[84])
 1113:[84] VarRef(var[72]) -> ref(1,69,0)={}[84]
 1116:[96] ConstText(_value="Eleven") -> "Eleven"[96]
 1124:[112] SetText(v1=ref(1,69,0)[84], fld=4, val="Eleven"[96])
 1127:[84] VarRef(var[72]) -> ref(1,69,0)={t:"Eleven"}[84]
 1130:[96] ConstInt(val=11) -> 11[96]
 1135:[100] SetInt(v1=ref(1,69,0)[84], fld=8, val=11[96])
 1138:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[84]
 1141:[96] VarRef(var[72]) -> ref(1,69,0)={t:"Eleven",v:11}[96]
 1144:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,69,0)[96], parent_tp=13, fld=0)
 1149:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[84]
 1152:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,90,0)[84]
 1157:[96] PutRef(var[72], value=ref(1,90,0)[84])
 1160:[84] VarRef(var[72]) -> ref(1,90,0)={}[84]
 1163:[96] ConstText(_value="Twelve") -> "Twelve"[96]
 1171:[112] SetText(v1=ref(1,90,0)[84], fld=4, val="Twelve"[96])
 1174:[84] VarRef(var[72]) -> ref(1,90,0)={t:"Twelve"}[84]
 1177:[96] ConstInt(val=12) -> 12[96]
 1182:[100] SetInt(v1=ref(1,90,0)[84], fld=8, val=12[96])
 1185:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[84]
 1188:[96] VarRef(var[72]) -> ref(1,90,0)={t:"Twelve",v:12}[96]
 1191:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,90,0)[96], parent_tp=13, fld=0)
 1196:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[84]
 1199:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,94,0)[84]
 1204:[96] PutRef(var[72], value=ref(1,94,0)[84])
 1207:[84] VarRef(var[72]) -> ref(1,94,0)={}[84]
 1210:[96] ConstText(_value="Thirteen") -> "Thirteen"[96]
 1220:[112] SetText(v1=ref(1,94,0)[84], fld=4, val="Thirteen"[96])
 1223:[84] VarRef(var[72]) -> ref(1,94,0)={t:"Thirteen"}[84]
 1226:[96] ConstInt(val=13) -> 13[96]
 1231:[100] SetInt(v1=ref(1,94,0)[84], fld=8, val=13[96])
 1234:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[84]
 1237:[96] VarRef(var[72]) -> ref(1,94,0)={t:"Thirteen",v:13}[96]
 1240:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,94,0)[96], parent_tp=13, fld=0)
 1245:[84] FreeStack(value=0, discard=12)
 1249:[72] Return(ret=1297[68], value=0, discard=16)
 1297:[56] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[56]
 1300:[68] GetField(v1=ref(1,1,0)[56], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][56]
 1303:[68] ConstText(_value="Five") -> "Five"[68]
 1309:[84] GetRecord(data=ref(1,1,8)[56], db_tp=15, no_keys=1, key1="Five"[68]) -> ref(1,45,0)[56]
 1313:[68] GetInt(v1=ref(1,45,0)[56], fld=8) -> 5[56]
 1316:[60] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[60]
 1319:[72] GetField(v1=ref(1,1,0)[60], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][60]
 1322:[72] ConstText(_value="Seven") -> "Seven"[72]
 1329:[88] GetRecord(data=ref(1,1,8)[60], db_tp=15, no_keys=1, key1="Seven"[72]) -> ref(1,53,0)[60]
 1333:[72] GetInt(v1=ref(1,53,0)[60], fld=8) -> 7[60]
 1336:[64] AddInt(v1=5[56], v2=7[60]) -> 12[56]
 1337:[60] FreeStack(value=4, discard=16)
 1341:[48] VarInt(var[44]) -> 12[48]
 1344:[52] ConstInt(val=12) -> 12[52]
 1349:[56] EqInt(v1=12[48], v2=12[52]) -> true[48]
 1350:[49] GotoFalseWord(jump=1356, if_false=true[48])
 1353:[48] GotoWord(jump=1406)
 1406:[48] FreeText(var[20])
 1409:[48] VarRef(var[8]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[48]
 1412:[60] FreeRef(v1=ref(1,1,0)[48])
 1413:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
