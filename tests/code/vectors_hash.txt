struct Count { t: text, v: integer};
struct Counting { v: vector<Count>, h: hash<Count[t]> };
fn fill(c: Counting) {
  c.v = [
    {t:"One", v:1},
    {t:"Two", v:2},
  ];
  c.v += [
    {t:"Three", v:3},
    {t:"Four", v:4},
    {t:"Five", v:5},
    {t:"Six", v:6},
    {t:"Seven", v:7},
    {t:"Eight", v:8},
    {t:"Nine", v:9},
    {t:"Ten", v:10},
    {t:"Eleven", v:11},
    {t:"Twelve", v:12},
    {t:"Thirteen", v:13}
  ];
}

pub fn test() {
    test_value = {c = Counting {}; fill(c); c.h["Five"].v + c.h["Seven"].v};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}
Type 12:Count[12]:
    t:text[4]
    v:integer[8]

Type 13:Counting[12]:
    v:array<Count>[4] other [1]
    h:hash<Count[t]>[8] other [65535]

Type 14:array<Count>[4]:Array(12)

Type 15:hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ]

fn fill(c:Counting) {#1 block
  {#2 vector
    _elm_1:Count = OpNewRecord(c, 13i32, 0i32);
    {#3 object
      OpSetText(_elm_1, 4i32, "One");
      OpSetInt(_elm_1, 8i32, 1i32);
    }#3;
    OpFinishRecord(c, _elm_1, 13i32, 0i32);
    _elm_1:Count = OpNewRecord(c, 13i32, 0i32);
    {#4 object
      OpSetText(_elm_1, 4i32, "Two");
      OpSetInt(_elm_1, 8i32, 2i32);
    }#4;
    OpFinishRecord(c, _elm_1, 13i32, 0i32);
  }#2;
  {#5 vector
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#6 object
      OpSetText(_elm_2, 4i32, "Three");
      OpSetInt(_elm_2, 8i32, 3i32);
    }#6;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#7 object
      OpSetText(_elm_2, 4i32, "Four");
      OpSetInt(_elm_2, 8i32, 4i32);
    }#7;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#8 object
      OpSetText(_elm_2, 4i32, "Five");
      OpSetInt(_elm_2, 8i32, 5i32);
    }#8;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#9 object
      OpSetText(_elm_2, 4i32, "Six");
      OpSetInt(_elm_2, 8i32, 6i32);
    }#9;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#10 object
      OpSetText(_elm_2, 4i32, "Seven");
      OpSetInt(_elm_2, 8i32, 7i32);
    }#10;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#11 object
      OpSetText(_elm_2, 4i32, "Eight");
      OpSetInt(_elm_2, 8i32, 8i32);
    }#11;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#12 object
      OpSetText(_elm_2, 4i32, "Nine");
      OpSetInt(_elm_2, 8i32, 9i32);
    }#12;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#13 object
      OpSetText(_elm_2, 4i32, "Ten");
      OpSetInt(_elm_2, 8i32, 10i32);
    }#13;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#14 object
      OpSetText(_elm_2, 4i32, "Eleven");
      OpSetInt(_elm_2, 8i32, 11i32);
    }#14;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#15 object
      OpSetText(_elm_2, 4i32, "Twelve");
      OpSetInt(_elm_2, 8i32, 12i32);
    }#15;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#16 object
      OpSetText(_elm_2, 4i32, "Thirteen");
      OpSetInt(_elm_2, 8i32, 13i32);
    }#16;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
  }#5;
}#1

byte-code for hash:fill(c: Counting[0])
 692[12]: return-address
 692[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 695[28]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 700[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 703[40]: ConstText(_value="One") -> text
 708[56]: SetText(v1: reference, fld=4, val: text)
 711[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 714[40]: ConstInt(val=1) -> integer
 719[44]: SetInt(v1: reference, fld=8, val: integer)
 722[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 725[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 728[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 733[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 736[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 741[40]: PutRef(var[16], value: reference)
 744[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 747[40]: ConstText(_value="Two") -> text
 752[56]: SetText(v1: reference, fld=4, val: text)
 755[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 758[40]: ConstInt(val=2) -> integer
 763[44]: SetInt(v1: reference, fld=8, val: integer)
 766[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 769[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 772[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 777[28]: FreeStack(value=0, discard=12)
 781[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 784[28]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 789[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 792[40]: ConstText(_value="Three") -> text
 799[56]: SetText(v1: reference, fld=4, val: text)
 802[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 805[40]: ConstInt(val=3) -> integer
 810[44]: SetInt(v1: reference, fld=8, val: integer)
 813[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 816[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 819[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 824[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 827[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 832[40]: PutRef(var[16], value: reference)
 835[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 838[40]: ConstText(_value="Four") -> text
 844[56]: SetText(v1: reference, fld=4, val: text)
 847[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 850[40]: ConstInt(val=4) -> integer
 855[44]: SetInt(v1: reference, fld=8, val: integer)
 858[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 861[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 864[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 869[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 872[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 877[40]: PutRef(var[16], value: reference)
 880[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 883[40]: ConstText(_value="Five") -> text
 889[56]: SetText(v1: reference, fld=4, val: text)
 892[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 895[40]: ConstInt(val=5) -> integer
 900[44]: SetInt(v1: reference, fld=8, val: integer)
 903[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 906[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 909[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 914[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 917[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 922[40]: PutRef(var[16], value: reference)
 925[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 928[40]: ConstText(_value="Six") -> text
 933[56]: SetText(v1: reference, fld=4, val: text)
 936[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 939[40]: ConstInt(val=6) -> integer
 944[44]: SetInt(v1: reference, fld=8, val: integer)
 947[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 950[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 953[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 958[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 961[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 966[40]: PutRef(var[16], value: reference)
 969[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 972[40]: ConstText(_value="Seven") -> text
 979[56]: SetText(v1: reference, fld=4, val: text)
 982[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 985[40]: ConstInt(val=7) -> integer
 990[44]: SetInt(v1: reference, fld=8, val: integer)
 993[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 996[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 999[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1004[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1007[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1012[40]: PutRef(var[16], value: reference)
1015[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1018[40]: ConstText(_value="Eight") -> text
1025[56]: SetText(v1: reference, fld=4, val: text)
1028[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1031[40]: ConstInt(val=8) -> integer
1036[44]: SetInt(v1: reference, fld=8, val: integer)
1039[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1042[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1045[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1050[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1053[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1058[40]: PutRef(var[16], value: reference)
1061[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1064[40]: ConstText(_value="Nine") -> text
1070[56]: SetText(v1: reference, fld=4, val: text)
1073[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1076[40]: ConstInt(val=9) -> integer
1081[44]: SetInt(v1: reference, fld=8, val: integer)
1084[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1087[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1090[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1095[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1098[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1103[40]: PutRef(var[16], value: reference)
1106[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1109[40]: ConstText(_value="Ten") -> text
1114[56]: SetText(v1: reference, fld=4, val: text)
1117[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1120[40]: ConstInt(val=10) -> integer
1125[44]: SetInt(v1: reference, fld=8, val: integer)
1128[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1131[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1134[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1139[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1142[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1147[40]: PutRef(var[16], value: reference)
1150[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1153[40]: ConstText(_value="Eleven") -> text
1161[56]: SetText(v1: reference, fld=4, val: text)
1164[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1167[40]: ConstInt(val=11) -> integer
1172[44]: SetInt(v1: reference, fld=8, val: integer)
1175[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1178[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1181[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1186[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1189[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1194[40]: PutRef(var[16], value: reference)
1197[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1200[40]: ConstText(_value="Twelve") -> text
1208[56]: SetText(v1: reference, fld=4, val: text)
1211[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1214[40]: ConstInt(val=12) -> integer
1219[44]: SetInt(v1: reference, fld=8, val: integer)
1222[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1225[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1228[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1233[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1236[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1241[40]: PutRef(var[16], value: reference)
1244[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1247[40]: ConstText(_value="Thirteen") -> text
1257[56]: SetText(v1: reference, fld=4, val: text)
1260[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1263[40]: ConstInt(val=13) -> integer
1268[44]: SetInt(v1: reference, fld=8, val: integer)
1271[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1274[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1277[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1282[28]: FreeStack(value=0, discard=12)
1286[16]: Return(ret=12, value=0, discard=16)

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    c:Counting = {#3 object
      _val_1:Counting = OpDatabase(12i32, 13i32);
      OpSetInt(_val_1, 4i32, 0i32);
      OpSetInt(_val_1, 8i32, 0i32);
      _val_1;
    }#3:Counting;
    fill(c);
    OpAddInt(OpGetInt(OpGetRecord(OpGetField(c, 8i32, 15i32), 15i32, 1i32, "Five"), 8i32), OpGetInt(OpGetRecord(OpGetField(c, 8i32, 15i32), 15i32, 1i32, "Seven"), 8i32));
  }#2:integer;
  if OpEqInt(test_value, 12i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 12");
    __work_1;
  }#4:text);
}#1

byte-code for hash:test()
1292[0]: return-address
1292[4]: Text()
1293[28]: Database(size=12, db_tp=13) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1298[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1301[52]: ConstInt(val=0) -> integer
1306[56]: SetInt(v1: reference, fld=4, val: integer)
1309[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1312[52]: ConstInt(val=0) -> integer
1317[56]: SetInt(v1: reference, fld=8, val: integer)
1320[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1323[52]: FreeStack(value=12, discard=24) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1327[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1330[52]: Call(size=0, to=692)
1337[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1340[52]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ][15]
1343[52]: ConstText(_value="Five") -> text
1349[68]: GetRecord(data: reference, db_tp=15, no_keys=1) -> reference
1353[52]: GetInt(v1: reference, fld=8) -> integer
1356[44]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1359[56]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ][15]
1362[56]: ConstText(_value="Seven") -> text
1369[72]: GetRecord(data: reference, db_tp=15, no_keys=1) -> reference
1373[56]: GetInt(v1: reference, fld=8) -> integer
1376[48]: AddInt(v1: integer, v2: integer) -> integer
1377[44]: FreeStack(value=4, discard=16) type=integer[4]:Base[0]
1381[32]: VarInt(var[28]) -> integer
1384[36]: ConstInt(val=12) -> integer
1389[40]: EqInt(v1: integer, v2: integer) -> boolean
1390[33]: GotoFalseWord(jump=1396, if_false: boolean)
1393[32]: GotoWord(jump=1446)
1396[32]: ClearText(var[4])
1399[32]: ConstText(_value="Test failed ") -> text
1413[48]: AppendText(var[4], v1: text)
1416[32]: VarInt(var[28]) -> integer
1419[36]: ConstInt(val=0) -> integer
1424[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1431[32]: ConstText(_value=" != 12") -> text
1439[48]: AppendText(var[4], v1: text)
1442[32]: VarText(var[4]) -> text
1445[48]: Panic(message: text)
1446[32]: Return(ret=0, value=0, discard=32)

Execute test:
 1292:[8] Text()
 1293:[32] Database(size=12, db_tp=13) -> ref(1,1,0)={v:[]}[32]
 1298:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1301:[56] ConstInt(val=0) -> 0[56]
 1306:[60] SetInt(v1=ref(1,1,0)[44], fld=4, val=0[56])
 1309:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1312:[56] ConstInt(val=0) -> 0[56]
 1317:[60] SetInt(v1=ref(1,1,0)[44], fld=8, val=0[56])
 1320:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1323:[56] FreeStack(value=12, discard=24)
 1327:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1330:[56] Call(size=0, to=692)
  692:[60] VarRef(var[44]) -> ref(1,1,0)={v:[]}[60]
  695:[72] NewRecord(data=ref(1,1,0)[60], parent_tp=13, fld=0) -> ref(1,13,0)[60]
  700:[72] VarRef(var[60]) -> ref(1,13,0)={}[72]
  703:[84] ConstText(_value="One") -> "One"[84]
  708:[100] SetText(v1=ref(1,13,0)[72], fld=4, val="One"[84])
  711:[72] VarRef(var[60]) -> ref(1,13,0)={t:"One"}[72]
  714:[84] ConstInt(val=1) -> 1[84]
  719:[88] SetInt(v1=ref(1,13,0)[72], fld=8, val=1[84])
  722:[72] VarRef(var[44]) -> ref(1,1,0)={v:[]}[72]
  725:[84] VarRef(var[60]) -> ref(1,13,0)={t:"One",v:1}[84]
  728:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,13,0)[84], parent_tp=13, fld=0)
  733:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[72]
  736:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,33,0)[72]
  741:[84] PutRef(var[60], value=ref(1,33,0)[72])
  744:[72] VarRef(var[60]) -> ref(1,33,0)={}[72]
  747:[84] ConstText(_value="Two") -> "Two"[84]
  752:[100] SetText(v1=ref(1,33,0)[72], fld=4, val="Two"[84])
  755:[72] VarRef(var[60]) -> ref(1,33,0)={t:"Two"}[72]
  758:[84] ConstInt(val=2) -> 2[84]
  763:[88] SetInt(v1=ref(1,33,0)[72], fld=8, val=2[84])
  766:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[72]
  769:[84] VarRef(var[60]) -> ref(1,33,0)={t:"Two",v:2}[84]
  772:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,33,0)[84], parent_tp=13, fld=0)
  777:[72] FreeStack(value=0, discard=12)
  781:[60] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[60]
  784:[72] NewRecord(data=ref(1,1,0)[60], parent_tp=13, fld=0) -> ref(1,37,0)[60]
  789:[72] VarRef(var[60]) -> ref(1,37,0)={}[72]
  792:[84] ConstText(_value="Three") -> "Three"[84]
  799:[100] SetText(v1=ref(1,37,0)[72], fld=4, val="Three"[84])
  802:[72] VarRef(var[60]) -> ref(1,37,0)={t:"Three"}[72]
  805:[84] ConstInt(val=3) -> 3[84]
  810:[88] SetInt(v1=ref(1,37,0)[72], fld=8, val=3[84])
  813:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[72]
  816:[84] VarRef(var[60]) -> ref(1,37,0)={t:"Three",v:3}[84]
  819:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,37,0)[84], parent_tp=13, fld=0)
  824:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[72]
  827:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,41,0)[72]
  832:[84] PutRef(var[60], value=ref(1,41,0)[72])
  835:[72] VarRef(var[60]) -> ref(1,41,0)={}[72]
  838:[84] ConstText(_value="Four") -> "Four"[84]
  844:[100] SetText(v1=ref(1,41,0)[72], fld=4, val="Four"[84])
  847:[72] VarRef(var[60]) -> ref(1,41,0)={t:"Four"}[72]
  850:[84] ConstInt(val=4) -> 4[84]
  855:[88] SetInt(v1=ref(1,41,0)[72], fld=8, val=4[84])
  858:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[72]
  861:[84] VarRef(var[60]) -> ref(1,41,0)={t:"Four",v:4}[84]
  864:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,41,0)[84], parent_tp=13, fld=0)
  869:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[72]
  872:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,45,0)[72]
  877:[84] PutRef(var[60], value=ref(1,45,0)[72])
  880:[72] VarRef(var[60]) -> ref(1,45,0)={}[72]
  883:[84] ConstText(_value="Five") -> "Five"[84]
  889:[100] SetText(v1=ref(1,45,0)[72], fld=4, val="Five"[84])
  892:[72] VarRef(var[60]) -> ref(1,45,0)={t:"Five"}[72]
  895:[84] ConstInt(val=5) -> 5[84]
  900:[88] SetInt(v1=ref(1,45,0)[72], fld=8, val=5[84])
  903:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[72]
  906:[84] VarRef(var[60]) -> ref(1,45,0)={t:"Five",v:5}[84]
  909:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,45,0)[84], parent_tp=13, fld=0)
  914:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[72]
  917:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,49,0)[72]
  922:[84] PutRef(var[60], value=ref(1,49,0)[72])
  925:[72] VarRef(var[60]) -> ref(1,49,0)={}[72]
  928:[84] ConstText(_value="Six") -> "Six"[84]
  933:[100] SetText(v1=ref(1,49,0)[72], fld=4, val="Six"[84])
  936:[72] VarRef(var[60]) -> ref(1,49,0)={t:"Six"}[72]
  939:[84] ConstInt(val=6) -> 6[84]
  944:[88] SetInt(v1=ref(1,49,0)[72], fld=8, val=6[84])
  947:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[72]
  950:[84] VarRef(var[60]) -> ref(1,49,0)={t:"Six",v:6}[84]
  953:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,49,0)[84], parent_tp=13, fld=0)
  958:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[72]
  961:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,53,0)[72]
  966:[84] PutRef(var[60], value=ref(1,53,0)[72])
  969:[72] VarRef(var[60]) -> ref(1,53,0)={}[72]
  972:[84] ConstText(_value="Seven") -> "Seven"[84]
  979:[100] SetText(v1=ref(1,53,0)[72], fld=4, val="Seven"[84])
  982:[72] VarRef(var[60]) -> ref(1,53,0)={t:"Seven"}[72]
  985:[84] ConstInt(val=7) -> 7[84]
  990:[88] SetInt(v1=ref(1,53,0)[72], fld=8, val=7[84])
  993:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[72]
  996:[84] VarRef(var[60]) -> ref(1,53,0)={t:"Seven",v:7}[84]
  999:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,53,0)[84], parent_tp=13, fld=0)
 1004:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[72]
 1007:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,57,0)[72]
 1012:[84] PutRef(var[60], value=ref(1,57,0)[72])
 1015:[72] VarRef(var[60]) -> ref(1,57,0)={}[72]
 1018:[84] ConstText(_value="Eight") -> "Eight"[84]
 1025:[100] SetText(v1=ref(1,57,0)[72], fld=4, val="Eight"[84])
 1028:[72] VarRef(var[60]) -> ref(1,57,0)={t:"Eight"}[72]
 1031:[84] ConstInt(val=8) -> 8[84]
 1036:[88] SetInt(v1=ref(1,57,0)[72], fld=8, val=8[84])
 1039:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[72]
 1042:[84] VarRef(var[60]) -> ref(1,57,0)={t:"Eight",v:8}[84]
 1045:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,57,0)[84], parent_tp=13, fld=0)
 1050:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[72]
 1053:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,61,0)[72]
 1058:[84] PutRef(var[60], value=ref(1,61,0)[72])
 1061:[72] VarRef(var[60]) -> ref(1,61,0)={}[72]
 1064:[84] ConstText(_value="Nine") -> "Nine"[84]
 1070:[100] SetText(v1=ref(1,61,0)[72], fld=4, val="Nine"[84])
 1073:[72] VarRef(var[60]) -> ref(1,61,0)={t:"Nine"}[72]
 1076:[84] ConstInt(val=9) -> 9[84]
 1081:[88] SetInt(v1=ref(1,61,0)[72], fld=8, val=9[84])
 1084:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[72]
 1087:[84] VarRef(var[60]) -> ref(1,61,0)={t:"Nine",v:9}[84]
 1090:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,61,0)[84], parent_tp=13, fld=0)
 1095:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[72]
 1098:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,65,0)[72]
 1103:[84] PutRef(var[60], value=ref(1,65,0)[72])
 1106:[72] VarRef(var[60]) -> ref(1,65,0)={}[72]
 1109:[84] ConstText(_value="Ten") -> "Ten"[84]
 1114:[100] SetText(v1=ref(1,65,0)[72], fld=4, val="Ten"[84])
 1117:[72] VarRef(var[60]) -> ref(1,65,0)={t:"Ten"}[72]
 1120:[84] ConstInt(val=10) -> 10[84]
 1125:[88] SetInt(v1=ref(1,65,0)[72], fld=8, val=10[84])
 1128:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[72]
 1131:[84] VarRef(var[60]) -> ref(1,65,0)={t:"Ten",v:10}[84]
 1134:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,65,0)[84], parent_tp=13, fld=0)
 1139:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[72]
 1142:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,69,0)[72]
 1147:[84] PutRef(var[60], value=ref(1,69,0)[72])
 1150:[72] VarRef(var[60]) -> ref(1,69,0)={}[72]
 1153:[84] ConstText(_value="Eleven") -> "Eleven"[84]
 1161:[100] SetText(v1=ref(1,69,0)[72], fld=4, val="Eleven"[84])
 1164:[72] VarRef(var[60]) -> ref(1,69,0)={t:"Eleven"}[72]
 1167:[84] ConstInt(val=11) -> 11[84]
 1172:[88] SetInt(v1=ref(1,69,0)[72], fld=8, val=11[84])
 1175:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[72]
 1178:[84] VarRef(var[60]) -> ref(1,69,0)={t:"Eleven",v:11}[84]
 1181:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,69,0)[84], parent_tp=13, fld=0)
 1186:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[72]
 1189:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,90,0)[72]
 1194:[84] PutRef(var[60], value=ref(1,90,0)[72])
 1197:[72] VarRef(var[60]) -> ref(1,90,0)={}[72]
 1200:[84] ConstText(_value="Twelve") -> "Twelve"[84]
 1208:[100] SetText(v1=ref(1,90,0)[72], fld=4, val="Twelve"[84])
 1211:[72] VarRef(var[60]) -> ref(1,90,0)={t:"Twelve"}[72]
 1214:[84] ConstInt(val=12) -> 12[84]
 1219:[88] SetInt(v1=ref(1,90,0)[72], fld=8, val=12[84])
 1222:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[72]
 1225:[84] VarRef(var[60]) -> ref(1,90,0)={t:"Twelve",v:12}[84]
 1228:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,90,0)[84], parent_tp=13, fld=0)
 1233:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[72]
 1236:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,94,0)[72]
 1241:[84] PutRef(var[60], value=ref(1,94,0)[72])
 1244:[72] VarRef(var[60]) -> ref(1,94,0)={}[72]
 1247:[84] ConstText(_value="Thirteen") -> "Thirteen"[84]
 1257:[100] SetText(v1=ref(1,94,0)[72], fld=4, val="Thirteen"[84])
 1260:[72] VarRef(var[60]) -> ref(1,94,0)={t:"Thirteen"}[72]
 1263:[84] ConstInt(val=13) -> 13[84]
 1268:[88] SetInt(v1=ref(1,94,0)[72], fld=8, val=13[84])
 1271:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[72]
 1274:[84] VarRef(var[60]) -> ref(1,94,0)={t:"Thirteen",v:13}[84]
 1277:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,94,0)[84], parent_tp=13, fld=0)
 1282:[72] FreeStack(value=0, discard=12)
 1286:[60] Return(ret=1337[56], value=0, discard=16)
 1337:[44] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[44]
 1340:[56] GetField(v1=ref(1,1,0)[44], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][44]
 1343:[56] ConstText(_value="Five") -> "Five"[56]
 1349:[72] GetRecord(data=ref(1,1,8)[44], db_tp=15, no_keys=1, key1="Five"[56]) -> ref(1,45,0)[44]
 1353:[56] GetInt(v1=ref(1,45,0)[44], fld=8) -> 5[44]
 1356:[48] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[48]
 1359:[60] GetField(v1=ref(1,1,0)[48], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][48]
 1362:[60] ConstText(_value="Seven") -> "Seven"[60]
 1369:[76] GetRecord(data=ref(1,1,8)[48], db_tp=15, no_keys=1, key1="Seven"[60]) -> ref(1,53,0)[48]
 1373:[60] GetInt(v1=ref(1,53,0)[48], fld=8) -> 7[48]
 1376:[52] AddInt(v1=5[44], v2=7[48]) -> 12[44]
 1377:[48] FreeStack(value=4, discard=16)
 1381:[36] VarInt(var[32]) -> 12[36]
 1384:[40] ConstInt(val=12) -> 12[40]
 1389:[44] EqInt(v1=12[36], v2=12[40]) -> true[36]
 1390:[37] GotoFalseWord(jump=1396, if_false=true[36])
 1393:[36] GotoWord(jump=1446)
 1446:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
