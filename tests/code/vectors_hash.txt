struct Count { t: text, v: integer};
struct Counting { v: vector<Count>, h: hash<Count[t]> };
fn fill(c: Counting) {
  c.v = [
    {t:"One", v:1},
    {t:"Two", v:2},
  ];
  c.v += [
    {t:"Three", v:3},
    {t:"Four", v:4},
    {t:"Five", v:5},
    {t:"Six", v:6},
    {t:"Seven", v:7},
    {t:"Eight", v:8},
    {t:"Nine", v:9},
    {t:"Ten", v:10},
    {t:"Eleven", v:11},
    {t:"Twelve", v:12},
    {t:"Thirteen", v:13}
  ];
}

pub fn test() {
    test_value = {c = Counting {}; fill(c); c.h["Five"].v + c.h["Seven"].v};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}
Type 12:Count[12]:
    t:text[4]
    v:integer[8]

Type 13:Counting[12]:
    v:array<Count>[4] other [1]
    h:hash<Count[t]>[8] other [65535]

Type 14:array<Count>[4]:Array(12)

Type 15:hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ]

fn fill(c:Counting) {#1 block
  {#2 vector
    _elm_1:Count = OpNewRecord(c, 13i32, 0i32);
    {#3 object
      OpSetText(_elm_1, 4i32, "One");
      OpSetInt(_elm_1, 8i32, 1i32);
    }#3;
    OpFinishRecord(c, _elm_1, 13i32, 0i32);
    _elm_1:Count = OpNewRecord(c, 13i32, 0i32);
    {#4 object
      OpSetText(_elm_1, 4i32, "Two");
      OpSetInt(_elm_1, 8i32, 2i32);
    }#4;
    OpFinishRecord(c, _elm_1, 13i32, 0i32);
  }#2;
  {#5 vector
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#6 object
      OpSetText(_elm_2, 4i32, "Three");
      OpSetInt(_elm_2, 8i32, 3i32);
    }#6;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#7 object
      OpSetText(_elm_2, 4i32, "Four");
      OpSetInt(_elm_2, 8i32, 4i32);
    }#7;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#8 object
      OpSetText(_elm_2, 4i32, "Five");
      OpSetInt(_elm_2, 8i32, 5i32);
    }#8;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#9 object
      OpSetText(_elm_2, 4i32, "Six");
      OpSetInt(_elm_2, 8i32, 6i32);
    }#9;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#10 object
      OpSetText(_elm_2, 4i32, "Seven");
      OpSetInt(_elm_2, 8i32, 7i32);
    }#10;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#11 object
      OpSetText(_elm_2, 4i32, "Eight");
      OpSetInt(_elm_2, 8i32, 8i32);
    }#11;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#12 object
      OpSetText(_elm_2, 4i32, "Nine");
      OpSetInt(_elm_2, 8i32, 9i32);
    }#12;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#13 object
      OpSetText(_elm_2, 4i32, "Ten");
      OpSetInt(_elm_2, 8i32, 10i32);
    }#13;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#14 object
      OpSetText(_elm_2, 4i32, "Eleven");
      OpSetInt(_elm_2, 8i32, 11i32);
    }#14;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#15 object
      OpSetText(_elm_2, 4i32, "Twelve");
      OpSetInt(_elm_2, 8i32, 12i32);
    }#15;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 13i32, 0i32);
    {#16 object
      OpSetText(_elm_2, 4i32, "Thirteen");
      OpSetInt(_elm_2, 8i32, 13i32);
    }#16;
    OpFinishRecord(c, _elm_2, 13i32, 0i32);
  }#5;
}#1

byte-code for hash:fill(c: Counting[0])
 691[12]: return-address
 691[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 694[28]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 699[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 702[40]: ConstText(_value="One") -> text
 707[56]: SetText(v1: reference, fld=4, val: text)
 710[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 713[40]: ConstInt(val=1) -> integer
 718[44]: SetInt(v1: reference, fld=8, val: integer)
 721[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 724[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 727[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 732[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 735[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 740[40]: PutRef(var[16], value: reference)
 743[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 746[40]: ConstText(_value="Two") -> text
 751[56]: SetText(v1: reference, fld=4, val: text)
 754[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 757[40]: ConstInt(val=2) -> integer
 762[44]: SetInt(v1: reference, fld=8, val: integer)
 765[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 768[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 771[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 776[28]: FreeStack(value=0, discard=12)
 780[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 783[28]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 788[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 791[40]: ConstText(_value="Three") -> text
 798[56]: SetText(v1: reference, fld=4, val: text)
 801[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 804[40]: ConstInt(val=3) -> integer
 809[44]: SetInt(v1: reference, fld=8, val: integer)
 812[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 815[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 818[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 823[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 826[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 831[40]: PutRef(var[16], value: reference)
 834[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 837[40]: ConstText(_value="Four") -> text
 843[56]: SetText(v1: reference, fld=4, val: text)
 846[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 849[40]: ConstInt(val=4) -> integer
 854[44]: SetInt(v1: reference, fld=8, val: integer)
 857[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 860[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 863[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 868[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 871[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 876[40]: PutRef(var[16], value: reference)
 879[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 882[40]: ConstText(_value="Five") -> text
 888[56]: SetText(v1: reference, fld=4, val: text)
 891[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 894[40]: ConstInt(val=5) -> integer
 899[44]: SetInt(v1: reference, fld=8, val: integer)
 902[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 905[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 908[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 913[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 916[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 921[40]: PutRef(var[16], value: reference)
 924[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 927[40]: ConstText(_value="Six") -> text
 932[56]: SetText(v1: reference, fld=4, val: text)
 935[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 938[40]: ConstInt(val=6) -> integer
 943[44]: SetInt(v1: reference, fld=8, val: integer)
 946[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 949[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 952[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
 957[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 960[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
 965[40]: PutRef(var[16], value: reference)
 968[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 971[40]: ConstText(_value="Seven") -> text
 978[56]: SetText(v1: reference, fld=4, val: text)
 981[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 984[40]: ConstInt(val=7) -> integer
 989[44]: SetInt(v1: reference, fld=8, val: integer)
 992[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
 995[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
 998[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1003[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1006[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1011[40]: PutRef(var[16], value: reference)
1014[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1017[40]: ConstText(_value="Eight") -> text
1024[56]: SetText(v1: reference, fld=4, val: text)
1027[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1030[40]: ConstInt(val=8) -> integer
1035[44]: SetInt(v1: reference, fld=8, val: integer)
1038[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1041[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1044[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1049[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1052[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1057[40]: PutRef(var[16], value: reference)
1060[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1063[40]: ConstText(_value="Nine") -> text
1069[56]: SetText(v1: reference, fld=4, val: text)
1072[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1075[40]: ConstInt(val=9) -> integer
1080[44]: SetInt(v1: reference, fld=8, val: integer)
1083[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1086[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1089[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1094[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1097[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1102[40]: PutRef(var[16], value: reference)
1105[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1108[40]: ConstText(_value="Ten") -> text
1113[56]: SetText(v1: reference, fld=4, val: text)
1116[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1119[40]: ConstInt(val=10) -> integer
1124[44]: SetInt(v1: reference, fld=8, val: integer)
1127[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1130[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1133[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1138[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1141[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1146[40]: PutRef(var[16], value: reference)
1149[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1152[40]: ConstText(_value="Eleven") -> text
1160[56]: SetText(v1: reference, fld=4, val: text)
1163[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1166[40]: ConstInt(val=11) -> integer
1171[44]: SetInt(v1: reference, fld=8, val: integer)
1174[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1177[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1180[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1185[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1188[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1193[40]: PutRef(var[16], value: reference)
1196[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1199[40]: ConstText(_value="Twelve") -> text
1207[56]: SetText(v1: reference, fld=4, val: text)
1210[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1213[40]: ConstInt(val=12) -> integer
1218[44]: SetInt(v1: reference, fld=8, val: integer)
1221[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1224[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1227[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1232[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1235[40]: NewRecord(data: reference, parent_tp=13, fld=0) -> reference
1240[40]: PutRef(var[16], value: reference)
1243[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1246[40]: ConstText(_value="Thirteen") -> text
1256[56]: SetText(v1: reference, fld=4, val: text)
1259[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1262[40]: ConstInt(val=13) -> integer
1267[44]: SetInt(v1: reference, fld=8, val: integer)
1270[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1273[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[12]
1276[52]: FinishRecord(data: reference, rec: reference, parent_tp=13, fld=0)
1281[28]: FreeStack(value=0, discard=12)
1285[16]: Return(ret=12, value=0, discard=16)

fn test() {#1 block
  __ref_1:Counting = null;
  __work_1:text = "";
  test_value:integer = {#2 block
    c:Counting["__ref_1"] = {#3 object
      OpDatabase(__ref_1, 13i32);
      OpSetInt(__ref_1, 4i32, 0i32);
      OpSetInt(__ref_1, 8i32, 0i32);
      __ref_1;
    }#3:Counting["__ref_1"];
    fill(c);
    OpAddInt(OpGetInt(OpGetRecord(OpGetField(c, 8i32, 15i32), 15i32, 1i32, "Five"), 8i32), OpGetInt(OpGetRecord(OpGetField(c, 8i32, 15i32), 15i32, 1i32, "Seven"), 8i32));
  }#2:integer;
  if OpEqInt(test_value, 12i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 12");
    __work_1;
  }#4:text);
}#1

byte-code for hash:test()
1291[0]: return-address
1291[4]: ConvRefFromNull() -> reference
1292[16]: Text()
1293[40]: Database(var[4], db_tp=13) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1298[40]: VarRef(var[4]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1301[52]: ConstInt(val=0) -> integer
1306[56]: SetInt(v1: reference, fld=4, val: integer)
1309[40]: VarRef(var[4]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1312[52]: ConstInt(val=0) -> integer
1317[56]: SetInt(v1: reference, fld=8, val: integer)
1320[40]: VarRef(var[4]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1323[52]: VarRef(var[40]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1326[64]: Call(size=0, to=691)
1333[52]: VarRef(var[40]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1336[64]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ][15]
1339[64]: ConstText(_value="Five") -> text
1345[80]: GetRecord(data: reference, db_tp=15, no_keys=1) -> reference
1349[64]: GetInt(v1: reference, fld=8) -> integer
1352[56]: VarRef(var[40]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[13]
1355[68]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(12, [0]) keys [tp:6 desc:false field:4, ][15]
1358[68]: ConstText(_value="Seven") -> text
1365[84]: GetRecord(data: reference, db_tp=15, no_keys=1) -> reference
1369[68]: GetInt(v1: reference, fld=8) -> integer
1372[60]: AddInt(v1: integer, v2: integer) -> integer
1373[56]: FreeStack(value=4, discard=16) type=integer[4]:Base[0]
1377[44]: VarInt(var[40]) -> integer
1380[48]: ConstInt(val=12) -> integer
1385[52]: EqInt(v1: integer, v2: integer) -> boolean
1386[45]: GotoFalseWord(jump=1392, if_false: boolean)
1389[44]: GotoWord(jump=1442)
1392[44]: ClearText(var[16])
1395[44]: ConstText(_value="Test failed ") -> text
1409[60]: AppendText(var[16], v1: text)
1412[44]: VarInt(var[40]) -> integer
1415[48]: ConstInt(val=0) -> integer
1420[52]: FormatInt(var[16], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1427[44]: ConstText(_value=" != 12") -> text
1435[60]: AppendText(var[16], v1: text)
1438[44]: VarText(var[16]) -> text
1441[60]: Panic(message: text)
1442[44]: FreeText(var[16])
1445[44]: Return(ret=0, value=0, discard=44)

Execute test:
 1291:[8] ConvRefFromNull() -> ref(65535,0,0)[8]
 1292:[20] Text()
 1293:[44] Database(var[8], db_tp=13)
 1298:[44] VarRef(var[8]) -> ref(1,1,0)={v:[]}[44]
 1301:[56] ConstInt(val=0) -> 0[56]
 1306:[60] SetInt(v1=ref(1,1,0)[44], fld=4, val=0[56])
 1309:[44] VarRef(var[8]) -> ref(1,1,0)={v:[]}[44]
 1312:[56] ConstInt(val=0) -> 0[56]
 1317:[60] SetInt(v1=ref(1,1,0)[44], fld=8, val=0[56])
 1320:[44] VarRef(var[8]) -> ref(1,1,0)={v:[]}[44]
 1323:[56] VarRef(var[44]) -> ref(1,1,0)={v:[]}[56]
 1326:[68] Call(size=0, to=691)
  691:[72] VarRef(var[56]) -> ref(1,1,0)={v:[]}[72]
  694:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,13,0)[72]
  699:[84] VarRef(var[72]) -> ref(1,13,0)={}[84]
  702:[96] ConstText(_value="One") -> "One"[96]
  707:[112] SetText(v1=ref(1,13,0)[84], fld=4, val="One"[96])
  710:[84] VarRef(var[72]) -> ref(1,13,0)={t:"One"}[84]
  713:[96] ConstInt(val=1) -> 1[96]
  718:[100] SetInt(v1=ref(1,13,0)[84], fld=8, val=1[96])
  721:[84] VarRef(var[56]) -> ref(1,1,0)={v:[]}[84]
  724:[96] VarRef(var[72]) -> ref(1,13,0)={t:"One",v:1}[96]
  727:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,13,0)[96], parent_tp=13, fld=0)
  732:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[84]
  735:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,33,0)[84]
  740:[96] PutRef(var[72], value=ref(1,33,0)[84])
  743:[84] VarRef(var[72]) -> ref(1,33,0)={}[84]
  746:[96] ConstText(_value="Two") -> "Two"[96]
  751:[112] SetText(v1=ref(1,33,0)[84], fld=4, val="Two"[96])
  754:[84] VarRef(var[72]) -> ref(1,33,0)={t:"Two"}[84]
  757:[96] ConstInt(val=2) -> 2[96]
  762:[100] SetInt(v1=ref(1,33,0)[84], fld=8, val=2[96])
  765:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[84]
  768:[96] VarRef(var[72]) -> ref(1,33,0)={t:"Two",v:2}[96]
  771:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,33,0)[96], parent_tp=13, fld=0)
  776:[84] FreeStack(value=0, discard=12)
  780:[72] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[72]
  783:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=13, fld=0) -> ref(1,37,0)[72]
  788:[84] VarRef(var[72]) -> ref(1,37,0)={}[84]
  791:[96] ConstText(_value="Three") -> "Three"[96]
  798:[112] SetText(v1=ref(1,37,0)[84], fld=4, val="Three"[96])
  801:[84] VarRef(var[72]) -> ref(1,37,0)={t:"Three"}[84]
  804:[96] ConstInt(val=3) -> 3[96]
  809:[100] SetInt(v1=ref(1,37,0)[84], fld=8, val=3[96])
  812:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[84]
  815:[96] VarRef(var[72]) -> ref(1,37,0)={t:"Three",v:3}[96]
  818:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,37,0)[96], parent_tp=13, fld=0)
  823:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[84]
  826:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,41,0)[84]
  831:[96] PutRef(var[72], value=ref(1,41,0)[84])
  834:[84] VarRef(var[72]) -> ref(1,41,0)={}[84]
  837:[96] ConstText(_value="Four") -> "Four"[96]
  843:[112] SetText(v1=ref(1,41,0)[84], fld=4, val="Four"[96])
  846:[84] VarRef(var[72]) -> ref(1,41,0)={t:"Four"}[84]
  849:[96] ConstInt(val=4) -> 4[96]
  854:[100] SetInt(v1=ref(1,41,0)[84], fld=8, val=4[96])
  857:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[84]
  860:[96] VarRef(var[72]) -> ref(1,41,0)={t:"Four",v:4}[96]
  863:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,41,0)[96], parent_tp=13, fld=0)
  868:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[84]
  871:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,45,0)[84]
  876:[96] PutRef(var[72], value=ref(1,45,0)[84])
  879:[84] VarRef(var[72]) -> ref(1,45,0)={}[84]
  882:[96] ConstText(_value="Five") -> "Five"[96]
  888:[112] SetText(v1=ref(1,45,0)[84], fld=4, val="Five"[96])
  891:[84] VarRef(var[72]) -> ref(1,45,0)={t:"Five"}[84]
  894:[96] ConstInt(val=5) -> 5[96]
  899:[100] SetInt(v1=ref(1,45,0)[84], fld=8, val=5[96])
  902:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[84]
  905:[96] VarRef(var[72]) -> ref(1,45,0)={t:"Five",v:5}[96]
  908:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,45,0)[96], parent_tp=13, fld=0)
  913:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[84]
  916:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,49,0)[84]
  921:[96] PutRef(var[72], value=ref(1,49,0)[84])
  924:[84] VarRef(var[72]) -> ref(1,49,0)={}[84]
  927:[96] ConstText(_value="Six") -> "Six"[96]
  932:[112] SetText(v1=ref(1,49,0)[84], fld=4, val="Six"[96])
  935:[84] VarRef(var[72]) -> ref(1,49,0)={t:"Six"}[84]
  938:[96] ConstInt(val=6) -> 6[96]
  943:[100] SetInt(v1=ref(1,49,0)[84], fld=8, val=6[96])
  946:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[84]
  949:[96] VarRef(var[72]) -> ref(1,49,0)={t:"Six",v:6}[96]
  952:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,49,0)[96], parent_tp=13, fld=0)
  957:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[84]
  960:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,53,0)[84]
  965:[96] PutRef(var[72], value=ref(1,53,0)[84])
  968:[84] VarRef(var[72]) -> ref(1,53,0)={}[84]
  971:[96] ConstText(_value="Seven") -> "Seven"[96]
  978:[112] SetText(v1=ref(1,53,0)[84], fld=4, val="Seven"[96])
  981:[84] VarRef(var[72]) -> ref(1,53,0)={t:"Seven"}[84]
  984:[96] ConstInt(val=7) -> 7[96]
  989:[100] SetInt(v1=ref(1,53,0)[84], fld=8, val=7[96])
  992:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[84]
  995:[96] VarRef(var[72]) -> ref(1,53,0)={t:"Seven",v:7}[96]
  998:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,53,0)[96], parent_tp=13, fld=0)
 1003:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[84]
 1006:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,57,0)[84]
 1011:[96] PutRef(var[72], value=ref(1,57,0)[84])
 1014:[84] VarRef(var[72]) -> ref(1,57,0)={}[84]
 1017:[96] ConstText(_value="Eight") -> "Eight"[96]
 1024:[112] SetText(v1=ref(1,57,0)[84], fld=4, val="Eight"[96])
 1027:[84] VarRef(var[72]) -> ref(1,57,0)={t:"Eight"}[84]
 1030:[96] ConstInt(val=8) -> 8[96]
 1035:[100] SetInt(v1=ref(1,57,0)[84], fld=8, val=8[96])
 1038:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[84]
 1041:[96] VarRef(var[72]) -> ref(1,57,0)={t:"Eight",v:8}[96]
 1044:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,57,0)[96], parent_tp=13, fld=0)
 1049:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[84]
 1052:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,61,0)[84]
 1057:[96] PutRef(var[72], value=ref(1,61,0)[84])
 1060:[84] VarRef(var[72]) -> ref(1,61,0)={}[84]
 1063:[96] ConstText(_value="Nine") -> "Nine"[96]
 1069:[112] SetText(v1=ref(1,61,0)[84], fld=4, val="Nine"[96])
 1072:[84] VarRef(var[72]) -> ref(1,61,0)={t:"Nine"}[84]
 1075:[96] ConstInt(val=9) -> 9[96]
 1080:[100] SetInt(v1=ref(1,61,0)[84], fld=8, val=9[96])
 1083:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[84]
 1086:[96] VarRef(var[72]) -> ref(1,61,0)={t:"Nine",v:9}[96]
 1089:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,61,0)[96], parent_tp=13, fld=0)
 1094:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[84]
 1097:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,65,0)[84]
 1102:[96] PutRef(var[72], value=ref(1,65,0)[84])
 1105:[84] VarRef(var[72]) -> ref(1,65,0)={}[84]
 1108:[96] ConstText(_value="Ten") -> "Ten"[96]
 1113:[112] SetText(v1=ref(1,65,0)[84], fld=4, val="Ten"[96])
 1116:[84] VarRef(var[72]) -> ref(1,65,0)={t:"Ten"}[84]
 1119:[96] ConstInt(val=10) -> 10[96]
 1124:[100] SetInt(v1=ref(1,65,0)[84], fld=8, val=10[96])
 1127:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[84]
 1130:[96] VarRef(var[72]) -> ref(1,65,0)={t:"Ten",v:10}[96]
 1133:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,65,0)[96], parent_tp=13, fld=0)
 1138:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[84]
 1141:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,69,0)[84]
 1146:[96] PutRef(var[72], value=ref(1,69,0)[84])
 1149:[84] VarRef(var[72]) -> ref(1,69,0)={}[84]
 1152:[96] ConstText(_value="Eleven") -> "Eleven"[96]
 1160:[112] SetText(v1=ref(1,69,0)[84], fld=4, val="Eleven"[96])
 1163:[84] VarRef(var[72]) -> ref(1,69,0)={t:"Eleven"}[84]
 1166:[96] ConstInt(val=11) -> 11[96]
 1171:[100] SetInt(v1=ref(1,69,0)[84], fld=8, val=11[96])
 1174:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[84]
 1177:[96] VarRef(var[72]) -> ref(1,69,0)={t:"Eleven",v:11}[96]
 1180:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,69,0)[96], parent_tp=13, fld=0)
 1185:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[84]
 1188:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,90,0)[84]
 1193:[96] PutRef(var[72], value=ref(1,90,0)[84])
 1196:[84] VarRef(var[72]) -> ref(1,90,0)={}[84]
 1199:[96] ConstText(_value="Twelve") -> "Twelve"[96]
 1207:[112] SetText(v1=ref(1,90,0)[84], fld=4, val="Twelve"[96])
 1210:[84] VarRef(var[72]) -> ref(1,90,0)={t:"Twelve"}[84]
 1213:[96] ConstInt(val=12) -> 12[96]
 1218:[100] SetInt(v1=ref(1,90,0)[84], fld=8, val=12[96])
 1221:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[84]
 1224:[96] VarRef(var[72]) -> ref(1,90,0)={t:"Twelve",v:12}[96]
 1227:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,90,0)[96], parent_tp=13, fld=0)
 1232:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[84]
 1235:[96] NewRecord(data=ref(1,1,0)[84], parent_tp=13, fld=0) -> ref(1,94,0)[84]
 1240:[96] PutRef(var[72], value=ref(1,94,0)[84])
 1243:[84] VarRef(var[72]) -> ref(1,94,0)={}[84]
 1246:[96] ConstText(_value="Thirteen") -> "Thirteen"[96]
 1256:[112] SetText(v1=ref(1,94,0)[84], fld=4, val="Thirteen"[96])
 1259:[84] VarRef(var[72]) -> ref(1,94,0)={t:"Thirteen"}[84]
 1262:[96] ConstInt(val=13) -> 13[96]
 1267:[100] SetInt(v1=ref(1,94,0)[84], fld=8, val=13[96])
 1270:[84] VarRef(var[56]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[84]
 1273:[96] VarRef(var[72]) -> ref(1,94,0)={t:"Thirteen",v:13}[96]
 1276:[108] FinishRecord(data=ref(1,1,0)[84], rec=ref(1,94,0)[96], parent_tp=13, fld=0)
 1281:[84] FreeStack(value=0, discard=12)
 1285:[72] Return(ret=1333[68], value=0, discard=16)
 1333:[56] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[56]
 1336:[68] GetField(v1=ref(1,1,0)[56], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][56]
 1339:[68] ConstText(_value="Five") -> "Five"[68]
 1345:[84] GetRecord(data=ref(1,1,8)[56], db_tp=15, no_keys=1, key1="Five"[68]) -> ref(1,45,0)[56]
 1349:[68] GetInt(v1=ref(1,45,0)[56], fld=8) -> 5[56]
 1352:[60] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[60]
 1355:[72] GetField(v1=ref(1,1,0)[60], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][60]
 1358:[72] ConstText(_value="Seven") -> "Seven"[72]
 1365:[88] GetRecord(data=ref(1,1,8)[60], db_tp=15, no_keys=1, key1="Seven"[72]) -> ref(1,53,0)[60]
 1369:[72] GetInt(v1=ref(1,53,0)[60], fld=8) -> 7[60]
 1372:[64] AddInt(v1=5[56], v2=7[60]) -> 12[56]
 1373:[60] FreeStack(value=4, discard=16)
 1377:[48] VarInt(var[44]) -> 12[48]
 1380:[52] ConstInt(val=12) -> 12[52]
 1385:[56] EqInt(v1=12[48], v2=12[52]) -> true[48]
 1386:[49] GotoFalseWord(jump=1392, if_false=true[48])
 1389:[48] GotoWord(jump=1442)
 1442:[48] FreeText(var[20])
 1445:[48] Return(ret=4294967295[4], value=0, discard=44)
Finished
