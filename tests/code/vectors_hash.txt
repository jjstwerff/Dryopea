struct Count { t: text, v: integer};
struct Counting { v: vector<Count>, h: hash<Count[t]> };
fn fill(c: Counting) {
  c.v = [
    {t:"One", v:1},
    {t:"Two", v:2},
  ];
  c.v += [
    {t:"Three", v:3},
    {t:"Four", v:4},
    {t:"Five", v:5},
    {t:"Six", v:6},
    {t:"Seven", v:7},
    {t:"Eight", v:8},
    {t:"Nine", v:9},
    {t:"Ten", v:10},
    {t:"Eleven", v:11},
    {t:"Twelve", v:12},
    {t:"Thirteen", v:13}
  ];
}

pub fn test() {
    test_value = {c = Counting {}; fill(c); c.h["Five"].v + c.h["Seven"].v};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}
Type 11:Count[12]:
    t:text[4]
    v:integer[8]

Type 12:Counting[12]:
    v:array<Count>[4] other [1]
    h:hash<Count[t]>[8] other [65535]

Type 13:array<Count>[4]:Array(11)

Type 14:hash<Count[t]>[4]:Hash(11, [0]) keys [tp:6 desc:false field:4, ]

fn fill(c:Counting) {#1 block
  {#2 vector
    _elm_1:Count = OpNewRecord(c, 12i32, 0i32);
    {#3 object
      OpSetText(_elm_1, 4i32, "One");
      OpSetInt(_elm_1, 8i32, 1i32);
    }#3;
    OpFinishRecord(c, _elm_1, 12i32, 0i32);
    _elm_1:Count = OpNewRecord(c, 12i32, 0i32);
    {#4 object
      OpSetText(_elm_1, 4i32, "Two");
      OpSetInt(_elm_1, 8i32, 2i32);
    }#4;
    OpFinishRecord(c, _elm_1, 12i32, 0i32);
  }#2;
  {#5 vector
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#6 object
      OpSetText(_elm_2, 4i32, "Three");
      OpSetInt(_elm_2, 8i32, 3i32);
    }#6;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#7 object
      OpSetText(_elm_2, 4i32, "Four");
      OpSetInt(_elm_2, 8i32, 4i32);
    }#7;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#8 object
      OpSetText(_elm_2, 4i32, "Five");
      OpSetInt(_elm_2, 8i32, 5i32);
    }#8;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#9 object
      OpSetText(_elm_2, 4i32, "Six");
      OpSetInt(_elm_2, 8i32, 6i32);
    }#9;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#10 object
      OpSetText(_elm_2, 4i32, "Seven");
      OpSetInt(_elm_2, 8i32, 7i32);
    }#10;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#11 object
      OpSetText(_elm_2, 4i32, "Eight");
      OpSetInt(_elm_2, 8i32, 8i32);
    }#11;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#12 object
      OpSetText(_elm_2, 4i32, "Nine");
      OpSetInt(_elm_2, 8i32, 9i32);
    }#12;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#13 object
      OpSetText(_elm_2, 4i32, "Ten");
      OpSetInt(_elm_2, 8i32, 10i32);
    }#13;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#14 object
      OpSetText(_elm_2, 4i32, "Eleven");
      OpSetInt(_elm_2, 8i32, 11i32);
    }#14;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#15 object
      OpSetText(_elm_2, 4i32, "Twelve");
      OpSetInt(_elm_2, 8i32, 12i32);
    }#15;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#16 object
      OpSetText(_elm_2, 4i32, "Thirteen");
      OpSetInt(_elm_2, 8i32, 13i32);
    }#16;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
  }#5;
}#1

byte-code for hash:fill(c: Counting[0])
 682[12]: return-address
 682[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 685[28]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 690[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 693[40]: ConstText(_value="One") -> text
 698[56]: SetText(v1: reference, fld=4, val: text)
 701[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 704[40]: ConstInt(val=1) -> integer
 709[44]: SetInt(v1: reference, fld=8, val: integer)
 712[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 715[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 718[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 723[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 726[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 731[40]: PutRef(var[16], value: reference)
 734[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 737[40]: ConstText(_value="Two") -> text
 742[56]: SetText(v1: reference, fld=4, val: text)
 745[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 748[40]: ConstInt(val=2) -> integer
 753[44]: SetInt(v1: reference, fld=8, val: integer)
 756[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 759[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 762[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 767[28]: FreeStack(value=0, discard=12)
 771[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 774[28]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 779[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 782[40]: ConstText(_value="Three") -> text
 789[56]: SetText(v1: reference, fld=4, val: text)
 792[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 795[40]: ConstInt(val=3) -> integer
 800[44]: SetInt(v1: reference, fld=8, val: integer)
 803[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 806[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 809[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 814[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 817[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 822[40]: PutRef(var[16], value: reference)
 825[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 828[40]: ConstText(_value="Four") -> text
 834[56]: SetText(v1: reference, fld=4, val: text)
 837[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 840[40]: ConstInt(val=4) -> integer
 845[44]: SetInt(v1: reference, fld=8, val: integer)
 848[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 851[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 854[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 859[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 862[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 867[40]: PutRef(var[16], value: reference)
 870[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 873[40]: ConstText(_value="Five") -> text
 879[56]: SetText(v1: reference, fld=4, val: text)
 882[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 885[40]: ConstInt(val=5) -> integer
 890[44]: SetInt(v1: reference, fld=8, val: integer)
 893[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 896[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 899[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 904[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 907[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 912[40]: PutRef(var[16], value: reference)
 915[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 918[40]: ConstText(_value="Six") -> text
 923[56]: SetText(v1: reference, fld=4, val: text)
 926[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 929[40]: ConstInt(val=6) -> integer
 934[44]: SetInt(v1: reference, fld=8, val: integer)
 937[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 940[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 943[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 948[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 951[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 956[40]: PutRef(var[16], value: reference)
 959[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 962[40]: ConstText(_value="Seven") -> text
 969[56]: SetText(v1: reference, fld=4, val: text)
 972[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 975[40]: ConstInt(val=7) -> integer
 980[44]: SetInt(v1: reference, fld=8, val: integer)
 983[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 986[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 989[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 994[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 997[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1002[40]: PutRef(var[16], value: reference)
1005[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1008[40]: ConstText(_value="Eight") -> text
1015[56]: SetText(v1: reference, fld=4, val: text)
1018[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1021[40]: ConstInt(val=8) -> integer
1026[44]: SetInt(v1: reference, fld=8, val: integer)
1029[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1032[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1035[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1040[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1043[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1048[40]: PutRef(var[16], value: reference)
1051[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1054[40]: ConstText(_value="Nine") -> text
1060[56]: SetText(v1: reference, fld=4, val: text)
1063[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1066[40]: ConstInt(val=9) -> integer
1071[44]: SetInt(v1: reference, fld=8, val: integer)
1074[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1077[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1080[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1085[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1088[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1093[40]: PutRef(var[16], value: reference)
1096[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1099[40]: ConstText(_value="Ten") -> text
1104[56]: SetText(v1: reference, fld=4, val: text)
1107[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1110[40]: ConstInt(val=10) -> integer
1115[44]: SetInt(v1: reference, fld=8, val: integer)
1118[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1121[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1124[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1129[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1132[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1137[40]: PutRef(var[16], value: reference)
1140[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1143[40]: ConstText(_value="Eleven") -> text
1151[56]: SetText(v1: reference, fld=4, val: text)
1154[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1157[40]: ConstInt(val=11) -> integer
1162[44]: SetInt(v1: reference, fld=8, val: integer)
1165[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1168[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1171[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1176[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1179[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1184[40]: PutRef(var[16], value: reference)
1187[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1190[40]: ConstText(_value="Twelve") -> text
1198[56]: SetText(v1: reference, fld=4, val: text)
1201[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1204[40]: ConstInt(val=12) -> integer
1209[44]: SetInt(v1: reference, fld=8, val: integer)
1212[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1215[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1218[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1223[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1226[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1231[40]: PutRef(var[16], value: reference)
1234[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1237[40]: ConstText(_value="Thirteen") -> text
1247[56]: SetText(v1: reference, fld=4, val: text)
1250[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1253[40]: ConstInt(val=13) -> integer
1258[44]: SetInt(v1: reference, fld=8, val: integer)
1261[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1264[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1267[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1272[28]: FreeStack(value=0, discard=12)
1276[16]: Return(ret=12, value=0, discard=16)

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    c:Counting = {#3 object
      _val_1:Counting = OpDatabase(12i32, 12i32);
      OpSetInt(_val_1, 4i32, 0i32);
      OpSetInt(_val_1, 8i32, 0i32);
      _val_1;
    }#3:Counting;
    fill(c);
    OpAddInt(OpGetInt(OpGetRecord(OpGetField(c, 8i32, 14i32), 14i32, 1i32, "Five"), 8i32), OpGetInt(OpGetRecord(OpGetField(c, 8i32, 14i32), 14i32, 1i32, "Seven"), 8i32));
  }#2:integer;
  if OpEqInt(test_value, 12i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 12");
    __work_1;
  }#4:text);
}#1

byte-code for hash:test()
1282[0]: return-address
1282[4]: Text()
1283[28]: Database(size=12, db_tp=12) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1288[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1291[52]: ConstInt(val=0) -> integer
1296[56]: SetInt(v1: reference, fld=4, val: integer)
1299[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1302[52]: ConstInt(val=0) -> integer
1307[56]: SetInt(v1: reference, fld=8, val: integer)
1310[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1313[52]: FreeStack(value=12, discard=12) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1317[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1320[52]: Call(size=0, to=682)
1327[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1330[52]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(11, [0]) keys [tp:6 desc:false field:4, ][14]
1333[52]: ConstText(_value="Five") -> text
1339[68]: GetRecord(data: reference, db_tp=14, no_keys=1) -> reference
1343[52]: GetInt(v1: reference, fld=8) -> integer
1346[44]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1349[56]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(11, [0]) keys [tp:6 desc:false field:4, ][14]
1352[56]: ConstText(_value="Seven") -> text
1359[72]: GetRecord(data: reference, db_tp=14, no_keys=1) -> reference
1363[56]: GetInt(v1: reference, fld=8) -> integer
1366[48]: AddInt(v1: integer, v2: integer) -> integer
1367[44]: FreeStack(value=4, discard=12) type=integer[4]:Base[0]
1371[32]: VarInt(var[28]) -> integer
1374[36]: ConstInt(val=12) -> integer
1379[40]: EqInt(v1: integer, v2: integer) -> boolean
1380[33]: GotoFalseWord(jump=1386, if_false: boolean)
1383[32]: GotoWord(jump=1436)
1386[32]: ClearText(var[4])
1389[32]: ConstText(_value="Test failed ") -> text
1403[48]: AppendText(var[4], v1: text)
1406[32]: VarInt(var[28]) -> integer
1409[36]: ConstInt(val=0) -> integer
1414[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1421[32]: ConstText(_value=" != 12") -> text
1429[48]: AppendText(var[4], v1: text)
1432[32]: VarText(var[4]) -> text
1435[48]: Panic(message: text)
1436[32]: Return(ret=0, value=0, discard=32)

Execute test:
 1282:[8] Text()
 1283:[32] Database(size=12, db_tp=12) -> ref(1,1,0)={v:[]}[32]
 1288:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1291:[56] ConstInt(val=0) -> 0[56]
 1296:[60] SetInt(v1=ref(1,1,0)[44], fld=4, val=0[56])
 1299:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1302:[56] ConstInt(val=0) -> 0[56]
 1307:[60] SetInt(v1=ref(1,1,0)[44], fld=8, val=0[56])
 1310:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1313:[56] FreeStack(value=12, discard=12)
 1317:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1320:[56] Call(size=0, to=682)
  682:[60] VarRef(var[44]) -> ref(1,1,0)={v:[]}[60]
  685:[72] NewRecord(data=ref(1,1,0)[60], parent_tp=12, fld=0) -> ref(1,13,0)[60]
  690:[72] VarRef(var[60]) -> ref(1,13,0)={}[72]
  693:[84] ConstText(_value="One") -> "One"[84]
  698:[100] SetText(v1=ref(1,13,0)[72], fld=4, val="One"[84])
  701:[72] VarRef(var[60]) -> ref(1,13,0)={t:"One"}[72]
  704:[84] ConstInt(val=1) -> 1[84]
  709:[88] SetInt(v1=ref(1,13,0)[72], fld=8, val=1[84])
  712:[72] VarRef(var[44]) -> ref(1,1,0)={v:[]}[72]
  715:[84] VarRef(var[60]) -> ref(1,13,0)={t:"One",v:1}[84]
  718:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,13,0)[84], parent_tp=12, fld=0)
  723:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[72]
  726:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,33,0)[72]
  731:[84] PutRef(var[60], value=ref(1,33,0)[72])
  734:[72] VarRef(var[60]) -> ref(1,33,0)={}[72]
  737:[84] ConstText(_value="Two") -> "Two"[84]
  742:[100] SetText(v1=ref(1,33,0)[72], fld=4, val="Two"[84])
  745:[72] VarRef(var[60]) -> ref(1,33,0)={t:"Two"}[72]
  748:[84] ConstInt(val=2) -> 2[84]
  753:[88] SetInt(v1=ref(1,33,0)[72], fld=8, val=2[84])
  756:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[72]
  759:[84] VarRef(var[60]) -> ref(1,33,0)={t:"Two",v:2}[84]
  762:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,33,0)[84], parent_tp=12, fld=0)
  767:[72] FreeStack(value=0, discard=12)
  771:[60] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[60]
  774:[72] NewRecord(data=ref(1,1,0)[60], parent_tp=12, fld=0) -> ref(1,37,0)[60]
  779:[72] VarRef(var[60]) -> ref(1,37,0)={}[72]
  782:[84] ConstText(_value="Three") -> "Three"[84]
  789:[100] SetText(v1=ref(1,37,0)[72], fld=4, val="Three"[84])
  792:[72] VarRef(var[60]) -> ref(1,37,0)={t:"Three"}[72]
  795:[84] ConstInt(val=3) -> 3[84]
  800:[88] SetInt(v1=ref(1,37,0)[72], fld=8, val=3[84])
  803:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[72]
  806:[84] VarRef(var[60]) -> ref(1,37,0)={t:"Three",v:3}[84]
  809:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,37,0)[84], parent_tp=12, fld=0)
  814:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[72]
  817:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,41,0)[72]
  822:[84] PutRef(var[60], value=ref(1,41,0)[72])
  825:[72] VarRef(var[60]) -> ref(1,41,0)={}[72]
  828:[84] ConstText(_value="Four") -> "Four"[84]
  834:[100] SetText(v1=ref(1,41,0)[72], fld=4, val="Four"[84])
  837:[72] VarRef(var[60]) -> ref(1,41,0)={t:"Four"}[72]
  840:[84] ConstInt(val=4) -> 4[84]
  845:[88] SetInt(v1=ref(1,41,0)[72], fld=8, val=4[84])
  848:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[72]
  851:[84] VarRef(var[60]) -> ref(1,41,0)={t:"Four",v:4}[84]
  854:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,41,0)[84], parent_tp=12, fld=0)
  859:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[72]
  862:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,45,0)[72]
  867:[84] PutRef(var[60], value=ref(1,45,0)[72])
  870:[72] VarRef(var[60]) -> ref(1,45,0)={}[72]
  873:[84] ConstText(_value="Five") -> "Five"[84]
  879:[100] SetText(v1=ref(1,45,0)[72], fld=4, val="Five"[84])
  882:[72] VarRef(var[60]) -> ref(1,45,0)={t:"Five"}[72]
  885:[84] ConstInt(val=5) -> 5[84]
  890:[88] SetInt(v1=ref(1,45,0)[72], fld=8, val=5[84])
  893:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[72]
  896:[84] VarRef(var[60]) -> ref(1,45,0)={t:"Five",v:5}[84]
  899:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,45,0)[84], parent_tp=12, fld=0)
  904:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[72]
  907:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,49,0)[72]
  912:[84] PutRef(var[60], value=ref(1,49,0)[72])
  915:[72] VarRef(var[60]) -> ref(1,49,0)={}[72]
  918:[84] ConstText(_value="Six") -> "Six"[84]
  923:[100] SetText(v1=ref(1,49,0)[72], fld=4, val="Six"[84])
  926:[72] VarRef(var[60]) -> ref(1,49,0)={t:"Six"}[72]
  929:[84] ConstInt(val=6) -> 6[84]
  934:[88] SetInt(v1=ref(1,49,0)[72], fld=8, val=6[84])
  937:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[72]
  940:[84] VarRef(var[60]) -> ref(1,49,0)={t:"Six",v:6}[84]
  943:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,49,0)[84], parent_tp=12, fld=0)
  948:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[72]
  951:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,53,0)[72]
  956:[84] PutRef(var[60], value=ref(1,53,0)[72])
  959:[72] VarRef(var[60]) -> ref(1,53,0)={}[72]
  962:[84] ConstText(_value="Seven") -> "Seven"[84]
  969:[100] SetText(v1=ref(1,53,0)[72], fld=4, val="Seven"[84])
  972:[72] VarRef(var[60]) -> ref(1,53,0)={t:"Seven"}[72]
  975:[84] ConstInt(val=7) -> 7[84]
  980:[88] SetInt(v1=ref(1,53,0)[72], fld=8, val=7[84])
  983:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[72]
  986:[84] VarRef(var[60]) -> ref(1,53,0)={t:"Seven",v:7}[84]
  989:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,53,0)[84], parent_tp=12, fld=0)
  994:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[72]
  997:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,57,0)[72]
 1002:[84] PutRef(var[60], value=ref(1,57,0)[72])
 1005:[72] VarRef(var[60]) -> ref(1,57,0)={}[72]
 1008:[84] ConstText(_value="Eight") -> "Eight"[84]
 1015:[100] SetText(v1=ref(1,57,0)[72], fld=4, val="Eight"[84])
 1018:[72] VarRef(var[60]) -> ref(1,57,0)={t:"Eight"}[72]
 1021:[84] ConstInt(val=8) -> 8[84]
 1026:[88] SetInt(v1=ref(1,57,0)[72], fld=8, val=8[84])
 1029:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[72]
 1032:[84] VarRef(var[60]) -> ref(1,57,0)={t:"Eight",v:8}[84]
 1035:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,57,0)[84], parent_tp=12, fld=0)
 1040:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[72]
 1043:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,61,0)[72]
 1048:[84] PutRef(var[60], value=ref(1,61,0)[72])
 1051:[72] VarRef(var[60]) -> ref(1,61,0)={}[72]
 1054:[84] ConstText(_value="Nine") -> "Nine"[84]
 1060:[100] SetText(v1=ref(1,61,0)[72], fld=4, val="Nine"[84])
 1063:[72] VarRef(var[60]) -> ref(1,61,0)={t:"Nine"}[72]
 1066:[84] ConstInt(val=9) -> 9[84]
 1071:[88] SetInt(v1=ref(1,61,0)[72], fld=8, val=9[84])
 1074:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[72]
 1077:[84] VarRef(var[60]) -> ref(1,61,0)={t:"Nine",v:9}[84]
 1080:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,61,0)[84], parent_tp=12, fld=0)
 1085:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[72]
 1088:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,65,0)[72]
 1093:[84] PutRef(var[60], value=ref(1,65,0)[72])
 1096:[72] VarRef(var[60]) -> ref(1,65,0)={}[72]
 1099:[84] ConstText(_value="Ten") -> "Ten"[84]
 1104:[100] SetText(v1=ref(1,65,0)[72], fld=4, val="Ten"[84])
 1107:[72] VarRef(var[60]) -> ref(1,65,0)={t:"Ten"}[72]
 1110:[84] ConstInt(val=10) -> 10[84]
 1115:[88] SetInt(v1=ref(1,65,0)[72], fld=8, val=10[84])
 1118:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[72]
 1121:[84] VarRef(var[60]) -> ref(1,65,0)={t:"Ten",v:10}[84]
 1124:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,65,0)[84], parent_tp=12, fld=0)
 1129:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[72]
 1132:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,69,0)[72]
 1137:[84] PutRef(var[60], value=ref(1,69,0)[72])
 1140:[72] VarRef(var[60]) -> ref(1,69,0)={}[72]
 1143:[84] ConstText(_value="Eleven") -> "Eleven"[84]
 1151:[100] SetText(v1=ref(1,69,0)[72], fld=4, val="Eleven"[84])
 1154:[72] VarRef(var[60]) -> ref(1,69,0)={t:"Eleven"}[72]
 1157:[84] ConstInt(val=11) -> 11[84]
 1162:[88] SetInt(v1=ref(1,69,0)[72], fld=8, val=11[84])
 1165:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[72]
 1168:[84] VarRef(var[60]) -> ref(1,69,0)={t:"Eleven",v:11}[84]
 1171:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,69,0)[84], parent_tp=12, fld=0)
 1176:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[72]
 1179:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,90,0)[72]
 1184:[84] PutRef(var[60], value=ref(1,90,0)[72])
 1187:[72] VarRef(var[60]) -> ref(1,90,0)={}[72]
 1190:[84] ConstText(_value="Twelve") -> "Twelve"[84]
 1198:[100] SetText(v1=ref(1,90,0)[72], fld=4, val="Twelve"[84])
 1201:[72] VarRef(var[60]) -> ref(1,90,0)={t:"Twelve"}[72]
 1204:[84] ConstInt(val=12) -> 12[84]
 1209:[88] SetInt(v1=ref(1,90,0)[72], fld=8, val=12[84])
 1212:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[72]
 1215:[84] VarRef(var[60]) -> ref(1,90,0)={t:"Twelve",v:12}[84]
 1218:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,90,0)[84], parent_tp=12, fld=0)
 1223:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[72]
 1226:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,94,0)[72]
 1231:[84] PutRef(var[60], value=ref(1,94,0)[72])
 1234:[72] VarRef(var[60]) -> ref(1,94,0)={}[72]
 1237:[84] ConstText(_value="Thirteen") -> "Thirteen"[84]
 1247:[100] SetText(v1=ref(1,94,0)[72], fld=4, val="Thirteen"[84])
 1250:[72] VarRef(var[60]) -> ref(1,94,0)={t:"Thirteen"}[72]
 1253:[84] ConstInt(val=13) -> 13[84]
 1258:[88] SetInt(v1=ref(1,94,0)[72], fld=8, val=13[84])
 1261:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[72]
 1264:[84] VarRef(var[60]) -> ref(1,94,0)={t:"Thirteen",v:13}[84]
 1267:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,94,0)[84], parent_tp=12, fld=0)
 1272:[72] FreeStack(value=0, discard=12)
 1276:[60] Return(ret=1327[56], value=0, discard=16)
 1327:[44] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[44]
 1330:[56] GetField(v1=ref(1,1,0)[44], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][44]
 1333:[56] ConstText(_value="Five") -> "Five"[56]
 1339:[72] GetRecord(data=ref(1,1,8)[44], db_tp=14, no_keys=1, key1="Five"[56]) -> ref(1,45,0)[44]
 1343:[56] GetInt(v1=ref(1,45,0)[44], fld=8) -> 5[44]
 1346:[48] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[48]
 1349:[60] GetField(v1=ref(1,1,0)[48], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][48]
 1352:[60] ConstText(_value="Seven") -> "Seven"[60]
 1359:[76] GetRecord(data=ref(1,1,8)[48], db_tp=14, no_keys=1, key1="Seven"[60]) -> ref(1,53,0)[48]
 1363:[60] GetInt(v1=ref(1,53,0)[48], fld=8) -> 7[48]
 1366:[52] AddInt(v1=5[44], v2=7[48]) -> 12[44]
 1367:[48] FreeStack(value=4, discard=12)
 1371:[36] VarInt(var[32]) -> 12[36]
 1374:[40] ConstInt(val=12) -> 12[40]
 1379:[44] EqInt(v1=12[36], v2=12[40]) -> true[36]
 1380:[37] GotoFalseWord(jump=1386, if_false=true[36])
 1383:[36] GotoWord(jump=1436)
 1436:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
