struct Count { t: text, v: integer};
struct Counting { v: vector<Count>, h: hash<Count[t]> };
fn fill(c: Counting) {
  c.v = [
    {t:"One", v:1},
    {t:"Two", v:2},
  ];
  c.v += [
    {t:"Three", v:3},
    {t:"Four", v:4},
    {t:"Five", v:5},
    {t:"Six", v:6},
    {t:"Seven", v:7},
    {t:"Eight", v:8},
    {t:"Nine", v:9},
    {t:"Ten", v:10},
    {t:"Eleven", v:11},
    {t:"Twelve", v:12},
    {t:"Thirteen", v:13}
  ];
}

pub fn test() {
    test_value = {c = Counting {}; fill(c); c.h["Five"].v + c.h["Seven"].v};
    assert(
        test_value == 12,
        "Test failed {test_value} != 12"
    );
}
Type 11:Count[12]:
    t:text[4]
    v:integer[8]

Type 12:Counting[12]:
    v:array<Count>[4] other [1]
    h:hash<Count[t]>[8] other [65535]

Type 13:array<Count>[4]:Array(11)

Type 14:hash<Count[t]>[4]:Hash(11, [0]) keys [tp:6 desc:false field:4, ]

fn fill(c:Counting) {#1 block
  {#2 vector
    _elm_1:Count = OpNewRecord(c, 12i32, 0i32);
    {#3 object
      OpSetText(_elm_1, 4i32, "One");
      OpSetInt(_elm_1, 8i32, 1i32);
    }#3;
    OpFinishRecord(c, _elm_1, 12i32, 0i32);
    _elm_1:Count = OpNewRecord(c, 12i32, 0i32);
    {#4 object
      OpSetText(_elm_1, 4i32, "Two");
      OpSetInt(_elm_1, 8i32, 2i32);
    }#4;
    OpFinishRecord(c, _elm_1, 12i32, 0i32);
  }#2;
  {#5 vector
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#6 object
      OpSetText(_elm_2, 4i32, "Three");
      OpSetInt(_elm_2, 8i32, 3i32);
    }#6;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#7 object
      OpSetText(_elm_2, 4i32, "Four");
      OpSetInt(_elm_2, 8i32, 4i32);
    }#7;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#8 object
      OpSetText(_elm_2, 4i32, "Five");
      OpSetInt(_elm_2, 8i32, 5i32);
    }#8;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#9 object
      OpSetText(_elm_2, 4i32, "Six");
      OpSetInt(_elm_2, 8i32, 6i32);
    }#9;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#10 object
      OpSetText(_elm_2, 4i32, "Seven");
      OpSetInt(_elm_2, 8i32, 7i32);
    }#10;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#11 object
      OpSetText(_elm_2, 4i32, "Eight");
      OpSetInt(_elm_2, 8i32, 8i32);
    }#11;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#12 object
      OpSetText(_elm_2, 4i32, "Nine");
      OpSetInt(_elm_2, 8i32, 9i32);
    }#12;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#13 object
      OpSetText(_elm_2, 4i32, "Ten");
      OpSetInt(_elm_2, 8i32, 10i32);
    }#13;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#14 object
      OpSetText(_elm_2, 4i32, "Eleven");
      OpSetInt(_elm_2, 8i32, 11i32);
    }#14;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#15 object
      OpSetText(_elm_2, 4i32, "Twelve");
      OpSetInt(_elm_2, 8i32, 12i32);
    }#15;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
    _elm_2:Count = OpNewRecord(c, 12i32, 0i32);
    {#16 object
      OpSetText(_elm_2, 4i32, "Thirteen");
      OpSetInt(_elm_2, 8i32, 13i32);
    }#16;
    OpFinishRecord(c, _elm_2, 12i32, 0i32);
  }#5;
}#1

byte-code for hash:fill(c: Counting[0])
 675[12]: return-address
 675[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 678[28]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 683[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 686[40]: ConstText(_value="One") -> text
 691[56]: SetText(v1: reference, fld=4, val: text)
 694[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 697[40]: ConstInt(val=1) -> integer
 702[44]: SetInt(v1: reference, fld=8, val: integer)
 705[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 708[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 711[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 716[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 719[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 724[40]: PutRef(var[16], value: reference)
 727[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 730[40]: ConstText(_value="Two") -> text
 735[56]: SetText(v1: reference, fld=4, val: text)
 738[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 741[40]: ConstInt(val=2) -> integer
 746[44]: SetInt(v1: reference, fld=8, val: integer)
 749[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 752[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 755[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 760[28]: FreeStack(value=0, discard=12)
 764[16]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 767[28]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 772[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 775[40]: ConstText(_value="Three") -> text
 782[56]: SetText(v1: reference, fld=4, val: text)
 785[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 788[40]: ConstInt(val=3) -> integer
 793[44]: SetInt(v1: reference, fld=8, val: integer)
 796[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 799[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 802[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 807[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 810[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 815[40]: PutRef(var[16], value: reference)
 818[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 821[40]: ConstText(_value="Four") -> text
 827[56]: SetText(v1: reference, fld=4, val: text)
 830[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 833[40]: ConstInt(val=4) -> integer
 838[44]: SetInt(v1: reference, fld=8, val: integer)
 841[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 844[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 847[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 852[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 855[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 860[40]: PutRef(var[16], value: reference)
 863[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 866[40]: ConstText(_value="Five") -> text
 872[56]: SetText(v1: reference, fld=4, val: text)
 875[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 878[40]: ConstInt(val=5) -> integer
 883[44]: SetInt(v1: reference, fld=8, val: integer)
 886[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 889[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 892[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 897[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 900[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 905[40]: PutRef(var[16], value: reference)
 908[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 911[40]: ConstText(_value="Six") -> text
 916[56]: SetText(v1: reference, fld=4, val: text)
 919[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 922[40]: ConstInt(val=6) -> integer
 927[44]: SetInt(v1: reference, fld=8, val: integer)
 930[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 933[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 936[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 941[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 944[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 949[40]: PutRef(var[16], value: reference)
 952[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 955[40]: ConstText(_value="Seven") -> text
 962[56]: SetText(v1: reference, fld=4, val: text)
 965[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 968[40]: ConstInt(val=7) -> integer
 973[44]: SetInt(v1: reference, fld=8, val: integer)
 976[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 979[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
 982[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
 987[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
 990[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
 995[40]: PutRef(var[16], value: reference)
 998[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1001[40]: ConstText(_value="Eight") -> text
1008[56]: SetText(v1: reference, fld=4, val: text)
1011[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1014[40]: ConstInt(val=8) -> integer
1019[44]: SetInt(v1: reference, fld=8, val: integer)
1022[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1025[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1028[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1033[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1036[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1041[40]: PutRef(var[16], value: reference)
1044[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1047[40]: ConstText(_value="Nine") -> text
1053[56]: SetText(v1: reference, fld=4, val: text)
1056[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1059[40]: ConstInt(val=9) -> integer
1064[44]: SetInt(v1: reference, fld=8, val: integer)
1067[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1070[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1073[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1078[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1081[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1086[40]: PutRef(var[16], value: reference)
1089[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1092[40]: ConstText(_value="Ten") -> text
1097[56]: SetText(v1: reference, fld=4, val: text)
1100[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1103[40]: ConstInt(val=10) -> integer
1108[44]: SetInt(v1: reference, fld=8, val: integer)
1111[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1114[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1117[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1122[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1125[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1130[40]: PutRef(var[16], value: reference)
1133[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1136[40]: ConstText(_value="Eleven") -> text
1144[56]: SetText(v1: reference, fld=4, val: text)
1147[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1150[40]: ConstInt(val=11) -> integer
1155[44]: SetInt(v1: reference, fld=8, val: integer)
1158[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1161[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1164[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1169[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1172[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1177[40]: PutRef(var[16], value: reference)
1180[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1183[40]: ConstText(_value="Twelve") -> text
1191[56]: SetText(v1: reference, fld=4, val: text)
1194[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1197[40]: ConstInt(val=12) -> integer
1202[44]: SetInt(v1: reference, fld=8, val: integer)
1205[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1208[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1211[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1216[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1219[40]: NewRecord(data: reference, parent_tp=12, fld=0) -> reference
1224[40]: PutRef(var[16], value: reference)
1227[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1230[40]: ConstText(_value="Thirteen") -> text
1240[56]: SetText(v1: reference, fld=4, val: text)
1243[28]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1246[40]: ConstInt(val=13) -> integer
1251[44]: SetInt(v1: reference, fld=8, val: integer)
1254[28]: VarRef(var[0]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1257[40]: VarRef(var[16]) -> reference type=Count[12]:{t:text[4], v:integer[8]}[11]
1260[52]: FinishRecord(data: reference, rec: reference, parent_tp=12, fld=0)
1265[28]: FreeStack(value=0, discard=12)
1269[16]: Return(ret=12, value=0, discard=16)

fn test() {#1 block
  __work_1:text = "";
  test_value:integer = {#2 block
    c:Counting = {#3 object
      _val_1:Counting = OpDatabase(12i32, 12i32);
      OpSetInt(_val_1, 4i32, 0i32);
      OpSetInt(_val_1, 8i32, 0i32);
      _val_1;
    }#3:Counting;
    fill(c);
    OpAddInt(OpGetInt(OpGetRecord(OpGetField(c, 8i32, 14i32), 14i32, 1i32, "Five"), 8i32), OpGetInt(OpGetRecord(OpGetField(c, 8i32, 14i32), 14i32, 1i32, "Seven"), 8i32));
  }#2:integer;
  if OpEqInt(test_value, 12i32) null else OpPanic({#4 formatting string
    __work_1:text = "Test failed ";
    OpFormatInt(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 12");
    __work_1;
  }#4:text);
}#1

byte-code for hash:test()
1275[0]: return-address
1275[4]: Text()
1276[28]: Database(size=12, db_tp=12) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1281[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1284[52]: ConstInt(val=0) -> integer
1289[56]: SetInt(v1: reference, fld=4, val: integer)
1292[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1295[52]: ConstInt(val=0) -> integer
1300[56]: SetInt(v1: reference, fld=8, val: integer)
1303[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1306[52]: FreeStack(value=12, discard=12) type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1310[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1313[52]: Call(size=0, to=675)
1320[40]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1323[52]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(11, [0]) keys [tp:6 desc:false field:4, ][14]
1326[52]: ConstText(_value="Five") -> text
1332[68]: GetRecord(data: reference, db_tp=14, no_keys=1) -> reference
1336[52]: GetInt(v1: reference, fld=8) -> integer
1339[44]: VarRef(var[28]) -> reference type=Counting[12]:{v:array<Count>[4] other [1], h:hash<Count[t]>[8] other [65535]}[12]
1342[56]: GetField(v1: reference, fld=8) -> reference type=hash<Count[t]>[4]:Hash(11, [0]) keys [tp:6 desc:false field:4, ][14]
1345[56]: ConstText(_value="Seven") -> text
1352[72]: GetRecord(data: reference, db_tp=14, no_keys=1) -> reference
1356[56]: GetInt(v1: reference, fld=8) -> integer
1359[48]: AddInt(v1: integer, v2: integer) -> integer
1360[44]: FreeStack(value=4, discard=12) type=integer[4]:Base[0]
1364[32]: VarInt(var[28]) -> integer
1367[36]: ConstInt(val=12) -> integer
1372[40]: EqInt(v1: integer, v2: integer) -> boolean
1373[33]: GotoFalseWord(jump=1379, if_false: boolean)
1376[32]: GotoWord(jump=1429)
1379[32]: ClearText(var[4])
1382[32]: ConstText(_value="Test failed ") -> text
1396[48]: AppendText(var[4], v1: text)
1399[32]: VarInt(var[28]) -> integer
1402[36]: ConstInt(val=0) -> integer
1407[40]: FormatInt(var[4], val: integer, radix=10, width: integer, token=32, plus=false, note=false)
1414[32]: ConstText(_value=" != 12") -> text
1422[48]: AppendText(var[4], v1: text)
1425[32]: VarText(var[4]) -> text
1428[48]: Panic(message: text)
1429[32]: Return(ret=0, value=0, discard=32)

Execute test:
 1275:[8] Text()
 1276:[32] Database(size=12, db_tp=12) -> ref(1,1,0)={v:[]}[32]
 1281:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1284:[56] ConstInt(val=0) -> 0[56]
 1289:[60] SetInt(v1=ref(1,1,0)[44], fld=4, val=0[56])
 1292:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1295:[56] ConstInt(val=0) -> 0[56]
 1300:[60] SetInt(v1=ref(1,1,0)[44], fld=8, val=0[56])
 1303:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1306:[56] FreeStack(value=12, discard=12)
 1310:[44] VarRef(var[32]) -> ref(1,1,0)={v:[]}[44]
 1313:[56] Call(size=0, to=675)
  675:[60] VarRef(var[44]) -> ref(1,1,0)={v:[]}[60]
  678:[72] NewRecord(data=ref(1,1,0)[60], parent_tp=12, fld=0) -> ref(1,13,0)[60]
  683:[72] VarRef(var[60]) -> ref(1,13,0)={}[72]
  686:[84] ConstText(_value="One") -> "One"[84]
  691:[100] SetText(v1=ref(1,13,0)[72], fld=4, val="One"[84])
  694:[72] VarRef(var[60]) -> ref(1,13,0)={t:"One"}[72]
  697:[84] ConstInt(val=1) -> 1[84]
  702:[88] SetInt(v1=ref(1,13,0)[72], fld=8, val=1[84])
  705:[72] VarRef(var[44]) -> ref(1,1,0)={v:[]}[72]
  708:[84] VarRef(var[60]) -> ref(1,13,0)={t:"One",v:1}[84]
  711:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,13,0)[84], parent_tp=12, fld=0)
  716:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[72]
  719:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,33,0)[72]
  724:[84] PutRef(var[60], value=ref(1,33,0)[72])
  727:[72] VarRef(var[60]) -> ref(1,33,0)={}[72]
  730:[84] ConstText(_value="Two") -> "Two"[84]
  735:[100] SetText(v1=ref(1,33,0)[72], fld=4, val="Two"[84])
  738:[72] VarRef(var[60]) -> ref(1,33,0)={t:"Two"}[72]
  741:[84] ConstInt(val=2) -> 2[84]
  746:[88] SetInt(v1=ref(1,33,0)[72], fld=8, val=2[84])
  749:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1}]}[72]
  752:[84] VarRef(var[60]) -> ref(1,33,0)={t:"Two",v:2}[84]
  755:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,33,0)[84], parent_tp=12, fld=0)
  760:[72] FreeStack(value=0, discard=12)
  764:[60] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[60]
  767:[72] NewRecord(data=ref(1,1,0)[60], parent_tp=12, fld=0) -> ref(1,37,0)[60]
  772:[72] VarRef(var[60]) -> ref(1,37,0)={}[72]
  775:[84] ConstText(_value="Three") -> "Three"[84]
  782:[100] SetText(v1=ref(1,37,0)[72], fld=4, val="Three"[84])
  785:[72] VarRef(var[60]) -> ref(1,37,0)={t:"Three"}[72]
  788:[84] ConstInt(val=3) -> 3[84]
  793:[88] SetInt(v1=ref(1,37,0)[72], fld=8, val=3[84])
  796:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2}]}[72]
  799:[84] VarRef(var[60]) -> ref(1,37,0)={t:"Three",v:3}[84]
  802:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,37,0)[84], parent_tp=12, fld=0)
  807:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[72]
  810:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,41,0)[72]
  815:[84] PutRef(var[60], value=ref(1,41,0)[72])
  818:[72] VarRef(var[60]) -> ref(1,41,0)={}[72]
  821:[84] ConstText(_value="Four") -> "Four"[84]
  827:[100] SetText(v1=ref(1,41,0)[72], fld=4, val="Four"[84])
  830:[72] VarRef(var[60]) -> ref(1,41,0)={t:"Four"}[72]
  833:[84] ConstInt(val=4) -> 4[84]
  838:[88] SetInt(v1=ref(1,41,0)[72], fld=8, val=4[84])
  841:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3}]}[72]
  844:[84] VarRef(var[60]) -> ref(1,41,0)={t:"Four",v:4}[84]
  847:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,41,0)[84], parent_tp=12, fld=0)
  852:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[72]
  855:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,45,0)[72]
  860:[84] PutRef(var[60], value=ref(1,45,0)[72])
  863:[72] VarRef(var[60]) -> ref(1,45,0)={}[72]
  866:[84] ConstText(_value="Five") -> "Five"[84]
  872:[100] SetText(v1=ref(1,45,0)[72], fld=4, val="Five"[84])
  875:[72] VarRef(var[60]) -> ref(1,45,0)={t:"Five"}[72]
  878:[84] ConstInt(val=5) -> 5[84]
  883:[88] SetInt(v1=ref(1,45,0)[72], fld=8, val=5[84])
  886:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4}]}[72]
  889:[84] VarRef(var[60]) -> ref(1,45,0)={t:"Five",v:5}[84]
  892:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,45,0)[84], parent_tp=12, fld=0)
  897:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[72]
  900:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,49,0)[72]
  905:[84] PutRef(var[60], value=ref(1,49,0)[72])
  908:[72] VarRef(var[60]) -> ref(1,49,0)={}[72]
  911:[84] ConstText(_value="Six") -> "Six"[84]
  916:[100] SetText(v1=ref(1,49,0)[72], fld=4, val="Six"[84])
  919:[72] VarRef(var[60]) -> ref(1,49,0)={t:"Six"}[72]
  922:[84] ConstInt(val=6) -> 6[84]
  927:[88] SetInt(v1=ref(1,49,0)[72], fld=8, val=6[84])
  930:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5}]}[72]
  933:[84] VarRef(var[60]) -> ref(1,49,0)={t:"Six",v:6}[84]
  936:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,49,0)[84], parent_tp=12, fld=0)
  941:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[72]
  944:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,53,0)[72]
  949:[84] PutRef(var[60], value=ref(1,53,0)[72])
  952:[72] VarRef(var[60]) -> ref(1,53,0)={}[72]
  955:[84] ConstText(_value="Seven") -> "Seven"[84]
  962:[100] SetText(v1=ref(1,53,0)[72], fld=4, val="Seven"[84])
  965:[72] VarRef(var[60]) -> ref(1,53,0)={t:"Seven"}[72]
  968:[84] ConstInt(val=7) -> 7[84]
  973:[88] SetInt(v1=ref(1,53,0)[72], fld=8, val=7[84])
  976:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6}]}[72]
  979:[84] VarRef(var[60]) -> ref(1,53,0)={t:"Seven",v:7}[84]
  982:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,53,0)[84], parent_tp=12, fld=0)
  987:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[72]
  990:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,57,0)[72]
  995:[84] PutRef(var[60], value=ref(1,57,0)[72])
  998:[72] VarRef(var[60]) -> ref(1,57,0)={}[72]
 1001:[84] ConstText(_value="Eight") -> "Eight"[84]
 1008:[100] SetText(v1=ref(1,57,0)[72], fld=4, val="Eight"[84])
 1011:[72] VarRef(var[60]) -> ref(1,57,0)={t:"Eight"}[72]
 1014:[84] ConstInt(val=8) -> 8[84]
 1019:[88] SetInt(v1=ref(1,57,0)[72], fld=8, val=8[84])
 1022:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7}]}[72]
 1025:[84] VarRef(var[60]) -> ref(1,57,0)={t:"Eight",v:8}[84]
 1028:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,57,0)[84], parent_tp=12, fld=0)
 1033:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[72]
 1036:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,61,0)[72]
 1041:[84] PutRef(var[60], value=ref(1,61,0)[72])
 1044:[72] VarRef(var[60]) -> ref(1,61,0)={}[72]
 1047:[84] ConstText(_value="Nine") -> "Nine"[84]
 1053:[100] SetText(v1=ref(1,61,0)[72], fld=4, val="Nine"[84])
 1056:[72] VarRef(var[60]) -> ref(1,61,0)={t:"Nine"}[72]
 1059:[84] ConstInt(val=9) -> 9[84]
 1064:[88] SetInt(v1=ref(1,61,0)[72], fld=8, val=9[84])
 1067:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8}]}[72]
 1070:[84] VarRef(var[60]) -> ref(1,61,0)={t:"Nine",v:9}[84]
 1073:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,61,0)[84], parent_tp=12, fld=0)
 1078:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[72]
 1081:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,65,0)[72]
 1086:[84] PutRef(var[60], value=ref(1,65,0)[72])
 1089:[72] VarRef(var[60]) -> ref(1,65,0)={}[72]
 1092:[84] ConstText(_value="Ten") -> "Ten"[84]
 1097:[100] SetText(v1=ref(1,65,0)[72], fld=4, val="Ten"[84])
 1100:[72] VarRef(var[60]) -> ref(1,65,0)={t:"Ten"}[72]
 1103:[84] ConstInt(val=10) -> 10[84]
 1108:[88] SetInt(v1=ref(1,65,0)[72], fld=8, val=10[84])
 1111:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9}]}[72]
 1114:[84] VarRef(var[60]) -> ref(1,65,0)={t:"Ten",v:10}[84]
 1117:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,65,0)[84], parent_tp=12, fld=0)
 1122:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[72]
 1125:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,69,0)[72]
 1130:[84] PutRef(var[60], value=ref(1,69,0)[72])
 1133:[72] VarRef(var[60]) -> ref(1,69,0)={}[72]
 1136:[84] ConstText(_value="Eleven") -> "Eleven"[84]
 1144:[100] SetText(v1=ref(1,69,0)[72], fld=4, val="Eleven"[84])
 1147:[72] VarRef(var[60]) -> ref(1,69,0)={t:"Eleven"}[72]
 1150:[84] ConstInt(val=11) -> 11[84]
 1155:[88] SetInt(v1=ref(1,69,0)[72], fld=8, val=11[84])
 1158:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10}]}[72]
 1161:[84] VarRef(var[60]) -> ref(1,69,0)={t:"Eleven",v:11}[84]
 1164:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,69,0)[84], parent_tp=12, fld=0)
 1169:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[72]
 1172:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,90,0)[72]
 1177:[84] PutRef(var[60], value=ref(1,90,0)[72])
 1180:[72] VarRef(var[60]) -> ref(1,90,0)={}[72]
 1183:[84] ConstText(_value="Twelve") -> "Twelve"[84]
 1191:[100] SetText(v1=ref(1,90,0)[72], fld=4, val="Twelve"[84])
 1194:[72] VarRef(var[60]) -> ref(1,90,0)={t:"Twelve"}[72]
 1197:[84] ConstInt(val=12) -> 12[84]
 1202:[88] SetInt(v1=ref(1,90,0)[72], fld=8, val=12[84])
 1205:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11}]}[72]
 1208:[84] VarRef(var[60]) -> ref(1,90,0)={t:"Twelve",v:12}[84]
 1211:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,90,0)[84], parent_tp=12, fld=0)
 1216:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[72]
 1219:[84] NewRecord(data=ref(1,1,0)[72], parent_tp=12, fld=0) -> ref(1,94,0)[72]
 1224:[84] PutRef(var[60], value=ref(1,94,0)[72])
 1227:[72] VarRef(var[60]) -> ref(1,94,0)={}[72]
 1230:[84] ConstText(_value="Thirteen") -> "Thirteen"[84]
 1240:[100] SetText(v1=ref(1,94,0)[72], fld=4, val="Thirteen"[84])
 1243:[72] VarRef(var[60]) -> ref(1,94,0)={t:"Thirteen"}[72]
 1246:[84] ConstInt(val=13) -> 13[84]
 1251:[88] SetInt(v1=ref(1,94,0)[72], fld=8, val=13[84])
 1254:[72] VarRef(var[44]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12}]}[72]
 1257:[84] VarRef(var[60]) -> ref(1,94,0)={t:"Thirteen",v:13}[84]
 1260:[96] FinishRecord(data=ref(1,1,0)[72], rec=ref(1,94,0)[84], parent_tp=12, fld=0)
 1265:[72] FreeStack(value=0, discard=12)
 1269:[60] Return(ret=1320[56], value=0, discard=16)
 1320:[44] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[44]
 1323:[56] GetField(v1=ref(1,1,0)[44], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][44]
 1326:[56] ConstText(_value="Five") -> "Five"[56]
 1332:[72] GetRecord(data=ref(1,1,8)[44], db_tp=14, no_keys=1, key1="Five"[56]) -> ref(1,45,0)[44]
 1336:[56] GetInt(v1=ref(1,45,0)[44], fld=8) -> 5[44]
 1339:[48] VarRef(var[32]) -> ref(1,1,0)={v:[{t:"One",v:1},{t:"Two",v:2},{t:"Three",v:3},{t:"Four",v:4},{t:"Five",v:5},{t:"Six",v:6},{t:"Seven",v:7},{t:"Eight",v:8},{t:"Nine",v:9},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"Twelve",v:12},{t:"Thirteen",v:13}]}[48]
 1342:[60] GetField(v1=ref(1,1,0)[48], fld=8) -> ref(1,1,8)=[{t:"Three",v:3},{t:"Thirteen",v:13},{t:"Six",v:6},{t:"Eight",v:8},{t:"Four",v:4},{t:"Five",v:5},{t:"Ten",v:10},{t:"Eleven",v:11},{t:"One",v:1},{t:"Twelve",v:12},{t:"Nine",v:9},{t:"Two",v:2},{t:"Seven",v:7}][48]
 1345:[60] ConstText(_value="Seven") -> "Seven"[60]
 1352:[76] GetRecord(data=ref(1,1,8)[48], db_tp=14, no_keys=1, key1="Seven"[60]) -> ref(1,53,0)[48]
 1356:[60] GetInt(v1=ref(1,53,0)[48], fld=8) -> 7[48]
 1359:[52] AddInt(v1=5[44], v2=7[48]) -> 12[44]
 1360:[48] FreeStack(value=4, discard=12)
 1364:[36] VarInt(var[32]) -> 12[36]
 1367:[40] ConstInt(val=12) -> 12[40]
 1372:[44] EqInt(v1=12[36], v2=12[40]) -> true[36]
 1373:[37] GotoFalseWord(jump=1379, if_false=true[36])
 1376:[36] GotoWord(jump=1429)
 1429:[36] Return(ret=4294967295[4], value=0, discard=32)
Finished
