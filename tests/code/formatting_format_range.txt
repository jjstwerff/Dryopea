Test code:
pub fn test() {
    test_value = {"a{for x in 1..7 {x*2}:02}b"};
    assert(
        test_value == "a[02,04,06,08,10,12]b",
        "Test failed {test_value} != \"a[02,04,06,08,10,12]b\""
    );
}

fn test {
  let test_value = {
    {
      let append_10 = "a";
      OpAppendText(append_10, "[");
      let x#index = OpConvIntFromNull();
      let first_11 = true;
      loop {
        let val_12 = {
          let x = {
            x#index = if OpNot(OpConvBoolFromInt(x#index)) {1i32} else {OpAddInt(x#index, 1i32)};
            if OpGeInt(x#index, 7i32) {break(0)} else {null};
            x#index;
          };
          OpMulInt(x, 2i32);
        };
        if first_11 {first_11 = false} else {OpAppendText(append_10, ",")};
        OpFormatInt(append_10, val_12, 10i32, 2i32, 48i32, false, false);
      };
      OpAppendText(append_10, "]");
      OpAppendText(append_10, "b");
      append_10;
    };
  };
  if OpEqText(test_value, "a[02,04,06,08,10,12]b") {null} else {OpGenPanic({
    let append_13 = "Test failed ";
    OpFormatText(append_13, test_value, 0i32, -1i32, 32i32);
    OpAppendText(append_13, " != "a[02,04,06,08,10,12]b"");
    append_13;
  })};
}

byte-code for format_range:test()
 664[0]: return-address
 664[4]: Text()
 665[28]: Text()
 666[52]: ConstText(_value="a") -> text
 669[68]: AppendText(var[28], v1: text)
 672[52]: ConstText(_value="[") -> text
 675[68]: AppendText(var[28], v1: text)
 678[52]: ConvIntFromNull() -> integer
 679[56]: ConstTrue() -> boolean
 680[57]: VarInt(var[52]) -> integer
 683[61]: ConvBoolFromInt(v1: integer) -> boolean
 684[58]: Not(v1: boolean) -> boolean
 685[58]: GenGotoFalseWord(jump=696, if_false: boolean)
 688[57]: ConstInt(val=1) -> integer
 693[61]: GenGotoWord(jump=705)
 696[57]: VarInt(var[52]) -> integer
 699[61]: ConstInt(val=1) -> integer
 704[65]: AddInt(v1: integer, v2: integer) -> integer
 705[61]: PutInt(var[52], value: integer)
 708[57]: VarInt(var[52]) -> integer
 711[61]: ConstInt(val=7) -> integer
 716[65]: GeInt(v1: integer, v2: integer) -> boolean
 717[58]: GenGotoFalseWord(jump=723, if_false: boolean)
 720[57]: GenGotoWord(jump=780)
 723[57]: VarInt(var[52]) -> integer
 726[61]: VarInt(var[57]) -> integer
 729[65]: ConstInt(val=2) -> integer
 734[69]: MulInt(v1: integer, v2: integer) -> integer
 735[65]: GenFreeStack(value=4, discard=4)
 739[61]: VarBool(var[56]) -> boolean
 742[62]: GenGotoFalseWord(jump=752, if_false: boolean)
 745[61]: ConstFalse() -> boolean
 746[62]: PutBool(var=6, value: boolean)
 749[61]: GenGotoWord(jump=758)
 752[61]: ConstText(_value=",") -> text
 755[77]: AppendText(var[28], v1: text)
 758[61]: VarInt(var[57]) -> integer
 761[65]: ConstInt(val=2) -> integer
 766[69]: FormatInt(var[28], val: integer, radix=10, width: integer, token=48, plus=false, note=false)
 773[61]: GenFreeStack(value=0, discard=4)
 777[57]: GenGotoWord(jump=680)
 780[57]: ConstText(_value="]") -> text
 783[73]: AppendText(var[28], v1: text)
 786[57]: ConstText(_value="b") -> text
 789[73]: AppendText(var[28], v1: text)
 792[57]: VarText(var[28]) -> text
 795[73]: GenFreeStack(value=16, discard=29)
 799[44]: AppendText(var[4], v1: text)
 802[28]: VarText(var[4]) -> text
 805[44]: ConstText(_value="a[02,04,06,08,10,12]b") -> text
 828[60]: EqText(v1: text, v2: text) -> boolean
 829[29]: GenGotoFalseWord(jump=835, if_false: boolean)
 832[28]: GenGotoWord(jump=906)
 835[28]: Text()
 836[52]: ConstText(_value="Test failed ") -> text
 850[68]: AppendText(var[28], v1: text)
 853[52]: VarText(var[4]) -> text
 856[68]: ConstInt(val=0) -> integer
 861[72]: FormatText(var[28], val: text, width: integer, dir=-1, token=32)
 866[52]: ConstText(_value=" != "a[02,04,06,08,10,12]b"") -> text
 895[68]: AppendText(var[28], v1: text)
 898[52]: VarText(var[28]) -> text
 901[68]: GenFreeStack(value=16, discard=24)
 905[44]: GenPanic(message: text)
 906[28]: GenReturn(ret=0, value=0, discard=28)

Execute test:
  664:[4] Text()
  665:[28] Text()
  666:[52] ConstText(_value="a") -> "a"[52]
  669:[68] AppendText(var[28], v1="a"[52])
  672:[52] ConstText(_value="[") -> "["[52]
  675:[68] AppendText(var[28], v1="["[52])
  678:[52] ConvIntFromNull() -> -2147483648[52]
  679:[56] ConstTrue() -> true[56]
  680:[57] VarInt(var[52]) -> -2147483648[57]
  683:[61] ConvBoolFromInt(v1=-2147483648[57]) -> false[57]
  684:[58] Not(v1=false[57]) -> true[57]
  685:[58] GenGotoFalseWord(jump=696, if_false=true[57])
  688:[57] ConstInt(val=1) -> 1[57]
  693:[61] GenGotoWord(jump=705)
  705:[61] PutInt(var[52], value=1[57])
  708:[57] VarInt(var[52]) -> 1[57]
  711:[61] ConstInt(val=7) -> 7[61]
  716:[65] GeInt(v1=1[57], v2=7[61]) -> false[57]
  717:[58] GenGotoFalseWord(jump=723, if_false=false[57])
  723:[57] VarInt(var[52]) -> 1[57]
  726:[61] VarInt(var[57]) -> 1[61]
  729:[65] ConstInt(val=2) -> 2[65]
  734:[69] MulInt(v1=1[61], v2=2[65]) -> 2[61]
  735:[65] GenFreeStack(value=4, discard=4)
  739:[61] VarBool(var[56]) -> true[61]
  742:[62] GenGotoFalseWord(jump=752, if_false=true[61])
  745:[61] ConstFalse() -> false[61]
  746:[62] PutBool(var=6, value=false[61])
  749:[61] GenGotoWord(jump=758)
  758:[61] VarInt(var[57]) -> 2[61]
  761:[65] ConstInt(val=2) -> 2[65]
  766:[69] FormatInt(var[28], val=2[61], radix=10, width=2[65], token=48, plus=false, note=false)
  773:[61] GenFreeStack(value=0, discard=4)
  777:[57] GenGotoWord(jump=680)
  680:[57] VarInt(var[52]) -> 1[57]
  683:[61] ConvBoolFromInt(v1=1[57]) -> true[57]
  684:[58] Not(v1=true[57]) -> false[57]
  685:[58] GenGotoFalseWord(jump=696, if_false=false[57])
  696:[57] VarInt(var[52]) -> 1[57]
  699:[61] ConstInt(val=1) -> 1[61]
  704:[65] AddInt(v1=1[57], v2=1[61]) -> 2[57]
  705:[61] PutInt(var[52], value=2[57])
  708:[57] VarInt(var[52]) -> 2[57]
  711:[61] ConstInt(val=7) -> 7[61]
  716:[65] GeInt(v1=2[57], v2=7[61]) -> false[57]
  717:[58] GenGotoFalseWord(jump=723, if_false=false[57])
  723:[57] VarInt(var[52]) -> 2[57]
  726:[61] VarInt(var[57]) -> 2[61]
  729:[65] ConstInt(val=2) -> 2[65]
  734:[69] MulInt(v1=2[61], v2=2[65]) -> 4[61]
  735:[65] GenFreeStack(value=4, discard=4)
  739:[61] VarBool(var[56]) -> false[61]
  742:[62] GenGotoFalseWord(jump=752, if_false=false[61])
  752:[61] ConstText(_value=",") -> ","[61]
  755:[77] AppendText(var[28], v1=","[61])
  758:[61] VarInt(var[57]) -> 4[61]
  761:[65] ConstInt(val=2) -> 2[65]
  766:[69] FormatInt(var[28], val=4[61], radix=10, width=2[65], token=48, plus=false, note=false)
  773:[61] GenFreeStack(value=0, discard=4)
  777:[57] GenGotoWord(jump=680)
  680:[57] VarInt(var[52]) -> 2[57]
  683:[61] ConvBoolFromInt(v1=2[57]) -> true[57]
  684:[58] Not(v1=true[57]) -> false[57]
  685:[58] GenGotoFalseWord(jump=696, if_false=false[57])
  696:[57] VarInt(var[52]) -> 2[57]
  699:[61] ConstInt(val=1) -> 1[61]
  704:[65] AddInt(v1=2[57], v2=1[61]) -> 3[57]
  705:[61] PutInt(var[52], value=3[57])
  708:[57] VarInt(var[52]) -> 3[57]
  711:[61] ConstInt(val=7) -> 7[61]
  716:[65] GeInt(v1=3[57], v2=7[61]) -> false[57]
  717:[58] GenGotoFalseWord(jump=723, if_false=false[57])
  723:[57] VarInt(var[52]) -> 3[57]
  726:[61] VarInt(var[57]) -> 3[61]
  729:[65] ConstInt(val=2) -> 2[65]
  734:[69] MulInt(v1=3[61], v2=2[65]) -> 6[61]
  735:[65] GenFreeStack(value=4, discard=4)
  739:[61] VarBool(var[56]) -> false[61]
  742:[62] GenGotoFalseWord(jump=752, if_false=false[61])
  752:[61] ConstText(_value=",") -> ","[61]
  755:[77] AppendText(var[28], v1=","[61])
  758:[61] VarInt(var[57]) -> 6[61]
  761:[65] ConstInt(val=2) -> 2[65]
  766:[69] FormatInt(var[28], val=6[61], radix=10, width=2[65], token=48, plus=false, note=false)
  773:[61] GenFreeStack(value=0, discard=4)
  777:[57] GenGotoWord(jump=680)
  680:[57] VarInt(var[52]) -> 3[57]
  683:[61] ConvBoolFromInt(v1=3[57]) -> true[57]
  684:[58] Not(v1=true[57]) -> false[57]
  685:[58] GenGotoFalseWord(jump=696, if_false=false[57])
  696:[57] VarInt(var[52]) -> 3[57]
  699:[61] ConstInt(val=1) -> 1[61]
  704:[65] AddInt(v1=3[57], v2=1[61]) -> 4[57]
  705:[61] PutInt(var[52], value=4[57])
  708:[57] VarInt(var[52]) -> 4[57]
  711:[61] ConstInt(val=7) -> 7[61]
  716:[65] GeInt(v1=4[57], v2=7[61]) -> false[57]
  717:[58] GenGotoFalseWord(jump=723, if_false=false[57])
  723:[57] VarInt(var[52]) -> 4[57]
  726:[61] VarInt(var[57]) -> 4[61]
  729:[65] ConstInt(val=2) -> 2[65]
  734:[69] MulInt(v1=4[61], v2=2[65]) -> 8[61]
  735:[65] GenFreeStack(value=4, discard=4)
  739:[61] VarBool(var[56]) -> false[61]
  742:[62] GenGotoFalseWord(jump=752, if_false=false[61])
  752:[61] ConstText(_value=",") -> ","[61]
  755:[77] AppendText(var[28], v1=","[61])
  758:[61] VarInt(var[57]) -> 8[61]
  761:[65] ConstInt(val=2) -> 2[65]
  766:[69] FormatInt(var[28], val=8[61], radix=10, width=2[65], token=48, plus=false, note=false)
  773:[61] GenFreeStack(value=0, discard=4)
  777:[57] GenGotoWord(jump=680)
  680:[57] VarInt(var[52]) -> 4[57]
  683:[61] ConvBoolFromInt(v1=4[57]) -> true[57]
  684:[58] Not(v1=true[57]) -> false[57]
  685:[58] GenGotoFalseWord(jump=696, if_false=false[57])
  696:[57] VarInt(var[52]) -> 4[57]
  699:[61] ConstInt(val=1) -> 1[61]
  704:[65] AddInt(v1=4[57], v2=1[61]) -> 5[57]
  705:[61] PutInt(var[52], value=5[57])
  708:[57] VarInt(var[52]) -> 5[57]
  711:[61] ConstInt(val=7) -> 7[61]
  716:[65] GeInt(v1=5[57], v2=7[61]) -> false[57]
  717:[58] GenGotoFalseWord(jump=723, if_false=false[57])
  723:[57] VarInt(var[52]) -> 5[57]
  726:[61] VarInt(var[57]) -> 5[61]
  729:[65] ConstInt(val=2) -> 2[65]
  734:[69] MulInt(v1=5[61], v2=2[65]) -> 10[61]
  735:[65] GenFreeStack(value=4, discard=4)
  739:[61] VarBool(var[56]) -> false[61]
  742:[62] GenGotoFalseWord(jump=752, if_false=false[61])
  752:[61] ConstText(_value=",") -> ","[61]
  755:[77] AppendText(var[28], v1=","[61])
  758:[61] VarInt(var[57]) -> 10[61]
  761:[65] ConstInt(val=2) -> 2[65]
  766:[69] FormatInt(var[28], val=10[61], radix=10, width=2[65], token=48, plus=false, note=false)
  773:[61] GenFreeStack(value=0, discard=4)
  777:[57] GenGotoWord(jump=680)
  680:[57] VarInt(var[52]) -> 5[57]
  683:[61] ConvBoolFromInt(v1=5[57]) -> true[57]
  684:[58] Not(v1=true[57]) -> false[57]
  685:[58] GenGotoFalseWord(jump=696, if_false=false[57])
  696:[57] VarInt(var[52]) -> 5[57]
  699:[61] ConstInt(val=1) -> 1[61]
  704:[65] AddInt(v1=5[57], v2=1[61]) -> 6[57]
  705:[61] PutInt(var[52], value=6[57])
  708:[57] VarInt(var[52]) -> 6[57]
  711:[61] ConstInt(val=7) -> 7[61]
  716:[65] GeInt(v1=6[57], v2=7[61]) -> false[57]
  717:[58] GenGotoFalseWord(jump=723, if_false=false[57])
  723:[57] VarInt(var[52]) -> 6[57]
  726:[61] VarInt(var[57]) -> 6[61]
  729:[65] ConstInt(val=2) -> 2[65]
  734:[69] MulInt(v1=6[61], v2=2[65]) -> 12[61]
  735:[65] GenFreeStack(value=4, discard=4)
  739:[61] VarBool(var[56]) -> false[61]
  742:[62] GenGotoFalseWord(jump=752, if_false=false[61])
  752:[61] ConstText(_value=",") -> ","[61]
  755:[77] AppendText(var[28], v1=","[61])
  758:[61] VarInt(var[57]) -> 12[61]
  761:[65] ConstInt(val=2) -> 2[65]
  766:[69] FormatInt(var[28], val=12[61], radix=10, width=2[65], token=48, plus=false, note=false)
  773:[61] GenFreeStack(value=0, discard=4)
  777:[57] GenGotoWord(jump=680)
  680:[57] VarInt(var[52]) -> 6[57]
  683:[61] ConvBoolFromInt(v1=6[57]) -> true[57]
  684:[58] Not(v1=true[57]) -> false[57]
  685:[58] GenGotoFalseWord(jump=696, if_false=false[57])
  696:[57] VarInt(var[52]) -> 6[57]
  699:[61] ConstInt(val=1) -> 1[61]
  704:[65] AddInt(v1=6[57], v2=1[61]) -> 7[57]
  705:[61] PutInt(var[52], value=7[57])
  708:[57] VarInt(var[52]) -> 7[57]
  711:[61] ConstInt(val=7) -> 7[61]
  716:[65] GeInt(v1=7[57], v2=7[61]) -> true[57]
  717:[58] GenGotoFalseWord(jump=723, if_false=true[57])
  720:[57] GenGotoWord(jump=780)
  780:[57] ConstText(_value="]") -> "]"[57]
  783:[73] AppendText(var[28], v1="]"[57])
  786:[57] ConstText(_value="b") -> "b"[57]
  789:[73] AppendText(var[28], v1="b"[57])
  792:[57] VarText(var[28]) -> "a[02,04,06,08,10,12]b"[57]
  795:[73] GenFreeStack(value=16, discard=29)
  799:[44] AppendText(var[4], v1="a[02,04,06,08,10,12]b"[28])
  802:[28] VarText(var[4]) -> "a[02,04,06,08,10,12]b"[28]
  805:[44] ConstText(_value="a[02,04,06,08,10,12]b") -> "a[02,04,06,08,10,12]b"[44]
  828:[60] EqText(v1="a[02,04,06,08,10,12]b"[28], v2="a[02,04,06,08,10,12]b"[44]) -> true[28]
  829:[29] GenGotoFalseWord(jump=835, if_false=true[28])
  832:[28] GenGotoWord(jump=906)
  906:[28] GenReturn(ret=4294967295[0], value=0, discard=28)
Finished
