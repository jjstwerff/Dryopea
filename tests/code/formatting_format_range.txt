pub fn test() {
    test_value = {"a{for x in 1..7 {x*2}:02}b"};
    assert(
        test_value == "a[02,04,06,08,10,12]b",
        "Test failed {test_value} != \"a[02,04,06,08,10,12]b\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "a";
      OpAppendText(__work_1, "[");
      x#index:integer = OpConvIntFromNull();
      x#count:integer = 0i32;
      loop {#4 iter for
        _val_1:integer = {#5 iter for loop
          x:integer = {#6 for next
            x#index:integer = if OpNot(OpConvBoolFromInt(x#index)) 1i32 else OpAddInt(x#index, 1i32);
            if OpGeInt(x#index, 7i32) break(0) else null;
            x#index;
          }#6:integer;
          {#7 block
            OpMulInt(x, 2i32);
          }#7:integer;
        }#5:integer;
        if OpGtInt(x#count, 0i32) OpAppendText(__work_1, ",") else null;
        x#count:integer = OpAddInt(x#count, 1i32);
        OpFormatInt(__work_1, _val_1, 10i32, 2i32, 48i32, false, false);
      }#4;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, "b");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a[02,04,06,08,10,12]b") null else OpPanic({#8 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "a[02,04,06,08,10,12]b"");
    __work_2;
  }#8:text);
}#1

byte-code for format_range:test()
 645[0]: return-address
 645[4]: Text() var=__work_2[4]:text in 1
 646[28]: Text() var=__work_1[28]:text in 1
 647[52]: Text() var=test_value[52]:text in 1
 648[76]: ClearText(var[28]) var=__work_1[28]:text in 1
 651[76]: ConstText(_value="a") -> text
 654[92]: AppendText(var[28], v1: text)
 657[76]: ConstText(_value="[") -> text
 660[92]: AppendText(var[28], v1: text)
 663[76]: ConvIntFromNull() -> integer var=x#index[76]:integer in 3
 664[80]: ConstInt(val=0) -> integer var=x#count[80]:integer in 3
 669[84]: VarInt(var[76]) -> integer var=x#index[76]:integer in 3
 672[88]: ConvBoolFromInt(v1: integer) -> boolean
 673[85]: Not(v1: boolean) -> boolean
 674[85]: GotoFalseWord(jump=685, if_false: boolean)
 677[84]: ConstInt(val=1) -> integer
 682[88]: GotoWord(jump=694)
 685[84]: VarInt(var[76]) -> integer var=x#index[76]:integer in 3
 688[88]: ConstInt(val=1) -> integer
 693[92]: AddInt(v1: integer, v2: integer) -> integer
 694[88]: PutInt(var[76], value: integer)
 697[84]: VarInt(var[76]) -> integer var=x#index[76]:integer in 3
 700[88]: ConstInt(val=7) -> integer
 705[92]: GeInt(v1: integer, v2: integer) -> boolean
 706[85]: GotoFalseWord(jump=712, if_false: boolean)
 709[84]: GotoWord(jump=780)
 712[84]: VarInt(var[76]) -> integer var=x#index[76]:integer in 3
 715[88]: VarInt(var[84]) -> integer var=x[84]:integer in 5
 718[92]: ConstInt(val=2) -> integer
 723[96]: MulInt(v1: integer, v2: integer) -> integer
 724[92]: FreeStack(value=4, discard=8) type=integer[4]:Base[0]
 728[88]: VarInt(var[80]) -> integer var=x#count[80]:integer in 3
 731[92]: ConstInt(val=0) -> integer
 736[96]: GtInt(v1: integer, v2: integer) -> boolean
 737[89]: GotoFalseWord(jump=746, if_false: boolean)
 740[88]: ConstText(_value=",") -> text
 743[104]: AppendText(var[28], v1: text)
 746[88]: VarInt(var[80]) -> integer var=x#count[80]:integer in 3
 749[92]: ConstInt(val=1) -> integer
 754[96]: AddInt(v1: integer, v2: integer) -> integer
 755[92]: PutInt(var[80], value: integer)
 758[88]: VarInt(var[84]) -> integer var=_val_1[84]:integer in 4
 761[92]: ConstInt(val=2) -> integer
 766[96]: FormatInt(var[28], val: integer, radix=10, width: integer, token=48, plus=false, note=false)
 773[88]: FreeStack(value=0, discard=4)
 777[84]: GotoWord(jump=669)
 780[84]: ConstText(_value="]") -> text
 783[100]: AppendText(var[28], v1: text)
 786[84]: ConstText(_value="b") -> text
 789[100]: AppendText(var[28], v1: text)
 792[84]: VarText(var[28]) -> text var=__work_1[28]:text in 1
 795[100]: FreeStack(value=16, discard=24) type=text[4]:Base[5]
 799[92]: AppendText(var[52], v1: text)
 802[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 805[92]: ConstText(_value="a[02,04,06,08,10,12]b") -> text
 828[108]: EqText(v1: text, v2: text) -> boolean
 829[77]: GotoFalseWord(jump=835, if_false: boolean)
 832[76]: GotoWord(jump=904)
 835[76]: ClearText(var[4]) var=__work_2[4]:text in 1
 838[76]: ConstText(_value="Test failed ") -> text
 852[92]: AppendText(var[4], v1: text)
 855[76]: VarText(var[52]) -> text var=test_value[52]:text in 1
 858[92]: ConstInt(val=0) -> integer
 863[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 868[76]: ConstText(_value=" != "a[02,04,06,08,10,12]b"") -> text
 897[92]: AppendText(var[4], v1: text)
 900[76]: VarText(var[4]) -> text var=__work_2[4]:text in 1
 903[92]: Panic(message: text)
 904[76]: FreeText(var[52])
 907[76]: FreeText(var[28])
 910[76]: FreeText(var[4])
 913[76]: Return(ret=0, value=0, discard=76)

Execute test:
  645:[8] Text()
  646:[32] Text()
  647:[56] Text()
  648:[80] ClearText(var[32])
  651:[80] ConstText(_value="a") -> "a"[80]
  654:[96] AppendText(var[32], v1="a"[80])
  657:[80] ConstText(_value="[") -> "["[80]
  660:[96] AppendText(var[32], v1="["[80])
  663:[80] ConvIntFromNull() -> -2147483648[80]
  664:[84] ConstInt(val=0) -> 0[84]
  669:[88] VarInt(var[80]) -> -2147483648[88]
  672:[92] ConvBoolFromInt(v1=-2147483648[88]) -> false[88]
  673:[89] Not(v1=false[88]) -> true[88]
  674:[89] GotoFalseWord(jump=685, if_false=true[88])
  677:[88] ConstInt(val=1) -> 1[88]
  682:[92] GotoWord(jump=694)
  694:[92] PutInt(var[80], value=1[88])
  697:[88] VarInt(var[80]) -> 1[88]
  700:[92] ConstInt(val=7) -> 7[92]
  705:[96] GeInt(v1=1[88], v2=7[92]) -> false[88]
  706:[89] GotoFalseWord(jump=712, if_false=false[88])
  712:[88] VarInt(var[80]) -> 1[88]
  715:[92] VarInt(var[88]) -> 1[92]
  718:[96] ConstInt(val=2) -> 2[96]
  723:[100] MulInt(v1=1[92], v2=2[96]) -> 2[92]
  724:[96] FreeStack(value=4, discard=8)
  728:[92] VarInt(var[84]) -> 0[92]
  731:[96] ConstInt(val=0) -> 0[96]
  736:[100] GtInt(v1=0[92], v2=0[96]) -> false[92]
  737:[93] GotoFalseWord(jump=746, if_false=false[92])
  746:[92] VarInt(var[84]) -> 0[92]
  749:[96] ConstInt(val=1) -> 1[96]
  754:[100] AddInt(v1=0[92], v2=1[96]) -> 1[92]
  755:[96] PutInt(var[84], value=1[92])
  758:[92] VarInt(var[88]) -> 2[92]
  761:[96] ConstInt(val=2) -> 2[96]
  766:[100] FormatInt(var[32], val=2[92], radix=10, width=2[96], token=48, plus=false, note=false)
  773:[92] FreeStack(value=0, discard=4)
  777:[88] GotoWord(jump=669)
  669:[88] VarInt(var[80]) -> 1[88]
  672:[92] ConvBoolFromInt(v1=1[88]) -> true[88]
  673:[89] Not(v1=true[88]) -> false[88]
  674:[89] GotoFalseWord(jump=685, if_false=false[88])
  685:[88] VarInt(var[80]) -> 1[88]
  688:[92] ConstInt(val=1) -> 1[92]
  693:[96] AddInt(v1=1[88], v2=1[92]) -> 2[88]
  694:[92] PutInt(var[80], value=2[88])
  697:[88] VarInt(var[80]) -> 2[88]
  700:[92] ConstInt(val=7) -> 7[92]
  705:[96] GeInt(v1=2[88], v2=7[92]) -> false[88]
  706:[89] GotoFalseWord(jump=712, if_false=false[88])
  712:[88] VarInt(var[80]) -> 2[88]
  715:[92] VarInt(var[88]) -> 2[92]
  718:[96] ConstInt(val=2) -> 2[96]
  723:[100] MulInt(v1=2[92], v2=2[96]) -> 4[92]
  724:[96] FreeStack(value=4, discard=8)
  728:[92] VarInt(var[84]) -> 1[92]
  731:[96] ConstInt(val=0) -> 0[96]
  736:[100] GtInt(v1=1[92], v2=0[96]) -> true[92]
  737:[93] GotoFalseWord(jump=746, if_false=true[92])
  740:[92] ConstText(_value=",") -> ","[92]
  743:[108] AppendText(var[32], v1=","[92])
  746:[92] VarInt(var[84]) -> 1[92]
  749:[96] ConstInt(val=1) -> 1[96]
  754:[100] AddInt(v1=1[92], v2=1[96]) -> 2[92]
  755:[96] PutInt(var[84], value=2[92])
  758:[92] VarInt(var[88]) -> 4[92]
  761:[96] ConstInt(val=2) -> 2[96]
  766:[100] FormatInt(var[32], val=4[92], radix=10, width=2[96], token=48, plus=false, note=false)
  773:[92] FreeStack(value=0, discard=4)
  777:[88] GotoWord(jump=669)
  669:[88] VarInt(var[80]) -> 2[88]
  672:[92] ConvBoolFromInt(v1=2[88]) -> true[88]
  673:[89] Not(v1=true[88]) -> false[88]
  674:[89] GotoFalseWord(jump=685, if_false=false[88])
  685:[88] VarInt(var[80]) -> 2[88]
  688:[92] ConstInt(val=1) -> 1[92]
  693:[96] AddInt(v1=2[88], v2=1[92]) -> 3[88]
  694:[92] PutInt(var[80], value=3[88])
  697:[88] VarInt(var[80]) -> 3[88]
  700:[92] ConstInt(val=7) -> 7[92]
  705:[96] GeInt(v1=3[88], v2=7[92]) -> false[88]
  706:[89] GotoFalseWord(jump=712, if_false=false[88])
  712:[88] VarInt(var[80]) -> 3[88]
  715:[92] VarInt(var[88]) -> 3[92]
  718:[96] ConstInt(val=2) -> 2[96]
  723:[100] MulInt(v1=3[92], v2=2[96]) -> 6[92]
  724:[96] FreeStack(value=4, discard=8)
  728:[92] VarInt(var[84]) -> 2[92]
  731:[96] ConstInt(val=0) -> 0[96]
  736:[100] GtInt(v1=2[92], v2=0[96]) -> true[92]
  737:[93] GotoFalseWord(jump=746, if_false=true[92])
  740:[92] ConstText(_value=",") -> ","[92]
  743:[108] AppendText(var[32], v1=","[92])
  746:[92] VarInt(var[84]) -> 2[92]
  749:[96] ConstInt(val=1) -> 1[96]
  754:[100] AddInt(v1=2[92], v2=1[96]) -> 3[92]
  755:[96] PutInt(var[84], value=3[92])
  758:[92] VarInt(var[88]) -> 6[92]
  761:[96] ConstInt(val=2) -> 2[96]
  766:[100] FormatInt(var[32], val=6[92], radix=10, width=2[96], token=48, plus=false, note=false)
  773:[92] FreeStack(value=0, discard=4)
  777:[88] GotoWord(jump=669)
  669:[88] VarInt(var[80]) -> 3[88]
  672:[92] ConvBoolFromInt(v1=3[88]) -> true[88]
  673:[89] Not(v1=true[88]) -> false[88]
  674:[89] GotoFalseWord(jump=685, if_false=false[88])
  685:[88] VarInt(var[80]) -> 3[88]
  688:[92] ConstInt(val=1) -> 1[92]
  693:[96] AddInt(v1=3[88], v2=1[92]) -> 4[88]
  694:[92] PutInt(var[80], value=4[88])
  697:[88] VarInt(var[80]) -> 4[88]
  700:[92] ConstInt(val=7) -> 7[92]
  705:[96] GeInt(v1=4[88], v2=7[92]) -> false[88]
  706:[89] GotoFalseWord(jump=712, if_false=false[88])
  712:[88] VarInt(var[80]) -> 4[88]
  715:[92] VarInt(var[88]) -> 4[92]
  718:[96] ConstInt(val=2) -> 2[96]
  723:[100] MulInt(v1=4[92], v2=2[96]) -> 8[92]
  724:[96] FreeStack(value=4, discard=8)
  728:[92] VarInt(var[84]) -> 3[92]
  731:[96] ConstInt(val=0) -> 0[96]
  736:[100] GtInt(v1=3[92], v2=0[96]) -> true[92]
  737:[93] GotoFalseWord(jump=746, if_false=true[92])
  740:[92] ConstText(_value=",") -> ","[92]
  743:[108] AppendText(var[32], v1=","[92])
  746:[92] VarInt(var[84]) -> 3[92]
  749:[96] ConstInt(val=1) -> 1[96]
  754:[100] AddInt(v1=3[92], v2=1[96]) -> 4[92]
  755:[96] PutInt(var[84], value=4[92])
  758:[92] VarInt(var[88]) -> 8[92]
  761:[96] ConstInt(val=2) -> 2[96]
  766:[100] FormatInt(var[32], val=8[92], radix=10, width=2[96], token=48, plus=false, note=false)
  773:[92] FreeStack(value=0, discard=4)
  777:[88] GotoWord(jump=669)
  669:[88] VarInt(var[80]) -> 4[88]
  672:[92] ConvBoolFromInt(v1=4[88]) -> true[88]
  673:[89] Not(v1=true[88]) -> false[88]
  674:[89] GotoFalseWord(jump=685, if_false=false[88])
  685:[88] VarInt(var[80]) -> 4[88]
  688:[92] ConstInt(val=1) -> 1[92]
  693:[96] AddInt(v1=4[88], v2=1[92]) -> 5[88]
  694:[92] PutInt(var[80], value=5[88])
  697:[88] VarInt(var[80]) -> 5[88]
  700:[92] ConstInt(val=7) -> 7[92]
  705:[96] GeInt(v1=5[88], v2=7[92]) -> false[88]
  706:[89] GotoFalseWord(jump=712, if_false=false[88])
  712:[88] VarInt(var[80]) -> 5[88]
  715:[92] VarInt(var[88]) -> 5[92]
  718:[96] ConstInt(val=2) -> 2[96]
  723:[100] MulInt(v1=5[92], v2=2[96]) -> 10[92]
  724:[96] FreeStack(value=4, discard=8)
  728:[92] VarInt(var[84]) -> 4[92]
  731:[96] ConstInt(val=0) -> 0[96]
  736:[100] GtInt(v1=4[92], v2=0[96]) -> true[92]
  737:[93] GotoFalseWord(jump=746, if_false=true[92])
  740:[92] ConstText(_value=",") -> ","[92]
  743:[108] AppendText(var[32], v1=","[92])
  746:[92] VarInt(var[84]) -> 4[92]
  749:[96] ConstInt(val=1) -> 1[96]
  754:[100] AddInt(v1=4[92], v2=1[96]) -> 5[92]
  755:[96] PutInt(var[84], value=5[92])
  758:[92] VarInt(var[88]) -> 10[92]
  761:[96] ConstInt(val=2) -> 2[96]
  766:[100] FormatInt(var[32], val=10[92], radix=10, width=2[96], token=48, plus=false, note=false)
  773:[92] FreeStack(value=0, discard=4)
  777:[88] GotoWord(jump=669)
  669:[88] VarInt(var[80]) -> 5[88]
  672:[92] ConvBoolFromInt(v1=5[88]) -> true[88]
  673:[89] Not(v1=true[88]) -> false[88]
  674:[89] GotoFalseWord(jump=685, if_false=false[88])
  685:[88] VarInt(var[80]) -> 5[88]
  688:[92] ConstInt(val=1) -> 1[92]
  693:[96] AddInt(v1=5[88], v2=1[92]) -> 6[88]
  694:[92] PutInt(var[80], value=6[88])
  697:[88] VarInt(var[80]) -> 6[88]
  700:[92] ConstInt(val=7) -> 7[92]
  705:[96] GeInt(v1=6[88], v2=7[92]) -> false[88]
  706:[89] GotoFalseWord(jump=712, if_false=false[88])
  712:[88] VarInt(var[80]) -> 6[88]
  715:[92] VarInt(var[88]) -> 6[92]
  718:[96] ConstInt(val=2) -> 2[96]
  723:[100] MulInt(v1=6[92], v2=2[96]) -> 12[92]
  724:[96] FreeStack(value=4, discard=8)
  728:[92] VarInt(var[84]) -> 5[92]
  731:[96] ConstInt(val=0) -> 0[96]
  736:[100] GtInt(v1=5[92], v2=0[96]) -> true[92]
  737:[93] GotoFalseWord(jump=746, if_false=true[92])
  740:[92] ConstText(_value=",") -> ","[92]
  743:[108] AppendText(var[32], v1=","[92])
  746:[92] VarInt(var[84]) -> 5[92]
  749:[96] ConstInt(val=1) -> 1[96]
  754:[100] AddInt(v1=5[92], v2=1[96]) -> 6[92]
  755:[96] PutInt(var[84], value=6[92])
  758:[92] VarInt(var[88]) -> 12[92]
  761:[96] ConstInt(val=2) -> 2[96]
  766:[100] FormatInt(var[32], val=12[92], radix=10, width=2[96], token=48, plus=false, note=false)
  773:[92] FreeStack(value=0, discard=4)
  777:[88] GotoWord(jump=669)
  669:[88] VarInt(var[80]) -> 6[88]
  672:[92] ConvBoolFromInt(v1=6[88]) -> true[88]
  673:[89] Not(v1=true[88]) -> false[88]
  674:[89] GotoFalseWord(jump=685, if_false=false[88])
  685:[88] VarInt(var[80]) -> 6[88]
  688:[92] ConstInt(val=1) -> 1[92]
  693:[96] AddInt(v1=6[88], v2=1[92]) -> 7[88]
  694:[92] PutInt(var[80], value=7[88])
  697:[88] VarInt(var[80]) -> 7[88]
  700:[92] ConstInt(val=7) -> 7[92]
  705:[96] GeInt(v1=7[88], v2=7[92]) -> true[88]
  706:[89] GotoFalseWord(jump=712, if_false=true[88])
  709:[88] GotoWord(jump=780)
  780:[88] ConstText(_value="]") -> "]"[88]
  783:[104] AppendText(var[32], v1="]"[88])
  786:[88] ConstText(_value="b") -> "b"[88]
  789:[104] AppendText(var[32], v1="b"[88])
  792:[88] VarText(var[32]) -> "a[02,04,06,08,10,12]b"[88]
  795:[104] FreeStack(value=16, discard=24)
  799:[96] AppendText(var[56], v1="a[02,04,06,08,10,12]b"[80])
  802:[80] VarText(var[56]) -> "a[02,04,06,08,10,12]b"[80]
  805:[96] ConstText(_value="a[02,04,06,08,10,12]b") -> "a[02,04,06,08,10,12]b"[96]
  828:[112] EqText(v1="a[02,04,06,08,10,12]b"[80], v2="a[02,04,06,08,10,12]b"[96]) -> true[80]
  829:[81] GotoFalseWord(jump=835, if_false=true[80])
  832:[80] GotoWord(jump=904)
  904:[80] FreeText(var[56])
  907:[80] FreeText(var[32])
  910:[80] FreeText(var[8])
  913:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
