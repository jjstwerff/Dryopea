pub fn test() {
    test_value = {"a{for x in 1..7 {x*2}:02}b"};
    assert(
        test_value == "a[02,04,06,08,10,12]b",
        "Test failed {test_value} != \"a[02,04,06,08,10,12]b\""
    );
}
fn test() {#1 block
  __work_2:text = "";
  __work_1:text = "";
  test_value:text = {#2 block
    {#3 formatting string
      __work_1:text = "a";
      OpAppendText(__work_1, "[");
      x#index:integer = OpConvIntFromNull();
      _first_2:boolean = true;
      loop {#4 iter for loop
        _val_1:integer = {#5 iter for fill
          x:integer = {#6 for next
            x#index:integer = if OpNot(OpConvBoolFromInt(x#index)) 1i32 else OpAddInt(x#index, 1i32);
            if OpGeInt(x#index, 7i32) break(0) else null;
            x#index;
          }#6:integer;
          {#7 block
            OpMulInt(x, 2i32);
          }#7:integer;
        }#5:integer;
        if _first_2 _first_2:boolean = false else OpAppendText(__work_1, ",");
        OpFormatInt(__work_1, _val_1, 10i32, 2i32, 48i32, false, false);
      }#4;
      OpAppendText(__work_1, "]");
      OpAppendText(__work_1, "b");
      __work_1;
    }#3:text;
  }#2:text;
  if OpEqText(test_value, "a[02,04,06,08,10,12]b") null else OpPanic({#8 formatting string
    __work_2:text = "Test failed ";
    OpFormatText(__work_2, test_value, 0i32, -1i32, 32i32);
    OpAppendText(__work_2, " != "a[02,04,06,08,10,12]b"");
    __work_2;
  }#8:text);
}#1

byte-code for format_range:test()
 682[0]: return-address
 682[4]: Text()
 683[28]: Text()
 684[52]: Text()
 685[76]: ClearText(var[28])
 688[76]: ConstText(_value="a") -> text
 691[92]: AppendText(var[28], v1: text)
 694[76]: ConstText(_value="[") -> text
 697[92]: AppendText(var[28], v1: text)
 700[76]: ConvIntFromNull() -> integer
 701[80]: ConstTrue() -> boolean
 702[81]: VarInt(var[76]) -> integer
 705[85]: ConvBoolFromInt(v1: integer) -> boolean
 706[82]: Not(v1: boolean) -> boolean
 707[82]: GotoFalseWord(jump=718, if_false: boolean)
 710[81]: ConstInt(val=1) -> integer
 715[85]: GotoWord(jump=727)
 718[81]: VarInt(var[76]) -> integer
 721[85]: ConstInt(val=1) -> integer
 726[89]: AddInt(v1: integer, v2: integer) -> integer
 727[85]: PutInt(var[76], value: integer)
 730[81]: VarInt(var[76]) -> integer
 733[85]: ConstInt(val=7) -> integer
 738[89]: GeInt(v1: integer, v2: integer) -> boolean
 739[82]: GotoFalseWord(jump=745, if_false: boolean)
 742[81]: GotoWord(jump=802)
 745[81]: VarInt(var[76]) -> integer
 748[85]: VarInt(var[81]) -> integer
 751[89]: ConstInt(val=2) -> integer
 756[93]: MulInt(v1: integer, v2: integer) -> integer
 757[89]: FreeStack(value=4, discard=4) type=integer[4]:Base[0]
 761[85]: VarBool(var[80]) -> boolean
 764[86]: GotoFalseWord(jump=774, if_false: boolean)
 767[85]: ConstFalse() -> boolean
 768[86]: PutBool(var=6, value: boolean)
 771[85]: GotoWord(jump=780)
 774[85]: ConstText(_value=",") -> text
 777[101]: AppendText(var[28], v1: text)
 780[85]: VarInt(var[81]) -> integer
 783[89]: ConstInt(val=2) -> integer
 788[93]: FormatInt(var[28], val: integer, radix=10, width: integer, token=48, plus=false, note=false)
 795[85]: FreeStack(value=0, discard=4)
 799[81]: GotoWord(jump=702)
 802[81]: ConstText(_value="]") -> text
 805[97]: AppendText(var[28], v1: text)
 808[81]: ConstText(_value="b") -> text
 811[97]: AppendText(var[28], v1: text)
 814[81]: VarText(var[28]) -> text
 817[97]: FreeStack(value=16, discard=5) type=text[4]:Base[5]
 821[92]: AppendText(var[52], v1: text)
 824[76]: VarText(var[52]) -> text
 827[92]: ConstText(_value="a[02,04,06,08,10,12]b") -> text
 850[108]: EqText(v1: text, v2: text) -> boolean
 851[77]: GotoFalseWord(jump=857, if_false: boolean)
 854[76]: GotoWord(jump=926)
 857[76]: ClearText(var[4])
 860[76]: ConstText(_value="Test failed ") -> text
 874[92]: AppendText(var[4], v1: text)
 877[76]: VarText(var[52]) -> text
 880[92]: ConstInt(val=0) -> integer
 885[96]: FormatText(var[4], val: text, width: integer, dir=-1, token=32)
 890[76]: ConstText(_value=" != "a[02,04,06,08,10,12]b"") -> text
 919[92]: AppendText(var[4], v1: text)
 922[76]: VarText(var[4]) -> text
 925[92]: Panic(message: text)
 926[76]: Return(ret=0, value=0, discard=76)

Execute test:
  682:[8] Text()
  683:[32] Text()
  684:[56] Text()
  685:[80] ClearText(var[32])
  688:[80] ConstText(_value="a") -> "a"[80]
  691:[96] AppendText(var[32], v1="a"[80])
  694:[80] ConstText(_value="[") -> "["[80]
  697:[96] AppendText(var[32], v1="["[80])
  700:[80] ConvIntFromNull() -> -2147483648[80]
  701:[84] ConstTrue() -> true[84]
  702:[85] VarInt(var[80]) -> -2147483648[85]
  705:[89] ConvBoolFromInt(v1=-2147483648[85]) -> false[85]
  706:[86] Not(v1=false[85]) -> true[85]
  707:[86] GotoFalseWord(jump=718, if_false=true[85])
  710:[85] ConstInt(val=1) -> 1[85]
  715:[89] GotoWord(jump=727)
  727:[89] PutInt(var[80], value=1[85])
  730:[85] VarInt(var[80]) -> 1[85]
  733:[89] ConstInt(val=7) -> 7[89]
  738:[93] GeInt(v1=1[85], v2=7[89]) -> false[85]
  739:[86] GotoFalseWord(jump=745, if_false=false[85])
  745:[85] VarInt(var[80]) -> 1[85]
  748:[89] VarInt(var[85]) -> 1[89]
  751:[93] ConstInt(val=2) -> 2[93]
  756:[97] MulInt(v1=1[89], v2=2[93]) -> 2[89]
  757:[93] FreeStack(value=4, discard=4)
  761:[89] VarBool(var[84]) -> true[89]
  764:[90] GotoFalseWord(jump=774, if_false=true[89])
  767:[89] ConstFalse() -> false[89]
  768:[90] PutBool(var=6, value=false[89])
  771:[89] GotoWord(jump=780)
  780:[89] VarInt(var[85]) -> 2[89]
  783:[93] ConstInt(val=2) -> 2[93]
  788:[97] FormatInt(var[32], val=2[89], radix=10, width=2[93], token=48, plus=false, note=false)
  795:[89] FreeStack(value=0, discard=4)
  799:[85] GotoWord(jump=702)
  702:[85] VarInt(var[80]) -> 1[85]
  705:[89] ConvBoolFromInt(v1=1[85]) -> true[85]
  706:[86] Not(v1=true[85]) -> false[85]
  707:[86] GotoFalseWord(jump=718, if_false=false[85])
  718:[85] VarInt(var[80]) -> 1[85]
  721:[89] ConstInt(val=1) -> 1[89]
  726:[93] AddInt(v1=1[85], v2=1[89]) -> 2[85]
  727:[89] PutInt(var[80], value=2[85])
  730:[85] VarInt(var[80]) -> 2[85]
  733:[89] ConstInt(val=7) -> 7[89]
  738:[93] GeInt(v1=2[85], v2=7[89]) -> false[85]
  739:[86] GotoFalseWord(jump=745, if_false=false[85])
  745:[85] VarInt(var[80]) -> 2[85]
  748:[89] VarInt(var[85]) -> 2[89]
  751:[93] ConstInt(val=2) -> 2[93]
  756:[97] MulInt(v1=2[89], v2=2[93]) -> 4[89]
  757:[93] FreeStack(value=4, discard=4)
  761:[89] VarBool(var[84]) -> false[89]
  764:[90] GotoFalseWord(jump=774, if_false=false[89])
  774:[89] ConstText(_value=",") -> ","[89]
  777:[105] AppendText(var[32], v1=","[89])
  780:[89] VarInt(var[85]) -> 4[89]
  783:[93] ConstInt(val=2) -> 2[93]
  788:[97] FormatInt(var[32], val=4[89], radix=10, width=2[93], token=48, plus=false, note=false)
  795:[89] FreeStack(value=0, discard=4)
  799:[85] GotoWord(jump=702)
  702:[85] VarInt(var[80]) -> 2[85]
  705:[89] ConvBoolFromInt(v1=2[85]) -> true[85]
  706:[86] Not(v1=true[85]) -> false[85]
  707:[86] GotoFalseWord(jump=718, if_false=false[85])
  718:[85] VarInt(var[80]) -> 2[85]
  721:[89] ConstInt(val=1) -> 1[89]
  726:[93] AddInt(v1=2[85], v2=1[89]) -> 3[85]
  727:[89] PutInt(var[80], value=3[85])
  730:[85] VarInt(var[80]) -> 3[85]
  733:[89] ConstInt(val=7) -> 7[89]
  738:[93] GeInt(v1=3[85], v2=7[89]) -> false[85]
  739:[86] GotoFalseWord(jump=745, if_false=false[85])
  745:[85] VarInt(var[80]) -> 3[85]
  748:[89] VarInt(var[85]) -> 3[89]
  751:[93] ConstInt(val=2) -> 2[93]
  756:[97] MulInt(v1=3[89], v2=2[93]) -> 6[89]
  757:[93] FreeStack(value=4, discard=4)
  761:[89] VarBool(var[84]) -> false[89]
  764:[90] GotoFalseWord(jump=774, if_false=false[89])
  774:[89] ConstText(_value=",") -> ","[89]
  777:[105] AppendText(var[32], v1=","[89])
  780:[89] VarInt(var[85]) -> 6[89]
  783:[93] ConstInt(val=2) -> 2[93]
  788:[97] FormatInt(var[32], val=6[89], radix=10, width=2[93], token=48, plus=false, note=false)
  795:[89] FreeStack(value=0, discard=4)
  799:[85] GotoWord(jump=702)
  702:[85] VarInt(var[80]) -> 3[85]
  705:[89] ConvBoolFromInt(v1=3[85]) -> true[85]
  706:[86] Not(v1=true[85]) -> false[85]
  707:[86] GotoFalseWord(jump=718, if_false=false[85])
  718:[85] VarInt(var[80]) -> 3[85]
  721:[89] ConstInt(val=1) -> 1[89]
  726:[93] AddInt(v1=3[85], v2=1[89]) -> 4[85]
  727:[89] PutInt(var[80], value=4[85])
  730:[85] VarInt(var[80]) -> 4[85]
  733:[89] ConstInt(val=7) -> 7[89]
  738:[93] GeInt(v1=4[85], v2=7[89]) -> false[85]
  739:[86] GotoFalseWord(jump=745, if_false=false[85])
  745:[85] VarInt(var[80]) -> 4[85]
  748:[89] VarInt(var[85]) -> 4[89]
  751:[93] ConstInt(val=2) -> 2[93]
  756:[97] MulInt(v1=4[89], v2=2[93]) -> 8[89]
  757:[93] FreeStack(value=4, discard=4)
  761:[89] VarBool(var[84]) -> false[89]
  764:[90] GotoFalseWord(jump=774, if_false=false[89])
  774:[89] ConstText(_value=",") -> ","[89]
  777:[105] AppendText(var[32], v1=","[89])
  780:[89] VarInt(var[85]) -> 8[89]
  783:[93] ConstInt(val=2) -> 2[93]
  788:[97] FormatInt(var[32], val=8[89], radix=10, width=2[93], token=48, plus=false, note=false)
  795:[89] FreeStack(value=0, discard=4)
  799:[85] GotoWord(jump=702)
  702:[85] VarInt(var[80]) -> 4[85]
  705:[89] ConvBoolFromInt(v1=4[85]) -> true[85]
  706:[86] Not(v1=true[85]) -> false[85]
  707:[86] GotoFalseWord(jump=718, if_false=false[85])
  718:[85] VarInt(var[80]) -> 4[85]
  721:[89] ConstInt(val=1) -> 1[89]
  726:[93] AddInt(v1=4[85], v2=1[89]) -> 5[85]
  727:[89] PutInt(var[80], value=5[85])
  730:[85] VarInt(var[80]) -> 5[85]
  733:[89] ConstInt(val=7) -> 7[89]
  738:[93] GeInt(v1=5[85], v2=7[89]) -> false[85]
  739:[86] GotoFalseWord(jump=745, if_false=false[85])
  745:[85] VarInt(var[80]) -> 5[85]
  748:[89] VarInt(var[85]) -> 5[89]
  751:[93] ConstInt(val=2) -> 2[93]
  756:[97] MulInt(v1=5[89], v2=2[93]) -> 10[89]
  757:[93] FreeStack(value=4, discard=4)
  761:[89] VarBool(var[84]) -> false[89]
  764:[90] GotoFalseWord(jump=774, if_false=false[89])
  774:[89] ConstText(_value=",") -> ","[89]
  777:[105] AppendText(var[32], v1=","[89])
  780:[89] VarInt(var[85]) -> 10[89]
  783:[93] ConstInt(val=2) -> 2[93]
  788:[97] FormatInt(var[32], val=10[89], radix=10, width=2[93], token=48, plus=false, note=false)
  795:[89] FreeStack(value=0, discard=4)
  799:[85] GotoWord(jump=702)
  702:[85] VarInt(var[80]) -> 5[85]
  705:[89] ConvBoolFromInt(v1=5[85]) -> true[85]
  706:[86] Not(v1=true[85]) -> false[85]
  707:[86] GotoFalseWord(jump=718, if_false=false[85])
  718:[85] VarInt(var[80]) -> 5[85]
  721:[89] ConstInt(val=1) -> 1[89]
  726:[93] AddInt(v1=5[85], v2=1[89]) -> 6[85]
  727:[89] PutInt(var[80], value=6[85])
  730:[85] VarInt(var[80]) -> 6[85]
  733:[89] ConstInt(val=7) -> 7[89]
  738:[93] GeInt(v1=6[85], v2=7[89]) -> false[85]
  739:[86] GotoFalseWord(jump=745, if_false=false[85])
  745:[85] VarInt(var[80]) -> 6[85]
  748:[89] VarInt(var[85]) -> 6[89]
  751:[93] ConstInt(val=2) -> 2[93]
  756:[97] MulInt(v1=6[89], v2=2[93]) -> 12[89]
  757:[93] FreeStack(value=4, discard=4)
  761:[89] VarBool(var[84]) -> false[89]
  764:[90] GotoFalseWord(jump=774, if_false=false[89])
  774:[89] ConstText(_value=",") -> ","[89]
  777:[105] AppendText(var[32], v1=","[89])
  780:[89] VarInt(var[85]) -> 12[89]
  783:[93] ConstInt(val=2) -> 2[93]
  788:[97] FormatInt(var[32], val=12[89], radix=10, width=2[93], token=48, plus=false, note=false)
  795:[89] FreeStack(value=0, discard=4)
  799:[85] GotoWord(jump=702)
  702:[85] VarInt(var[80]) -> 6[85]
  705:[89] ConvBoolFromInt(v1=6[85]) -> true[85]
  706:[86] Not(v1=true[85]) -> false[85]
  707:[86] GotoFalseWord(jump=718, if_false=false[85])
  718:[85] VarInt(var[80]) -> 6[85]
  721:[89] ConstInt(val=1) -> 1[89]
  726:[93] AddInt(v1=6[85], v2=1[89]) -> 7[85]
  727:[89] PutInt(var[80], value=7[85])
  730:[85] VarInt(var[80]) -> 7[85]
  733:[89] ConstInt(val=7) -> 7[89]
  738:[93] GeInt(v1=7[85], v2=7[89]) -> true[85]
  739:[86] GotoFalseWord(jump=745, if_false=true[85])
  742:[85] GotoWord(jump=802)
  802:[85] ConstText(_value="]") -> "]"[85]
  805:[101] AppendText(var[32], v1="]"[85])
  808:[85] ConstText(_value="b") -> "b"[85]
  811:[101] AppendText(var[32], v1="b"[85])
  814:[85] VarText(var[32]) -> "a[02,04,06,08,10,12]b"[85]
  817:[101] FreeStack(value=16, discard=5)
  821:[96] AppendText(var[56], v1="a[02,04,06,08,10,12]b"[80])
  824:[80] VarText(var[56]) -> "a[02,04,06,08,10,12]b"[80]
  827:[96] ConstText(_value="a[02,04,06,08,10,12]b") -> "a[02,04,06,08,10,12]b"[96]
  850:[112] EqText(v1="a[02,04,06,08,10,12]b"[80], v2="a[02,04,06,08,10,12]b"[96]) -> true[80]
  851:[81] GotoFalseWord(jump=857, if_false=true[80])
  854:[80] GotoWord(jump=926)
  926:[80] Return(ret=4294967295[4], value=0, discard=76)
Finished
