pub fn test() {
    test_value = {b = 0l; for a in 10l..=20l { b+=a }; b};
    assert(
        test_value == 165l,
        "Test failed {test_value} != 165l"
    );
}
fn test {#1 block
  let __work_1 = "";
  let test_value = {#2 block
    let b = 0i64;
    {#3 for
      let a#index = OpConvLongFromNull();
      loop {#4 for loop
        let a = {#5 for next
          a#index = if OpNot(OpConvBoolFromLong(a#index)) 10i64 else OpAddLong(a#index, OpConvLongFromInt(1i32));
          if OpGtLong(a#index, 20i64) break(0) else null;
          a#index;
        }#5;
        {#6 block
          b = OpAddLong(b, a);
        }#6;
      }#4;
    }#3;
    b;
  }#2;
  if OpEqLong(test_value, 165i64) null else OpGenPanic({#7 formatting string
    OpClearText(__work_1);
    OpAppendText(__work_1, "Test failed ");
    OpFormatLong(__work_1, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_1, " != 165l");
    __work_1;
  }#7);
}#1

byte-code for for_long:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstLong(val=0) -> long
 678[36]: ConvLongFromNull() -> long
 679[44]: VarLong(var[36]) -> long
 682[52]: ConvBoolFromLong(v1: long) -> boolean
 683[45]: Not(v1: boolean) -> boolean
 684[45]: GenGotoFalseWord(jump=699, if_false: boolean)
 687[44]: ConstLong(val=10) -> long
 696[52]: GenGotoWord(jump=709)
 699[44]: VarLong(var[36]) -> long
 702[52]: ConstInt(val=1) -> integer
 707[56]: ConvLongFromInt(v1: integer) -> long
 708[60]: AddLong(v1: long, v2: long) -> long
 709[52]: PutLong(var[36], value: long)
 712[44]: VarLong(var[36]) -> long
 715[52]: ConstLong(val=20) -> long
 724[60]: GtLong(v1: long, v2: long) -> boolean
 725[45]: GenGotoFalseWord(jump=731, if_false: boolean)
 728[44]: GenGotoWord(jump=751)
 731[44]: VarLong(var[36]) -> long
 734[52]: VarLong(var[28]) -> long
 737[60]: VarLong(var[44]) -> long
 740[68]: AddLong(v1: long, v2: long) -> long
 741[60]: PutLong(var[28], value: long)
 744[52]: GenFreeStack(value=0, discard=8)
 748[44]: GenGotoWord(jump=679)
 751[44]: GenFreeStack(value=0, discard=8)
 755[36]: VarLong(var[28]) -> long
 758[44]: GenFreeStack(value=8, discard=8)
 762[36]: VarLong(var[28]) -> long
 765[44]: ConstLong(val=165) -> long
 774[52]: EqLong(v1: long, v2: long) -> boolean
 775[37]: GenGotoFalseWord(jump=781, if_false: boolean)
 778[36]: GenGotoWord(jump=833)
 781[36]: ClearText(var[4])
 784[36]: ConstText(_value="Test failed ") -> text(false, [])
 798[52]: AppendText(var[4], v1: text(false, []))
 801[36]: VarLong(var[28]) -> long
 804[44]: ConstInt(val=0) -> integer
 809[48]: FormatLong(var[4], val: long, radix=10, width: integer, token=32, plus=false, note=false)
 816[36]: ConstText(_value=" != 165l") -> text(false, [])
 826[52]: AppendText(var[4], v1: text(false, []))
 829[36]: VarText(var[4]) -> text(false, [])
 832[52]: GenPanic(message: text(false, []))
 833[36]: GenReturn(ret=0, value=0, discard=36)

Execute test:
  668:[8] Text()
  669:[32] ConstLong(val=0) -> 0[32]
  678:[40] ConvLongFromNull() -> -9223372036854775808[40]
  679:[48] VarLong(var[40]) -> -9223372036854775808[48]
  682:[56] ConvBoolFromLong(v1=-9223372036854775808[48]) -> false[48]
  683:[49] Not(v1=false[48]) -> true[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=true[48])
  687:[48] ConstLong(val=10) -> 10[48]
  696:[56] GenGotoWord(jump=709)
  709:[56] PutLong(var[40], value=10[48])
  712:[48] VarLong(var[40]) -> 10[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=10[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 10[48]
  734:[56] VarLong(var[32]) -> 0[56]
  737:[64] VarLong(var[48]) -> 10[64]
  740:[72] AddLong(v1=0[56], v2=10[64]) -> 10[56]
  741:[64] PutLong(var[32], value=10[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 10[48]
  682:[56] ConvBoolFromLong(v1=10[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 10[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=10[48], v2=1[56]) -> 11[48]
  709:[56] PutLong(var[40], value=11[48])
  712:[48] VarLong(var[40]) -> 11[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=11[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 11[48]
  734:[56] VarLong(var[32]) -> 10[56]
  737:[64] VarLong(var[48]) -> 11[64]
  740:[72] AddLong(v1=10[56], v2=11[64]) -> 21[56]
  741:[64] PutLong(var[32], value=21[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 11[48]
  682:[56] ConvBoolFromLong(v1=11[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 11[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=11[48], v2=1[56]) -> 12[48]
  709:[56] PutLong(var[40], value=12[48])
  712:[48] VarLong(var[40]) -> 12[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=12[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 12[48]
  734:[56] VarLong(var[32]) -> 21[56]
  737:[64] VarLong(var[48]) -> 12[64]
  740:[72] AddLong(v1=21[56], v2=12[64]) -> 33[56]
  741:[64] PutLong(var[32], value=33[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 12[48]
  682:[56] ConvBoolFromLong(v1=12[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 12[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=12[48], v2=1[56]) -> 13[48]
  709:[56] PutLong(var[40], value=13[48])
  712:[48] VarLong(var[40]) -> 13[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=13[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 13[48]
  734:[56] VarLong(var[32]) -> 33[56]
  737:[64] VarLong(var[48]) -> 13[64]
  740:[72] AddLong(v1=33[56], v2=13[64]) -> 46[56]
  741:[64] PutLong(var[32], value=46[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 13[48]
  682:[56] ConvBoolFromLong(v1=13[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 13[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=13[48], v2=1[56]) -> 14[48]
  709:[56] PutLong(var[40], value=14[48])
  712:[48] VarLong(var[40]) -> 14[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=14[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 14[48]
  734:[56] VarLong(var[32]) -> 46[56]
  737:[64] VarLong(var[48]) -> 14[64]
  740:[72] AddLong(v1=46[56], v2=14[64]) -> 60[56]
  741:[64] PutLong(var[32], value=60[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 14[48]
  682:[56] ConvBoolFromLong(v1=14[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 14[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=14[48], v2=1[56]) -> 15[48]
  709:[56] PutLong(var[40], value=15[48])
  712:[48] VarLong(var[40]) -> 15[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=15[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 15[48]
  734:[56] VarLong(var[32]) -> 60[56]
  737:[64] VarLong(var[48]) -> 15[64]
  740:[72] AddLong(v1=60[56], v2=15[64]) -> 75[56]
  741:[64] PutLong(var[32], value=75[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 15[48]
  682:[56] ConvBoolFromLong(v1=15[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 15[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=15[48], v2=1[56]) -> 16[48]
  709:[56] PutLong(var[40], value=16[48])
  712:[48] VarLong(var[40]) -> 16[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=16[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 16[48]
  734:[56] VarLong(var[32]) -> 75[56]
  737:[64] VarLong(var[48]) -> 16[64]
  740:[72] AddLong(v1=75[56], v2=16[64]) -> 91[56]
  741:[64] PutLong(var[32], value=91[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 16[48]
  682:[56] ConvBoolFromLong(v1=16[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 16[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=16[48], v2=1[56]) -> 17[48]
  709:[56] PutLong(var[40], value=17[48])
  712:[48] VarLong(var[40]) -> 17[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=17[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 17[48]
  734:[56] VarLong(var[32]) -> 91[56]
  737:[64] VarLong(var[48]) -> 17[64]
  740:[72] AddLong(v1=91[56], v2=17[64]) -> 108[56]
  741:[64] PutLong(var[32], value=108[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 17[48]
  682:[56] ConvBoolFromLong(v1=17[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 17[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=17[48], v2=1[56]) -> 18[48]
  709:[56] PutLong(var[40], value=18[48])
  712:[48] VarLong(var[40]) -> 18[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=18[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 18[48]
  734:[56] VarLong(var[32]) -> 108[56]
  737:[64] VarLong(var[48]) -> 18[64]
  740:[72] AddLong(v1=108[56], v2=18[64]) -> 126[56]
  741:[64] PutLong(var[32], value=126[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 18[48]
  682:[56] ConvBoolFromLong(v1=18[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 18[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=18[48], v2=1[56]) -> 19[48]
  709:[56] PutLong(var[40], value=19[48])
  712:[48] VarLong(var[40]) -> 19[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=19[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 19[48]
  734:[56] VarLong(var[32]) -> 126[56]
  737:[64] VarLong(var[48]) -> 19[64]
  740:[72] AddLong(v1=126[56], v2=19[64]) -> 145[56]
  741:[64] PutLong(var[32], value=145[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 19[48]
  682:[56] ConvBoolFromLong(v1=19[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 19[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=19[48], v2=1[56]) -> 20[48]
  709:[56] PutLong(var[40], value=20[48])
  712:[48] VarLong(var[40]) -> 20[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=20[48], v2=20[56]) -> false[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=false[48])
  731:[48] VarLong(var[40]) -> 20[48]
  734:[56] VarLong(var[32]) -> 145[56]
  737:[64] VarLong(var[48]) -> 20[64]
  740:[72] AddLong(v1=145[56], v2=20[64]) -> 165[56]
  741:[64] PutLong(var[32], value=165[56])
  744:[56] GenFreeStack(value=0, discard=8)
  748:[48] GenGotoWord(jump=679)
  679:[48] VarLong(var[40]) -> 20[48]
  682:[56] ConvBoolFromLong(v1=20[48]) -> true[48]
  683:[49] Not(v1=true[48]) -> false[48]
  684:[49] GenGotoFalseWord(jump=699, if_false=false[48])
  699:[48] VarLong(var[40]) -> 20[48]
  702:[56] ConstInt(val=1) -> 1[56]
  707:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  708:[64] AddLong(v1=20[48], v2=1[56]) -> 21[48]
  709:[56] PutLong(var[40], value=21[48])
  712:[48] VarLong(var[40]) -> 21[48]
  715:[56] ConstLong(val=20) -> 20[56]
  724:[64] GtLong(v1=21[48], v2=20[56]) -> true[48]
  725:[49] GenGotoFalseWord(jump=731, if_false=true[48])
  728:[48] GenGotoWord(jump=751)
  751:[48] GenFreeStack(value=0, discard=8)
  755:[40] VarLong(var[32]) -> 165[40]
  758:[48] GenFreeStack(value=8, discard=8)
  762:[40] VarLong(var[32]) -> 165[40]
  765:[48] ConstLong(val=165) -> 165[48]
  774:[56] EqLong(v1=165[40], v2=165[48]) -> true[40]
  775:[41] GenGotoFalseWord(jump=781, if_false=true[40])
  778:[40] GenGotoWord(jump=833)
  833:[40] GenReturn(ret=4294967295[4], value=0, discard=36)
Finished
