Test code:
pub fn test() {
    test_value = {b = 0l; for a in 10l..=20l { b+=a }; b};
    assert(
        test_value == 165l,
        "Test failed {test_value} != 165l"
    );
}

fn test {
  let __work_4 = "";
  let test_value = {
    let b = 0i64;
    {
      let a#index = OpConvLongFromNull();
      loop {
        let a = {
          a#index = if OpNot(OpConvBoolFromLong(a#index)) {10i64} else {OpAddLong(a#index, OpConvLongFromInt(1i32))};
          if OpGtLong(a#index, 20i64) {break(0)} else {null};
          a#index;
        };
        {
          b = OpAddLong(b, a);
        };
      };
    };
    b;
  };
  if OpEqLong(test_value, 165i64) {null} else {OpGenPanic({
    OpClearText(__work_4);
    OpAppendText(__work_4, "Test failed ");
    OpFormatLong(__work_4, test_value, 10i32, 0i32, 32i32, false, false);
    OpAppendText(__work_4, " != 165l");
    __work_4;
  })};
}

byte-code for for_long:test()
 668[0]: return-address
 668[4]: Text()
 669[28]: ConstText(_value="") -> text(false)
 671[44]: AppendText(var[4], v1: text(false))
 674[28]: ConstLong(val=0) -> long
 683[36]: ConvLongFromNull() -> long
 684[44]: VarLong(var[36]) -> long
 687[52]: ConvBoolFromLong(v1: long) -> boolean
 688[45]: Not(v1: boolean) -> boolean
 689[45]: GenGotoFalseWord(jump=704, if_false: boolean)
 692[44]: ConstLong(val=10) -> long
 701[52]: GenGotoWord(jump=714)
 704[44]: VarLong(var[36]) -> long
 707[52]: ConstInt(val=1) -> integer
 712[56]: ConvLongFromInt(v1: integer) -> long
 713[60]: AddLong(v1: long, v2: long) -> long
 714[52]: PutLong(var[36], value: long)
 717[44]: VarLong(var[36]) -> long
 720[52]: ConstLong(val=20) -> long
 729[60]: GtLong(v1: long, v2: long) -> boolean
 730[45]: GenGotoFalseWord(jump=736, if_false: boolean)
 733[44]: GenGotoWord(jump=756)
 736[44]: VarLong(var[36]) -> long
 739[52]: VarLong(var[28]) -> long
 742[60]: VarLong(var[44]) -> long
 745[68]: AddLong(v1: long, v2: long) -> long
 746[60]: PutLong(var[28], value: long)
 749[52]: GenFreeStack(value=0, discard=8)
 753[44]: GenGotoWord(jump=684)
 756[44]: GenFreeStack(value=0, discard=8)
 760[36]: VarLong(var[28]) -> long
 763[44]: GenFreeStack(value=8, discard=8)
 767[36]: VarLong(var[28]) -> long
 770[44]: ConstLong(val=165) -> long
 779[52]: EqLong(v1: long, v2: long) -> boolean
 780[37]: GenGotoFalseWord(jump=786, if_false: boolean)
 783[36]: GenGotoWord(jump=838)
 786[36]: ClearText(var[4])
 789[36]: ConstText(_value="Test failed ") -> text(false)
 803[52]: AppendText(var[4], v1: text(false))
 806[36]: VarLong(var[28]) -> long
 809[44]: ConstInt(val=0) -> integer
 814[48]: FormatLong(var[4], val: long, radix=10, width: integer, token=32, plus=false, note=false)
 821[36]: ConstText(_value=" != 165l") -> text(false)
 831[52]: AppendText(var[4], v1: text(false))
 834[36]: VarText(var[4]) -> text(false)
 837[52]: GenPanic(message: text(false))
 838[36]: GenReturn(ret=0, value=0, discard=36)

Execute test:
  668:[8] Text()
  669:[32] ConstText(_value="") -> ""[32]
  671:[48] AppendText(var[8], v1=""[32])
  674:[32] ConstLong(val=0) -> 0[32]
  683:[40] ConvLongFromNull() -> -9223372036854775808[40]
  684:[48] VarLong(var[40]) -> -9223372036854775808[48]
  687:[56] ConvBoolFromLong(v1=-9223372036854775808[48]) -> false[48]
  688:[49] Not(v1=false[48]) -> true[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=true[48])
  692:[48] ConstLong(val=10) -> 10[48]
  701:[56] GenGotoWord(jump=714)
  714:[56] PutLong(var[40], value=10[48])
  717:[48] VarLong(var[40]) -> 10[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=10[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 10[48]
  739:[56] VarLong(var[32]) -> 0[56]
  742:[64] VarLong(var[48]) -> 10[64]
  745:[72] AddLong(v1=0[56], v2=10[64]) -> 10[56]
  746:[64] PutLong(var[32], value=10[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 10[48]
  687:[56] ConvBoolFromLong(v1=10[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 10[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=10[48], v2=1[56]) -> 11[48]
  714:[56] PutLong(var[40], value=11[48])
  717:[48] VarLong(var[40]) -> 11[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=11[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 11[48]
  739:[56] VarLong(var[32]) -> 10[56]
  742:[64] VarLong(var[48]) -> 11[64]
  745:[72] AddLong(v1=10[56], v2=11[64]) -> 21[56]
  746:[64] PutLong(var[32], value=21[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 11[48]
  687:[56] ConvBoolFromLong(v1=11[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 11[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=11[48], v2=1[56]) -> 12[48]
  714:[56] PutLong(var[40], value=12[48])
  717:[48] VarLong(var[40]) -> 12[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=12[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 12[48]
  739:[56] VarLong(var[32]) -> 21[56]
  742:[64] VarLong(var[48]) -> 12[64]
  745:[72] AddLong(v1=21[56], v2=12[64]) -> 33[56]
  746:[64] PutLong(var[32], value=33[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 12[48]
  687:[56] ConvBoolFromLong(v1=12[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 12[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=12[48], v2=1[56]) -> 13[48]
  714:[56] PutLong(var[40], value=13[48])
  717:[48] VarLong(var[40]) -> 13[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=13[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 13[48]
  739:[56] VarLong(var[32]) -> 33[56]
  742:[64] VarLong(var[48]) -> 13[64]
  745:[72] AddLong(v1=33[56], v2=13[64]) -> 46[56]
  746:[64] PutLong(var[32], value=46[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 13[48]
  687:[56] ConvBoolFromLong(v1=13[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 13[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=13[48], v2=1[56]) -> 14[48]
  714:[56] PutLong(var[40], value=14[48])
  717:[48] VarLong(var[40]) -> 14[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=14[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 14[48]
  739:[56] VarLong(var[32]) -> 46[56]
  742:[64] VarLong(var[48]) -> 14[64]
  745:[72] AddLong(v1=46[56], v2=14[64]) -> 60[56]
  746:[64] PutLong(var[32], value=60[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 14[48]
  687:[56] ConvBoolFromLong(v1=14[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 14[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=14[48], v2=1[56]) -> 15[48]
  714:[56] PutLong(var[40], value=15[48])
  717:[48] VarLong(var[40]) -> 15[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=15[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 15[48]
  739:[56] VarLong(var[32]) -> 60[56]
  742:[64] VarLong(var[48]) -> 15[64]
  745:[72] AddLong(v1=60[56], v2=15[64]) -> 75[56]
  746:[64] PutLong(var[32], value=75[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 15[48]
  687:[56] ConvBoolFromLong(v1=15[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 15[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=15[48], v2=1[56]) -> 16[48]
  714:[56] PutLong(var[40], value=16[48])
  717:[48] VarLong(var[40]) -> 16[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=16[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 16[48]
  739:[56] VarLong(var[32]) -> 75[56]
  742:[64] VarLong(var[48]) -> 16[64]
  745:[72] AddLong(v1=75[56], v2=16[64]) -> 91[56]
  746:[64] PutLong(var[32], value=91[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 16[48]
  687:[56] ConvBoolFromLong(v1=16[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 16[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=16[48], v2=1[56]) -> 17[48]
  714:[56] PutLong(var[40], value=17[48])
  717:[48] VarLong(var[40]) -> 17[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=17[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 17[48]
  739:[56] VarLong(var[32]) -> 91[56]
  742:[64] VarLong(var[48]) -> 17[64]
  745:[72] AddLong(v1=91[56], v2=17[64]) -> 108[56]
  746:[64] PutLong(var[32], value=108[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 17[48]
  687:[56] ConvBoolFromLong(v1=17[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 17[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=17[48], v2=1[56]) -> 18[48]
  714:[56] PutLong(var[40], value=18[48])
  717:[48] VarLong(var[40]) -> 18[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=18[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 18[48]
  739:[56] VarLong(var[32]) -> 108[56]
  742:[64] VarLong(var[48]) -> 18[64]
  745:[72] AddLong(v1=108[56], v2=18[64]) -> 126[56]
  746:[64] PutLong(var[32], value=126[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 18[48]
  687:[56] ConvBoolFromLong(v1=18[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 18[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=18[48], v2=1[56]) -> 19[48]
  714:[56] PutLong(var[40], value=19[48])
  717:[48] VarLong(var[40]) -> 19[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=19[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 19[48]
  739:[56] VarLong(var[32]) -> 126[56]
  742:[64] VarLong(var[48]) -> 19[64]
  745:[72] AddLong(v1=126[56], v2=19[64]) -> 145[56]
  746:[64] PutLong(var[32], value=145[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 19[48]
  687:[56] ConvBoolFromLong(v1=19[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 19[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=19[48], v2=1[56]) -> 20[48]
  714:[56] PutLong(var[40], value=20[48])
  717:[48] VarLong(var[40]) -> 20[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=20[48], v2=20[56]) -> false[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=false[48])
  736:[48] VarLong(var[40]) -> 20[48]
  739:[56] VarLong(var[32]) -> 145[56]
  742:[64] VarLong(var[48]) -> 20[64]
  745:[72] AddLong(v1=145[56], v2=20[64]) -> 165[56]
  746:[64] PutLong(var[32], value=165[56])
  749:[56] GenFreeStack(value=0, discard=8)
  753:[48] GenGotoWord(jump=684)
  684:[48] VarLong(var[40]) -> 20[48]
  687:[56] ConvBoolFromLong(v1=20[48]) -> true[48]
  688:[49] Not(v1=true[48]) -> false[48]
  689:[49] GenGotoFalseWord(jump=704, if_false=false[48])
  704:[48] VarLong(var[40]) -> 20[48]
  707:[56] ConstInt(val=1) -> 1[56]
  712:[60] ConvLongFromInt(v1=1[56]) -> 1[56]
  713:[64] AddLong(v1=20[48], v2=1[56]) -> 21[48]
  714:[56] PutLong(var[40], value=21[48])
  717:[48] VarLong(var[40]) -> 21[48]
  720:[56] ConstLong(val=20) -> 20[56]
  729:[64] GtLong(v1=21[48], v2=20[56]) -> true[48]
  730:[49] GenGotoFalseWord(jump=736, if_false=true[48])
  733:[48] GenGotoWord(jump=756)
  756:[48] GenFreeStack(value=0, discard=8)
  760:[40] VarLong(var[32]) -> 165[40]
  763:[48] GenFreeStack(value=8, discard=8)
  767:[40] VarLong(var[32]) -> 165[40]
  770:[48] ConstLong(val=165) -> 165[48]
  779:[56] EqLong(v1=165[40], v2=165[48]) -> true[40]
  780:[41] GenGotoFalseWord(jump=786, if_false=true[40])
  783:[40] GenGotoWord(jump=838)
  838:[40] GenReturn(ret=4294967295[4], value=0, discard=36)
Finished
