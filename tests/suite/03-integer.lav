fn main() {
    // Integer is the default type for any number, it is comparable with i32 in rust.

    // It is possible to convert numbers into texts and texts into numbers.
    v = 4;
    assert("{v}" == "4", "Convert numbers to text");
    assert("123" as integer == 123, "Convert text to number");

    // Priority rules determine the order of operators.
    assert(1 + 2 * 4 == 9, "Integer calculus");
    assert(1 + 2 << 2 == 12, "Binary shift");
    assert(105 % 100 == 5, "Modulus");
    assert(2 ^ 3 == 8, "Power");

    // The absolute value function is not a operation on numbers like `-1.abs()` in rust.
    assert(1 + abs(-2) == 3, "Absolute integer");

    // Division by zero results in a null (undefined) value that is equal to false in test.
    a = 2 * 2;
    a -= 4;
    assert(!(12 / a), "Null on division by zero");

    assert("a{12}b" == "a12b", "Formatting problem");

    // It is allowed to have full expressions inside a formatting block.
    assert("a{1 + 2 * 3:#x}b" == "a0x7b", "Hex formatting");
}
